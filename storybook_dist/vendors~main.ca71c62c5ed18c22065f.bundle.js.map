{"version":3,"file":"vendors~main.ca71c62c5ed18c22065f.bundle.js","sources":["webpack:///./node_modules/react/index.js","webpack:///./node_modules/ag-grid-community/dist/lib/context/context.js","webpack:///./node_modules/ag-grid-community/dist/lib/utils.js","webpack:///./node_modules/ag-grid-community/dist/lib/gridOptionsWrapper.js","webpack:///./node_modules/ag-grid-community/dist/lib/eventService.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/ag-grid-community/dist/lib/columnController/columnController.js","webpack:///./node_modules/ag-grid-community/dist/lib/events.js","webpack:///./node_modules/ag-grid-community/dist/lib/constants.js","webpack:///./node_modules/ag-grid-community/dist/lib/gridApi.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/component.js","webpack:///./node_modules/ag-grid-community/dist/lib/columnController/columnApi.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/componentAnnotations.js","webpack:///./node_modules/ag-grid-community/dist/lib/entities/column.js","webpack:///./node_modules/ag-grid-community/dist/lib/logger.js","webpack:///./node_modules/ag-grid-community/dist/lib/context/beanStub.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/filterManager.js","webpack:///./node_modules/ag-grid-community/dist/lib/dragAndDrop/dragAndDropService.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/framework/userComponentFactory.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/rowRenderer.js","webpack:///./node_modules/ag-grid-community/dist/lib/entities/rowNode.js","webpack:///./node_modules/ag-grid-community/dist/lib/selectionController.js","webpack:///./node_modules/ag-grid-community/dist/lib/valueService/valueService.js","webpack:///./node_modules/ag-grid-community/dist/lib/valueService/expressionService.js","webpack:///./node_modules/ag-grid-community/dist/lib/focusedCellController.js","webpack:///./node_modules/ag-grid-community/dist/lib/sortController.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/paginationProxy.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/popupService.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/simpleFilter.js","webpack:///./node_modules/ag-grid-community/main.js","webpack:///./node_modules/ag-grid-community/dist/lib/eventKeys.js","webpack:///./node_modules/ag-grid-community/dist/lib/entities/columnGroup.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/popupComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/pinnedRowModel.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/beans.js","webpack:///./node_modules/ag-grid-community/dist/lib/columnController/columnUtils.js","webpack:///./node_modules/ag-grid-community/dist/lib/entities/originalColumnGroup.js","webpack:///./node_modules/ag-grid-community/dist/lib/valueService/valueCache.js","webpack:///./node_modules/ag-grid-community/dist/lib/dragAndDrop/dragService.js","webpack:///./node_modules/ag-grid-community/dist/lib/misc/animationFrameService.js","webpack:///./node_modules/ag-grid-community/dist/lib/columnController/columnFactory.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/autoWidthCalculator.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/environment.js","webpack:///./node_modules/ag-grid-community/dist/lib/gridPanel/scrollVisibleService.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/touchListener.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/valueFormatterService.js","webpack:///./node_modules/ag-grid-community/dist/lib/gridPanel/mouseEventService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/columnHoverService.js","webpack:///./node_modules/ag-grid-community/dist/lib/exporter/gridSerializer.js","webpack:///./node_modules/ag-grid-community/dist/lib/columnController/displayedGroupCreator.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/clientSide/changedPath.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/columnAnimationService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellRendererFactory.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/providedFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/maxDivHeightScaler.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/horizontalResizeService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/features/setLeftFeature.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/agCheckbox.js","webpack:///./node_modules/ag-grid-community/dist/lib/alignedGridsService.js","webpack:///./node_modules/ag-grid-community/dist/lib/misc/resizeObserverService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlock.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/componentUtil.js","webpack:///./node_modules/ag-grid-community/dist/lib/exporter/csvCreator.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/rowComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/checkboxSelectionComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellEditors/popupEditorWrapper.js","webpack:///./node_modules/ag-grid-community/dist/lib/cellNavigationService.js","webpack:///./node_modules/ag-grid-community/dist/lib/templateService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/animateSlideCellRenderer.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/framework/userComponentRegistry.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellEditors/textCellEditor.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/date/dateFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/scalerFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/groupCellRenderer.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/animateShowChangeCellRenderer.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellEditors/selectCellEditor.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/number/numberFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/text/textFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/framework/agComponentUtils.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/framework/componentMetadataProvider.js","webpack:///./node_modules/ag-grid-community/dist/lib/styling/stylingService.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/tooltipManager.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/cssClassApplier.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/hoverFeature.js","webpack:///./node_modules/ag-grid-community/dist/lib/columnController/groupInstanceIdCreator.js","webpack:///./node_modules/ag-grid-community/dist/lib/exporter/downloader.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/autoHeightCalculator.js","webpack:///./node_modules/ag-grid-community/dist/lib/grid.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/headerRootComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/gridPanel/gridPanel.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowNodes/selectableService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeCache.js","webpack:///./node_modules/object-assign/index.js","webpack:///./node_modules/isobject/index.js","webpack:///./node_modules/ag-grid-community/dist/lib/propertyKeys.js","webpack:///./node_modules/ag-grid-community/dist/lib/entities/cellPosition.js","webpack:///./node_modules/ag-grid-community/dist/lib/interfaces/iRangeController.js","webpack:///./node_modules/ag-grid-community/dist/lib/entities/rowPosition.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/date/dateCompWrapper.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/optionsFactory.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellEditors/popupTextCellEditor.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellEditors/popupSelectCellEditor.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellEditors/largeTextCellEditor.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/floating/provided/simpleFloatingFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/floating/provided/textInputFloatingFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/header/headerWrapperComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/columnController/autoGroupColService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/clientSide/immutableService.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/colDefUtil.js","webpack:///./node_modules/ag-grid-community/dist/lib/entities/sideBar.js","webpack:///./node_modules/ag-grid-community/dist/lib/columnController/columnKeyCreator.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/headerContainer.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/headerRowComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/bodyDropTarget.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/moveColumnController.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/bodyDropPivotTarget.js","webpack:///./node_modules/ag-grid-community/dist/lib/gridPanel/navigationService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/overlays/overlayWrapperComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/gridCore.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/standardMenu.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/clientSide/filterStage.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowNodes/filterService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/clientSide/sortStage.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowNodes/sortService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/clientSide/flattenStage.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteRowModel.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/cache/rowNodeBlockLoader.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideRowModel.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/clientSide/clientSideNodeManager.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/agRadioButton.js","webpack:///./node_modules/ag-grid-community/dist/lib/vanillaFrameworkOverrides.js","webpack:///./node_modules/ag-grid-community/dist/lib/exporter/xmlFactory.js","webpack:///./node_modules/ag-grid-community/dist/lib/exporter/files/zip/zipContainer.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/dialog.js","webpack:///./node_modules/es5-shim/es5-shim.js","webpack:///./node_modules/es5-shim/es5-sham.js","webpack:///./node_modules/es6-shim/es6-shim.js","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/scheduler/cjs/scheduler.production.min.js","webpack:///./node_modules/axe-core/axe.js","webpack:///./node_modules/escape-html/index.js","webpack:///./node_modules/is-plain-object/index.js","webpack:///./node_modules/@material-ui/utils/node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/css-vendor/lib/index.js","webpack:///./node_modules/@material-ui/core/node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./node_modules/react-router/node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/rowDragComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/header/headerComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/headerGroup/headerGroupComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/cellRenderers/loadingCellRenderer.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/overlays/loadingOverlayComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/overlays/noRowsOverlayComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/tooltipComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/date/defaultDateComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/date/dateFloatingFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/number/numberFloatingFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/provided/text/textFloatingFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/header/selectAllFeature.js","webpack:///./node_modules/ag-grid-community/dist/lib/entities/defaultColumnTypes.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/agGridNg1.js","webpack:///./node_modules/ag-grid-community/dist/lib/headerRendering/headerGroup/headerGroupWrapperComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/floating/floatingFilterWrapper.js","webpack:///./node_modules/ag-grid-community/dist/lib/filter/floating/provided/readOnlyFloatingFilter.js","webpack:///./node_modules/ag-grid-community/dist/lib/rendering/rowContainerComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/gridPanel/rowDragFeature.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteCache.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/infinite/infiniteBlock.js","webpack:///./node_modules/ag-grid-community/dist/lib/valueService/changeDetectionService.js","webpack:///./node_modules/ag-grid-community/dist/lib/rowModels/pagination/paginationComp.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/agGridWebComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/layout/tabbedLayout.js","webpack:///./node_modules/ag-grid-community/dist/lib/layout/verticalStack.js","webpack:///./node_modules/ag-grid-community/dist/lib/misc/simpleHttpRequest.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/agGroupComponent.js","webpack:///./node_modules/ag-grid-community/dist/lib/widgets/messageBox.js","webpack:///./node_modules/ag-grid-community/dist/lib/functions.js","webpack:///./node_modules/ag-grid-community/dist/lib/components/framework/frameworkComponentWrapper.js","webpack:///./node_modules/ag-grid-community/dist/lib/interfaces/iChartOptions.js","webpack:///./node_modules/downshift/node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/@material-ui/core/node_modules/popper.js/dist/esm/popper.js","webpack:///./node_modules/@storybook/client-api/node_modules/is-plain-object/index.js","webpack:///./node_modules/@storybook/client-api/node_modules/isobject/index.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar Context = /** @class */ (function () {\n    function Context(params, logger) {\n        this.beanWrappers = {};\n        this.registeredModules = [];\n        this.componentsMappedByName = {};\n        this.destroyed = false;\n        if (!params || !params.beans) {\n            return;\n        }\n        this.contextParams = params;\n        this.registeredModules = params.registeredModules;\n        this.logger = logger;\n        this.logger.log(\">> creating ag-Application Context\");\n        this.setupComponents();\n        this.createBeans();\n        var beanInstances = this.getBeanInstances();\n        this.wireBeans(beanInstances);\n        this.logger.log(\">> ag-Application Context ready - component is alive\");\n    }\n    Context.prototype.getBeanInstances = function () {\n        return utils_1._.mapObject(this.beanWrappers, function (beanEntry) { return beanEntry.beanInstance; });\n    };\n    Context.prototype.setupComponents = function () {\n        var _this = this;\n        if (this.contextParams.components) {\n            this.contextParams.components.forEach(function (componentMeta) { return _this.addComponent(componentMeta); });\n        }\n    };\n    Context.prototype.addComponent = function (componentMeta) {\n        // get name of the class as a string\n        // let className = _.getNameOfClass(ComponentClass);\n        // insert a dash after every capital letter\n        // let classEscaped = className.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n        var classEscaped = componentMeta.componentName.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n        // put all to upper case\n        var classUpperCase = classEscaped.toUpperCase();\n        // finally store\n        this.componentsMappedByName[classUpperCase] = componentMeta.theClass;\n    };\n    Context.prototype.createComponentFromElement = function (element, afterPreCreateCallback) {\n        var key = element.nodeName;\n        if (this.componentsMappedByName && this.componentsMappedByName[key]) {\n            var newComponent = new this.componentsMappedByName[key]();\n            this.wireBean(newComponent, afterPreCreateCallback);\n            return newComponent;\n        }\n        return null;\n    };\n    // public createBean(BeanClass: new () => any): Component {\n    //     const beanInstance = new BeanClass();\n    //     this.wireBean(beanInstance);\n    //     return beanInstance;\n    // }\n    Context.prototype.wireBean = function (bean, afterPreCreateCallback) {\n        if (!bean) {\n            throw Error(\"Can't wire to bean since it is null\");\n        }\n        this.wireBeans([bean], afterPreCreateCallback);\n    };\n    Context.prototype.wireBeans = function (beanInstances, afterPreCreateCallback) {\n        this.autoWireBeans(beanInstances);\n        this.methodWireBeans(beanInstances);\n        this.callLifeCycleMethods(beanInstances, 'preConstructMethods');\n        // the callback sets the attributes, so the component has access to attributes\n        // before postConstruct methods in the component are executed\n        if (utils_1._.exists(afterPreCreateCallback)) {\n            beanInstances.forEach(afterPreCreateCallback);\n        }\n        this.callLifeCycleMethods(beanInstances, 'postConstructMethods');\n    };\n    Context.prototype.createBeans = function () {\n        var _this = this;\n        // register all normal beans\n        this.contextParams.beans.forEach(this.createBeanWrapper.bind(this));\n        // register override beans, these will overwrite beans above of same name\n        if (this.contextParams.overrideBeans) {\n            this.contextParams.overrideBeans.forEach(this.createBeanWrapper.bind(this));\n        }\n        // instantiate all beans - overridden beans will be left out\n        utils_1._.iterateObject(this.beanWrappers, function (key, beanEntry) {\n            var constructorParamsMeta;\n            if (beanEntry.bean.__agBeanMetaData && beanEntry.bean.__agBeanMetaData.autowireMethods && beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor) {\n                constructorParamsMeta = beanEntry.bean.__agBeanMetaData.autowireMethods.agConstructor;\n            }\n            var constructorParams = _this.getBeansForParameters(constructorParamsMeta, beanEntry.bean.name);\n            var newInstance = applyToConstructor(beanEntry.bean, constructorParams);\n            beanEntry.beanInstance = newInstance;\n            _this.logger.log(\"bean \" + _this.getBeanName(newInstance) + \" created\");\n        });\n    };\n    // tslint:disable-next-line\n    Context.prototype.createBeanWrapper = function (Bean) {\n        var metaData = Bean.__agBeanMetaData;\n        if (!metaData) {\n            var beanName = void 0;\n            if (Bean.prototype.constructor) {\n                beanName = Bean.prototype.constructor.name;\n            }\n            else {\n                beanName = \"\" + Bean;\n            }\n            console.error(\"context item \" + beanName + \" is not a bean\");\n            return;\n        }\n        var beanEntry = {\n            bean: Bean,\n            beanInstance: null,\n            beanName: metaData.beanName\n        };\n        this.beanWrappers[metaData.beanName] = beanEntry;\n    };\n    Context.prototype.autoWireBeans = function (beanInstances) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n                var attributes = metaData.agClassAttributes;\n                if (!attributes) {\n                    return;\n                }\n                attributes.forEach(function (attribute) {\n                    var otherBean = _this.lookupBeanInstance(beanName, attribute.beanName, attribute.optional);\n                    beanInstance[attribute.attributeName] = otherBean;\n                });\n            });\n        });\n    };\n    Context.prototype.methodWireBeans = function (beanInstances) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData, beanName) {\n                utils_1._.iterateObject(metaData.autowireMethods, function (methodName, wireParams) {\n                    // skip constructor, as this is dealt with elsewhere\n                    if (methodName === \"agConstructor\") {\n                        return;\n                    }\n                    var initParams = _this.getBeansForParameters(wireParams, beanName);\n                    beanInstance[methodName].apply(beanInstance, initParams);\n                });\n            });\n        });\n    };\n    Context.prototype.forEachMetaDataInHierarchy = function (beanInstance, callback) {\n        var prototype = Object.getPrototypeOf(beanInstance);\n        while (prototype != null) {\n            var constructor = prototype.constructor;\n            if (constructor.hasOwnProperty('__agBeanMetaData')) {\n                var metaData = constructor.__agBeanMetaData;\n                var beanName = this.getBeanName(constructor);\n                callback(metaData, beanName);\n            }\n            prototype = Object.getPrototypeOf(prototype);\n        }\n    };\n    Context.prototype.getBeanName = function (constructor) {\n        if (constructor.__agBeanMetaData && constructor.__agBeanMetaData.beanName) {\n            return constructor.__agBeanMetaData.beanName;\n        }\n        var constructorString = constructor.toString();\n        var beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n        return beanName;\n    };\n    Context.prototype.getBeansForParameters = function (parameters, beanName) {\n        var _this = this;\n        var beansList = [];\n        if (parameters) {\n            utils_1._.iterateObject(parameters, function (paramIndex, otherBeanName) {\n                var otherBean = _this.lookupBeanInstance(beanName, otherBeanName);\n                beansList[Number(paramIndex)] = otherBean;\n            });\n        }\n        return beansList;\n    };\n    Context.prototype.lookupBeanInstance = function (wiringBean, beanName, optional) {\n        if (optional === void 0) { optional = false; }\n        if (beanName === \"context\") {\n            return this;\n        }\n        else if (this.contextParams.seed && this.contextParams.seed.hasOwnProperty(beanName)) {\n            return this.contextParams.seed[beanName];\n        }\n        else {\n            var beanEntry = this.beanWrappers[beanName];\n            if (beanEntry) {\n                return beanEntry.beanInstance;\n            }\n            if (!optional) {\n                console.error(\"ag-Grid: unable to find bean reference \" + beanName + \" while initialising \" + wiringBean);\n            }\n            return null;\n        }\n    };\n    Context.prototype.callLifeCycleMethods = function (beanInstances, lifeCycleMethod) {\n        var _this = this;\n        beanInstances.forEach(function (beanInstance) {\n            _this.forEachMetaDataInHierarchy(beanInstance, function (metaData) {\n                var methods = metaData[lifeCycleMethod];\n                if (!methods) {\n                    return;\n                }\n                methods.forEach(function (methodName) { return beanInstance[methodName](); });\n            });\n        });\n    };\n    Context.prototype.getBean = function (name) {\n        return this.lookupBeanInstance(\"getBean\", name, true);\n    };\n    Context.prototype.getEnterpriseDefaultComponents = function () {\n        return this.contextParams.enterpriseDefaultComponents;\n    };\n    Context.prototype.destroy = function () {\n        // should only be able to destroy once\n        if (this.destroyed) {\n            return;\n        }\n        this.logger.log(\">> Shutting down ag-Application Context\");\n        var beanInstances = this.getBeanInstances();\n        this.callLifeCycleMethods(beanInstances, 'preDestroyMethods');\n        this.contextParams.seed = null;\n        this.destroyed = true;\n        this.logger.log(\">> ag-Application Context shut down - component is dead\");\n    };\n    Context.prototype.isModuleRegistered = function (moduleName) {\n        return this.registeredModules.indexOf(moduleName) !== -1;\n    };\n    return Context;\n}());\nexports.Context = Context;\n// taken from: http://stackoverflow.com/questions/3362471/how-can-i-call-a-javascript-constructor-using-call-or-apply\n// allows calling 'apply' on a constructor\nfunction applyToConstructor(constructor, argArray) {\n    var args = [null].concat(argArray);\n    var factoryFunction = constructor.bind.apply(constructor, args);\n    return new factoryFunction();\n}\nfunction PreConstruct(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.postConstructMethods) {\n        props.preConstructMethods = [];\n    }\n    props.preConstructMethods.push(methodName);\n}\nexports.PreConstruct = PreConstruct;\nfunction PostConstruct(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.postConstructMethods) {\n        props.postConstructMethods = [];\n    }\n    props.postConstructMethods.push(methodName);\n}\nexports.PostConstruct = PostConstruct;\nfunction PreDestroy(target, methodName, descriptor) {\n    var props = getOrCreateProps(target.constructor);\n    if (!props.preDestroyMethods) {\n        props.preDestroyMethods = [];\n    }\n    props.preDestroyMethods.push(methodName);\n}\nexports.PreDestroy = PreDestroy;\nfunction Bean(beanName) {\n    return function (classConstructor) {\n        var props = getOrCreateProps(classConstructor);\n        props.beanName = beanName;\n    };\n}\nexports.Bean = Bean;\nfunction Autowired(name) {\n    return function (target, propertyKey, descriptor) {\n        autowiredFunc(target, name, false, target, propertyKey, null);\n    };\n}\nexports.Autowired = Autowired;\nfunction Optional(name) {\n    return function (target, propertyKey, descriptor) {\n        autowiredFunc(target, name, true, target, propertyKey, null);\n    };\n}\nexports.Optional = Optional;\nfunction autowiredFunc(target, name, optional, classPrototype, methodOrAttributeName, index) {\n    if (name === null) {\n        console.error(\"ag-Grid: Autowired name should not be null\");\n        return;\n    }\n    if (typeof index === \"number\") {\n        console.error(\"ag-Grid: Autowired should be on an attribute\");\n        return;\n    }\n    // it's an attribute on the class\n    var props = getOrCreateProps(target.constructor);\n    if (!props.agClassAttributes) {\n        props.agClassAttributes = [];\n    }\n    props.agClassAttributes.push({\n        attributeName: methodOrAttributeName,\n        beanName: name,\n        optional: optional\n    });\n}\nfunction Qualifier(name) {\n    return function (classPrototype, methodOrAttributeName, index) {\n        var constructor = typeof classPrototype == \"function\" ? classPrototype : classPrototype.constructor;\n        var props;\n        if (typeof index === \"number\") {\n            // it's a parameter on a method\n            var methodName = void 0;\n            if (methodOrAttributeName) {\n                props = getOrCreateProps(constructor);\n                methodName = methodOrAttributeName;\n            }\n            else {\n                props = getOrCreateProps(constructor);\n                methodName = \"agConstructor\";\n            }\n            if (!props.autowireMethods) {\n                props.autowireMethods = {};\n            }\n            if (!props.autowireMethods[methodName]) {\n                props.autowireMethods[methodName] = {};\n            }\n            props.autowireMethods[methodName][index] = name;\n        }\n    };\n}\nexports.Qualifier = Qualifier;\nfunction getOrCreateProps(target) {\n    if (!target.hasOwnProperty(\"__agBeanMetaData\")) {\n        target.__agBeanMetaData = {};\n    }\n    return target.__agBeanMetaData;\n}\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./constants\");\nvar FUNCTION_STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar FUNCTION_ARGUMENT_NAMES = /([^\\s,]+)/g;\nvar AG_GRID_STOP_PROPAGATION = '__ag_Grid_Stop_Propagation';\n/**\n * A Util Class only used when debugging for printing time to console\n */\nvar Timer = /** @class */ (function () {\n    function Timer() {\n        this.timestamp = new Date().getTime();\n    }\n    Timer.prototype.print = function (msg) {\n        var duration = (new Date().getTime()) - this.timestamp;\n        console.info(msg + \" = \" + duration);\n        this.timestamp = new Date().getTime();\n    };\n    return Timer;\n}());\nexports.Timer = Timer;\n/**\n * HTML Escapes.\n */\nvar HTML_ESCAPES = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nvar reUnescapedHtml = /[&<>\"']/g;\nvar Utils = /** @class */ (function () {\n    function Utils() {\n    }\n    /**\n     * When in IE or Edge, when you are editing a cell, then click on another cell,\n     * the other cell doesn't keep focus, so navigation keys, type to start edit etc\n     * don't work. appears that when you update the dom in IE it looses focus\n     * https://ag-grid.com/forum/showthread.php?tid=4362\n     * @param {HTMLElement} el\n     */\n    Utils.doIeFocusHack = function (el) {\n        if (exports._.isBrowserIE() || exports._.isBrowserEdge()) {\n            if (exports._.missing(document.activeElement) || document.activeElement === document.body) {\n                // console.log('missing focus');\n                el.focus();\n            }\n        }\n    };\n    /**\n     * If the key was passed before, then doesn't execute the func\n     * @param {Function} func\n     * @param {string} key\n     */\n    Utils.doOnce = function (func, key) {\n        if (this.doOnceFlags[key]) {\n            return;\n        }\n        func();\n        this.doOnceFlags[key] = true;\n    };\n    /**\n     * Checks if event was issued by a left click\n     * from https://stackoverflow.com/questions/3944122/detect-left-mouse-button-press\n     * @param {MouseEvent} mouseEvent\n     * @returns {boolean}\n     */\n    Utils.isLeftClick = function (mouseEvent) {\n        if (\"buttons\" in mouseEvent) {\n            return mouseEvent.buttons == 1;\n        }\n        var button = mouseEvent.which || mouseEvent.button;\n        return button == 1;\n    };\n    /**\n     * `True` if the event is close to the original event by X pixels either vertically or horizontally.\n     * we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n     * @param {MouseEvent | TouchEvent} e1\n     * @param {MouseEvent | TouchEvent} e2\n     * @param {number} pixelCount\n     * @returns {boolean}\n     */\n    Utils.areEventsNear = function (e1, e2, pixelCount) {\n        // by default, we wait 4 pixels before starting the drag\n        if (pixelCount === 0) {\n            return false;\n        }\n        var diffX = Math.abs(e1.clientX - e2.clientX);\n        var diffY = Math.abs(e1.clientY - e2.clientY);\n        return Math.max(diffX, diffY) <= pixelCount;\n    };\n    Utils.jsonEquals = function (val1, val2) {\n        var val1Json = val1 ? JSON.stringify(val1) : null;\n        var val2Json = val2 ? JSON.stringify(val2) : null;\n        var res = val1Json === val2Json;\n        return res;\n    };\n    Utils.shallowCompare = function (arr1, arr2) {\n        // if both are missing, then they are the same\n        if (this.missing(arr1) && this.missing(arr2)) {\n            return true;\n        }\n        // if one is present, but other is missing, then then are different\n        if (this.missing(arr1) || this.missing(arr2)) {\n            return false;\n        }\n        if (arr1.length !== arr2.length) {\n            return false;\n        }\n        for (var i = 0; i < arr1.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Utils.getNameOfClass = function (TheClass) {\n        var funcNameRegex = /function (.{1,})\\(/;\n        var funcAsString = TheClass.toString();\n        var results = (funcNameRegex).exec(funcAsString);\n        return (results && results.length > 1) ? results[1] : \"\";\n    };\n    Utils.values = function (object) {\n        var result = [];\n        this.iterateObject(object, function (key, value) {\n            result.push(value);\n        });\n        return result;\n    };\n    Utils.getValueUsingField = function (data, field, fieldContainsDots) {\n        if (!field || !data) {\n            return;\n        }\n        // if no '.', then it's not a deep value\n        if (!fieldContainsDots) {\n            return data[field];\n        }\n        else {\n            // otherwise it is a deep value, so need to dig for it\n            var fields = field.split('.');\n            var currentObject = data;\n            for (var i = 0; i < fields.length; i++) {\n                currentObject = currentObject[fields[i]];\n                if (this.missing(currentObject)) {\n                    return null;\n                }\n            }\n            return currentObject;\n        }\n    };\n    Utils.getElementSize = function (el) {\n        var _a = window.getComputedStyle(el), height = _a.height, width = _a.width, paddingTop = _a.paddingTop, paddingRight = _a.paddingRight, paddingBottom = _a.paddingBottom, paddingLeft = _a.paddingLeft, marginTop = _a.marginTop, marginRight = _a.marginRight, marginBottom = _a.marginBottom, marginLeft = _a.marginLeft, boxSizing = _a.boxSizing;\n        return {\n            height: parseFloat(height),\n            width: parseFloat(width),\n            paddingTop: parseFloat(paddingTop),\n            paddingRight: parseFloat(paddingRight),\n            paddingBottom: parseFloat(paddingBottom),\n            paddingLeft: parseFloat(paddingLeft),\n            marginTop: parseFloat(marginTop),\n            marginRight: parseFloat(marginRight),\n            marginBottom: parseFloat(marginBottom),\n            marginLeft: parseFloat(marginLeft),\n            boxSizing: boxSizing\n        };\n    };\n    Utils.getInnerHeight = function (el) {\n        var size = this.getElementSize(el);\n        if (size.boxSizing === 'border-box') {\n            return size.height - size.paddingTop - size.paddingBottom;\n        }\n        return size.height;\n    };\n    Utils.getInnerWidth = function (el) {\n        var size = this.getElementSize(el);\n        if (size.boxSizing === 'border-box') {\n            return size.width - size.paddingLeft - size.paddingRight;\n        }\n        return size.width;\n    };\n    Utils.getAbsoluteHeight = function (el) {\n        var size = this.getElementSize(el);\n        var marginRight = size.marginBottom + size.marginTop;\n        return Math.ceil(el.offsetHeight + marginRight);\n    };\n    Utils.getAbsoluteWidth = function (el) {\n        var size = this.getElementSize(el);\n        var marginWidth = size.marginLeft + size.marginRight;\n        return Math.ceil(el.offsetWidth + marginWidth);\n    };\n    Utils.getScrollLeft = function (element, rtl) {\n        var scrollLeft = element.scrollLeft;\n        if (rtl) {\n            // Absolute value - for FF that reports RTL scrolls in negative numbers\n            scrollLeft = Math.abs(scrollLeft);\n            // Get Chrome to return the same value as well\n            if (this.isBrowserChrome()) {\n                scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n            }\n        }\n        return scrollLeft;\n    };\n    Utils.cleanNumber = function (value) {\n        if (typeof value === 'string') {\n            value = parseInt(value, 10);\n        }\n        if (typeof value === 'number') {\n            value = Math.floor(value);\n        }\n        else {\n            value = null;\n        }\n        return value;\n    };\n    Utils.setScrollLeft = function (element, value, rtl) {\n        if (rtl) {\n            // Chrome and Safari when doing RTL have the END position of the scroll as zero, not the start\n            if (this.isBrowserSafari() || this.isBrowserChrome()) {\n                value = element.scrollWidth - element.clientWidth - value;\n            }\n            // Firefox uses negative numbers when doing RTL scrolling\n            if (this.isBrowserFirefox()) {\n                value *= -1;\n            }\n        }\n        element.scrollLeft = value;\n    };\n    Utils.iterateNamedNodeMap = function (map, callback) {\n        if (!map) {\n            return;\n        }\n        for (var i = 0; i < map.length; i++) {\n            var attr = map[i];\n            callback(attr.name, attr.value);\n        }\n    };\n    Utils.iterateObject = function (object, callback) {\n        if (!object || this.missing(object)) {\n            return;\n        }\n        if (Array.isArray(object)) {\n            object.forEach(function (value, index) {\n                callback(index + '', value);\n            });\n        }\n        else {\n            var keys = Object.keys(object);\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = object[key];\n                callback(key, value);\n            }\n        }\n    };\n    Utils.cloneObject = function (object) {\n        var copy = {};\n        var keys = Object.keys(object);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = object[key];\n            copy[key] = value;\n        }\n        return copy;\n    };\n    Utils.deepCloneObject = function (object) {\n        return JSON.parse(JSON.stringify(object));\n    };\n    Utils.map = function (array, callback) {\n        var result = [];\n        for (var i = 0; i < array.length; i++) {\n            var item = array[i];\n            var mappedItem = callback(item, i);\n            result.push(mappedItem);\n        }\n        return result;\n    };\n    Utils.mapObject = function (object, callback) {\n        var result = [];\n        Utils.iterateObject(object, function (key, value) {\n            result.push(callback(value));\n        });\n        return result;\n    };\n    Utils.forEach = function (array, callback) {\n        if (!array) {\n            return;\n        }\n        for (var i = 0; i < array.length; i++) {\n            var value = array[i];\n            callback(value, i);\n        }\n    };\n    Utils.filter = function (array, callback) {\n        var result = [];\n        array.forEach(function (item) {\n            if (callback(item)) {\n                result.push(item);\n            }\n        });\n        return result;\n    };\n    Utils.getAllKeysInObjects = function (objects) {\n        var allValues = {};\n        objects.forEach(function (obj) {\n            if (obj) {\n                Object.keys(obj).forEach(function (key) { return allValues[key] = null; });\n            }\n        });\n        return Object.keys(allValues);\n    };\n    Utils.mergeDeep = function (dest, source) {\n        if (!this.exists(source)) {\n            return;\n        }\n        this.iterateObject(source, function (key, newValue) {\n            var oldValue = dest[key];\n            if (oldValue === newValue) {\n                return;\n            }\n            if (typeof oldValue === 'object' && typeof newValue === 'object') {\n                Utils.mergeDeep(oldValue, newValue);\n            }\n            else {\n                dest[key] = newValue;\n            }\n        });\n    };\n    Utils.assign = function (object) {\n        var _this = this;\n        var sources = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            sources[_i - 1] = arguments[_i];\n        }\n        sources.forEach(function (source) {\n            if (_this.exists(source)) {\n                _this.iterateObject(source, function (key, value) {\n                    object[key] = value;\n                });\n            }\n        });\n        return object;\n    };\n    Utils.flatten = function (arrayOfArrays) {\n        return [].concat.apply([], arrayOfArrays);\n    };\n    Utils.parseYyyyMmDdToDate = function (yyyyMmDd, separator) {\n        try {\n            if (!yyyyMmDd) {\n                return null;\n            }\n            if (yyyyMmDd.indexOf(separator) === -1) {\n                return null;\n            }\n            var fields = yyyyMmDd.split(separator);\n            if (fields.length != 3) {\n                return null;\n            }\n            return new Date(Number(fields[0]), Number(fields[1]) - 1, Number(fields[2]));\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    Utils.serializeDateToYyyyMmDd = function (date, separator) {\n        if (!date) {\n            return null;\n        }\n        return date.getFullYear() + separator + Utils.pad(date.getMonth() + 1, 2) + separator + Utils.pad(date.getDate(), 2);\n    };\n    Utils.pad = function (num, totalStringSize) {\n        var asString = num + \"\";\n        while (asString.length < totalStringSize) {\n            asString = \"0\" + asString;\n        }\n        return asString;\n    };\n    Utils.pushAll = function (target, source) {\n        if (this.missing(source) || this.missing(target)) {\n            return;\n        }\n        source.forEach(function (func) { return target.push(func); });\n    };\n    Utils.createArrayOfNumbers = function (first, last) {\n        var result = [];\n        for (var i = first; i <= last; i++) {\n            result.push(i);\n        }\n        return result;\n    };\n    Utils.getFunctionParameters = function (func) {\n        var fnStr = func.toString().replace(FUNCTION_STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(FUNCTION_ARGUMENT_NAMES);\n        if (result === null) {\n            return [];\n        }\n        else {\n            return result;\n        }\n    };\n    Utils.find = function (collection, predicate, value) {\n        if (collection === null || collection === undefined) {\n            return null;\n        }\n        if (!Array.isArray(collection)) {\n            var objToArray = this.values(collection);\n            return this.find(objToArray, predicate, value);\n        }\n        var collectionAsArray = collection;\n        var firstMatchingItem = null;\n        for (var i = 0; i < collectionAsArray.length; i++) {\n            var item = collectionAsArray[i];\n            if (typeof predicate === 'string') {\n                if (item[predicate] === value) {\n                    firstMatchingItem = item;\n                    break;\n                }\n            }\n            else {\n                var callback = predicate;\n                if (callback(item)) {\n                    firstMatchingItem = item;\n                    break;\n                }\n            }\n        }\n        return firstMatchingItem;\n    };\n    Utils.toStrings = function (array) {\n        return this.map(array, function (item) {\n            if (item === undefined || item === null || !item.toString) {\n                return null;\n            }\n            else {\n                return item.toString();\n            }\n        });\n    };\n    Utils.iterateArray = function (array, callback) {\n        for (var index = 0; index < array.length; index++) {\n            var value = array[index];\n            callback(value, index);\n        }\n    };\n    /**\n     * Returns true if it is a DOM node\n     * taken from: http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n     * @param {any} o\n     * @return {boolean}\n     */\n    Utils.isNode = function (o) {\n        return (typeof Node === \"function\" ? o instanceof Node :\n            o && typeof o === \"object\" && typeof o.nodeType === \"number\" && typeof o.nodeName === \"string\");\n    };\n    //\n    /**\n     * Returns true if it is a DOM element\n     * taken from: http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n     * @param {any} o\n     * @returns {boolean}\n     */\n    Utils.isElement = function (o) {\n        return (typeof HTMLElement === \"function\" ? o instanceof HTMLElement : //DOM2\n            o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName === \"string\");\n    };\n    Utils.isNodeOrElement = function (o) {\n        return this.isNode(o) || this.isElement(o);\n    };\n    /**\n     * Makes a copy of a node list into a list\n     * @param {NodeList} nodeList\n     * @returns {Node[]}\n     */\n    Utils.copyNodeList = function (nodeList) {\n        var childCount = nodeList ? nodeList.length : 0;\n        var res = [];\n        for (var i = 0; i < childCount; i++) {\n            res.push(nodeList[i]);\n        }\n        return res;\n    };\n    Utils.isEventFromPrintableCharacter = function (event) {\n        var pressedChar = String.fromCharCode(event.charCode);\n        // newline is an exception, as it counts as a printable character, but we don't\n        // want to start editing when it is pressed. without this check, if user is in chrome\n        // and editing a cell, and they press ctrl+enter, the cell stops editing, and then\n        // starts editing again with a blank value (two 'key down' events are fired). to\n        // test this, remove the line below, edit a cell in chrome and hit ctrl+enter while editing.\n        // https://ag-grid.atlassian.net/browse/AG-605\n        if (this.isKeyPressed(event, constants_1.Constants.KEY_NEW_LINE)) {\n            return false;\n        }\n        // no allowed printable chars have alt or ctrl key combinations\n        if (event.altKey || event.ctrlKey) {\n            return false;\n        }\n        if (exports._.exists(event.key)) {\n            // modern browser will implement key, so we return if key is length 1, eg if it is 'a' for the\n            // a key, or '2' for the '2' key. non-printable characters have names, eg 'Enter' or 'Backspace'.\n            var printableCharacter = event.key.length === 1;\n            // IE11 & Edge treat the numpad del key differently - with numlock on we get \"Del\" for key,\n            // so this addition checks if its IE11/Edge and handles that specific case the same was as all other browsers\n            var numpadDelWithNumlockOnForEdgeOrIe = Utils.isNumpadDelWithNumlockOnForEdgeOrIe(event);\n            return printableCharacter || numpadDelWithNumlockOnForEdgeOrIe;\n        }\n        else {\n            // otherwise, for older browsers, we test against a list of characters, which doesn't include\n            // accents for non-English, but don't care much, as most users are on modern browsers\n            return Utils.PRINTABLE_CHARACTERS.indexOf(pressedChar) >= 0;\n        }\n    };\n    /**\n     * Allows user to tell the grid to skip specific keyboard events\n     * @param {GridOptionsWrapper} gridOptionsWrapper\n     * @param {KeyboardEvent} keyboardEvent\n     * @param {RowNode} rowNode\n     * @param {Column} column\n     * @param {boolean} editing\n     * @returns {boolean}\n     */\n    Utils.isUserSuppressingKeyboardEvent = function (gridOptionsWrapper, keyboardEvent, rowNode, column, editing) {\n        var gridOptionsFunc = gridOptionsWrapper.getSuppressKeyboardEventFunc();\n        var colDefFunc = column.getColDef().suppressKeyboardEvent;\n        // if no callbacks provided by user, then do nothing\n        if (!gridOptionsFunc && !colDefFunc) {\n            return false;\n        }\n        var params = {\n            event: keyboardEvent,\n            editing: editing,\n            column: column,\n            api: gridOptionsWrapper.getApi(),\n            node: rowNode,\n            data: rowNode.data,\n            colDef: column.getColDef(),\n            context: gridOptionsWrapper.getContext(),\n            columnApi: gridOptionsWrapper.getColumnApi()\n        };\n        // colDef get first preference on suppressing events\n        if (colDefFunc) {\n            var colDefFuncResult = colDefFunc(params);\n            // if colDef func suppressed, then return now, no need to call gridOption func\n            if (colDefFuncResult) {\n                return true;\n            }\n        }\n        if (gridOptionsFunc) {\n            // if gridOption func, return the result\n            return gridOptionsFunc(params);\n        }\n        else {\n            // otherwise return false, don't suppress, as colDef didn't suppress and no func on gridOptions\n            return false;\n        }\n    };\n    Utils.getCellCompForEvent = function (gridOptionsWrapper, event) {\n        var sourceElement = this.getTarget(event);\n        while (sourceElement) {\n            var renderedCell = gridOptionsWrapper.getDomData(sourceElement, 'cellComp');\n            if (renderedCell) {\n                return renderedCell;\n            }\n            sourceElement = sourceElement.parentElement;\n        }\n        return null;\n    };\n    /**\n     * Adds all type of change listeners to an element, intended to be a text field\n     * @param {HTMLElement} element\n     * @param {EventListener} listener\n     */\n    Utils.addChangeListener = function (element, listener) {\n        element.addEventListener(\"changed\", listener);\n        element.addEventListener(\"paste\", listener);\n        element.addEventListener(\"input\", listener);\n        // IE doesn't fire changed for special keys (eg delete, backspace), so need to\n        // listen for this further ones\n        element.addEventListener(\"keydown\", listener);\n        element.addEventListener(\"keyup\", listener);\n    };\n    /**\n     * If value is undefined, null or blank, returns null, otherwise returns the value\n     * @param {T} value\n     * @returns {T | null}\n     */\n    Utils.makeNull = function (value) {\n        var valueNoType = value;\n        if (value === null || value === undefined || valueNoType === \"\") {\n            return null;\n        }\n        return value;\n    };\n    Utils.missing = function (value) {\n        return !this.exists(value);\n    };\n    Utils.missingOrEmpty = function (value) {\n        return !value || this.missing(value) || value.length === 0;\n    };\n    Utils.missingOrEmptyObject = function (value) {\n        return this.missing(value) || Object.keys(value).length === 0;\n    };\n    Utils.exists = function (value, allowEmptyString) {\n        if (allowEmptyString === void 0) { allowEmptyString = false; }\n        return value != null && (value !== '' || allowEmptyString);\n    };\n    Utils.firstExistingValue = function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            values[_i] = arguments[_i];\n        }\n        for (var i = 0; i < values.length; i++) {\n            var value = values[i];\n            if (exports._.exists(value)) {\n                return value;\n            }\n        }\n        return null;\n    };\n    Utils.anyExists = function (values) {\n        if (values) {\n            for (var i = 0; i < values.length; i++) {\n                if (this.exists(values[i])) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Utils.existsAndNotEmpty = function (value) {\n        return value != null && this.exists(value) && value.length > 0;\n    };\n    Utils.clearElement = function (el) {\n        while (el && el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n    };\n    Utils.removeElement = function (parent, cssSelector) {\n        this.removeFromParent(parent.querySelector(cssSelector));\n    };\n    Utils.removeFromParent = function (node) {\n        if (node && node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    };\n    Utils.isVisible = function (element) {\n        return (element.offsetParent !== null);\n    };\n    Utils.callIfPresent = function (func) {\n        if (func) {\n            func();\n        }\n    };\n    /**\n     * Loads the template and returns it as an element. makes up for no simple way in\n     * the dom api to load html directly, eg we cannot do this: document.createElement(template)\n     * @param {string} template\n     * @returns {HTMLElement}\n     */\n    Utils.loadTemplate = function (template) {\n        var tempDiv = document.createElement(\"div\");\n        tempDiv.innerHTML = template;\n        return tempDiv.firstChild;\n    };\n    Utils.appendHtml = function (eContainer, htmlTemplate) {\n        if (eContainer.lastChild) {\n            // https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n            // we put the items at the start, so new items appear underneath old items,\n            // so when expanding/collapsing groups, the new rows don't go on top of the\n            // rows below that are moving our of the way\n            eContainer.insertAdjacentHTML('afterbegin', htmlTemplate);\n        }\n        else {\n            eContainer.innerHTML = htmlTemplate;\n        }\n    };\n    Utils.addOrRemoveCssClass = function (element, className, addOrRemove) {\n        if (addOrRemove) {\n            this.addCssClass(element, className);\n        }\n        else {\n            this.removeCssClass(element, className);\n        }\n    };\n    /**\n     * This method adds a class to an element and remove that class from all siblings.\n     * Useful for toggling state.\n     * @param {HTMLElement} element The element to receive the class\n     * @param {string} className The class to be assigned to the element\n     * @param {boolean} [inverted] This inverts the effect, adding the class to all siblings and\n     *        removing from the relevant element (useful when adding a class to hide non-selected elements).\n     */\n    Utils.radioCssClass = function (element, className, inverted) {\n        var parent = element.parentElement;\n        var sibling = parent.firstChild;\n        while (sibling) {\n            exports._.addOrRemoveCssClass(sibling, className, inverted ? (sibling !== element) : (sibling === element));\n            sibling = sibling.nextSibling;\n        }\n    };\n    Utils.addCssClass = function (element, className) {\n        var _this = this;\n        if (!className || className.length === 0) {\n            return;\n        }\n        if (className.indexOf(' ') >= 0) {\n            className.split(' ').forEach(function (value) { return _this.addCssClass(element, value); });\n            return;\n        }\n        if (element.classList) {\n            if (!element.classList.contains(className)) {\n                element.classList.add(className);\n            }\n        }\n        else {\n            if (element.className && element.className.length > 0) {\n                var cssClasses = element.className.split(' ');\n                if (cssClasses.indexOf(className) < 0) {\n                    cssClasses.push(className);\n                    element.setAttribute('class', cssClasses.join(' '));\n                }\n            }\n            else {\n                // do not use element.classList = className here, it will cause\n                // a read-only assignment error on some browsers (IE/Edge).\n                element.setAttribute('class', className);\n            }\n        }\n    };\n    Utils.removeCssClass = function (element, className) {\n        if (element.classList) {\n            if (element.classList.contains(className)) {\n                element.classList.remove(className);\n            }\n        }\n        else {\n            if (element.className && element.className.length > 0) {\n                var cssClasses = element.className.split(' ');\n                if (cssClasses.indexOf(className) >= 0) {\n                    // remove all instances of the item, not just the first, in case it's in more than once\n                    while (cssClasses.indexOf(className) >= 0) {\n                        cssClasses.splice(cssClasses.indexOf(className), 1);\n                    }\n                    element.setAttribute('class', cssClasses.join(' '));\n                }\n            }\n        }\n    };\n    Utils.containsClass = function (element, className) {\n        if (element.classList) {\n            // for modern browsers\n            return element.classList.contains(className);\n        }\n        else if (element.className) {\n            // for older browsers, check against the string of class names\n            // if only one class, can check for exact match\n            var onlyClass = element.className === className;\n            // if many classes, check for class name, we have to pad with ' ' to stop other\n            // class names that are a substring of this class\n            var contains = element.className.indexOf(' ' + className + ' ') >= 0;\n            // the padding above then breaks when it's the first or last class names\n            var startsWithClass = element.className.indexOf(className + ' ') === 0;\n            var endsWithClass = element.className.lastIndexOf(' ' + className) === (element.className.length - className.length - 1);\n            return onlyClass || contains || startsWithClass || endsWithClass;\n        }\n        else {\n            // if item is not a node\n            return false;\n        }\n    };\n    Utils.getElementAttribute = function (element, attributeName) {\n        if (element.attributes) {\n            if (element.attributes[attributeName]) {\n                var attribute = element.attributes[attributeName];\n                return attribute.value;\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    Utils.offsetHeight = function (element) {\n        return element && element.clientHeight ? element.clientHeight : 0;\n    };\n    Utils.offsetWidth = function (element) {\n        return element && element.clientWidth ? element.clientWidth : 0;\n    };\n    Utils.sortNumberArray = function (numberArray) {\n        numberArray.sort(function (a, b) { return a - b; });\n    };\n    Utils.removeRepeatsFromArray = function (array, object) {\n        if (!array) {\n            return;\n        }\n        for (var index = array.length - 2; index >= 0; index--) {\n            var thisOneMatches = array[index] === object;\n            var nextOneMatches = array[index + 1] === object;\n            if (thisOneMatches && nextOneMatches) {\n                array.splice(index + 1, 1);\n            }\n        }\n    };\n    Utils.removeFromArray = function (array, object) {\n        var index = array.indexOf(object);\n        if (index >= 0) {\n            array.splice(index, 1);\n        }\n    };\n    Utils.removeAllFromArray = function (array, toRemove) {\n        toRemove.forEach(function (item) {\n            var index = array.indexOf(item);\n            if (index >= 0) {\n                array.splice(index, 1);\n            }\n        });\n    };\n    Utils.insertIntoArray = function (array, object, toIndex) {\n        array.splice(toIndex, 0, object);\n    };\n    Utils.insertArrayIntoArray = function (dest, src, toIndex) {\n        if (this.missing(dest) || this.missing(src)) {\n            return;\n        }\n        // put items in backwards, otherwise inserted items end up in reverse order\n        for (var i = src.length - 1; i >= 0; i--) {\n            var item = src[i];\n            this.insertIntoArray(dest, item, toIndex);\n        }\n    };\n    Utils.moveInArray = function (array, objectsToMove, toIndex) {\n        var _this = this;\n        // first take out it items from the array\n        objectsToMove.forEach(function (obj) {\n            _this.removeFromArray(array, obj);\n        });\n        // now add the objects, in same order as provided to us, that means we start at the end\n        // as the objects will be pushed to the right as they are inserted\n        objectsToMove.slice().reverse().forEach(function (obj) {\n            _this.insertIntoArray(array, obj, toIndex);\n        });\n    };\n    Utils.defaultComparator = function (valueA, valueB, accentedCompare) {\n        if (accentedCompare === void 0) { accentedCompare = false; }\n        var valueAMissing = valueA === null || valueA === undefined;\n        var valueBMissing = valueB === null || valueB === undefined;\n        // this is for aggregations sum and avg, where the result can be a number that is wrapped.\n        // if we didn't do this, then the toString() value would be used, which would result in\n        // the strings getting used instead of the numbers.\n        if (valueA && valueA.toNumber) {\n            valueA = valueA.toNumber();\n        }\n        if (valueB && valueB.toNumber) {\n            valueB = valueB.toNumber();\n        }\n        if (valueAMissing && valueBMissing) {\n            return 0;\n        }\n        if (valueAMissing) {\n            return -1;\n        }\n        if (valueBMissing) {\n            return 1;\n        }\n        if (typeof valueA === \"string\") {\n            if (!accentedCompare) {\n                return doQuickCompare(valueA, valueB);\n            }\n            else {\n                try {\n                    // using local compare also allows chinese comparisons\n                    return valueA.localeCompare(valueB);\n                }\n                catch (e) {\n                    // if something wrong with localeCompare, eg not supported\n                    // by browser, then just continue with the quick one\n                    return doQuickCompare(valueA, valueB);\n                }\n            }\n        }\n        if (valueA < valueB) {\n            return -1;\n        }\n        else if (valueA > valueB) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n        function doQuickCompare(a, b) {\n            return (a > b ? 1 : (a < b ? -1 : 0));\n        }\n    };\n    Utils.last = function (arr) {\n        if (!arr || !arr.length) {\n            return undefined;\n        }\n        return arr[arr.length - 1];\n    };\n    Utils.compareArrays = function (array1, array2) {\n        if (this.missing(array1) && this.missing(array2)) {\n            return true;\n        }\n        if ((this.missing(array1) || this.missing(array2)) ||\n            (!array1 || !array2)) {\n            return false;\n        }\n        if (array1.length !== array2.length) {\n            return false;\n        }\n        for (var i = 0; i < array1.length; i++) {\n            if (array1[i] !== array2[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Utils.ensureDomOrder = function (eContainer, eChild, eChildBefore) {\n        // if already in right order, do nothing\n        if (eChildBefore && eChildBefore.nextSibling === eChild) {\n            return;\n        }\n        if (eChildBefore) {\n            if (eChildBefore.nextSibling) {\n                // insert between the eRowBefore and the row after it\n                eContainer.insertBefore(eChild, eChildBefore.nextSibling);\n            }\n            else {\n                // if nextSibling is missing, means other row is at end, so just append new row at the end\n                eContainer.appendChild(eChild);\n            }\n        }\n        else {\n            // otherwise put at start\n            if (eContainer.firstChild && eContainer.firstChild !== eChild) {\n                // insert it at the first location\n                eContainer.insertAdjacentElement('afterbegin', eChild);\n            }\n        }\n    };\n    Utils.insertWithDomOrder = function (eContainer, eChild, eChildBefore) {\n        if (eChildBefore) {\n            if (eChildBefore.nextSibling) {\n                // insert between the eRowBefore and the row after it\n                eContainer.insertBefore(eChild, eChildBefore.nextSibling);\n            }\n            else {\n                // if nextSibling is missing, means other row is at end, so just append new row at the end\n                eContainer.appendChild(eChild);\n            }\n        }\n        else {\n            if (eContainer.firstChild) {\n                // insert it at the first location\n                eContainer.insertBefore(eChild, eContainer.firstChild);\n            }\n            else {\n                // otherwise eContainer is empty, so just append it\n                eContainer.appendChild(eChild);\n            }\n        }\n    };\n    Utils.insertTemplateWithDomOrder = function (eContainer, htmlTemplate, eChildBefore) {\n        var res;\n        if (eChildBefore) {\n            // if previous element exists, just slot in after the previous element\n            eChildBefore.insertAdjacentHTML('afterend', htmlTemplate);\n            res = eChildBefore.nextSibling;\n        }\n        else {\n            if (eContainer.firstChild) {\n                // insert it at the first location\n                eContainer.insertAdjacentHTML('afterbegin', htmlTemplate);\n            }\n            else {\n                // otherwise eContainer is empty, so just append it\n                eContainer.innerHTML = htmlTemplate;\n            }\n            res = eContainer.firstChild;\n        }\n        return res;\n    };\n    Utils.every = function (items, callback) {\n        if (!items || items.length === 0) {\n            return true;\n        }\n        for (var i = 0; i < items.length; i++) {\n            if (!callback(items[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Utils.toStringOrNull = function (value) {\n        if (this.exists(value) && value.toString) {\n            return value.toString();\n        }\n        else {\n            return null;\n        }\n    };\n    Utils.formatSize = function (size) {\n        if (typeof size === \"number\") {\n            return size + \"px\";\n        }\n        else {\n            return size;\n        }\n    };\n    Utils.formatNumberTwoDecimalPlacesAndCommas = function (value) {\n        if (typeof value !== 'number') {\n            return '';\n        }\n        // took this from: http://blog.tompawlak.org/number-currency-formatting-javascript\n        return (Math.round(value * 100) / 100).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n    };\n    /**\n     * the native method number.toLocaleString(undefined, {minimumFractionDigits: 0})\n     * puts in decimal places in IE, so we use this method instead\n     * from: http://blog.tompawlak.org/number-currency-formatting-javascript\n     * @param {number} value\n     * @returns {string}\n     */\n    Utils.formatNumberCommas = function (value) {\n        if (typeof value !== 'number') {\n            return '';\n        }\n        return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n    };\n    Utils.prependDC = function (parent, documentFragment) {\n        if (this.exists(parent.firstChild)) {\n            parent.insertBefore(documentFragment, parent.firstChild);\n        }\n        else {\n            parent.appendChild(documentFragment);\n        }\n    };\n    /**\n     * If icon provided, use this (either a string, or a function callback).\n     * if not, then use the default icon from the theme\n     * @param {string} iconName\n     * @param {GridOptionsWrapper} gridOptionsWrapper\n     * @param {Column | null} [column]\n     * @returns {HTMLElement}\n     */\n    Utils.createIcon = function (iconName, gridOptionsWrapper, column) {\n        var iconContents = this.createIconNoSpan(iconName, gridOptionsWrapper, column);\n        if (iconContents.className.indexOf('ag-icon') > -1) {\n            return iconContents;\n        }\n        else {\n            var eResult = document.createElement('span');\n            eResult.appendChild(iconContents);\n            return eResult;\n        }\n    };\n    Utils.createIconNoSpan = function (iconName, gridOptionsWrapper, column) {\n        var userProvidedIcon = null;\n        // check col for icon first\n        var icons = (column && column.getColDef().icons) ? column.getColDef().icons : null;\n        if (icons) {\n            userProvidedIcon = icons[iconName];\n        }\n        // it not in col, try grid options\n        if (!userProvidedIcon && gridOptionsWrapper.getIcons()) {\n            userProvidedIcon = gridOptionsWrapper.getIcons()[iconName];\n        }\n        // now if user provided, use it\n        if (userProvidedIcon) {\n            var rendererResult = void 0;\n            if (typeof userProvidedIcon === 'function') {\n                rendererResult = userProvidedIcon();\n            }\n            else if (typeof userProvidedIcon === 'string') {\n                rendererResult = userProvidedIcon;\n            }\n            else {\n                throw new Error('icon from grid options needs to be a string or a function');\n            }\n            if (typeof rendererResult === 'string') {\n                return this.loadTemplate(rendererResult);\n            }\n            else if (this.isNodeOrElement(rendererResult)) {\n                return rendererResult;\n            }\n            else {\n                throw new Error('iconRenderer should return back a string or a dom object');\n            }\n        }\n        else {\n            var span = document.createElement('span');\n            var cssClass = this.iconNameClassMap[iconName];\n            if (!cssClass) {\n                throw new Error(iconName + \" did not find class\");\n            }\n            span.setAttribute(\"class\", \"ag-icon ag-icon-\" + cssClass);\n            span.setAttribute(\"unselectable\", \"on\");\n            return span;\n        }\n    };\n    Utils.addStylesToElement = function (eElement, styles) {\n        var _this = this;\n        if (!styles) {\n            return;\n        }\n        Object.keys(styles).forEach(function (key) {\n            var keyCamelCase = _this.hyphenToCamelCase(key);\n            if (keyCamelCase) {\n                eElement.style[keyCamelCase] = styles[key];\n            }\n        });\n    };\n    Utils.isHorizontalScrollShowing = function (element) {\n        return element.clientWidth < element.scrollWidth;\n    };\n    Utils.isVerticalScrollShowing = function (element) {\n        return element.clientHeight < element.scrollHeight;\n    };\n    Utils.getMaxDivHeight = function () {\n        if (!document.body) {\n            return -1;\n        }\n        var res = 1000000;\n        // FF reports the height back but still renders blank after ~6M px\n        var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n        var div = this.loadTemplate(\"<div/>\");\n        document.body.appendChild(div);\n        while (true) {\n            var test = res * 2;\n            div.style.height = test + 'px';\n            if (test > testUpTo || div.clientHeight !== test) {\n                break;\n            }\n            else {\n                res = test;\n            }\n        }\n        document.body.removeChild(div);\n        return res;\n    };\n    Utils.getScrollbarWidth = function () {\n        var body = document.body;\n        var div = document.createElement(\"div\");\n        div.style.width = div.style.height = \"100px\";\n        div.style.opacity = \"0\";\n        div.style.overflow = \"scroll\";\n        div.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\n        div.style.position = \"absolute\";\n        body.appendChild(div);\n        var width = div.offsetWidth - div.clientWidth;\n        // remove divs\n        if (div.parentNode) {\n            div.parentNode.removeChild(div);\n        }\n        return width;\n    };\n    Utils.hasOverflowScrolling = function () {\n        var prefixes = ['webkit', 'moz', 'o', 'ms'];\n        var div = document.createElement('div');\n        var body = document.getElementsByTagName('body')[0];\n        var found = false;\n        var p;\n        body.appendChild(div);\n        div.setAttribute('style', prefixes.map(function (prefix) { return \"-\" + prefix + \"-overflow-scrolling: touch\"; }).concat('overflow-scrolling: touch').join(';'));\n        var computedStyle = window.getComputedStyle(div);\n        if (computedStyle.overflowScrolling === 'touch') {\n            found = true;\n        }\n        if (!found) {\n            for (var _i = 0, prefixes_1 = prefixes; _i < prefixes_1.length; _i++) {\n                p = prefixes_1[_i];\n                if (computedStyle[p + \"OverflowScrolling\"] === 'touch') {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (div.parentNode) {\n            div.parentNode.removeChild(div);\n        }\n        return found;\n    };\n    Utils.isKeyPressed = function (event, keyToCheck) {\n        var pressedKey = event.which || event.keyCode;\n        return pressedKey === keyToCheck;\n    };\n    Utils.setVisible = function (element, visible) {\n        this.addOrRemoveCssClass(element, 'ag-hidden', !visible);\n    };\n    Utils.setHidden = function (element, hidden) {\n        this.addOrRemoveCssClass(element, 'ag-invisible', hidden);\n    };\n    Utils.setFixedWidth = function (element, width) {\n        width = this.formatSize(width);\n        element.style.width = width;\n        element.style.maxWidth = width;\n        element.style.minWidth = width;\n    };\n    Utils.setFixedHeight = function (element, height) {\n        height = this.formatSize(height);\n        element.style.height = height;\n        element.style.maxHeight = height;\n        element.style.minHeight = height;\n    };\n    Utils.isBrowserIE = function () {\n        if (this.isIE === undefined) {\n            this.isIE = /*@cc_on!@*/ false || !!document.documentMode; // At least IE6\n        }\n        return this.isIE;\n    };\n    Utils.isBrowserEdge = function () {\n        if (this.isEdge === undefined) {\n            this.isEdge = !this.isBrowserIE() && !!window.StyleMedia;\n        }\n        return this.isEdge;\n    };\n    Utils.isBrowserSafari = function () {\n        if (this.isSafari === undefined) {\n            var anyWindow = window;\n            // taken from https://github.com/ag-grid/ag-grid/issues/550\n            this.isSafari = Object.prototype.toString.call(anyWindow.HTMLElement).indexOf('Constructor') > 0\n                || (function (p) {\n                    return p ? p.toString() === \"[object SafariRemoteNotification]\" : false;\n                })(!anyWindow.safari || anyWindow.safari.pushNotification);\n        }\n        return this.isSafari;\n    };\n    Utils.isBrowserChrome = function () {\n        if (this.isChrome === undefined) {\n            var win = window;\n            this.isChrome = (!!win.chrome && (!!win.chrome.webstore || !!win.chrome.runtime)) ||\n                (/Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor));\n        }\n        return this.isChrome;\n    };\n    Utils.isBrowserFirefox = function () {\n        if (this.isFirefox === undefined) {\n            var win = window;\n            this.isFirefox = typeof win.InstallTrigger !== 'undefined';\n        }\n        return this.isFirefox;\n    };\n    Utils.isUserAgentIPad = function () {\n        if (this.isIPad === undefined) {\n            // taken from https://davidwalsh.name/detect-ipad\n            this.isIPad = navigator.userAgent.match(/iPad|iPhone/i) != null;\n        }\n        return this.isIPad;\n    };\n    /**\n     * srcElement is only available in IE. In all other browsers it is target\n     * http://stackoverflow.com/questions/5301643/how-can-i-make-event-srcelement-work-in-firefox-and-what-does-it-mean\n     * @param {Event} event\n     * @returns {Element}\n     */\n    Utils.getTarget = function (event) {\n        var eventNoType = event;\n        return eventNoType.target || eventNoType.srcElement;\n    };\n    Utils.isElementChildOfClass = function (element, cls, maxNest) {\n        var counter = 0;\n        while (element) {\n            if (this.containsClass(element, cls)) {\n                return true;\n            }\n            element = element.parentElement;\n            if (maxNest && ++counter > maxNest) {\n                break;\n            }\n        }\n        return false;\n    };\n    Utils.isElementInEventPath = function (element, event) {\n        if (!event || !element) {\n            return false;\n        }\n        var path = exports._.getEventPath(event);\n        return path.indexOf(element) >= 0;\n    };\n    Utils.isFunction = function (val) {\n        return !!(val && val.constructor && val.call && val.apply);\n    };\n    Utils.createEventPath = function (event) {\n        var res = [];\n        var pointer = exports._.getTarget(event);\n        while (pointer) {\n            res.push(pointer);\n            pointer = pointer.parentElement;\n        }\n        return res;\n    };\n    /**\n     * firefox doesn't have event.path set, or any alternative to it, so we hack\n     * it in. this is needed as it's to late to work out the path when the item is\n     * removed from the dom. used by MouseEventService, where it works out if a click\n     * was from the current grid, or a detail grid (master / detail).\n     * @param {Event} event\n     */\n    Utils.addAgGridEventPath = function (event) {\n        event.__agGridEventPath = this.getEventPath(event);\n    };\n    /**\n     * Gets the path for an Event.\n     * https://stackoverflow.com/questions/39245488/event-path-undefined-with-firefox-and-vue-js\n     * https://developer.mozilla.org/en-US/docs/Web/API/Event\n     * @param {Event} event\n     * @returns {EventTarget[]}\n     */\n    Utils.getEventPath = function (event) {\n        var eventNoType = event;\n        if (eventNoType.deepPath) {\n            // IE supports deep path\n            return eventNoType.deepPath();\n        }\n        else if (eventNoType.path) {\n            // Chrome supports path\n            return eventNoType.path;\n        }\n        else if (eventNoType.composedPath) {\n            // Firefox supports composePath\n            return eventNoType.composedPath();\n        }\n        else if (eventNoType.__agGridEventPath) {\n            // Firefox supports composePath\n            return eventNoType.__agGridEventPath;\n        }\n        else {\n            // and finally, if none of the above worked,\n            // we create the path ourselves\n            return this.createEventPath(event);\n        }\n    };\n    Utils.forEachSnapshotFirst = function (list, callback) {\n        if (list) {\n            var arrayCopy = list.slice(0);\n            arrayCopy.forEach(callback);\n        }\n    };\n    /**\n     * Gets the document body width\n     * from: http://stackoverflow.com/questions/1038727/how-to-get-browser-width-using-javascript-code\n     * @returns {number}\n     */\n    Utils.getBodyWidth = function () {\n        if (document.body) {\n            return document.body.clientWidth;\n        }\n        if (window.innerHeight) {\n            return window.innerWidth;\n        }\n        if (document.documentElement && document.documentElement.clientWidth) {\n            return document.documentElement.clientWidth;\n        }\n        return -1;\n    };\n    /**\n     * Gets the body height\n     * from: http://stackoverflow.com/questions/1038727/how-to-get-browser-width-using-javascript-code\n     * @returns {number}\n     */\n    Utils.getBodyHeight = function () {\n        if (document.body) {\n            return document.body.clientHeight;\n        }\n        if (window.innerHeight) {\n            return window.innerHeight;\n        }\n        if (document.documentElement && document.documentElement.clientHeight) {\n            return document.documentElement.clientHeight;\n        }\n        return -1;\n    };\n    Utils.setCheckboxState = function (eCheckbox, state) {\n        if (typeof state === 'boolean') {\n            eCheckbox.checked = state;\n            eCheckbox.indeterminate = false;\n        }\n        else {\n            // isNodeSelected returns back undefined if it's a group and the children\n            // are a mix of selected and unselected\n            eCheckbox.indeterminate = true;\n        }\n    };\n    Utils.traverseNodesWithKey = function (nodes, callback) {\n        var keyParts = [];\n        recursiveSearchNodes(nodes);\n        function recursiveSearchNodes(currentNodes) {\n            currentNodes.forEach(function (node) {\n                // also checking for children for tree data\n                if (node.group || node.hasChildren()) {\n                    keyParts.push(node.key);\n                    var key = keyParts.join('|');\n                    callback(node, key);\n                    recursiveSearchNodes(node.childrenAfterGroup);\n                    keyParts.pop();\n                }\n            });\n        }\n    };\n    /**\n     * Converts a camelCase string into hyphenated string\n     * from https://gist.github.com/youssman/745578062609e8acac9f\n     * @param {string} str\n     * @return {string}\n     */\n    Utils.camelCaseToHyphen = function (str) {\n        if (str === null || str === undefined) {\n            return null;\n        }\n        return str.replace(/([A-Z])/g, function (g) { return '-' + g[0].toLowerCase(); });\n    };\n    /**\n     * Converts a hyphenated string into camelCase string\n     * from https://stackoverflow.com/questions/6660977/convert-hyphens-to-camel-case-camelcase\n     * @param {string} str\n     * @return {string}\n     */\n    Utils.hyphenToCamelCase = function (str) {\n        if (str === null || str === undefined) {\n            return null;\n        }\n        return str.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\n    };\n    Utils.capitalise = function (str) {\n        return str[0].toUpperCase() + str.substr(1).toLowerCase();\n    };\n    /**\n     * Converts a CSS object into string\n     * @param {Object} stylesToUse an object eg: {color: 'black', top: '25px'}\n     * @return {string} A string like \"color: black; top: 25px;\" for html\n     */\n    Utils.cssStyleObjectToMarkup = function (stylesToUse) {\n        var _this = this;\n        if (!stylesToUse) {\n            return '';\n        }\n        var resParts = [];\n        this.iterateObject(stylesToUse, function (styleKey, styleValue) {\n            var styleKeyDashed = _this.camelCaseToHyphen(styleKey);\n            resParts.push(styleKeyDashed + \": \" + styleValue + \";\");\n        });\n        return resParts.join(' ');\n    };\n    /**\n     * Check if a value is numeric\n     * from http://stackoverflow.com/questions/9716468/is-there-any-function-like-isnumeric-in-javascript-to-validate-numbers\n     * @param {any} value\n     * @return {boolean}\n     */\n    Utils.isNumeric = function (value) {\n        if (value === '') {\n            return false;\n        }\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    };\n    Utils.escape = function (toEscape) {\n        if (toEscape === null || toEscape === undefined || !toEscape.replace) {\n            return toEscape;\n        }\n        return toEscape.replace(reUnescapedHtml, function (chr) { return HTML_ESCAPES[chr]; });\n    };\n    /**\n     * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n     * complicated, thus this doc is long and (hopefully) detailed enough to answer\n     * your questions.\n     *\n     * If you need to react to the mouse wheel in a predictable way, this code is\n     * like your bestest friend. * hugs *\n     *\n     * As of today, there are 4 DOM event types you can listen to:\n     *\n     *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n     *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n     *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n     *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n     *\n     * So what to do?  The is the best:\n     *\n     *   normalizeWheel.getEventType();\n     *\n     * In your event callback, use this code to get sane interpretation of the\n     * deltas.  This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     * Wheel values are provided by the browser assuming you are using the wheel to\n     * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n     * significantly on different platforms and browsers, forgetting that you can\n     * scroll at different speeds.  Some devices (like trackpads) emit more events\n     * at smaller increments with fine granularity, and some emit massive jumps with\n     * linear speed or acceleration.\n     *\n     * This code does its best to normalize the deltas for you:\n     *\n     *   - spin is trying to normalize how far the wheel was spun (or trackpad\n     *     dragged).  This is super useful for zoom support where you want to\n     *     throw away the chunky scroll steps on the PC and make those equal to\n     *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n     *     resolve a single slow step on a wheel to 1.\n     *\n     *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n     *     get the crazy differences between browsers, but at least it'll be in\n     *     pixels!\n     *\n     *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n     *     should translate to positive value zooming IN, negative zooming OUT.\n     *     This matches the newer 'wheel' event.\n     *\n     * Why are there spinX, spinY (or pixels)?\n     *\n     *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n     *     with a mouse.  It results in side-scrolling in the browser by default.\n     *\n     *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n     *\n     *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n     *     probably is by browsers in conjunction with fancy 3D controllers .. but\n     *     you know.\n     *\n     * Implementation info:\n     *\n     * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n     * average mouse:\n     *\n     *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n     *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n     *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n     *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n     *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n     *\n     * On the trackpad:\n     *\n     *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n     *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n     *\n     * On other/older browsers.. it's more complicated as there can be multiple and\n     * also missing delta values.\n     *\n     * The 'wheel' event is more standard:\n     *\n     * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n     *\n     * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n     * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n     * backward compatibility with older events.  Those other values help us\n     * better normalize spin speed.  Example of what the browsers provide:\n     *\n     *                          | event.wheelDelta | event.detail\n     *        ------------------+------------------+--------------\n     *          Safari v5/OS X  |       -120       |       0\n     *          Safari v5/Win7  |       -120       |       0\n     *         Chrome v17/OS X  |       -120       |       0\n     *         Chrome v17/Win7  |       -120       |       0\n     *                IE9/Win7  |       -120       |   undefined\n     *         Firefox v4/OS X  |     undefined    |       1\n     *         Firefox v4/Win7  |     undefined    |       3\n     *\n     * from: https://github.com/facebook/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     * @param {any} event\n     * @return {any}\n     */\n    Utils.normalizeWheel = function (event) {\n        var PIXEL_STEP = 10;\n        var LINE_HEIGHT = 40;\n        var PAGE_HEIGHT = 800;\n        // spinX, spinY\n        var sX = 0;\n        var sY = 0;\n        // pixelX, pixelY\n        var pX = 0;\n        var pY = 0;\n        // Legacy\n        if ('detail' in event) {\n            sY = event.detail;\n        }\n        if ('wheelDelta' in event) {\n            sY = -event.wheelDelta / 120;\n        }\n        if ('wheelDeltaY' in event) {\n            sY = -event.wheelDeltaY / 120;\n        }\n        if ('wheelDeltaX' in event) {\n            sX = -event.wheelDeltaX / 120;\n        }\n        // side scrolling on FF with DOMMouseScroll\n        if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n            sX = sY;\n            sY = 0;\n        }\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n        if ('deltaY' in event) {\n            pY = event.deltaY;\n        }\n        if ('deltaX' in event) {\n            pX = event.deltaX;\n        }\n        if ((pX || pY) && event.deltaMode) {\n            if (event.deltaMode == 1) { // delta in LINE units\n                pX *= LINE_HEIGHT;\n                pY *= LINE_HEIGHT;\n            }\n            else { // delta in PAGE units\n                pX *= PAGE_HEIGHT;\n                pY *= PAGE_HEIGHT;\n            }\n        }\n        // Fall-back if spin cannot be determined\n        if (pX && !sX) {\n            sX = (pX < 1) ? -1 : 1;\n        }\n        if (pY && !sY) {\n            sY = (pY < 1) ? -1 : 1;\n        }\n        return {\n            spinX: sX,\n            spinY: sY,\n            pixelX: pX,\n            pixelY: pY\n        };\n    };\n    /**\n     * from https://stackoverflow.com/questions/24004791/can-someone-explain-the-debounce-function-in-javascript\n     * @param {Function} func The function to be debounced\n     * @param {number} wait The time in ms to debounce\n     * @param {boolean} immediate If it should run immediately or wait for the initial debounce delay\n     * @return {Function} The debounced function\n     */\n    Utils.debounce = function (func, wait, immediate) {\n        if (immediate === void 0) { immediate = false; }\n        // 'private' variable for instance\n        // The returned function will be able to reference this due to closure.\n        // Each call to the returned function will share this common timer.\n        var timeout;\n        // Calling debounce returns a new anonymous function\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // reference the context and args for the setTimeout function\n            var context = this;\n            // Should the function be called now? If immediate is true\n            //   and not already in a timeout then the answer is: Yes\n            var callNow = immediate && !timeout;\n            // This is the basic debounce behaviour where you can call this\n            //   function several times, but it will only execute once\n            //   [before or after imposing a delay].\n            //   Each time the returned function is called, the timer starts over.\n            window.clearTimeout(timeout);\n            // Set the new timeout\n            timeout = window.setTimeout(function () {\n                // Inside the timeout function, clear the timeout variable\n                // which will let the next execution run when in 'immediate' mode\n                timeout = null;\n                // Check if the function already ran with the immediate flag\n                if (!immediate) {\n                    // Call the original function with apply\n                    // apply lets you define the 'this' object as well as the arguments\n                    //    (both captured before setTimeout)\n                    func.apply(context, args);\n                }\n            }, wait);\n            // Immediate mode and no wait timer? Execute the function..\n            if (callNow) {\n                func.apply(context, args);\n            }\n        };\n    };\n    /**\n     * a user once raised an issue - they said that when you opened a popup (eg context menu)\n     * and then clicked on a selection checkbox, the popup wasn't closed. this is because the\n     * popup listens for clicks on the body, however ag-grid WAS stopping propagation on the\n     * checkbox clicks (so the rows didn't pick them up as row selection selection clicks).\n     * to get around this, we have a pattern to stop propagation for the purposes of ag-Grid,\n     * but we still let the event pass back to teh body.\n     * @param {Event} event\n     */\n    Utils.stopPropagationForAgGrid = function (event) {\n        event[AG_GRID_STOP_PROPAGATION] = true;\n    };\n    Utils.isStopPropagationForAgGrid = function (event) {\n        return event[AG_GRID_STOP_PROPAGATION] === true;\n    };\n    Utils.executeInAWhile = function (funcs) {\n        this.executeAfter(funcs, 400);\n    };\n    Utils.executeNextVMTurn = function (funcs) {\n        this.executeAfter(funcs, 0);\n    };\n    Utils.executeAfter = function (funcs, millis) {\n        if (funcs.length > 0) {\n            window.setTimeout(function () {\n                funcs.forEach(function (func) { return func(); });\n            }, millis);\n        }\n    };\n    Utils.referenceCompare = function (left, right) {\n        if (left == null && right == null) {\n            return true;\n        }\n        if (left == null && right) {\n            return false;\n        }\n        if (left && right == null) {\n            return false;\n        }\n        return left === right;\n    };\n    Utils.get = function (source, expression, defaultValue) {\n        if (source == null) {\n            return defaultValue;\n        }\n        if (expression.indexOf('.') > -1) {\n            var fields = expression.split('.');\n            var thisKey = fields[0];\n            var nextValue_1 = source[thisKey];\n            if (nextValue_1 != null) {\n                return Utils.get(nextValue_1, fields.slice(1, fields.length).join('.'), defaultValue);\n            }\n            return defaultValue;\n        }\n        var nextValue = source[expression];\n        return nextValue != null ? nextValue : defaultValue;\n    };\n    Utils.addSafePassiveEventListener = function (frameworkOverrides, eElement, event, listener) {\n        var isPassive = Utils.PASSIVE_EVENTS.indexOf(event) >= 0;\n        var isOutsideAngular = Utils.OUTSIDE_ANGULAR_EVENTS.indexOf(event) >= 0;\n        var options = isPassive ? { passive: true } : undefined;\n        if (isOutsideAngular) {\n            frameworkOverrides.addEventListenerOutsideAngular(eElement, event, listener, options);\n        }\n        else {\n            eElement.addEventListener(event, listener, options);\n        }\n    };\n    /**\n     * Converts a camelCase string into regular text\n     * from: https://stackoverflow.com/questions/15369566/putting-space-in-camel-case-string-using-regular-expression\n     * @param {string} camelCase\n     * @return {string}\n     */\n    Utils.camelCaseToHumanText = function (camelCase) {\n        if (!camelCase || camelCase == null) {\n            return null;\n        }\n        var rex = /([A-Z])([A-Z])([a-z])|([a-z])([A-Z])/g;\n        var words = camelCase.replace(rex, '$1$4 $2$3$5').replace('.', ' ').split(' ');\n        return words.map(function (word) { return word.substring(0, 1).toUpperCase() + ((word.length > 1) ? word.substring(1, word.length) : ''); }).join(' ');\n    };\n    /**\n     * Displays a message to the browser. this is useful in iPad, where you can't easily see the console.\n     * so the javascript code can use this to give feedback. this is NOT intended to be called in production.\n     * it is intended the ag-Grid developer calls this to troubleshoot, but then takes out the calls before\n     * checking in.\n     * @param {string} msg\n     */\n    Utils.message = function (msg) {\n        var eMessage = document.createElement('div');\n        eMessage.innerHTML = msg;\n        var eBox = document.querySelector('#__ag__message');\n        if (!eBox) {\n            var template = \"<div id=\\\"__ag__message\\\" style=\\\"display: inline-block; position: absolute; top: 0px; left: 0px; color: white; background-color: black; z-index: 20; padding: 2px; border: 1px solid darkred; height: 200px; overflow-y: auto;\\\"></div>\";\n            eBox = this.loadTemplate(template);\n            if (document.body) {\n                document.body.appendChild(eBox);\n            }\n        }\n        eBox.insertBefore(eMessage, eBox.children[0]);\n        // eBox.appendChild(eMessage);\n    };\n    /**\n     * Gets called by: a) ClientSideNodeManager and b) GroupStage to do sorting.\n     * when in ClientSideNodeManager we always have indexes (as this sorts the items the\n     * user provided) but when in GroupStage, the nodes can contain filler nodes that\n     * don't have order id's\n     * @param {RowNode[]} rowNodes\n     * @param {Object} rowNodeOrder\n     */\n    Utils.sortRowNodesByOrder = function (rowNodes, rowNodeOrder) {\n        if (!rowNodes) {\n            return;\n        }\n        var comparator = function (nodeA, nodeB) {\n            var positionA = rowNodeOrder[nodeA.id];\n            var positionB = rowNodeOrder[nodeB.id];\n            var aHasIndex = positionA !== undefined;\n            var bHasIndex = positionB !== undefined;\n            var bothNodesAreUserNodes = aHasIndex && bHasIndex;\n            var bothNodesAreFillerNodes = !aHasIndex && !bHasIndex;\n            if (bothNodesAreUserNodes) {\n                // when comparing two nodes the user has provided, they always\n                // have indexes\n                return positionA - positionB;\n            }\n            else if (bothNodesAreFillerNodes) {\n                // when comparing two filler nodes, we have no index to compare them\n                // against, however we want this sorting to be deterministic, so that\n                // the rows don't jump around as the user does delta updates. so we\n                // want the same sort result. so we use the __objectId - which doesn't make sense\n                // from a sorting point of view, but does give consistent behaviour between\n                // calls. otherwise groups jump around as delta updates are done.\n                // note: previously here we used nodeId, however this gave a strange order\n                // as string ordering of numbers is wrong, so using id based on creation order\n                // as least gives better looking order.\n                return nodeA.__objectId - nodeB.__objectId;\n            }\n            else if (aHasIndex) {\n                return 1;\n            }\n            return -1;\n        };\n        // const a = new Date().getTime();\n        // check if the list first needs sorting\n        var rowNodeA;\n        var rowNodeB;\n        var atLeastOneOutOfOrder = false;\n        for (var i = 0; i < rowNodes.length - 1; i++) {\n            rowNodeA = rowNodes[i];\n            rowNodeB = rowNodes[i + 1];\n            if (comparator(rowNodeA, rowNodeB) > 0) {\n                atLeastOneOutOfOrder = true;\n                break;\n            }\n        }\n        // const b = new Date().getTime();\n        if (atLeastOneOutOfOrder) {\n            rowNodes.sort(comparator);\n        }\n        // const c = new Date().getTime();\n        // console.log(`${this.count}: ${rowNodes.length} items, ${b-a}ms ${atLeastOneOutOfOrder} ${c-b}ms`);\n    };\n    Utils.fuzzyCheckStrings = function (inputValues, validValues, allSuggestions) {\n        var _this = this;\n        var fuzzyMatches = {};\n        var invalidInputs = inputValues.filter(function (inputValue) {\n            return !validValues.some(function (validValue) { return validValue === inputValue; });\n        });\n        if (invalidInputs.length > 0) {\n            invalidInputs.forEach(function (invalidInput) {\n                return fuzzyMatches[invalidInput] = _this.fuzzySuggestions(invalidInput, validValues, allSuggestions);\n            });\n        }\n        return fuzzyMatches;\n    };\n    Utils.fuzzySuggestions = function (inputValue, validValues, allSuggestions) {\n        var thisSuggestions = allSuggestions.slice(0);\n        thisSuggestions.sort(function (suggestedValueLeft, suggestedValueRight) {\n            var leftDifference = exports._.string_similarity(suggestedValueLeft.toLowerCase(), inputValue.toLowerCase());\n            var rightDifference = exports._.string_similarity(suggestedValueRight.toLowerCase(), inputValue.toLowerCase());\n            return leftDifference > rightDifference ? -1 :\n                leftDifference === rightDifference ? 0 :\n                    1;\n        });\n        return thisSuggestions;\n    };\n    /**\n     * Algorithm to do fuzzy search\n     * from https://stackoverflow.com/questions/23305000/javascript-fuzzy-search-that-makes-sense\n     * @param {string} from\n     * @return {[]}\n     */\n    Utils.get_bigrams = function (from) {\n        var s = from.toLowerCase();\n        var v = new Array(s.length - 1);\n        var i;\n        var j;\n        var ref;\n        for (i = j = 0, ref = v.length; j <= ref; i = j += 1) {\n            v[i] = s.slice(i, i + 2);\n        }\n        return v;\n    };\n    Utils.isNumpadDelWithNumlockOnForEdgeOrIe = function (event) {\n        if (Utils.isBrowserEdge() || Utils.isBrowserIE()) {\n            return event.key === Utils.NUMPAD_DEL_NUMLOCK_ON_KEY &&\n                event.charCode === Utils.NUMPAD_DEL_NUMLOCK_ON_CHARCODE;\n        }\n        return false;\n    };\n    /**\n     * cell renderers are used in a few places. they bind to dom slightly differently to other cell renderes as they\n     * can return back strings (instead of html elemnt) in the getGui() method. common code placed here to handle that.\n     * @param {Promise<ICellRendererComp>} cellRendererPromise\n     * @param {HTMLElement} eTarget\n     */\n    Utils.bindCellRendererToHtmlElement = function (cellRendererPromise, eTarget) {\n        cellRendererPromise.then(function (cellRenderer) {\n            var gui = cellRenderer.getGui();\n            if (gui != null) {\n                if (typeof gui == 'object') {\n                    eTarget.appendChild(gui);\n                }\n                else {\n                    eTarget.innerHTML = gui;\n                }\n            }\n        });\n    };\n    Utils.PASSIVE_EVENTS = ['touchstart', 'touchend', 'touchmove', 'touchcancel'];\n    Utils.OUTSIDE_ANGULAR_EVENTS = ['mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    Utils.PRINTABLE_CHARACTERS = 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890!\"£$%^&*()_+-=[];\\'#,./\\\\|<>?:@~{}';\n    Utils.NUMPAD_DEL_NUMLOCK_ON_KEY = 'Del';\n    Utils.NUMPAD_DEL_NUMLOCK_ON_CHARCODE = 46;\n    Utils.doOnceFlags = {};\n    Utils.compose = function () {\n        var fns = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fns[_i] = arguments[_i];\n        }\n        return function (arg) { return fns.reduce(function (composed, f) { return f(composed); }, arg); };\n    };\n    Utils.decToHex = function (number, bytes) {\n        var hex = '';\n        for (var i = 0; i < bytes; i++) {\n            hex += String.fromCharCode(number & 0xff);\n            number >>>= 8;\n        }\n        return hex;\n    };\n    /**\n     * It encodes any string in UTF-8 format\n     * taken from https://github.com/mathiasbynens/utf8.js\n     * @param {string} s\n     * @returns {string}\n     */\n    Utils.utf8_encode = function (s) {\n        var stringFromCharCode = String.fromCharCode;\n        function ucs2decode(string) {\n            var output = [];\n            var counter = 0;\n            var length = string.length;\n            var value;\n            var extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                    // high surrogate, and there is a next character\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n                        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                    }\n                    else {\n                        // unmatched surrogate; only append this code unit, in case the next\n                        // code unit is the high surrogate of a surrogate pair\n                        output.push(value);\n                        counter--;\n                    }\n                }\n                else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function checkScalarValue(codePoint) {\n            if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n                throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n                    ' is not a scalar value');\n            }\n        }\n        function createByte(codePoint, shift) {\n            return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n        }\n        function encodeCodePoint(codePoint) {\n            if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n                return stringFromCharCode(codePoint);\n            }\n            var symbol = '';\n            if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n                symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n            }\n            else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n                checkScalarValue(codePoint);\n                symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n                symbol += createByte(codePoint, 6);\n            }\n            else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n                symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n                symbol += createByte(codePoint, 12);\n                symbol += createByte(codePoint, 6);\n            }\n            symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n            return symbol;\n        }\n        var codePoints = ucs2decode(s);\n        var length = codePoints.length;\n        var index = -1;\n        var codePoint;\n        var byteString = '';\n        while (++index < length) {\n            codePoint = codePoints[index];\n            byteString += encodeCodePoint(codePoint);\n        }\n        return byteString;\n    };\n    Utils.iconNameClassMap = {\n        columnGroupOpened: 'expanded',\n        columnGroupClosed: 'contracted',\n        columnSelectClosed: 'tree-closed',\n        columnSelectOpen: 'tree-open',\n        columnMovePin: 'pin',\n        columnMoveAdd: 'plus',\n        columnMoveHide: 'eye-slash',\n        columnMoveMove: 'arrows',\n        columnMoveLeft: 'left',\n        columnMoveRight: 'right',\n        columnMoveGroup: 'group',\n        columnMoveValue: 'aggregation',\n        columnMovePivot: 'pivot',\n        dropNotAllowed: 'not-allowed',\n        groupContracted: 'expanded',\n        groupExpanded: 'contracted',\n        chart: 'chart',\n        checkboxChecked: 'checkbox-checked',\n        checkboxUnchecked: 'checkbox-unchecked',\n        checkboxIndeterminate: 'checkbox-indeterminate',\n        checkboxCheckedReadOnly: 'checkbox-checked-readonly',\n        checkboxUncheckedReadOnly: 'checkbox-unchecked-readonly',\n        checkboxIndeterminateReadOnly: 'checkbox-indeterminate-readonly',\n        radioButtonOn: 'radio-button-on',\n        radioButtonOff: 'radio-button-off',\n        groupLoading: 'loading',\n        data: 'data',\n        menu: 'menu',\n        filter: 'filter',\n        columns: 'columns',\n        maximze: 'maximize',\n        minimize: 'minimize',\n        menuPin: 'pin',\n        menuValue: 'aggregation',\n        menuAddRowGroup: 'group',\n        menuRemoveRowGroup: 'group',\n        clipboardCopy: 'copy',\n        clipboardCut: 'cut',\n        clipboardPaste: 'paste',\n        pivotPanel: 'pivot',\n        rowGroupPanel: 'group',\n        valuePanel: 'aggregation',\n        columnDrag: 'column-drag',\n        rowDrag: 'row-drag',\n        save: 'save',\n        /** from @deprecated header, remove at some point */\n        sortAscending: 'asc',\n        sortDescending: 'desc',\n        sortUnSort: 'none'\n    };\n    Utils.string_similarity = function (str1, str2) {\n        if (str1.length > 0 && str2.length > 0) {\n            var pairs1 = Utils.get_bigrams(str1);\n            var pairs2 = Utils.get_bigrams(str2);\n            var union = pairs1.length + pairs2.length;\n            var hit_count = 0;\n            var j = void 0;\n            var len = void 0;\n            for (j = 0, len = pairs1.length; j < len; j++) {\n                var x = pairs1[j];\n                var k = void 0;\n                var len1 = void 0;\n                for (k = 0, len1 = pairs2.length; k < len1; k++) {\n                    var y = pairs2[k];\n                    if (x === y) {\n                        hit_count++;\n                    }\n                }\n            }\n            if (hit_count > 0) {\n                return (2.0 * hit_count) / union;\n            }\n        }\n        return 0.0;\n    };\n    return Utils;\n}());\nexports.Utils = Utils;\nvar NumberSequence = /** @class */ (function () {\n    function NumberSequence(initValue, step) {\n        if (initValue === void 0) { initValue = 0; }\n        if (step === void 0) { step = 1; }\n        this.nextValue = initValue;\n        this.step = step;\n    }\n    NumberSequence.prototype.next = function () {\n        var valToReturn = this.nextValue;\n        this.nextValue += this.step;\n        return valToReturn;\n    };\n    NumberSequence.prototype.peek = function () {\n        return this.nextValue;\n    };\n    NumberSequence.prototype.skip = function (count) {\n        this.nextValue += count;\n    };\n    return NumberSequence;\n}());\nexports.NumberSequence = NumberSequence;\nexports._ = Utils;\nvar PromiseStatus;\n(function (PromiseStatus) {\n    PromiseStatus[PromiseStatus[\"IN_PROGRESS\"] = 0] = \"IN_PROGRESS\";\n    PromiseStatus[PromiseStatus[\"RESOLVED\"] = 1] = \"RESOLVED\";\n})(PromiseStatus = exports.PromiseStatus || (exports.PromiseStatus = {}));\nvar Promise = /** @class */ (function () {\n    function Promise(callback) {\n        this.status = PromiseStatus.IN_PROGRESS;\n        this.resolution = null;\n        this.listOfWaiters = [];\n        callback(this.onDone.bind(this), this.onReject.bind(this));\n    }\n    Promise.all = function (toCombine) {\n        return new Promise(function (resolve) {\n            var combinedValues = [];\n            var remainingToResolve = toCombine.length;\n            toCombine.forEach(function (source, index) {\n                source.then(function (sourceResolved) {\n                    remainingToResolve--;\n                    combinedValues[index] = sourceResolved;\n                    if (remainingToResolve == 0) {\n                        resolve(combinedValues);\n                    }\n                });\n                combinedValues.push(null); // spl todo: review with Alberto - why?\n            });\n        });\n    };\n    Promise.resolve = function (value) {\n        return new Promise(function (resolve) { return resolve(value); });\n    };\n    Promise.external = function () {\n        var capture;\n        var promise = new Promise(function (resolve) {\n            capture = resolve;\n        });\n        return {\n            promise: promise,\n            resolve: function (value) {\n                capture(value);\n            }\n        };\n    };\n    Promise.prototype.then = function (func) {\n        if (this.status === PromiseStatus.IN_PROGRESS) {\n            this.listOfWaiters.push(func);\n        }\n        else {\n            func(this.resolution);\n        }\n    };\n    Promise.prototype.firstOneOnly = function (func) {\n        if (this.status === PromiseStatus.IN_PROGRESS) {\n            if (this.listOfWaiters.length === 0) {\n                this.listOfWaiters.push(func);\n            }\n        }\n        else {\n            func(this.resolution);\n        }\n    };\n    Promise.prototype.map = function (adapter) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.then(function (unmapped) {\n                resolve(adapter(unmapped));\n            });\n        });\n    };\n    Promise.prototype.resolveNow = function (ifNotResolvedValue, ifResolved) {\n        if (this.status == PromiseStatus.IN_PROGRESS) {\n            return ifNotResolvedValue;\n        }\n        return ifResolved(this.resolution);\n    };\n    Promise.prototype.onDone = function (value) {\n        this.status = PromiseStatus.RESOLVED;\n        this.resolution = value;\n        this.listOfWaiters.forEach(function (waiter) { return waiter(value); });\n    };\n    Promise.prototype.onReject = function (params) {\n        console.warn('TBI');\n    };\n    return Promise;\n}());\nexports.Promise = Promise;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar eventService_1 = require(\"./eventService\");\nvar constants_1 = require(\"./constants\");\nvar componentUtil_1 = require(\"./components/componentUtil\");\nvar gridApi_1 = require(\"./gridApi\");\nvar context_1 = require(\"./context/context\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar environment_1 = require(\"./environment\");\nvar propertyKeys_1 = require(\"./propertyKeys\");\nvar colDefUtil_1 = require(\"./components/colDefUtil\");\nvar eventKeys_1 = require(\"./eventKeys\");\nvar autoHeightCalculator_1 = require(\"./rendering/autoHeightCalculator\");\nvar sideBar_1 = require(\"./entities/sideBar\");\nvar DEFAULT_ROW_HEIGHT = 25;\nvar DEFAULT_DETAIL_ROW_HEIGHT = 300;\nvar DEFAULT_VIEWPORT_ROW_MODEL_PAGE_SIZE = 5;\nvar DEFAULT_VIEWPORT_ROW_MODEL_BUFFER_SIZE = 5;\nfunction isTrue(value) {\n    return value === true || value === 'true';\n}\nfunction zeroOrGreater(value, defaultValue) {\n    if (value >= 0) {\n        return value;\n    }\n    // zero gets returned if number is missing or the wrong type\n    return defaultValue;\n}\nfunction oneOrGreater(value, defaultValue) {\n    if (value > 0) {\n        return value;\n    }\n    // zero gets returned if number is missing or the wrong type\n    return defaultValue;\n}\nvar GridOptionsWrapper = /** @class */ (function () {\n    function GridOptionsWrapper() {\n        this.propertyEventService = new eventService_1.EventService();\n        this.domDataKey = '__AG_' + Math.random().toString();\n        this.layoutElements = [];\n    }\n    GridOptionsWrapper_1 = GridOptionsWrapper;\n    GridOptionsWrapper.prototype.agWire = function (gridApi, columnApi) {\n        this.gridOptions.api = gridApi;\n        this.gridOptions.columnApi = columnApi;\n        this.checkForDeprecated();\n        this.checkForViolations();\n    };\n    GridOptionsWrapper.prototype.destroy = function () {\n        // need to remove these, as we don't own the lifecycle of the gridOptions, we need to\n        // remove the references in case the user keeps the grid options, we want the rest\n        // of the grid to be picked up by the garbage collector\n        this.gridOptions.api = null;\n        this.gridOptions.columnApi = null;\n    };\n    GridOptionsWrapper.prototype.init = function () {\n        if (!(this.gridOptions.suppressPropertyNamesCheck === true)) {\n            this.checkGridOptionsProperties();\n            this.checkColumnDefProperties();\n        }\n        var async = this.useAsyncEvents();\n        this.eventService.addGlobalListener(this.globalEventHandler.bind(this), async);\n        if (this.isGroupSelectsChildren() && this.isSuppressParentsInRowNodes()) {\n            console.warn('ag-Grid: groupSelectsChildren does not work wth suppressParentsInRowNodes, this selection method needs the part in rowNode to work');\n        }\n        if (this.isGroupSelectsChildren()) {\n            if (!this.isRowSelectionMulti()) {\n                console.warn(\"ag-Grid: rowSelection must be 'multiple' for groupSelectsChildren to make sense\");\n            }\n            if (this.isRowModelServerSide()) {\n                console.warn('ag-Grid: group selects children is NOT support for Server Side Row Model. ' +\n                    'This is because the rows are lazy loaded, so selecting a group is not possible as' +\n                    'the grid has no way of knowing what the children are.');\n            }\n        }\n        if (this.isGroupRemoveSingleChildren() && this.isGroupHideOpenParents()) {\n            console.warn('ag-Grid: groupRemoveSingleChildren and groupHideOpenParents do not work with each other, you need to pick one. And don\\'t ask us how to us these together on our support forum either you will get the same answer!');\n        }\n        this.addEventListener(GridOptionsWrapper_1.PROP_DOM_LAYOUT, this.updateLayoutClasses.bind(this));\n    };\n    GridOptionsWrapper.prototype.checkColumnDefProperties = function () {\n        var _this = this;\n        if (this.gridOptions.columnDefs == null) {\n            return;\n        }\n        this.gridOptions.columnDefs.forEach(function (colDef) {\n            var userProperties = Object.getOwnPropertyNames(colDef);\n            var validProperties = colDefUtil_1.ColDefUtil.ALL_PROPERTIES.concat(colDefUtil_1.ColDefUtil.FRAMEWORK_PROPERTIES);\n            _this.checkProperties(userProperties, validProperties, validProperties, 'colDef', 'https://www.ag-grid.com/javascript-grid-column-properties/');\n        });\n    };\n    GridOptionsWrapper.prototype.checkGridOptionsProperties = function () {\n        var userProperties = Object.getOwnPropertyNames(this.gridOptions);\n        var validProperties = propertyKeys_1.PropertyKeys.ALL_PROPERTIES.concat(propertyKeys_1.PropertyKeys.FRAMEWORK_PROPERTIES);\n        Object.keys(eventKeys_1.Events).forEach(function (it) { return validProperties.push(componentUtil_1.ComponentUtil.getCallbackForEvent(eventKeys_1.Events[it])); });\n        var validPropertiesAndExceptions = validProperties.concat('api', 'columnApi');\n        this.checkProperties(userProperties, validPropertiesAndExceptions, validProperties, 'gridOptions', 'https://www.ag-grid.com/javascript-grid-properties/');\n    };\n    GridOptionsWrapper.prototype.checkProperties = function (userProperties, validPropertiesAndExceptions, validProperties, containerName, docsUrl) {\n        var invalidProperties = utils_1._.fuzzyCheckStrings(userProperties, validPropertiesAndExceptions, validProperties);\n        var invalidPropertyKeys = Object.keys(invalidProperties);\n        invalidPropertyKeys.forEach(function (invalidPropertyKey) {\n            var fuzzySuggestions = invalidProperties[invalidPropertyKey];\n            console.warn(\"ag-grid: invalid \" + containerName + \" property '\" + invalidPropertyKey + \"' did you mean any of these: \" + fuzzySuggestions.slice(0, 8).join(\",\"));\n        });\n        if (invalidPropertyKeys.length > 0) {\n            console.warn(\"ag-grid: to see all the valid \" + containerName + \" properties please check: \" + docsUrl);\n        }\n    };\n    // returns the dom data, or undefined if not found\n    GridOptionsWrapper.prototype.getDomData = function (element, key) {\n        var domData = element[this.domDataKey];\n        if (domData) {\n            return domData[key];\n        }\n        return;\n    };\n    GridOptionsWrapper.prototype.setDomData = function (element, key, value) {\n        var domData = element[this.domDataKey];\n        if (utils_1._.missing(domData)) {\n            domData = {};\n            element[this.domDataKey] = domData;\n        }\n        domData[key] = value;\n    };\n    GridOptionsWrapper.prototype.isEnterprise = function () {\n        return this.enterprise;\n    };\n    GridOptionsWrapper.prototype.isRowSelection = function () {\n        return this.gridOptions.rowSelection === \"single\" || this.gridOptions.rowSelection === \"multiple\";\n    };\n    GridOptionsWrapper.prototype.isRowDeselection = function () {\n        return isTrue(this.gridOptions.rowDeselection);\n    };\n    GridOptionsWrapper.prototype.isRowSelectionMulti = function () {\n        return this.gridOptions.rowSelection === 'multiple';\n    };\n    GridOptionsWrapper.prototype.isRowMultiSelectWithClick = function () {\n        return isTrue(this.gridOptions.rowMultiSelectWithClick);\n    };\n    GridOptionsWrapper.prototype.getContext = function () {\n        return this.gridOptions.context;\n    };\n    GridOptionsWrapper.prototype.isPivotMode = function () {\n        return isTrue(this.gridOptions.pivotMode);\n    };\n    GridOptionsWrapper.prototype.isPivotTotals = function () {\n        return isTrue(this.gridOptions.pivotTotals);\n    };\n    GridOptionsWrapper.prototype.getPivotColumnGroupTotals = function () {\n        return this.gridOptions.pivotColumnGroupTotals;\n    };\n    GridOptionsWrapper.prototype.getPivotRowTotals = function () {\n        return this.gridOptions.pivotRowTotals;\n    };\n    GridOptionsWrapper.prototype.isRowModelInfinite = function () {\n        return this.gridOptions.rowModelType === constants_1.Constants.ROW_MODEL_TYPE_INFINITE;\n    };\n    GridOptionsWrapper.prototype.isRowModelViewport = function () {\n        return this.gridOptions.rowModelType === constants_1.Constants.ROW_MODEL_TYPE_VIEWPORT;\n    };\n    GridOptionsWrapper.prototype.isRowModelServerSide = function () {\n        return this.gridOptions.rowModelType === constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE;\n    };\n    GridOptionsWrapper.prototype.isRowModelDefault = function () {\n        return utils_1._.missing(this.gridOptions.rowModelType) ||\n            this.gridOptions.rowModelType === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE ||\n            this.gridOptions.rowModelType === constants_1.Constants.DEPRECATED_ROW_MODEL_TYPE_NORMAL;\n    };\n    GridOptionsWrapper.prototype.isFullRowEdit = function () {\n        return this.gridOptions.editType === 'fullRow';\n    };\n    GridOptionsWrapper.prototype.isSuppressFocusAfterRefresh = function () {\n        return isTrue(this.gridOptions.suppressFocusAfterRefresh);\n    };\n    GridOptionsWrapper.prototype.isSuppressBrowserResizeObserver = function () {\n        return isTrue(this.gridOptions.suppressBrowserResizeObserver);\n    };\n    GridOptionsWrapper.prototype.isSuppressMaintainUnsortedOrder = function () {\n        return isTrue(this.gridOptions.suppressMaintainUnsortedOrder);\n    };\n    GridOptionsWrapper.prototype.isShowToolPanel = function () {\n        return isTrue(this.gridOptions.sideBar && Array.isArray(this.getSideBar().toolPanels));\n    };\n    GridOptionsWrapper.prototype.getSideBar = function () {\n        return this.gridOptions.sideBar;\n    };\n    GridOptionsWrapper.prototype.isSuppressTouch = function () {\n        return isTrue(this.gridOptions.suppressTouch);\n    };\n    GridOptionsWrapper.prototype.isSuppressRowTransform = function () {\n        return isTrue(this.gridOptions.suppressRowTransform);\n    };\n    GridOptionsWrapper.prototype.isSuppressSetColumnStateEvents = function () {\n        return isTrue(this.gridOptions.suppressSetColumnStateEvents);\n    };\n    GridOptionsWrapper.prototype.useAsyncEvents = function () {\n        return !isTrue(this.gridOptions.suppressAsyncEvents);\n    };\n    GridOptionsWrapper.prototype.isEnableCellChangeFlash = function () {\n        return isTrue(this.gridOptions.enableCellChangeFlash);\n    };\n    GridOptionsWrapper.prototype.isGroupSelectsChildren = function () {\n        var result = isTrue(this.gridOptions.groupSelectsChildren);\n        if (result && this.isTreeData()) {\n            console.warn('ag-Grid: groupSelectsChildren does not work with tree data');\n            return false;\n        }\n        return result;\n    };\n    GridOptionsWrapper.prototype.isSuppressRowHoverHighlight = function () {\n        return isTrue(this.gridOptions.suppressRowHoverHighlight);\n    };\n    GridOptionsWrapper.prototype.isGroupSelectsFiltered = function () {\n        return isTrue(this.gridOptions.groupSelectsFiltered);\n    };\n    GridOptionsWrapper.prototype.isGroupHideOpenParents = function () {\n        return isTrue(this.gridOptions.groupHideOpenParents);\n    };\n    // if we are doing hideOpenParents, then we always have groupMultiAutoColumn, otherwise hideOpenParents would not work\n    GridOptionsWrapper.prototype.isGroupMultiAutoColumn = function () {\n        return isTrue(this.gridOptions.groupMultiAutoColumn) || isTrue(this.gridOptions.groupHideOpenParents);\n    };\n    GridOptionsWrapper.prototype.isGroupRemoveSingleChildren = function () {\n        return isTrue(this.gridOptions.groupRemoveSingleChildren);\n    };\n    GridOptionsWrapper.prototype.isGroupRemoveLowestSingleChildren = function () {\n        return isTrue(this.gridOptions.groupRemoveLowestSingleChildren);\n    };\n    GridOptionsWrapper.prototype.isGroupIncludeFooter = function () {\n        return isTrue(this.gridOptions.groupIncludeFooter);\n    };\n    GridOptionsWrapper.prototype.isGroupIncludeTotalFooter = function () {\n        return isTrue(this.gridOptions.groupIncludeTotalFooter);\n    };\n    GridOptionsWrapper.prototype.isGroupSuppressBlankHeader = function () {\n        return isTrue(this.gridOptions.groupSuppressBlankHeader);\n    };\n    GridOptionsWrapper.prototype.isSuppressRowClickSelection = function () {\n        return isTrue(this.gridOptions.suppressRowClickSelection);\n    };\n    GridOptionsWrapper.prototype.isSuppressCellSelection = function () {\n        return isTrue(this.gridOptions.suppressCellSelection);\n    };\n    GridOptionsWrapper.prototype.isSuppressMultiSort = function () {\n        return isTrue(this.gridOptions.suppressMultiSort);\n    };\n    GridOptionsWrapper.prototype.isMultiSortKeyCtrl = function () {\n        return this.gridOptions.multiSortKey === 'ctrl';\n    };\n    GridOptionsWrapper.prototype.isGroupSuppressAutoColumn = function () {\n        return isTrue(this.gridOptions.groupSuppressAutoColumn);\n    };\n    GridOptionsWrapper.prototype.isSuppressDragLeaveHidesColumns = function () {\n        return isTrue(this.gridOptions.suppressDragLeaveHidesColumns);\n    };\n    GridOptionsWrapper.prototype.isSuppressScrollOnNewData = function () {\n        return isTrue(this.gridOptions.suppressScrollOnNewData);\n    };\n    GridOptionsWrapper.prototype.isRowDragManaged = function () {\n        return isTrue(this.gridOptions.rowDragManaged);\n    };\n    GridOptionsWrapper.prototype.isSuppressRowDrag = function () {\n        return isTrue(this.gridOptions.suppressRowDrag);\n    };\n    // returns either 'print', 'autoHeight' or 'normal' (normal is the default)\n    GridOptionsWrapper.prototype.getDomLayout = function () {\n        var _this = this;\n        var domLayout = this.gridOptions.domLayout;\n        if (domLayout === constants_1.Constants.DOM_LAYOUT_PRINT\n            || domLayout === constants_1.Constants.DOM_LAYOUT_AUTO_HEIGHT\n            || domLayout === constants_1.Constants.DOM_LAYOUT_NORMAL) {\n            return domLayout;\n        }\n        else if (domLayout === null || domLayout === undefined) {\n            return constants_1.Constants.DOM_LAYOUT_NORMAL;\n        }\n        else {\n            utils_1._.doOnce(function () { return console.warn(\"ag-Grid: \" + _this.gridOptions.domLayout + \" is not valid for DOM Layout, valid values are \" + constants_1.Constants.DOM_LAYOUT_NORMAL + \", \" + constants_1.Constants.DOM_LAYOUT_AUTO_HEIGHT + \" and \" + constants_1.Constants.DOM_LAYOUT_PRINT); }, 'warn about dom layout values');\n            return constants_1.Constants.DOM_LAYOUT_NORMAL;\n        }\n    };\n    GridOptionsWrapper.prototype.isSuppressHorizontalScroll = function () {\n        return isTrue(this.gridOptions.suppressHorizontalScroll);\n    };\n    GridOptionsWrapper.prototype.isSuppressMaxRenderedRowRestriction = function () {\n        return isTrue(this.gridOptions.suppressMaxRenderedRowRestriction);\n    };\n    GridOptionsWrapper.prototype.isExcludeChildrenWhenTreeDataFiltering = function () {\n        return isTrue(this.gridOptions.excludeChildrenWhenTreeDataFiltering);\n    };\n    GridOptionsWrapper.prototype.isAlwaysShowVerticalScroll = function () {\n        return isTrue(this.gridOptions.alwaysShowVerticalScroll);\n    };\n    GridOptionsWrapper.prototype.isSuppressLoadingOverlay = function () {\n        return isTrue(this.gridOptions.suppressLoadingOverlay);\n    };\n    GridOptionsWrapper.prototype.isSuppressNoRowsOverlay = function () {\n        return isTrue(this.gridOptions.suppressNoRowsOverlay);\n    };\n    GridOptionsWrapper.prototype.isSuppressFieldDotNotation = function () {\n        return isTrue(this.gridOptions.suppressFieldDotNotation);\n    };\n    GridOptionsWrapper.prototype.getPinnedTopRowData = function () {\n        return this.gridOptions.pinnedTopRowData;\n    };\n    GridOptionsWrapper.prototype.getPinnedBottomRowData = function () {\n        return this.gridOptions.pinnedBottomRowData;\n    };\n    GridOptionsWrapper.prototype.isFunctionsPassive = function () {\n        return isTrue(this.gridOptions.functionsPassive);\n    };\n    GridOptionsWrapper.prototype.isSuppressTabbing = function () {\n        return isTrue(this.gridOptions.suppressTabbing);\n    };\n    GridOptionsWrapper.prototype.isSuppressChangeDetection = function () {\n        return isTrue(this.gridOptions.suppressChangeDetection);\n    };\n    GridOptionsWrapper.prototype.isSuppressAnimationFrame = function () {\n        return isTrue(this.gridOptions.suppressAnimationFrame);\n    };\n    GridOptionsWrapper.prototype.getQuickFilterText = function () {\n        return this.gridOptions.quickFilterText;\n    };\n    GridOptionsWrapper.prototype.isCacheQuickFilter = function () {\n        return isTrue(this.gridOptions.cacheQuickFilter);\n    };\n    GridOptionsWrapper.prototype.isUnSortIcon = function () {\n        return isTrue(this.gridOptions.unSortIcon);\n    };\n    GridOptionsWrapper.prototype.isSuppressMenuHide = function () {\n        return isTrue(this.gridOptions.suppressMenuHide);\n    };\n    GridOptionsWrapper.prototype.isEnterMovesDownAfterEdit = function () {\n        return isTrue(this.gridOptions.enterMovesDownAfterEdit);\n    };\n    GridOptionsWrapper.prototype.isEnterMovesDown = function () {\n        return isTrue(this.gridOptions.enterMovesDown);\n    };\n    GridOptionsWrapper.prototype.getRowStyle = function () {\n        return this.gridOptions.rowStyle;\n    };\n    GridOptionsWrapper.prototype.getRowClass = function () {\n        return this.gridOptions.rowClass;\n    };\n    GridOptionsWrapper.prototype.getRowStyleFunc = function () {\n        return this.gridOptions.getRowStyle;\n    };\n    GridOptionsWrapper.prototype.getRowClassFunc = function () {\n        return this.gridOptions.getRowClass;\n    };\n    GridOptionsWrapper.prototype.rowClassRules = function () {\n        return this.gridOptions.rowClassRules;\n    };\n    GridOptionsWrapper.prototype.getCreateChartContainerFunc = function () {\n        return this.gridOptions.createChartContainer;\n    };\n    GridOptionsWrapper.prototype.getPopupParent = function () {\n        return this.gridOptions.popupParent;\n    };\n    GridOptionsWrapper.prototype.getBlockLoadDebounceMillis = function () {\n        return this.gridOptions.blockLoadDebounceMillis;\n    };\n    GridOptionsWrapper.prototype.getPostProcessPopupFunc = function () {\n        return this.gridOptions.postProcessPopup;\n    };\n    GridOptionsWrapper.prototype.getDoesDataFlowerFunc = function () {\n        return this.gridOptions.doesDataFlower;\n    };\n    GridOptionsWrapper.prototype.getPaginationNumberFormatterFunc = function () {\n        return this.gridOptions.paginationNumberFormatter;\n    };\n    GridOptionsWrapper.prototype.getChildCountFunc = function () {\n        return this.gridOptions.getChildCount;\n    };\n    GridOptionsWrapper.prototype.getDefaultGroupSortComparator = function () {\n        return this.gridOptions.defaultGroupSortComparator;\n    };\n    GridOptionsWrapper.prototype.getIsFullWidthCellFunc = function () {\n        return this.gridOptions.isFullWidthCell;\n    };\n    GridOptionsWrapper.prototype.getFullWidthCellRendererParams = function () {\n        return this.gridOptions.fullWidthCellRendererParams;\n    };\n    GridOptionsWrapper.prototype.isEmbedFullWidthRows = function () {\n        return isTrue(this.gridOptions.deprecatedEmbedFullWidthRows);\n    };\n    GridOptionsWrapper.prototype.getSuppressKeyboardEventFunc = function () {\n        return this.gridOptions.suppressKeyboardEvent;\n    };\n    GridOptionsWrapper.prototype.getBusinessKeyForNodeFunc = function () {\n        return this.gridOptions.getBusinessKeyForNode;\n    };\n    GridOptionsWrapper.prototype.getApi = function () {\n        return this.gridOptions.api;\n    };\n    GridOptionsWrapper.prototype.getColumnApi = function () {\n        return this.gridOptions.columnApi;\n    };\n    GridOptionsWrapper.prototype.isDeltaRowDataMode = function () {\n        return isTrue(this.gridOptions.deltaRowDataMode);\n    };\n    GridOptionsWrapper.prototype.isDeltaColumnMode = function () {\n        return isTrue(this.gridOptions.deltaColumnMode);\n    };\n    GridOptionsWrapper.prototype.isEnsureDomOrder = function () {\n        return isTrue(this.gridOptions.ensureDomOrder);\n    };\n    GridOptionsWrapper.prototype.isEnableCharts = function () {\n        if (isTrue((this.gridOptions.enableCharts))) {\n            if (!this.context.isModuleRegistered(\"chartsModule\" /* ChartsModule */)) {\n                utils_1._.doOnce(function () {\n                    console.warn('ag-grid: Charts is enabled but the Charts Module has not been included.');\n                }, 'ChartsModuleCheck');\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    GridOptionsWrapper.prototype.getColResizeDefault = function () {\n        return this.gridOptions.colResizeDefault;\n    };\n    GridOptionsWrapper.prototype.isSingleClickEdit = function () {\n        return isTrue(this.gridOptions.singleClickEdit);\n    };\n    GridOptionsWrapper.prototype.isSuppressClickEdit = function () {\n        return isTrue(this.gridOptions.suppressClickEdit);\n    };\n    GridOptionsWrapper.prototype.isStopEditingWhenGridLosesFocus = function () {\n        return isTrue(this.gridOptions.stopEditingWhenGridLosesFocus);\n    };\n    GridOptionsWrapper.prototype.getGroupDefaultExpanded = function () {\n        return this.gridOptions.groupDefaultExpanded;\n    };\n    GridOptionsWrapper.prototype.getMaxConcurrentDatasourceRequests = function () {\n        return this.gridOptions.maxConcurrentDatasourceRequests;\n    };\n    GridOptionsWrapper.prototype.getMaxBlocksInCache = function () {\n        return this.gridOptions.maxBlocksInCache;\n    };\n    GridOptionsWrapper.prototype.getCacheOverflowSize = function () {\n        return this.gridOptions.cacheOverflowSize;\n    };\n    GridOptionsWrapper.prototype.getPaginationPageSize = function () {\n        return this.gridOptions.paginationPageSize;\n    };\n    GridOptionsWrapper.prototype.getCacheBlockSize = function () {\n        return this.gridOptions.cacheBlockSize;\n    };\n    GridOptionsWrapper.prototype.getInfiniteInitialRowCount = function () {\n        return this.gridOptions.infiniteInitialRowCount;\n    };\n    GridOptionsWrapper.prototype.isPurgeClosedRowNodes = function () {\n        return isTrue(this.gridOptions.purgeClosedRowNodes);\n    };\n    GridOptionsWrapper.prototype.isSuppressPaginationPanel = function () {\n        return isTrue(this.gridOptions.suppressPaginationPanel);\n    };\n    GridOptionsWrapper.prototype.getRowData = function () {\n        return this.gridOptions.rowData;\n    };\n    // this property is different - we never allow groupUseEntireRow if in pivot mode,\n    // as otherwise we don't see the pivot values.\n    GridOptionsWrapper.prototype.isGroupUseEntireRow = function (pivotMode) {\n        return pivotMode ? false : isTrue(this.gridOptions.groupUseEntireRow);\n    };\n    GridOptionsWrapper.prototype.isEnableRtl = function () {\n        return isTrue(this.gridOptions.enableRtl);\n    };\n    GridOptionsWrapper.prototype.getAutoGroupColumnDef = function () {\n        return this.gridOptions.autoGroupColumnDef;\n    };\n    GridOptionsWrapper.prototype.isGroupSuppressRow = function () {\n        return isTrue(this.gridOptions.groupSuppressRow);\n    };\n    GridOptionsWrapper.prototype.getRowGroupPanelShow = function () {\n        return this.gridOptions.rowGroupPanelShow;\n    };\n    GridOptionsWrapper.prototype.getPivotPanelShow = function () {\n        return this.gridOptions.pivotPanelShow;\n    };\n    GridOptionsWrapper.prototype.isAngularCompileRows = function () {\n        return isTrue(this.gridOptions.angularCompileRows);\n    };\n    GridOptionsWrapper.prototype.isAngularCompileFilters = function () {\n        return isTrue(this.gridOptions.angularCompileFilters);\n    };\n    GridOptionsWrapper.prototype.isAngularCompileHeaders = function () {\n        return isTrue(this.gridOptions.angularCompileHeaders);\n    };\n    GridOptionsWrapper.prototype.isDebug = function () {\n        return isTrue(this.gridOptions.debug);\n    };\n    GridOptionsWrapper.prototype.getColumnDefs = function () {\n        return this.gridOptions.columnDefs;\n    };\n    GridOptionsWrapper.prototype.getColumnTypes = function () {\n        return this.gridOptions.columnTypes;\n    };\n    GridOptionsWrapper.prototype.getDatasource = function () {\n        return this.gridOptions.datasource;\n    };\n    GridOptionsWrapper.prototype.getViewportDatasource = function () {\n        return this.gridOptions.viewportDatasource;\n    };\n    GridOptionsWrapper.prototype.getServerSideDatasource = function () {\n        return this.gridOptions.serverSideDatasource;\n    };\n    GridOptionsWrapper.prototype.isAccentedSort = function () {\n        return isTrue(this.gridOptions.accentedSort);\n    };\n    GridOptionsWrapper.prototype.isEnableBrowserTooltips = function () {\n        return isTrue(this.gridOptions.enableBrowserTooltips);\n    };\n    GridOptionsWrapper.prototype.isEnableCellExpressions = function () {\n        return isTrue(this.gridOptions.enableCellExpressions);\n    };\n    GridOptionsWrapper.prototype.isEnableGroupEdit = function () {\n        return isTrue(this.gridOptions.enableGroupEdit);\n    };\n    GridOptionsWrapper.prototype.isSuppressMiddleClickScrolls = function () {\n        return isTrue(this.gridOptions.suppressMiddleClickScrolls);\n    };\n    GridOptionsWrapper.prototype.isSuppressPreventDefaultOnMouseWheel = function () {\n        return isTrue(this.gridOptions.suppressPreventDefaultOnMouseWheel);\n    };\n    GridOptionsWrapper.prototype.isSuppressColumnVirtualisation = function () {\n        return isTrue(this.gridOptions.suppressColumnVirtualisation);\n    };\n    GridOptionsWrapper.prototype.isSuppressContextMenu = function () {\n        return isTrue(this.gridOptions.suppressContextMenu);\n    };\n    GridOptionsWrapper.prototype.isAllowContextMenuWithControlKey = function () {\n        return isTrue(this.gridOptions.allowContextMenuWithControlKey);\n    };\n    GridOptionsWrapper.prototype.isSuppressCopyRowsToClipboard = function () {\n        return isTrue(this.gridOptions.suppressCopyRowsToClipboard);\n    };\n    GridOptionsWrapper.prototype.isCopyHeadersToClipboard = function () {\n        return isTrue(this.gridOptions.copyHeadersToClipboard);\n    };\n    GridOptionsWrapper.prototype.isSuppressClipboardPaste = function () {\n        return isTrue(this.gridOptions.suppressClipboardPaste);\n    };\n    GridOptionsWrapper.prototype.isPagination = function () {\n        return isTrue(this.gridOptions.pagination);\n    };\n    GridOptionsWrapper.prototype.isSuppressEnterpriseResetOnNewColumns = function () {\n        return isTrue(this.gridOptions.suppressEnterpriseResetOnNewColumns);\n    };\n    GridOptionsWrapper.prototype.getProcessDataFromClipboardFunc = function () {\n        return this.gridOptions.processDataFromClipboard;\n    };\n    GridOptionsWrapper.prototype.getBatchUpdateWaitMillis = function () {\n        return utils_1._.exists(this.gridOptions.batchUpdateWaitMillis) ? this.gridOptions.batchUpdateWaitMillis : constants_1.Constants.BATCH_WAIT_MILLIS;\n    };\n    GridOptionsWrapper.prototype.isSuppressMovableColumns = function () {\n        return isTrue(this.gridOptions.suppressMovableColumns);\n    };\n    GridOptionsWrapper.prototype.isAnimateRows = function () {\n        // never allow animating if enforcing the row order\n        if (this.isEnsureDomOrder()) {\n            return false;\n        }\n        return isTrue(this.gridOptions.animateRows);\n    };\n    GridOptionsWrapper.prototype.isSuppressColumnMoveAnimation = function () {\n        return isTrue(this.gridOptions.suppressColumnMoveAnimation);\n    };\n    GridOptionsWrapper.prototype.isSuppressAggFuncInHeader = function () {\n        return isTrue(this.gridOptions.suppressAggFuncInHeader);\n    };\n    GridOptionsWrapper.prototype.isSuppressAggAtRootLevel = function () {\n        return isTrue(this.gridOptions.suppressAggAtRootLevel);\n    };\n    GridOptionsWrapper.prototype.isEnableRangeSelection = function () {\n        return this.enterprise && isTrue(this.gridOptions.enableRangeSelection);\n    };\n    GridOptionsWrapper.prototype.isEnableRangeHandle = function () {\n        return isTrue(this.gridOptions.enableRangeHandle);\n    };\n    GridOptionsWrapper.prototype.isEnableFillHandle = function () {\n        return isTrue(this.gridOptions.enableFillHandle);\n    };\n    GridOptionsWrapper.prototype.isSuppressMultiRangeSelection = function () {\n        return isTrue(this.gridOptions.suppressMultiRangeSelection);\n    };\n    GridOptionsWrapper.prototype.isPaginationAutoPageSize = function () {\n        return isTrue(this.gridOptions.paginationAutoPageSize);\n    };\n    GridOptionsWrapper.prototype.isRememberGroupStateWhenNewData = function () {\n        return isTrue(this.gridOptions.rememberGroupStateWhenNewData);\n    };\n    GridOptionsWrapper.prototype.getIcons = function () {\n        return this.gridOptions.icons;\n    };\n    GridOptionsWrapper.prototype.getAggFuncs = function () {\n        return this.gridOptions.aggFuncs;\n    };\n    GridOptionsWrapper.prototype.getSortingOrder = function () {\n        return this.gridOptions.sortingOrder;\n    };\n    GridOptionsWrapper.prototype.getAlignedGrids = function () {\n        return this.gridOptions.alignedGrids;\n    };\n    GridOptionsWrapper.prototype.isMasterDetail = function () {\n        var _this = this;\n        var usingMasterDetail = isTrue(this.gridOptions.masterDetail);\n        utils_1._.doOnce(function () {\n            if (usingMasterDetail && !_this.enterprise) {\n                console.warn('ag-grid: Master Detail is an Enterprise feature of ag-Grid.');\n            }\n        }, 'MasterDetailEnterpriseCheck');\n        return usingMasterDetail && this.enterprise;\n    };\n    GridOptionsWrapper.prototype.getIsRowMasterFunc = function () {\n        return this.gridOptions.isRowMaster;\n    };\n    GridOptionsWrapper.prototype.getIsRowSelectableFunc = function () {\n        return this.gridOptions.isRowSelectable;\n    };\n    GridOptionsWrapper.prototype.getGroupRowRendererParams = function () {\n        return this.gridOptions.groupRowRendererParams;\n    };\n    GridOptionsWrapper.prototype.getOverlayLoadingTemplate = function () {\n        return this.gridOptions.overlayLoadingTemplate;\n    };\n    GridOptionsWrapper.prototype.getOverlayNoRowsTemplate = function () {\n        return this.gridOptions.overlayNoRowsTemplate;\n    };\n    GridOptionsWrapper.prototype.isSuppressAutoSize = function () {\n        return isTrue(this.gridOptions.suppressAutoSize);\n    };\n    GridOptionsWrapper.prototype.isEnableCellTextSelection = function () {\n        return isTrue(this.gridOptions.enableCellTextSelection);\n    };\n    GridOptionsWrapper.prototype.isSuppressParentsInRowNodes = function () {\n        return isTrue(this.gridOptions.suppressParentsInRowNodes);\n    };\n    GridOptionsWrapper.prototype.isFunctionsReadOnly = function () {\n        return isTrue(this.gridOptions.functionsReadOnly);\n    };\n    GridOptionsWrapper.prototype.isFloatingFilter = function () {\n        return this.gridOptions.floatingFilter;\n    };\n    GridOptionsWrapper.prototype.isEnableCellTextSelect = function () {\n        return isTrue(this.gridOptions.enableCellTextSelection);\n    };\n    GridOptionsWrapper.prototype.isEnableOldSetFilterModel = function () {\n        return isTrue(this.gridOptions.enableOldSetFilterModel);\n    };\n    GridOptionsWrapper.prototype.getDefaultColDef = function () {\n        return this.gridOptions.defaultColDef;\n    };\n    GridOptionsWrapper.prototype.getDefaultColGroupDef = function () {\n        return this.gridOptions.defaultColGroupDef;\n    };\n    GridOptionsWrapper.prototype.getDefaultExportParams = function () {\n        return this.gridOptions.defaultExportParams;\n    };\n    GridOptionsWrapper.prototype.isSuppressCsvExport = function () {\n        return isTrue(this.gridOptions.suppressCsvExport);\n    };\n    GridOptionsWrapper.prototype.isAllowShowChangeAfterFilter = function () {\n        return isTrue(this.gridOptions.allowShowChangeAfterFilter);\n    };\n    GridOptionsWrapper.prototype.isSuppressExcelExport = function () {\n        return isTrue(this.gridOptions.suppressExcelExport);\n    };\n    GridOptionsWrapper.prototype.isSuppressMakeColumnVisibleAfterUnGroup = function () {\n        return isTrue(this.gridOptions.suppressMakeColumnVisibleAfterUnGroup);\n    };\n    GridOptionsWrapper.prototype.getNodeChildDetailsFunc = function () {\n        return this.gridOptions.getNodeChildDetails;\n    };\n    GridOptionsWrapper.prototype.getDataPathFunc = function () {\n        return this.gridOptions.getDataPath;\n    };\n    GridOptionsWrapper.prototype.getIsServerSideGroupFunc = function () {\n        return this.gridOptions.isServerSideGroup;\n    };\n    GridOptionsWrapper.prototype.getServerSideGroupKeyFunc = function () {\n        return this.gridOptions.getServerSideGroupKey;\n    };\n    GridOptionsWrapper.prototype.getGroupRowAggNodesFunc = function () {\n        return this.gridOptions.groupRowAggNodes;\n    };\n    GridOptionsWrapper.prototype.getContextMenuItemsFunc = function () {\n        return this.gridOptions.getContextMenuItems;\n    };\n    GridOptionsWrapper.prototype.getMainMenuItemsFunc = function () {\n        return this.gridOptions.getMainMenuItems;\n    };\n    GridOptionsWrapper.prototype.getChartToolbarItemsFunc = function () {\n        return this.gridOptions.getChartToolbarItems;\n    };\n    GridOptionsWrapper.prototype.getRowNodeIdFunc = function () {\n        return this.gridOptions.getRowNodeId;\n    };\n    GridOptionsWrapper.prototype.getNavigateToNextCellFunc = function () {\n        return this.gridOptions.navigateToNextCell;\n    };\n    GridOptionsWrapper.prototype.getTabToNextCellFunc = function () {\n        return this.gridOptions.tabToNextCell;\n    };\n    GridOptionsWrapper.prototype.isTreeData = function () {\n        var _this = this;\n        var usingTreeData = isTrue(this.gridOptions.treeData);\n        utils_1._.doOnce(function () {\n            if (usingTreeData && !_this.enterprise) {\n                console.warn('ag-grid: TreeData is an Enterprise feature of ag-Grid.');\n            }\n        }, 'TreeDataEnterpriseCheck');\n        return usingTreeData;\n    };\n    GridOptionsWrapper.prototype.isValueCache = function () {\n        return isTrue(this.gridOptions.valueCache);\n    };\n    GridOptionsWrapper.prototype.isValueCacheNeverExpires = function () {\n        return isTrue(this.gridOptions.valueCacheNeverExpires);\n    };\n    GridOptionsWrapper.prototype.isDeltaSort = function () {\n        return isTrue(this.gridOptions.deltaSort);\n    };\n    GridOptionsWrapper.prototype.isAggregateOnlyChangedColumns = function () {\n        return isTrue(this.gridOptions.aggregateOnlyChangedColumns);\n    };\n    GridOptionsWrapper.prototype.getProcessSecondaryColDefFunc = function () {\n        return this.gridOptions.processSecondaryColDef;\n    };\n    GridOptionsWrapper.prototype.getProcessSecondaryColGroupDefFunc = function () {\n        return this.gridOptions.processSecondaryColGroupDef;\n    };\n    GridOptionsWrapper.prototype.getSendToClipboardFunc = function () {\n        return this.gridOptions.sendToClipboard;\n    };\n    GridOptionsWrapper.prototype.getProcessRowPostCreateFunc = function () {\n        return this.gridOptions.processRowPostCreate;\n    };\n    GridOptionsWrapper.prototype.getProcessCellForClipboardFunc = function () {\n        return this.gridOptions.processCellForClipboard;\n    };\n    GridOptionsWrapper.prototype.getProcessHeaderForClipboardFunc = function () {\n        return this.gridOptions.processHeaderForClipboard;\n    };\n    GridOptionsWrapper.prototype.getProcessCellFromClipboardFunc = function () {\n        return this.gridOptions.processCellFromClipboard;\n    };\n    GridOptionsWrapper.prototype.getViewportRowModelPageSize = function () {\n        return oneOrGreater(this.gridOptions.viewportRowModelPageSize, DEFAULT_VIEWPORT_ROW_MODEL_PAGE_SIZE);\n    };\n    GridOptionsWrapper.prototype.getViewportRowModelBufferSize = function () {\n        return zeroOrGreater(this.gridOptions.viewportRowModelBufferSize, DEFAULT_VIEWPORT_ROW_MODEL_BUFFER_SIZE);\n    };\n    // public getCellRenderers(): {[key: string]: {new(): ICellRenderer} | ICellRendererFunc} { return this.gridOptions.cellRenderers; }\n    // public getCellEditors(): {[key: string]: {new(): ICellEditor}} { return this.gridOptions.cellEditors; }\n    GridOptionsWrapper.prototype.isServerSideSortingAlwaysResets = function () {\n        return isTrue(this.gridOptions.serverSideSortingAlwaysResets);\n    };\n    GridOptionsWrapper.prototype.getPostSortFunc = function () {\n        return this.gridOptions.postSort;\n    };\n    GridOptionsWrapper.prototype.getProcessChartOptionsFunc = function () {\n        return this.gridOptions.processChartOptions;\n    };\n    GridOptionsWrapper.prototype.getClipboardDeliminator = function () {\n        return utils_1._.exists(this.gridOptions.clipboardDeliminator) ? this.gridOptions.clipboardDeliminator : '\\t';\n    };\n    GridOptionsWrapper.prototype.setProperty = function (key, value) {\n        var gridOptionsNoType = this.gridOptions;\n        var previousValue = gridOptionsNoType[key];\n        if (previousValue !== value) {\n            gridOptionsNoType[key] = value;\n            var event_1 = {\n                type: key,\n                currentValue: value,\n                previousValue: previousValue\n            };\n            this.propertyEventService.dispatchEvent(event_1);\n        }\n    };\n    // this logic is repeated in lots of places. any element that had different CSS\n    // dependent on the layout needs to have the layout class added ot it.\n    GridOptionsWrapper.prototype.addLayoutElement = function (element) {\n        this.layoutElements.push(element);\n        this.updateLayoutClasses();\n    };\n    GridOptionsWrapper.prototype.updateLayoutClasses = function () {\n        var domLayout = this.getDomLayout();\n        var domLayoutAutoHeight = domLayout === constants_1.Constants.DOM_LAYOUT_AUTO_HEIGHT;\n        var domLayoutPrint = domLayout === constants_1.Constants.DOM_LAYOUT_PRINT;\n        var domLayoutNormal = domLayout === constants_1.Constants.DOM_LAYOUT_NORMAL;\n        this.layoutElements.forEach(function (e) {\n            utils_1._.addOrRemoveCssClass(e, 'ag-layout-auto-height', domLayoutAutoHeight);\n            utils_1._.addOrRemoveCssClass(e, 'ag-layout-normal', domLayoutNormal);\n            utils_1._.addOrRemoveCssClass(e, 'ag-layout-print', domLayoutPrint);\n        });\n    };\n    GridOptionsWrapper.prototype.addEventListener = function (key, listener) {\n        GridOptionsWrapper_1.checkEventDeprecation(key);\n        this.propertyEventService.addEventListener(key, listener);\n    };\n    GridOptionsWrapper.checkEventDeprecation = function (eventName) {\n        if (eventName === 'floatingRowDataChanged') {\n            console.warn('ag-Grid: floatingRowDataChanged is now called pinnedRowDataChanged');\n        }\n    };\n    GridOptionsWrapper.prototype.removeEventListener = function (key, listener) {\n        this.propertyEventService.removeEventListener(key, listener);\n    };\n    GridOptionsWrapper.prototype.getAutoSizePadding = function () {\n        return this.gridOptions.autoSizePadding && this.gridOptions.autoSizePadding > 0 ? this.gridOptions.autoSizePadding : 20;\n    };\n    // properties\n    GridOptionsWrapper.prototype.getHeaderHeight = function () {\n        if (typeof this.gridOptions.headerHeight === 'number') {\n            return this.gridOptions.headerHeight;\n        }\n        return this.specialForNewMaterial(25, 'headerHeight');\n    };\n    GridOptionsWrapper.prototype.getFloatingFiltersHeight = function () {\n        if (typeof this.gridOptions.floatingFiltersHeight === 'number') {\n            return this.gridOptions.floatingFiltersHeight;\n        }\n        return this.specialForNewMaterial(25, 'headerHeight');\n    };\n    GridOptionsWrapper.prototype.getGroupHeaderHeight = function () {\n        if (typeof this.gridOptions.groupHeaderHeight === 'number') {\n            return this.gridOptions.groupHeaderHeight;\n        }\n        return this.getHeaderHeight();\n    };\n    GridOptionsWrapper.prototype.getPivotHeaderHeight = function () {\n        if (typeof this.gridOptions.pivotHeaderHeight === 'number') {\n            return this.gridOptions.pivotHeaderHeight;\n        }\n        return this.getHeaderHeight();\n    };\n    GridOptionsWrapper.prototype.getPivotGroupHeaderHeight = function () {\n        if (typeof this.gridOptions.pivotGroupHeaderHeight === 'number') {\n            return this.gridOptions.pivotGroupHeaderHeight;\n        }\n        return this.getGroupHeaderHeight();\n    };\n    GridOptionsWrapper.prototype.isExternalFilterPresent = function () {\n        if (typeof this.gridOptions.isExternalFilterPresent === 'function') {\n            return this.gridOptions.isExternalFilterPresent();\n        }\n        return false;\n    };\n    GridOptionsWrapper.prototype.doesExternalFilterPass = function (node) {\n        if (typeof this.gridOptions.doesExternalFilterPass === 'function') {\n            return this.gridOptions.doesExternalFilterPass(node);\n        }\n        return false;\n    };\n    GridOptionsWrapper.prototype.getDocument = function () {\n        // if user is providing document, we use the users one,\n        // otherwise we use the document on the global namespace.\n        var result = null;\n        if (this.gridOptions.getDocument && utils_1._.exists(this.gridOptions.getDocument)) {\n            result = this.gridOptions.getDocument();\n        }\n        if (result && utils_1._.exists(result)) {\n            return result;\n        }\n        return document;\n    };\n    GridOptionsWrapper.prototype.getMinColWidth = function () {\n        if (this.gridOptions.minColWidth && (this.gridOptions.minColWidth > GridOptionsWrapper_1.MIN_COL_WIDTH)) {\n            return this.gridOptions.minColWidth;\n        }\n        return GridOptionsWrapper_1.MIN_COL_WIDTH;\n    };\n    GridOptionsWrapper.prototype.getMaxColWidth = function () {\n        if (this.gridOptions.maxColWidth && (this.gridOptions.maxColWidth > GridOptionsWrapper_1.MIN_COL_WIDTH)) {\n            return this.gridOptions.maxColWidth;\n        }\n        return null;\n    };\n    GridOptionsWrapper.prototype.getColWidth = function () {\n        if (typeof this.gridOptions.colWidth !== 'number' || this.gridOptions.colWidth < GridOptionsWrapper_1.MIN_COL_WIDTH) {\n            return 200;\n        }\n        return this.gridOptions.colWidth;\n    };\n    GridOptionsWrapper.prototype.getRowBuffer = function () {\n        var rowBuffer = this.gridOptions.rowBuffer;\n        if (typeof rowBuffer === 'number') {\n            if (rowBuffer < 0) {\n                utils_1._.doOnce(function () { return console.warn(\"ag-Grid: rowBuffer should not be negative\"); }, 'warn rowBuffer negative');\n                this.gridOptions.rowBuffer = rowBuffer = 0;\n            }\n        }\n        else {\n            rowBuffer = constants_1.Constants.ROW_BUFFER_SIZE;\n        }\n        return rowBuffer;\n    };\n    GridOptionsWrapper.prototype.getRowBufferInPixels = function () {\n        var rowsToBuffer = this.getRowBuffer();\n        var defaultRowHeight = this.getRowHeightAsNumber();\n        return rowsToBuffer * defaultRowHeight;\n    };\n    // the user might be using some non-standard scrollbar, eg a scrollbar that has zero\n    // width and overlays (like the Safari scrollbar, but presented in Chrome). so we\n    // allow the user to provide the scroll width before we work it out.\n    GridOptionsWrapper.prototype.getScrollbarWidth = function () {\n        if (this.scrollWidth == null) {\n            var useGridOptions = typeof this.gridOptions.scrollbarWidth === 'number' &&\n                this.gridOptions.scrollbarWidth >= 0;\n            this.scrollWidth = useGridOptions ? this.gridOptions.scrollbarWidth : utils_1._.getScrollbarWidth();\n        }\n        return this.scrollWidth;\n    };\n    GridOptionsWrapper.prototype.checkForDeprecated = function () {\n        var _this = this;\n        // casting to generic object, so typescript compiles even though\n        // we are looking for attributes that don't exist\n        var options = this.gridOptions;\n        if (options.suppressUnSort) {\n            console.warn('ag-grid: as of v1.12.4 suppressUnSort is not used. Please use sortingOrder instead.');\n        }\n        if (options.suppressDescSort) {\n            console.warn('ag-grid: as of v1.12.4 suppressDescSort is not used. Please use sortingOrder instead.');\n        }\n        if (options.groupAggFields) {\n            console.warn('ag-grid: as of v3 groupAggFields is not used. Please add appropriate agg fields to your columns.');\n        }\n        if (options.groupHidePivotColumns) {\n            console.warn('ag-grid: as of v3 groupHidePivotColumns is not used as pivot columns are now called rowGroup columns. Please refer to the documentation');\n        }\n        if (options.groupKeys) {\n            console.warn('ag-grid: as of v3 groupKeys is not used. You need to set rowGroupIndex on the columns to group. Please refer to the documentation');\n        }\n        if (typeof options.groupDefaultExpanded === 'boolean') {\n            console.warn('ag-grid: groupDefaultExpanded can no longer be boolean. for groupDefaultExpanded=true, use groupDefaultExpanded=9999 instead, to expand all the groups');\n        }\n        if (options.onRowDeselected || options.rowDeselected) {\n            console.warn('ag-grid: since version 3.4 event rowDeselected no longer exists, please check the docs');\n        }\n        if (options.rowsAlreadyGrouped) {\n            console.warn('ag-grid: since version 3.4 rowsAlreadyGrouped no longer exists, please use getNodeChildDetails() instead');\n        }\n        if (options.groupAggFunction) {\n            console.warn('ag-grid: since version 4.3.x groupAggFunction is now called groupRowAggNodes');\n        }\n        if (options.checkboxSelection) {\n            console.warn('ag-grid: since version 8.0.x checkboxSelection is not supported as a grid option. ' +\n                'If you want this on all columns, use defaultColDef instead and set it there');\n        }\n        if (options.paginationInitialRowCount) {\n            console.warn('ag-grid: since version 9.0.x paginationInitialRowCount is now called infiniteInitialRowCount');\n        }\n        if (options.infinitePageSize) {\n            console.warn('ag-grid: since version 9.0.x infinitePageSize is now called cacheBlockSize');\n        }\n        if (options.infiniteBlockSize) {\n            console.warn('ag-grid: since version 10.0.x infiniteBlockSize is now called cacheBlockSize');\n        }\n        if (options.maxPagesInCache) {\n            console.warn('ag-grid: since version 10.0.x maxPagesInCache is now called maxBlocksInCache');\n        }\n        if (options.paginationOverflowSize) {\n            console.warn('ag-grid: since version 10.0.x paginationOverflowSize is now called cacheOverflowSize');\n        }\n        // if (options.forPrint) {\n        //     console.warn('ag-grid: since version 10.1.x, use property domLayout=\"forPrint\" instead of forPrint=true');\n        // }\n        if (options.suppressMenuFilterPanel) {\n            console.warn(\"ag-grid: since version 11.0.x, use property colDef.menuTabs=['generalMenuTab','columnsMenuTab'] instead of suppressMenuFilterPanel=true\");\n        }\n        if (options.suppressMenuMainPanel) {\n            console.warn(\"ag-grid: since version 11.0.x, use property colDef.menuTabs=['filterMenuTab','columnsMenuTab'] instead of suppressMenuMainPanel=true\");\n        }\n        if (options.suppressMenuColumnPanel) {\n            console.warn(\"ag-grid: since version 11.0.x, use property colDef.menuTabs=['generalMenuTab','filterMenuTab'] instead of suppressMenuColumnPanel=true\");\n        }\n        if (options.suppressUseColIdForGroups) {\n            console.warn(\"ag-grid: since version 11.0.x, this is not in use anymore. You should be able to remove it from your definition\");\n        }\n        if (options.groupSuppressRow) {\n            console.warn(\"ag-grid: since version 18.2.x, 'groupSuppressRow' should not be used anymore. Instead remove row groups and perform custom sorting.\");\n        }\n        if (options.groupColumnDef) {\n            console.warn(\"ag-grid: since version 11.0.x, groupColumnDef has been renamed, this property is now called autoGroupColumnDef. Please change your configuration accordingly\");\n        }\n        if (options.slaveGrids) {\n            console.warn(\"ag-grid: since version 12.x, slaveGrids has been renamed, this property is now called alignedGrids. Please change your configuration accordingly\");\n        }\n        if (options.floatingTopRowData) {\n            console.warn(\"ag-grid: since version 12.x, floatingTopRowData is now called pinnedTopRowData\");\n        }\n        if (options.floatingBottomRowData) {\n            console.warn(\"ag-grid: since version 12.x, floatingBottomRowData is now called pinnedBottomRowData\");\n        }\n        if (options.paginationStartPage) {\n            console.warn(\"ag-grid: since version 12.x, paginationStartPage is gone, please call api.paginationGoToPage(\" + options.paginationStartPage + \") instead.\");\n        }\n        if (options.getHeaderCellTemplate) {\n            console.warn(\"ag-grid: since version 15.x, getHeaderCellTemplate is gone, please check the header documentation on how to set header templates.\");\n        }\n        if (options.headerCellTemplate) {\n            console.warn(\"ag-grid: since version 15.x, headerCellTemplate is gone, please check the header documentation on how to set header templates.\");\n        }\n        if (options.headerCellRenderer) {\n            console.warn(\"ag-grid: since version 15.x, headerCellRenderer is gone, please check the header documentation on how to set header templates.\");\n        }\n        if (options.angularCompileHeaders) {\n            console.warn(\"ag-grid: since version 15.x, angularCompileHeaders is gone, please see the getting started for Angular 1 docs to see how to do headers in Angular 1.x.\");\n        }\n        if (options.pivotTotals) {\n            console.warn(\"ag-grid: since version 18.x, pivotTotals has been removed, instead if using pivotTotals, set pivotColumnGroupTotals='before'|'after'.\");\n            options.pivotColumnGroupTotals = 'before';\n        }\n        if (options.rowModelType === 'inMemory') {\n            console.warn(\"ag-grid: since version 18.x, The In Memory Row Model has been renamed to the Client Side Row Model, set rowModelType='clientSide' instead.\");\n            options.rowModelType = 'clientSide';\n        }\n        if (options.rowModelType === 'enterprise') {\n            console.warn(\"ag-grid: since version 18.x, The Enterprise Row Model has been renamed to the Server Side Row Model, set rowModelType='serverSide' instead.\");\n            options.rowModelType = 'serverSide';\n        }\n        if (options.layoutInterval) {\n            console.warn(\"ag-grid: since version 18.x, layoutInterval is no longer a property. This is because the grid now uses CSS Flex for layout.\");\n        }\n        if (options.gridAutoHeight) {\n            console.warn(\"ag-grid: since version 19.x, gridAutoHeight is gone, please use domLayout=autoHeight instead\");\n            options.domLayout = 'autoHeight';\n        }\n        if (options.showToolPanel === true) {\n            console.warn(\"ag-grid: since version 19.x, showToolPanel is gone, please specify toolPanel components. See https://www.ag-grid.com/javascript-grid-tool-panel/\");\n            options.showToolPanel = undefined;\n            options.sideBar = options.sideBar || true;\n        }\n        if (options.showToolPanel === false) {\n            console.warn(\"ag-grid: since version 19.x, showToolPanel is gone, please specify toolPanel components. See https://www.ag-grid.com/javascript-grid-tool-panel/\");\n            options.showToolPanel = undefined;\n            options.sideBar = options.sideBar || false;\n        }\n        var oldToolPanelProperties = {\n            toolPanelSuppressRowGroups: 'suppressRowGroups',\n            toolPanelSuppressValues: 'suppressValues',\n            toolPanelSuppressPivots: 'suppressPivots',\n            toolPanelSuppressPivotMode: 'suppressPivotMode',\n            toolPanelSuppressColumnFilter: 'suppressColumnFilter',\n            toolPanelSuppressColumnSelectAll: 'suppressColumnSelectAll',\n            toolPanelSuppressSideButtons: 'suppressSideButtons',\n            toolPanelSuppressColumnExpandAll: 'suppressColumnExpandAll',\n            contractColumnSelection: 'contractColumnSelection'\n        };\n        var toolPanelColumnsCompProps = {};\n        Object.keys(oldToolPanelProperties).forEach(function (key) {\n            var translation = oldToolPanelProperties[key];\n            var value = _this.gridOptions[key];\n            if (value !== undefined) {\n                if (key === 'toolPanelSuppressSideButtons') {\n                    console.warn('ag-grid: since v19.0 toolPanelSuppressSideButtons has been completely removed. See https://www.ag-grid.com/javascript-grid-tool-panel/');\n                    return;\n                }\n                console.warn(\"ag-grid: since v19.0 gridOptions.\" + key + \" is deprecated, please use gridOptions.sideBar.toolPanel[columnsIndex].componentParams.\" + translation);\n                toolPanelColumnsCompProps[translation] = value;\n            }\n        });\n        if (Object.keys(toolPanelColumnsCompProps).length > 0 && !utils_1._.exists(options.sideBar)) {\n            console.warn(\"ag-grid: since version 19.x, sideBar is mandatory if using toolPanel related properties. See https://www.ag-grid.com/javascript-grid-tool-panel/\");\n            options.sideBar = true;\n        }\n        if (options.sideBar != null) {\n            options.sideBar = sideBar_1.SideBarDefParser.parse(options.sideBar);\n        }\n        var sideBarDef = this.gridOptions.sideBar;\n        if (Object.keys(toolPanelColumnsCompProps).length > 0 && sideBarDef && sideBarDef.toolPanels) {\n            var columnsDef = (sideBarDef.toolPanels.filter(function (it) { return it.id === 'columns'; }));\n            if (columnsDef.length === 1) {\n                utils_1._.mergeDeep(columnsDef[0], {\n                    componentParams: toolPanelColumnsCompProps\n                });\n            }\n        }\n        if (options.enableStatusBar) {\n            console.warn(\"ag-grid: since version 19.x, enableStatusBar is gone, please specify statusBar components\");\n            options.statusBar = options.statusBar ||\n                {\n                    components: [{ component: 'agAggregationComponent' }]\n                };\n        }\n        if (options.alwaysShowStatusBar) {\n            console.warn(\"ag-grid: since version 19.x, alwaysShowStatusBar is gone. Please specify a min-height on the ag-status-bar css class, eg .ag-status-bar {min-height: 35px; }\");\n        }\n        if (options.enableServerSideSorting || options.enableSorting) {\n            console.warn(\"ag-Grid: since v20, grid options enableSorting and enableServerSideSorting are gone. Instead set sortable=true on the column definition for the columns sorting are allowed on. To migrate from gridOption.enableSorting=true, set gridOptions.defaultColDef.sortable=true\");\n            if (!options.defaultColDef) {\n                options.defaultColDef = {};\n            }\n            if (!options.defaultColDef.sortable) {\n                options.defaultColDef.sortable = true;\n            }\n        }\n        if (options.enableFilter || options.enableServerSideFilter) {\n            console.warn(\"ag-Grid: since v20, grid options enableFilter and enableServerSideFilter are gone. Instead set filter=true (if not already specifying a specific filter) on the column definition for the columns filtering is allowed on. To migrate from gridOptions.enableFilter=true, set gridOptions.defaultColDef.filter=true. If you are explicitly setting specific filters for each column (ie colDef.filter is already set) the you don't need to do anything.\");\n            if (!options.defaultColDef) {\n                options.defaultColDef = {};\n            }\n            if (!options.defaultColDef.filter) {\n                options.defaultColDef.filter = true;\n            }\n        }\n        if (options.enableColResize) {\n            console.warn(\"ag-Grid: since v20, grid options enableColResize is gone. Instead set resizable=true on the column definition for the columns resizing are allowed on. To migrate from gridOption.enableColResize=true, set gridOptions.defaultColDef.resizable=true\");\n            if (!options.defaultColDef) {\n                options.defaultColDef = {};\n            }\n            if (!options.defaultColDef.resizable) {\n                options.defaultColDef.resizable = true;\n            }\n        }\n        if (options.embedFullWidthRows) {\n            console.warn(\"ag-Grid: since v20.1, embedFullWidthRows is now gone. This property was introduced to allow faster vertical scrolling when using slow browsers (IE) and full width rows. However in v20 the dom layout was redesigned and this performance problem no longer exists, hence this property 'hack' is no longer necessary.\");\n        }\n        if (options.suppressTabbing) {\n            console.warn(\"ag-Grid: since v20.1, suppressTabbing is replaced with the more powerful grid callback suppressKeyboardEvent(params) which can suppress any keyboard event including tabbing.\");\n        }\n    };\n    GridOptionsWrapper.prototype.checkForViolations = function () {\n        if (this.isTreeData()) {\n            this.treeDataViolations();\n        }\n    };\n    GridOptionsWrapper.prototype.treeDataViolations = function () {\n        if (this.isRowModelDefault()) {\n            if (utils_1._.missing(this.getDataPathFunc())) {\n                console.warn('ag-Grid: property usingTreeData=true with rowModel=clientSide, but you did not ' +\n                    'provide getDataPath function, please provide getDataPath function if using tree data.');\n            }\n        }\n        if (this.isRowModelServerSide()) {\n            if (utils_1._.missing(this.getIsServerSideGroupFunc())) {\n                console.warn('ag-Grid: property usingTreeData=true with rowModel=serverSide, but you did not ' +\n                    'provide isServerSideGroup function, please provide isServerSideGroup function if using tree data.');\n            }\n            if (utils_1._.missing(this.getServerSideGroupKeyFunc())) {\n                console.warn('ag-Grid: property usingTreeData=true with rowModel=serverSide, but you did not ' +\n                    'provide getServerSideGroupKey function, please provide getServerSideGroupKey function if using tree data.');\n            }\n        }\n    };\n    GridOptionsWrapper.prototype.getLocaleTextFunc = function () {\n        if (this.gridOptions.localeTextFunc) {\n            return this.gridOptions.localeTextFunc;\n        }\n        var that = this;\n        return function (key, defaultValue) {\n            var localeText = that.gridOptions.localeText;\n            if (localeText && localeText[key]) {\n                return localeText[key];\n            }\n            return defaultValue;\n        };\n    };\n    // responsible for calling the onXXX functions on gridOptions\n    GridOptionsWrapper.prototype.globalEventHandler = function (eventName, event) {\n        var callbackMethodName = componentUtil_1.ComponentUtil.getCallbackForEvent(eventName);\n        if (typeof this.gridOptions[callbackMethodName] === 'function') {\n            this.gridOptions[callbackMethodName](event);\n        }\n    };\n    // we don't allow dynamic row height for virtual paging\n    GridOptionsWrapper.prototype.getRowHeightAsNumber = function () {\n        if (!this.gridOptions.rowHeight || utils_1._.missing(this.gridOptions.rowHeight)) {\n            return this.getDefaultRowHeight();\n        }\n        else if (this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight)) {\n            return this.gridOptions.rowHeight;\n        }\n        console.warn('ag-Grid row height must be a number if not using standard row model');\n        return this.getDefaultRowHeight();\n    };\n    GridOptionsWrapper.prototype.getRowHeightForNode = function (rowNode, allowEstimate) {\n        // check the function first, in case use set both function and\n        // number, when using virtual pagination then function can be\n        // used for pinned rows and the number for the body rows.\n        if (allowEstimate === void 0) { allowEstimate = false; }\n        if (typeof this.gridOptions.getRowHeight === 'function') {\n            if (allowEstimate) {\n                return { height: this.getDefaultRowHeight(), estimated: true };\n            }\n            var params = {\n                node: rowNode,\n                data: rowNode.data,\n                api: this.gridOptions.api,\n                context: this.gridOptions.context\n            };\n            return { height: this.gridOptions.getRowHeight(params), estimated: false };\n        }\n        else if (rowNode.detail && this.isMasterDetail()) {\n            if (this.isNumeric(this.gridOptions.detailRowHeight)) {\n                return { height: this.gridOptions.detailRowHeight, estimated: false };\n            }\n            else {\n                return { height: DEFAULT_DETAIL_ROW_HEIGHT, estimated: false };\n            }\n        }\n        var minRowHeight = this.getDefaultRowHeight();\n        var rowHeight = this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight) ?\n            this.gridOptions.rowHeight : minRowHeight;\n        if (this.columnController.isAutoRowHeightActive()) {\n            if (allowEstimate) {\n                return { height: rowHeight, estimated: true };\n            }\n            var autoHeight = this.autoHeightCalculator.getPreferredHeightForRow(rowNode);\n            // never return less than the default row height - covers when auto height\n            // cells are blank.\n            return { height: Math.max(autoHeight, minRowHeight), estimated: false };\n        }\n        return { height: rowHeight, estimated: false };\n    };\n    GridOptionsWrapper.prototype.isDynamicRowHeight = function () {\n        return typeof this.gridOptions.getRowHeight === 'function';\n    };\n    GridOptionsWrapper.prototype.getVirtualItemHeight = function () {\n        return this.specialForNewMaterial(20, 'virtualItemHeight');\n    };\n    GridOptionsWrapper.prototype.isNumeric = function (value) {\n        return !isNaN(value) && typeof value === 'number';\n    };\n    // Material data table has strict guidelines about whitespace, and these values are different than the ones\n    // ag-grid uses by default. We override the default ones for the sake of making it better out of the box\n    GridOptionsWrapper.prototype.specialForNewMaterial = function (defaultValue, sassVariableName) {\n        var theme = this.environment.getTheme();\n        if (theme && theme.indexOf('ag-theme') === 0) {\n            return this.environment.getSassVariable(theme, sassVariableName);\n        }\n        return defaultValue;\n    };\n    GridOptionsWrapper.prototype.getDefaultRowHeight = function () {\n        return this.specialForNewMaterial(DEFAULT_ROW_HEIGHT, 'rowHeight');\n    };\n    var GridOptionsWrapper_1;\n    GridOptionsWrapper.MIN_COL_WIDTH = 10;\n    GridOptionsWrapper.PROP_HEADER_HEIGHT = 'headerHeight';\n    GridOptionsWrapper.PROP_GROUP_REMOVE_SINGLE_CHILDREN = 'groupRemoveSingleChildren';\n    GridOptionsWrapper.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN = 'groupRemoveLowestSingleChildren';\n    GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT = 'pivotHeaderHeight';\n    GridOptionsWrapper.PROP_SUPPRESS_CLIPBOARD_PASTE = 'suppressClipboardPaste';\n    GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT = 'groupHeaderHeight';\n    GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT = 'pivotGroupHeaderHeight';\n    GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT = 'floatingFiltersHeight';\n    GridOptionsWrapper.PROP_SUPPRESS_ROW_DRAG = 'suppressRowDrag';\n    GridOptionsWrapper.PROP_POPUP_PARENT = 'popupParent';\n    GridOptionsWrapper.PROP_DOM_LAYOUT = 'domLayout';\n    __decorate([\n        context_1.Autowired('gridOptions'),\n        __metadata(\"design:type\", Object)\n    ], GridOptionsWrapper.prototype, \"gridOptions\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GridOptionsWrapper.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GridOptionsWrapper.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('enterprise'),\n        __metadata(\"design:type\", Boolean)\n    ], GridOptionsWrapper.prototype, \"enterprise\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], GridOptionsWrapper.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], GridOptionsWrapper.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('environment'),\n        __metadata(\"design:type\", environment_1.Environment)\n    ], GridOptionsWrapper.prototype, \"environment\", void 0);\n    __decorate([\n        context_1.Autowired('autoHeightCalculator'),\n        __metadata(\"design:type\", autoHeightCalculator_1.AutoHeightCalculator)\n    ], GridOptionsWrapper.prototype, \"autoHeightCalculator\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], GridOptionsWrapper.prototype, \"context\", void 0);\n    __decorate([\n        __param(0, context_1.Qualifier('gridApi')), __param(1, context_1.Qualifier('columnApi')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [gridApi_1.GridApi, columnApi_1.ColumnApi]),\n        __metadata(\"design:returntype\", void 0)\n    ], GridOptionsWrapper.prototype, \"agWire\", null);\n    __decorate([\n        context_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridOptionsWrapper.prototype, \"destroy\", null);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridOptionsWrapper.prototype, \"init\", null);\n    GridOptionsWrapper = GridOptionsWrapper_1 = __decorate([\n        context_1.Bean('gridOptionsWrapper')\n    ], GridOptionsWrapper);\n    return GridOptionsWrapper;\n}());\nexports.GridOptionsWrapper = GridOptionsWrapper;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logger_1 = require(\"./logger\");\nvar context_1 = require(\"./context/context\");\nvar context_2 = require(\"./context/context\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar utils_1 = require(\"./utils\");\nvar EventService = /** @class */ (function () {\n    function EventService() {\n        this.allSyncListeners = {};\n        this.allAsyncListeners = {};\n        this.globalSyncListeners = [];\n        this.globalAsyncListeners = [];\n        this.asyncFunctionsQueue = [];\n        this.scheduled = false;\n        this.firedEvents = {};\n    }\n    EventService_1 = EventService;\n    // because this class is used both inside the context and outside the context, we do not\n    // use autowired attributes, as that would be confusing, as sometimes the attributes\n    // would be wired, and sometimes not.\n    //\n    // the global event servers used by ag-Grid is autowired by the context once, and this\n    // setBeans method gets called once.\n    //\n    // the times when this class is used outside of the context (eg RowNode has an instance of this\n    // class) then it is not a bean, and this setBeans method is not called.\n    EventService.prototype.setBeans = function (loggerFactory, gridOptionsWrapper, globalEventListener) {\n        if (globalEventListener === void 0) { globalEventListener = null; }\n        this.logger = loggerFactory.create('EventService');\n        if (globalEventListener) {\n            var async = gridOptionsWrapper.useAsyncEvents();\n            this.addGlobalListener(globalEventListener, async);\n        }\n    };\n    EventService.prototype.getListenerList = function (eventType, async) {\n        var listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\n        var listenerList = listenerMap[eventType];\n        if (!listenerList) {\n            listenerList = [];\n            listenerMap[eventType] = listenerList;\n        }\n        return listenerList;\n    };\n    EventService.prototype.addEventListener = function (eventType, listener, async) {\n        if (async === void 0) { async = false; }\n        var listenerList = this.getListenerList(eventType, async);\n        if (listenerList.indexOf(listener) < 0) {\n            listenerList.push(listener);\n        }\n    };\n    // for some events, it's important that the model gets to hear about them before the view,\n    // as the model may need to update before the view works on the info. if you register\n    // via this method, you get notified before the view parts\n    EventService.prototype.addModalPriorityEventListener = function (eventType, listener, async) {\n        if (async === void 0) { async = false; }\n        this.addEventListener(eventType + EventService_1.PRIORITY, listener, async);\n    };\n    EventService.prototype.addGlobalListener = function (listener, async) {\n        if (async === void 0) { async = false; }\n        if (async) {\n            this.globalAsyncListeners.push(listener);\n        }\n        else {\n            this.globalSyncListeners.push(listener);\n        }\n    };\n    EventService.prototype.removeEventListener = function (eventType, listener, async) {\n        if (async === void 0) { async = false; }\n        var listenerList = this.getListenerList(eventType, async);\n        utils_1._.removeFromArray(listenerList, listener);\n    };\n    EventService.prototype.removeGlobalListener = function (listener, async) {\n        if (async === void 0) { async = false; }\n        if (async) {\n            utils_1._.removeFromArray(this.globalAsyncListeners, listener);\n        }\n        else {\n            utils_1._.removeFromArray(this.globalSyncListeners, listener);\n        }\n    };\n    // why do we pass the type here? the type is in ColumnChangeEvent, so unless the\n    // type is not in other types of events???\n    EventService.prototype.dispatchEvent = function (event) {\n        // console.log(`dispatching ${eventType}: ${event}`);\n        this.dispatchToListeners(event, true);\n        this.dispatchToListeners(event, false);\n        this.firedEvents[event.type] = true;\n    };\n    EventService.prototype.dispatchEventOnce = function (event) {\n        if (!this.firedEvents[event.type]) {\n            this.dispatchEvent(event);\n        }\n    };\n    EventService.prototype.dispatchToListeners = function (event, async) {\n        var _this = this;\n        var globalListeners = async ? this.globalAsyncListeners : this.globalSyncListeners;\n        var eventType = event.type;\n        // this allows the columnController to get events before anyone else\n        var p1ListenerList = this.getListenerList(eventType + EventService_1.PRIORITY, async);\n        utils_1._.forEachSnapshotFirst(p1ListenerList, function (listener) {\n            if (async) {\n                _this.dispatchAsync(function () { return listener(event); });\n            }\n            else {\n                listener(event);\n            }\n        });\n        var listenerList = this.getListenerList(eventType, async);\n        utils_1._.forEachSnapshotFirst(listenerList, function (listener) {\n            if (async) {\n                _this.dispatchAsync(function () { return listener(event); });\n            }\n            else {\n                listener(event);\n            }\n        });\n        utils_1._.forEachSnapshotFirst(globalListeners, function (listener) {\n            if (async) {\n                _this.dispatchAsync(function () { return listener(eventType, event); });\n            }\n            else {\n                listener(eventType, event);\n            }\n        });\n    };\n    // this gets called inside the grid's thread, for each event that it\n    // wants to set async. the grid then batches the events into one setTimeout()\n    // because setTimeout() is an expensive operation. ideally we would have\n    // each event in it's own setTimeout(), but we batch for performance.\n    EventService.prototype.dispatchAsync = function (func) {\n        // add to the queue for executing later in the next VM turn\n        this.asyncFunctionsQueue.push(func);\n        // check if timeout is already scheduled. the first time the grid calls\n        // this within it's thread turn, this should be false, so it will schedule\n        // the 'flush queue' method the first time it comes here. then the flag is\n        // set to 'true' so it will know it's already scheduled for subsequent calls.\n        if (!this.scheduled) {\n            // if not scheduled, schedule one\n            window.setTimeout(this.flushAsyncQueue.bind(this), 0);\n            // mark that it is scheduled\n            this.scheduled = true;\n        }\n    };\n    // this happens in the next VM turn only, and empties the queue of events\n    EventService.prototype.flushAsyncQueue = function () {\n        this.scheduled = false;\n        // we take a copy, because the event listener could be using\n        // the grid, which would cause more events, which would be potentially\n        // added to the queue, so safe to take a copy, the new events will\n        // get executed in a later VM turn rather than risk updating the\n        // queue as we are flushing it.\n        var queueCopy = this.asyncFunctionsQueue.slice();\n        this.asyncFunctionsQueue = [];\n        // execute the queue\n        queueCopy.forEach(function (func) { return func(); });\n    };\n    var EventService_1;\n    // this is an old idea niall had, should really take it out, was to do with ordering who gets to process\n    // events first, to give model and service objects preference over the view\n    EventService.PRIORITY = '-P1';\n    __decorate([\n        __param(0, context_2.Qualifier('loggerFactory')),\n        __param(1, context_2.Qualifier('gridOptionsWrapper')),\n        __param(2, context_2.Qualifier('globalEventListener')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory,\n            gridOptionsWrapper_1.GridOptionsWrapper,\n            Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], EventService.prototype, \"setBeans\", null);\n    EventService = EventService_1 = __decorate([\n        context_1.Bean('eventService')\n    ], EventService);\n    return EventService;\n}());\nexports.EventService = EventService;\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar columnGroup_1 = require(\"../entities/columnGroup\");\nvar column_1 = require(\"../entities/column\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar expressionService_1 = require(\"../valueService/expressionService\");\nvar columnFactory_1 = require(\"./columnFactory\");\nvar displayedGroupCreator_1 = require(\"./displayedGroupCreator\");\nvar autoWidthCalculator_1 = require(\"../rendering/autoWidthCalculator\");\nvar eventService_1 = require(\"../eventService\");\nvar columnUtils_1 = require(\"./columnUtils\");\nvar logger_1 = require(\"../logger\");\nvar events_1 = require(\"../events\");\nvar originalColumnGroup_1 = require(\"../entities/originalColumnGroup\");\nvar groupInstanceIdCreator_1 = require(\"./groupInstanceIdCreator\");\nvar context_1 = require(\"../context/context\");\nvar columnAnimationService_1 = require(\"../rendering/columnAnimationService\");\nvar autoGroupColService_1 = require(\"./autoGroupColService\");\nvar valueCache_1 = require(\"../valueService/valueCache\");\nvar gridApi_1 = require(\"../gridApi\");\nvar columnApi_1 = require(\"./columnApi\");\nvar utils_1 = require(\"../utils\");\nvar ColumnController = /** @class */ (function () {\n    function ColumnController() {\n        // header row count, based on user provided columns\n        this.primaryHeaderRowCount = 0;\n        this.secondaryHeaderRowCount = 0;\n        this.secondaryColumnsPresent = false;\n        // header row count, either above, or based on pivoting if we are pivoting\n        this.gridHeaderRowCount = 0;\n        // these are the lists used by the rowRenderer to render nodes. almost the leaf nodes of the above\n        // displayed trees, however it also takes into account if the groups are open or not.\n        this.displayedLeftColumns = [];\n        this.displayedRightColumns = [];\n        this.displayedCenterColumns = [];\n        // all three lists above combined\n        this.allDisplayedColumns = [];\n        // same as above, except trimmed down to only columns within the viewport\n        this.allDisplayedVirtualColumns = [];\n        this.allDisplayedCenterVirtualColumns = [];\n        this.rowGroupColumns = [];\n        this.valueColumns = [];\n        this.pivotColumns = [];\n        this.ready = false;\n        this.autoGroupsNeedBuilding = false;\n        this.pivotMode = false;\n        this.bodyWidth = 0;\n        this.leftWidth = 0;\n        this.rightWidth = 0;\n        this.bodyWidthDirty = true;\n    }\n    ColumnController.prototype.init = function () {\n        var pivotMode = this.gridOptionsWrapper.isPivotMode();\n        this.suppressColumnVirtualisation = this.gridOptionsWrapper.isSuppressColumnVirtualisation();\n        if (this.isPivotSettingAllowed(pivotMode)) {\n            this.pivotMode = pivotMode;\n        }\n        this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n    };\n    ColumnController.prototype.setColumnDefs = function (columnDefs, source) {\n        if (source === void 0) { source = \"api\"; }\n        var colsPreviouslyExisted = !!this.columnDefs;\n        this.columnDefs = columnDefs;\n        // always invalidate cache on changing columns, as the column id's for the new columns\n        // could overlap with the old id's, so the cache would return old values for new columns.\n        this.valueCache.expire();\n        // NOTE ==================\n        // we should be destroying the existing columns and groups if they exist, for example, the original column\n        // group adds a listener to the columns, it should be also removing the listeners\n        this.autoGroupsNeedBuilding = true;\n        var oldPrimaryColumns = this.primaryColumns;\n        var balancedTreeResult = this.columnFactory.createColumnTree(columnDefs, true, oldPrimaryColumns);\n        this.primaryColumnTree = balancedTreeResult.columnTree;\n        this.primaryHeaderRowCount = balancedTreeResult.treeDept + 1;\n        this.primaryColumns = this.getColumnsFromTree(this.primaryColumnTree);\n        this.extractRowGroupColumns(source, oldPrimaryColumns);\n        this.extractPivotColumns(source, oldPrimaryColumns);\n        this.createValueColumns(source, oldPrimaryColumns);\n        this.ready = true;\n        this.updateGridColumns();\n        this.updateDisplayedColumns(source);\n        this.checkDisplayedVirtualColumns();\n        if (this.gridOptionsWrapper.isDeltaColumnMode() && colsPreviouslyExisted) {\n            this.resetColumnState(true, source);\n        }\n        var eventEverythingChanged = {\n            type: events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            source: source\n        };\n        this.eventService.dispatchEvent(eventEverythingChanged);\n        var newColumnsLoadedEvent = {\n            type: events_1.Events.EVENT_NEW_COLUMNS_LOADED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(newColumnsLoadedEvent);\n    };\n    ColumnController.prototype.isAutoRowHeightActive = function () {\n        return this.autoRowHeightColumns && this.autoRowHeightColumns.length > 0;\n    };\n    ColumnController.prototype.getAllAutoRowHeightCols = function () {\n        return this.autoRowHeightColumns;\n    };\n    ColumnController.prototype.setVirtualViewportLeftAndRight = function () {\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            this.viewportLeft = this.bodyWidth - this.scrollPosition - this.scrollWidth;\n            this.viewportRight = this.bodyWidth - this.scrollPosition;\n        }\n        else {\n            this.viewportLeft = this.scrollPosition;\n            this.viewportRight = this.scrollWidth + this.scrollPosition;\n        }\n    };\n    // used by clipboard service, to know what columns to paste into\n    ColumnController.prototype.getDisplayedColumnsStartingAt = function (column) {\n        var currentColumn = column;\n        var result = [];\n        while (currentColumn && utils_1._.exists(currentColumn)) {\n            result.push(currentColumn);\n            currentColumn = this.getDisplayedColAfter(currentColumn);\n        }\n        return result;\n    };\n    // checks what columns are currently displayed due to column virtualisation. fires an event\n    // if the list of columns has changed.\n    // + setColumnWidth(), setVirtualViewportPosition(), setColumnDefs(), sizeColumnsToFit()\n    ColumnController.prototype.checkDisplayedVirtualColumns = function () {\n        // check displayCenterColumnTree exists first, as it won't exist when grid is initialising\n        if (utils_1._.exists(this.displayedCenterColumns)) {\n            var hashBefore = this.allDisplayedVirtualColumns.map(function (column) { return column.getId(); }).join('#');\n            this.updateVirtualSets();\n            var hashAfter = this.allDisplayedVirtualColumns.map(function (column) { return column.getId(); }).join('#');\n            if (hashBefore !== hashAfter) {\n                var event_1 = {\n                    type: events_1.Events.EVENT_VIRTUAL_COLUMNS_CHANGED,\n                    api: this.gridApi,\n                    columnApi: this.columnApi\n                };\n                this.eventService.dispatchEvent(event_1);\n            }\n        }\n    };\n    ColumnController.prototype.setVirtualViewportPosition = function (scrollWidth, scrollPosition) {\n        if (scrollWidth !== this.scrollWidth || scrollPosition !== this.scrollPosition || this.bodyWidthDirty) {\n            this.scrollWidth = scrollWidth;\n            this.scrollPosition = scrollPosition;\n            // we need to call setVirtualViewportLeftAndRight() at least once after the body width changes,\n            // as the viewport can stay the same, but in RTL, if body width changes, we need to work out the\n            // virtual columns again\n            this.bodyWidthDirty = true;\n            this.setVirtualViewportLeftAndRight();\n            if (this.ready) {\n                this.checkDisplayedVirtualColumns();\n            }\n        }\n    };\n    ColumnController.prototype.isPivotMode = function () {\n        return this.pivotMode;\n    };\n    ColumnController.prototype.isPivotSettingAllowed = function (pivot) {\n        if (pivot) {\n            if (this.gridOptionsWrapper.isTreeData()) {\n                console.warn(\"ag-Grid: Pivot mode not available in conjunction Tree Data i.e. 'gridOptions.treeData: true'\");\n                return false;\n            }\n            else {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    };\n    ColumnController.prototype.setPivotMode = function (pivotMode, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (pivotMode === this.pivotMode) {\n            return;\n        }\n        if (!this.isPivotSettingAllowed(this.pivotMode)) {\n            return;\n        }\n        this.pivotMode = pivotMode;\n        // we need to update grid columns to cover the scenario where user has groupSuppressAutoColumn=true, as\n        // this means we don't use auto group column UNLESS we are in pivot mode (it's mandatory in pivot mode),\n        // so need to updateGridColumn() to check it autoGroupCol needs to be added / removed\n        this.autoGroupsNeedBuilding = true;\n        this.updateGridColumns();\n        this.updateDisplayedColumns(source);\n        var event = {\n            type: events_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ColumnController.prototype.getSecondaryPivotColumn = function (pivotKeys, valueColKey) {\n        if (!this.secondaryColumnsPresent) {\n            return null;\n        }\n        var valueColumnToFind = this.getPrimaryColumn(valueColKey);\n        var foundColumn = null;\n        if (this.secondaryColumns) {\n            this.secondaryColumns.forEach(function (column) {\n                var thisPivotKeys = column.getColDef().pivotKeys;\n                var pivotValueColumn = column.getColDef().pivotValueColumn;\n                var pivotKeyMatches = utils_1._.compareArrays(thisPivotKeys, pivotKeys);\n                var pivotValueMatches = pivotValueColumn === valueColumnToFind;\n                if (pivotKeyMatches && pivotValueMatches) {\n                    foundColumn = column;\n                }\n            });\n        }\n        return foundColumn;\n    };\n    ColumnController.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('ColumnController');\n    };\n    ColumnController.prototype.setFirstRightAndLastLeftPinned = function (source) {\n        var lastLeft;\n        var firstRight;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            lastLeft = this.displayedLeftColumns ? this.displayedLeftColumns[0] : null;\n            firstRight = this.displayedRightColumns ? utils_1._.last(this.displayedRightColumns) : null;\n        }\n        else {\n            lastLeft = this.displayedLeftColumns ? utils_1._.last(this.displayedLeftColumns) : null;\n            firstRight = this.displayedRightColumns ? this.displayedRightColumns[0] : null;\n        }\n        this.gridColumns.forEach(function (column) {\n            column.setLastLeftPinned(column === lastLeft, source);\n            column.setFirstRightPinned(column === firstRight, source);\n        });\n    };\n    ColumnController.prototype.autoSizeColumns = function (keys, source) {\n        // because of column virtualisation, we can only do this function on columns that are\n        // actually rendered, as non-rendered columns (outside the viewport and not rendered\n        // due to column virtualisation) are not present. this can result in all rendered columns\n        // getting narrowed, which in turn introduces more rendered columns on the RHS which\n        // did not get autosized in the original run, leaving the visible grid with columns on\n        // the LHS sized, but RHS no. so we keep looping through teh visible columns until\n        // no more cols are available (rendered) to be resized\n        var _this = this;\n        if (source === void 0) { source = \"api\"; }\n        // keep track of which cols we have resized in here\n        var columnsAutosized = [];\n        // initialise with anything except 0 so that while loop executes at least once\n        var changesThisTimeAround = -1;\n        while (changesThisTimeAround !== 0) {\n            changesThisTimeAround = 0;\n            this.actionOnGridColumns(keys, function (column) {\n                // if already autosized, skip it\n                if (columnsAutosized.indexOf(column) >= 0) {\n                    return false;\n                }\n                // get how wide this col should be\n                var preferredWidth = _this.autoWidthCalculator.getPreferredWidthForColumn(column);\n                // preferredWidth = -1 if this col is not on the screen\n                if (preferredWidth > 0) {\n                    var newWidth = _this.normaliseColumnWidth(column, preferredWidth);\n                    column.setActualWidth(newWidth, source);\n                    columnsAutosized.push(column);\n                    changesThisTimeAround++;\n                }\n                return true;\n            }, source);\n        }\n        if (columnsAutosized.length > 0) {\n            var event_2 = {\n                type: events_1.Events.EVENT_COLUMN_RESIZED,\n                columns: columnsAutosized,\n                column: columnsAutosized.length === 1 ? columnsAutosized[0] : null,\n                finished: true,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                source: \"autosizeColumns\"\n            };\n            this.eventService.dispatchEvent(event_2);\n        }\n    };\n    ColumnController.prototype.autoSizeColumn = function (key, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (key) {\n            this.autoSizeColumns([key], source);\n        }\n    };\n    ColumnController.prototype.autoSizeAllColumns = function (source) {\n        if (source === void 0) { source = \"api\"; }\n        var allDisplayedColumns = this.getAllDisplayedColumns();\n        this.autoSizeColumns(allDisplayedColumns, source);\n    };\n    ColumnController.prototype.getColumnsFromTree = function (rootColumns) {\n        var result = [];\n        recursiveFindColumns(rootColumns);\n        return result;\n        function recursiveFindColumns(childColumns) {\n            for (var i = 0; i < childColumns.length; i++) {\n                var child = childColumns[i];\n                if (child instanceof column_1.Column) {\n                    result.push(child);\n                }\n                else if (child instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                    recursiveFindColumns(child.getChildren());\n                }\n            }\n        }\n    };\n    ColumnController.prototype.getAllDisplayedColumnGroups = function () {\n        if (this.displayedLeftColumnTree && this.displayedRightColumnTree && this.displayedCentreColumnTree) {\n            return this.displayedLeftColumnTree\n                .concat(this.displayedCentreColumnTree)\n                .concat(this.displayedRightColumnTree);\n        }\n        else {\n            return null;\n        }\n    };\n    // + columnSelectPanel\n    ColumnController.prototype.getPrimaryColumnTree = function () {\n        return this.primaryColumnTree;\n    };\n    // + gridPanel -> for resizing the body and setting top margin\n    ColumnController.prototype.getHeaderRowCount = function () {\n        return this.gridHeaderRowCount;\n    };\n    // + headerRenderer -> setting pinned body width\n    ColumnController.prototype.getLeftDisplayedColumnGroups = function () {\n        return this.displayedLeftColumnTree;\n    };\n    // + headerRenderer -> setting pinned body width\n    ColumnController.prototype.getRightDisplayedColumnGroups = function () {\n        return this.displayedRightColumnTree;\n    };\n    // + headerRenderer -> setting pinned body width\n    ColumnController.prototype.getCenterDisplayedColumnGroups = function () {\n        return this.displayedCentreColumnTree;\n    };\n    ColumnController.prototype.getDisplayedColumnGroups = function (type) {\n        switch (type) {\n            case column_1.Column.PINNED_LEFT:\n                return this.getLeftDisplayedColumnGroups();\n            case column_1.Column.PINNED_RIGHT:\n                return this.getRightDisplayedColumnGroups();\n            default:\n                return this.getCenterDisplayedColumnGroups();\n        }\n    };\n    // gridPanel -> ensureColumnVisible\n    ColumnController.prototype.isColumnDisplayed = function (column) {\n        return this.getAllDisplayedColumns().indexOf(column) >= 0;\n    };\n    // + csvCreator\n    ColumnController.prototype.getAllDisplayedColumns = function () {\n        return this.allDisplayedColumns;\n    };\n    ColumnController.prototype.getAllDisplayedVirtualColumns = function () {\n        return this.allDisplayedVirtualColumns;\n    };\n    ColumnController.prototype.getDisplayedLeftColumnsForRow = function (rowNode) {\n        if (!this.colSpanActive) {\n            return this.displayedLeftColumns;\n        }\n        else {\n            return this.getDisplayedColumnsForRow(rowNode, this.displayedLeftColumns);\n        }\n    };\n    ColumnController.prototype.getDisplayedRightColumnsForRow = function (rowNode) {\n        if (!this.colSpanActive) {\n            return this.displayedRightColumns;\n        }\n        else {\n            return this.getDisplayedColumnsForRow(rowNode, this.displayedRightColumns);\n        }\n    };\n    ColumnController.prototype.getDisplayedColumnsForRow = function (rowNode, displayedColumns, filterCallback, emptySpaceBeforeColumn) {\n        var result = [];\n        var lastConsideredCol = null;\n        var _loop_1 = function (i) {\n            var col = displayedColumns[i];\n            var maxAllowedColSpan = displayedColumns.length - i;\n            var colSpan = Math.min(col.getColSpan(rowNode), maxAllowedColSpan);\n            var columnsToCheckFilter = [col];\n            if (colSpan > 1) {\n                var colsToRemove = colSpan - 1;\n                for (var j = 1; j <= colsToRemove; j++) {\n                    columnsToCheckFilter.push(displayedColumns[i + j]);\n                }\n                i += colsToRemove;\n            }\n            // see which cols we should take out for column virtualisation\n            var filterPasses;\n            if (filterCallback) {\n                // if user provided a callback, means some columns may not be in the viewport.\n                // the user will NOT provide a callback if we are talking about pinned areas,\n                // as pinned areas have no horizontal scroll and do not virtualise the columns.\n                // if lots of columns, that means column spanning, and we set filterPasses = true\n                // if one or more of the columns spanned pass the filter.\n                filterPasses = false;\n                columnsToCheckFilter.forEach(function (colForFilter) {\n                    if (filterCallback(colForFilter)) {\n                        filterPasses = true;\n                    }\n                });\n            }\n            else {\n                filterPasses = true;\n            }\n            if (filterPasses) {\n                if (result.length === 0 && lastConsideredCol) {\n                    var gapBeforeColumn = emptySpaceBeforeColumn ? emptySpaceBeforeColumn(col) : false;\n                    if (gapBeforeColumn) {\n                        result.push(lastConsideredCol);\n                    }\n                }\n                result.push(col);\n            }\n            lastConsideredCol = col;\n            out_i_1 = i;\n        };\n        var out_i_1;\n        for (var i = 0; i < displayedColumns.length; i++) {\n            _loop_1(i);\n            i = out_i_1;\n        }\n        return result;\n    };\n    // + rowRenderer\n    // if we are not column spanning, this just returns back the virtual centre columns,\n    // however if we are column spanning, then different rows can have different virtual\n    // columns, so we have to work out the list for each individual row.\n    ColumnController.prototype.getAllDisplayedCenterVirtualColumnsForRow = function (rowNode) {\n        var _this = this;\n        if (!this.colSpanActive) {\n            return this.allDisplayedCenterVirtualColumns;\n        }\n        var emptySpaceBeforeColumn = function (col) { return col.getLeft() > _this.viewportLeft; };\n        // if doing column virtualisation, then we filter based on the viewport.\n        var filterCallback = this.suppressColumnVirtualisation ? null : this.isColumnInViewport.bind(this);\n        return this.getDisplayedColumnsForRow(rowNode, this.displayedCenterColumns, filterCallback, emptySpaceBeforeColumn);\n    };\n    ColumnController.prototype.isColumnInViewport = function (col) {\n        var columnLeft = col.getLeft();\n        var columnRight = col.getLeft() + col.getActualWidth();\n        // adding 200 for buffer size, so some cols off viewport are rendered.\n        // this helps horizontal scrolling so user rarely sees white space (unless\n        // they scroll horizontally fast). however we are conservative, as the more\n        // buffer the slower the vertical redraw speed\n        var leftBounds = this.viewportLeft - 200;\n        var rightBounds = this.viewportRight + 200;\n        var columnToMuchLeft = columnLeft < leftBounds && columnRight < leftBounds;\n        var columnToMuchRight = columnLeft > rightBounds && columnRight > rightBounds;\n        return !columnToMuchLeft && !columnToMuchRight;\n    };\n    // used by:\n    // + angularGrid -> setting pinned body width\n    // note: this should be cached\n    ColumnController.prototype.getPinnedLeftContainerWidth = function () {\n        return this.getWidthOfColsInList(this.displayedLeftColumns);\n    };\n    // note: this should be cached\n    ColumnController.prototype.getPinnedRightContainerWidth = function () {\n        return this.getWidthOfColsInList(this.displayedRightColumns);\n    };\n    ColumnController.prototype.updatePrimaryColumnList = function (keys, masterList, actionIsAdd, columnCallback, eventType, source) {\n        var _this = this;\n        if (source === void 0) { source = \"api\"; }\n        if (!keys || utils_1._.missingOrEmpty(keys)) {\n            return;\n        }\n        var atLeastOne = false;\n        keys.forEach(function (key) {\n            var columnToAdd = _this.getPrimaryColumn(key);\n            if (!columnToAdd) {\n                return;\n            }\n            if (actionIsAdd) {\n                if (masterList.indexOf(columnToAdd) >= 0) {\n                    return;\n                }\n                masterList.push(columnToAdd);\n            }\n            else {\n                if (masterList.indexOf(columnToAdd) < 0) {\n                    return;\n                }\n                utils_1._.removeFromArray(masterList, columnToAdd);\n            }\n            columnCallback(columnToAdd);\n            atLeastOne = true;\n        });\n        if (!atLeastOne) {\n            return;\n        }\n        if (this.autoGroupsNeedBuilding) {\n            this.updateGridColumns();\n        }\n        this.updateDisplayedColumns(source);\n        var event = {\n            type: eventType,\n            columns: masterList,\n            column: masterList.length === 1 ? masterList[0] : null,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            source: source\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ColumnController.prototype.setRowGroupColumns = function (colKeys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.autoGroupsNeedBuilding = true;\n        this.setPrimaryColumnList(colKeys, this.rowGroupColumns, events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.setRowGroupActive.bind(this), source);\n    };\n    ColumnController.prototype.setRowGroupActive = function (active, column, source) {\n        if (active === column.isRowGroupActive()) {\n            return;\n        }\n        column.setRowGroupActive(active, source);\n        if (!active && !this.gridOptionsWrapper.isSuppressMakeColumnVisibleAfterUnGroup()) {\n            column.setVisible(true, source);\n        }\n    };\n    ColumnController.prototype.addRowGroupColumn = function (key, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (key) {\n            this.addRowGroupColumns([key], source);\n        }\n    };\n    ColumnController.prototype.addRowGroupColumns = function (keys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.autoGroupsNeedBuilding = true;\n        this.updatePrimaryColumnList(keys, this.rowGroupColumns, true, this.setRowGroupActive.bind(this, true), events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, source);\n    };\n    ColumnController.prototype.removeRowGroupColumns = function (keys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.autoGroupsNeedBuilding = true;\n        this.updatePrimaryColumnList(keys, this.rowGroupColumns, false, this.setRowGroupActive.bind(this, false), events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, source);\n    };\n    ColumnController.prototype.removeRowGroupColumn = function (key, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (key) {\n            this.removeRowGroupColumns([key], source);\n        }\n    };\n    ColumnController.prototype.addPivotColumns = function (keys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.updatePrimaryColumnList(keys, this.pivotColumns, true, function (column) { return column.setPivotActive(true, source); }, events_1.Events.EVENT_COLUMN_PIVOT_CHANGED, source);\n    };\n    ColumnController.prototype.setPivotColumns = function (colKeys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.setPrimaryColumnList(colKeys, this.pivotColumns, events_1.Events.EVENT_COLUMN_PIVOT_CHANGED, function (added, column) {\n            column.setPivotActive(added, source);\n        }, source);\n    };\n    ColumnController.prototype.addPivotColumn = function (key, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.addPivotColumns([key], source);\n    };\n    ColumnController.prototype.removePivotColumns = function (keys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.updatePrimaryColumnList(keys, this.pivotColumns, false, function (column) { return column.setPivotActive(false, source); }, events_1.Events.EVENT_COLUMN_PIVOT_CHANGED, source);\n    };\n    ColumnController.prototype.removePivotColumn = function (key, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.removePivotColumns([key], source);\n    };\n    ColumnController.prototype.setPrimaryColumnList = function (colKeys, masterList, eventName, columnCallback, source) {\n        var _this = this;\n        masterList.length = 0;\n        if (utils_1._.exists(colKeys)) {\n            colKeys.forEach(function (key) {\n                var column = _this.getPrimaryColumn(key);\n                if (column) {\n                    masterList.push(column);\n                }\n            });\n        }\n        this.primaryColumns.forEach(function (column) {\n            var added = masterList.indexOf(column) >= 0;\n            columnCallback(added, column);\n        });\n        if (this.autoGroupsNeedBuilding) {\n            this.updateGridColumns();\n        }\n        this.updateDisplayedColumns(source);\n        var event = {\n            type: eventName,\n            columns: masterList,\n            column: masterList.length === 1 ? masterList[0] : null,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            source: source\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ColumnController.prototype.setValueColumns = function (colKeys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.setPrimaryColumnList(colKeys, this.valueColumns, events_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.setValueActive.bind(this), source);\n    };\n    ColumnController.prototype.setValueActive = function (active, column, source) {\n        if (active === column.isValueActive()) {\n            return;\n        }\n        column.setValueActive(active, source);\n        if (active && !column.getAggFunc()) {\n            var defaultAggFunc = this.aggFuncService.getDefaultAggFunc(column);\n            column.setAggFunc(defaultAggFunc);\n        }\n    };\n    ColumnController.prototype.addValueColumns = function (keys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.updatePrimaryColumnList(keys, this.valueColumns, true, this.setValueActive.bind(this, true), events_1.Events.EVENT_COLUMN_VALUE_CHANGED, source);\n    };\n    ColumnController.prototype.addValueColumn = function (colKey, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (colKey) {\n            this.addValueColumns([colKey], source);\n        }\n    };\n    ColumnController.prototype.removeValueColumn = function (colKey, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.removeValueColumns([colKey], source);\n    };\n    ColumnController.prototype.removeValueColumns = function (keys, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.updatePrimaryColumnList(keys, this.valueColumns, false, this.setValueActive.bind(this, false), events_1.Events.EVENT_COLUMN_VALUE_CHANGED, source);\n    };\n    // returns the width we can set to this col, taking into consideration min and max widths\n    ColumnController.prototype.normaliseColumnWidth = function (column, newWidth) {\n        if (newWidth < column.getMinWidth()) {\n            newWidth = column.getMinWidth();\n        }\n        if (column.isGreaterThanMax(newWidth)) {\n            newWidth = column.getMaxWidth();\n        }\n        return newWidth;\n    };\n    ColumnController.prototype.getPrimaryOrGridColumn = function (key) {\n        var column = this.getPrimaryColumn(key);\n        if (column) {\n            return column;\n        }\n        else {\n            return this.getGridColumn(key);\n        }\n    };\n    ColumnController.prototype.setColumnWidth = function (key, // @key - the column who's size we want to change\n    newWidth, // @newWidth - width in pixels\n    shiftKey, // @takeFromAdjacent - if user has 'shift' pressed, then pixels are taken from adjacent column\n    finished, // @finished - ends up in the event, tells the user if more events are to come\n    source) {\n        if (source === void 0) { source = \"api\"; }\n        var col = this.getPrimaryOrGridColumn(key);\n        if (!col) {\n            return;\n        }\n        var sets = [];\n        sets.push({\n            width: newWidth,\n            ratios: [1],\n            columns: [col]\n        });\n        // if user wants to do shift resize by default, then we invert the shift operation\n        var defaultIsShift = this.gridOptionsWrapper.getColResizeDefault() === 'shift';\n        if (defaultIsShift) {\n            shiftKey = !shiftKey;\n        }\n        if (shiftKey) {\n            var otherCol = this.getDisplayedColAfter(col);\n            if (!otherCol) {\n                return;\n            }\n            var widthDiff = col.getActualWidth() - newWidth;\n            var otherColWidth = otherCol.getActualWidth() + widthDiff;\n            sets.push({\n                width: otherColWidth,\n                ratios: [1],\n                columns: [otherCol]\n            });\n        }\n        this.resizeColumnSets(sets, finished, source);\n    };\n    ColumnController.prototype.checkMinAndMaxWidthsForSet = function (columnResizeSet) {\n        var columns = columnResizeSet.columns, width = columnResizeSet.width;\n        // every col has a min width, so sum them all up and see if we have enough room\n        // for all the min widths\n        var minWidthAccumulated = 0;\n        var maxWidthAccumulated = 0;\n        var maxWidthActive = true;\n        columns.forEach(function (col) {\n            minWidthAccumulated += col.getMinWidth();\n            if (col.getMaxWidth() > 0) {\n                maxWidthAccumulated += col.getMaxWidth();\n            }\n            else {\n                // if at least one columns has no max width, it means the group of columns\n                // then has no max width, as at least one column can take as much width as possible\n                maxWidthActive = false;\n            }\n        });\n        var minWidthPasses = width >= minWidthAccumulated;\n        var maxWidthPasses = !maxWidthActive || (width <= maxWidthAccumulated);\n        return minWidthPasses && maxWidthPasses;\n    };\n    // method takes sets of columns and resizes them. either all sets will be resized, or nothing\n    // be resized. this is used for example when user tries to resize a group and holds shift key,\n    // then both the current group (grows), and the adjacent group (shrinks), will get resized,\n    // so that's two sets for this method.\n    ColumnController.prototype.resizeColumnSets = function (resizeSets, finished, source) {\n        var passMinMaxCheck = utils_1._.every(resizeSets, this.checkMinAndMaxWidthsForSet.bind(this));\n        if (!passMinMaxCheck) {\n            // even though we are not going to resize beyond min/max size, we still need to raise event when finished\n            if (finished) {\n                var columns = resizeSets && resizeSets.length > 0 ? resizeSets[0].columns : null;\n                var event_3 = {\n                    type: events_1.Events.EVENT_COLUMN_RESIZED,\n                    columns: columns,\n                    column: columns && columns.length === 1 ? columns[0] : null,\n                    finished: finished,\n                    api: this.gridApi,\n                    columnApi: this.columnApi,\n                    source: source\n                };\n                this.eventService.dispatchEvent(event_3);\n            }\n            return; // don't resize!\n        }\n        var changedCols = [];\n        var allCols = [];\n        resizeSets.forEach(function (set) {\n            var width = set.width, columns = set.columns, ratios = set.ratios;\n            // keep track of pixels used, and last column gets the remaining,\n            // to cater for rounding errors, and min width adjustments\n            var newWidths = {};\n            var finishedCols = {};\n            columns.forEach(function (col) { return allCols.push(col); });\n            // the loop below goes through each col. if a col exceeds it's min/max width,\n            // it then gets set to its min/max width and the column is removed marked as 'finished'\n            // and the calculation is done again leaving this column out. take for example columns\n            // {A, width: 50, maxWidth: 100}\n            // {B, width: 50}\n            // {C, width: 50}\n            // and then the set is set to width 600 - on the first pass the grid tries to set each column\n            // to 200. it checks A and sees 200 > 100 and so sets the width to 100. col A is then marked\n            // as 'finished' and the calculation is done again with the remaining cols B and C, which end up\n            // splitting the remaining 500 pixels.\n            var finishedColsGrew = true;\n            var loopCount = 0;\n            var _loop_2 = function () {\n                loopCount++;\n                if (loopCount > 1000) {\n                    // this should never happen, but in the future, someone might introduce a bug here,\n                    // so we stop the browser from hanging and report bug properly\n                    console.error('ag-Grid: infinite loop in resizeColumnSets');\n                    return \"break\";\n                }\n                finishedColsGrew = false;\n                var subsetCols = [];\n                var subsetRatios = [];\n                var subsetRatioTotal = 0;\n                var pixelsToDistribute = width;\n                columns.forEach(function (col, index) {\n                    var thisColFinished = finishedCols[col.getId()];\n                    if (thisColFinished) {\n                        pixelsToDistribute -= newWidths[col.getId()];\n                    }\n                    else {\n                        subsetCols.push(col);\n                        var ratioThisCol = ratios[index];\n                        subsetRatioTotal += ratioThisCol;\n                        subsetRatios.push(ratioThisCol);\n                    }\n                });\n                // because we are not using all of the ratios (cols can be missing),\n                // we scale the ratio. if all columns are included, then subsetRatioTotal=1,\n                // and so the ratioScale will be 1.\n                var ratioScale = 1 / subsetRatioTotal;\n                subsetCols.forEach(function (col, index) {\n                    var lastCol = index === (subsetCols.length - 1);\n                    var colNewWidth;\n                    if (lastCol) {\n                        colNewWidth = pixelsToDistribute;\n                    }\n                    else {\n                        colNewWidth = Math.round(ratios[index] * width * ratioScale);\n                        pixelsToDistribute -= colNewWidth;\n                    }\n                    if (colNewWidth < col.getMinWidth()) {\n                        colNewWidth = col.getMinWidth();\n                        finishedCols[col.getId()] = true;\n                        finishedColsGrew = true;\n                    }\n                    else if (col.getMaxWidth() > 0 && colNewWidth > col.getMaxWidth()) {\n                        colNewWidth = col.getMaxWidth();\n                        finishedCols[col.getId()] = true;\n                        finishedColsGrew = true;\n                    }\n                    newWidths[col.getId()] = colNewWidth;\n                });\n            };\n            while (finishedColsGrew) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            columns.forEach(function (col) {\n                var newWidth = newWidths[col.getId()];\n                if (col.getActualWidth() !== newWidth) {\n                    col.setActualWidth(newWidth);\n                    changedCols.push(col);\n                }\n            });\n        });\n        // if no cols changed, then no need to update more or send event.\n        var atLeastOneColChanged = changedCols.length > 0;\n        if (atLeastOneColChanged) {\n            this.setLeftValues(source);\n            this.updateBodyWidths();\n            this.checkDisplayedVirtualColumns();\n        }\n        // check for change first, to avoid unnecessary firing of events\n        // however we always fire 'finished' events. this is important\n        // when groups are resized, as if the group is changing slowly,\n        // eg 1 pixel at a time, then each change will fire change events\n        // in all the columns in the group, but only one with get the pixel.\n        if (atLeastOneColChanged || finished) {\n            var event_4 = {\n                type: events_1.Events.EVENT_COLUMN_RESIZED,\n                columns: allCols,\n                column: allCols.length === 1 ? allCols[0] : null,\n                finished: finished,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                source: source\n            };\n            this.eventService.dispatchEvent(event_4);\n        }\n    };\n    ColumnController.prototype.setColumnAggFunc = function (column, aggFunc, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (column) {\n            column.setAggFunc(aggFunc);\n            var event_5 = {\n                type: events_1.Events.EVENT_COLUMN_VALUE_CHANGED,\n                columns: [column],\n                column: column,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                source: source\n            };\n            this.eventService.dispatchEvent(event_5);\n        }\n    };\n    ColumnController.prototype.moveRowGroupColumn = function (fromIndex, toIndex, source) {\n        if (source === void 0) { source = \"api\"; }\n        var column = this.rowGroupColumns[fromIndex];\n        this.rowGroupColumns.splice(fromIndex, 1);\n        this.rowGroupColumns.splice(toIndex, 0, column);\n        var event = {\n            type: events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED,\n            columns: this.rowGroupColumns,\n            column: this.rowGroupColumns.length === 1 ? this.rowGroupColumns[0] : null,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            source: source\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ColumnController.prototype.moveColumns = function (columnsToMoveKeys, toIndex, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.columnAnimationService.start();\n        if (toIndex > this.gridColumns.length - columnsToMoveKeys.length) {\n            console.warn('ag-Grid: tried to insert columns in invalid location, toIndex = ' + toIndex);\n            console.warn('ag-Grid: remember that you should not count the moving columns when calculating the new index');\n            return;\n        }\n        // we want to pull all the columns out first and put them into an ordered list\n        var columnsToMove = this.getGridColumns(columnsToMoveKeys);\n        var failedRules = !this.doesMovePassRules(columnsToMove, toIndex);\n        if (failedRules) {\n            return;\n        }\n        utils_1._.moveInArray(this.gridColumns, columnsToMove, toIndex);\n        this.updateDisplayedColumns(source);\n        var event = {\n            type: events_1.Events.EVENT_COLUMN_MOVED,\n            columns: columnsToMove,\n            column: columnsToMove.length === 1 ? columnsToMove[0] : null,\n            toIndex: toIndex,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            source: source\n        };\n        this.eventService.dispatchEvent(event);\n        this.columnAnimationService.finish();\n    };\n    ColumnController.prototype.doesMovePassRules = function (columnsToMove, toIndex) {\n        // make a copy of what the grid columns would look like after the move\n        var proposedColumnOrder = this.gridColumns.slice();\n        utils_1._.moveInArray(proposedColumnOrder, columnsToMove, toIndex);\n        // then check that the new proposed order of the columns passes all rules\n        if (!this.doesMovePassMarryChildren(proposedColumnOrder)) {\n            return false;\n        }\n        if (!this.doesMovePassLockedPositions(proposedColumnOrder)) {\n            return false;\n        }\n        return true;\n    };\n    ColumnController.prototype.doesMovePassLockedPositions = function (proposedColumnOrder) {\n        var foundNonLocked = false;\n        var rulePassed = true;\n        // go though the cols, see if any non-locked appear before any locked\n        proposedColumnOrder.forEach(function (col) {\n            if (col.getColDef().lockPosition) {\n                if (foundNonLocked) {\n                    rulePassed = false;\n                }\n            }\n            else {\n                foundNonLocked = true;\n            }\n        });\n        return rulePassed;\n    };\n    ColumnController.prototype.doesMovePassMarryChildren = function (allColumnsCopy) {\n        var rulePassed = true;\n        this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function (child) {\n            if (!(child instanceof originalColumnGroup_1.OriginalColumnGroup)) {\n                return;\n            }\n            var columnGroup = child;\n            var marryChildren = columnGroup.getColGroupDef() && columnGroup.getColGroupDef().marryChildren;\n            if (!marryChildren) {\n                return;\n            }\n            var newIndexes = [];\n            columnGroup.getLeafColumns().forEach(function (col) {\n                var newColIndex = allColumnsCopy.indexOf(col);\n                newIndexes.push(newColIndex);\n            });\n            var maxIndex = Math.max.apply(Math, newIndexes);\n            var minIndex = Math.min.apply(Math, newIndexes);\n            // spread is how far the first column in this group is away from the last column\n            var spread = maxIndex - minIndex;\n            var maxSpread = columnGroup.getLeafColumns().length - 1;\n            // if the columns\n            if (spread > maxSpread) {\n                rulePassed = false;\n            }\n            // console.log(`maxIndex = ${maxIndex}, minIndex = ${minIndex}, spread = ${spread}, maxSpread = ${maxSpread}, fail = ${spread > (count-1)}`)\n            // console.log(allColumnsCopy.map( col => col.getColDef().field).join(','));\n        });\n        return rulePassed;\n    };\n    ColumnController.prototype.moveColumn = function (key, toIndex, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.moveColumns([key], toIndex, source);\n    };\n    ColumnController.prototype.moveColumnByIndex = function (fromIndex, toIndex, source) {\n        if (source === void 0) { source = \"api\"; }\n        var column = this.gridColumns[fromIndex];\n        this.moveColumn(column, toIndex, source);\n    };\n    // used by:\n    // + angularGrid -> for setting body width\n    // + rowController -> setting main row widths (when inserting and resizing)\n    // need to cache this\n    ColumnController.prototype.getBodyContainerWidth = function () {\n        return this.bodyWidth;\n    };\n    ColumnController.prototype.getContainerWidth = function (pinned) {\n        switch (pinned) {\n            case column_1.Column.PINNED_LEFT:\n                return this.leftWidth;\n            case column_1.Column.PINNED_RIGHT:\n                return this.rightWidth;\n            default:\n                return this.bodyWidth;\n        }\n    };\n    // after setColumnWidth or updateGroupsAndDisplayedColumns\n    ColumnController.prototype.updateBodyWidths = function () {\n        var newBodyWidth = this.getWidthOfColsInList(this.displayedCenterColumns);\n        var newLeftWidth = this.getWidthOfColsInList(this.displayedLeftColumns);\n        var newRightWidth = this.getWidthOfColsInList(this.displayedRightColumns);\n        // this is used by virtual col calculation, for RTL only, as a change to body width can impact displayed\n        // columns, due to RTL inverting the y coordinates\n        this.bodyWidthDirty = this.bodyWidth !== newBodyWidth;\n        var atLeastOneChanged = this.bodyWidth !== newBodyWidth || this.leftWidth !== newLeftWidth || this.rightWidth !== newRightWidth;\n        if (atLeastOneChanged) {\n            this.bodyWidth = newBodyWidth;\n            this.leftWidth = newLeftWidth;\n            this.rightWidth = newRightWidth;\n            // when this fires, it is picked up by the gridPanel, which ends up in\n            // gridPanel calling setWidthAndScrollPosition(), which in turn calls setVirtualViewportPosition()\n            var event_6 = {\n                type: events_1.Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_6);\n        }\n    };\n    // + rowController\n    ColumnController.prototype.getValueColumns = function () {\n        return this.valueColumns ? this.valueColumns : [];\n    };\n    // + rowController\n    ColumnController.prototype.getPivotColumns = function () {\n        return this.pivotColumns ? this.pivotColumns : [];\n    };\n    // + clientSideRowModel\n    ColumnController.prototype.isPivotActive = function () {\n        return this.pivotColumns && this.pivotColumns.length > 0 && this.pivotMode;\n    };\n    // + toolPanel\n    ColumnController.prototype.getRowGroupColumns = function () {\n        return this.rowGroupColumns ? this.rowGroupColumns : [];\n    };\n    // + rowController -> while inserting rows\n    ColumnController.prototype.getDisplayedCenterColumns = function () {\n        return this.displayedCenterColumns;\n    };\n    // + rowController -> while inserting rows\n    ColumnController.prototype.getDisplayedLeftColumns = function () {\n        return this.displayedLeftColumns;\n    };\n    ColumnController.prototype.getDisplayedRightColumns = function () {\n        return this.displayedRightColumns;\n    };\n    ColumnController.prototype.getDisplayedColumns = function (type) {\n        switch (type) {\n            case column_1.Column.PINNED_LEFT:\n                return this.getDisplayedLeftColumns();\n            case column_1.Column.PINNED_RIGHT:\n                return this.getDisplayedRightColumns();\n            default:\n                return this.getDisplayedCenterColumns();\n        }\n    };\n    // used by:\n    // + clientSideRowController -> sorting, building quick filter text\n    // + headerRenderer -> sorting (clearing icon)\n    ColumnController.prototype.getAllPrimaryColumns = function () {\n        return this.primaryColumns ? this.primaryColumns.slice() : null;\n    };\n    ColumnController.prototype.getSecondaryColumns = function () {\n        return this.secondaryColumns ? this.secondaryColumns.slice() : null;\n    };\n    ColumnController.prototype.getAllColumnsForQuickFilter = function () {\n        return this.columnsForQuickFilter;\n    };\n    // + moveColumnController\n    ColumnController.prototype.getAllGridColumns = function () {\n        return this.gridColumns;\n    };\n    ColumnController.prototype.isEmpty = function () {\n        return utils_1._.missingOrEmpty(this.gridColumns);\n    };\n    ColumnController.prototype.isRowGroupEmpty = function () {\n        return utils_1._.missingOrEmpty(this.rowGroupColumns);\n    };\n    ColumnController.prototype.setColumnVisible = function (key, visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.setColumnsVisible([key], visible, source);\n    };\n    ColumnController.prototype.setColumnsVisible = function (keys, visible, source) {\n        var _this = this;\n        if (source === void 0) { source = \"api\"; }\n        this.columnAnimationService.start();\n        this.actionOnGridColumns(keys, function (column) {\n            if (column.isVisible() !== visible) {\n                column.setVisible(visible, source);\n                return true;\n            }\n            else {\n                return false;\n            }\n        }, source, function () {\n            var event = {\n                type: events_1.Events.EVENT_COLUMN_VISIBLE,\n                visible: visible,\n                column: null,\n                columns: null,\n                api: _this.gridApi,\n                columnApi: _this.columnApi,\n                source: source\n            };\n            return event;\n        });\n        this.columnAnimationService.finish();\n    };\n    ColumnController.prototype.setColumnPinned = function (key, pinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (key) {\n            this.setColumnsPinned([key], pinned, source);\n        }\n    };\n    ColumnController.prototype.setColumnsPinned = function (keys, pinned, source) {\n        var _this = this;\n        if (source === void 0) { source = \"api\"; }\n        if (this.gridOptionsWrapper.getDomLayout() === 'print') {\n            console.warn(\"Changing the column pinning status is not allowed with domLayout='print'\");\n            return;\n        }\n        this.columnAnimationService.start();\n        var actualPinned;\n        if (pinned === true || pinned === column_1.Column.PINNED_LEFT) {\n            actualPinned = column_1.Column.PINNED_LEFT;\n        }\n        else if (pinned === column_1.Column.PINNED_RIGHT) {\n            actualPinned = column_1.Column.PINNED_RIGHT;\n        }\n        else {\n            actualPinned = null;\n        }\n        this.actionOnGridColumns(keys, function (col) {\n            if (col.getPinned() !== actualPinned) {\n                col.setPinned(actualPinned);\n                return true;\n            }\n            else {\n                return false;\n            }\n        }, source, function () {\n            var event = {\n                type: events_1.Events.EVENT_COLUMN_PINNED,\n                pinned: actualPinned,\n                column: null,\n                columns: null,\n                api: _this.gridApi,\n                columnApi: _this.columnApi,\n                source: source\n            };\n            return event;\n        });\n        this.columnAnimationService.finish();\n    };\n    // does an action on a set of columns. provides common functionality for looking up the\n    // columns based on key, getting a list of effected columns, and then updated the event\n    // with either one column (if it was just one col) or a list of columns\n    // used by: autoResize, setVisible, setPinned\n    ColumnController.prototype.actionOnGridColumns = function (// the column keys this action will be on\n    keys, \n    // the action to do - if this returns false, the column was skipped\n    // and won't be included in the event\n    action, \n    // should return back a column event of the right type\n    source, createEvent) {\n        var _this = this;\n        if (utils_1._.missingOrEmpty(keys)) {\n            return;\n        }\n        var updatedColumns = [];\n        keys.forEach(function (key) {\n            var column = _this.getGridColumn(key);\n            if (!column) {\n                return;\n            }\n            // need to check for false with type (ie !== instead of !=)\n            // as not returning anything (undefined) would also be false\n            var resultOfAction = action(column);\n            if (resultOfAction !== false) {\n                updatedColumns.push(column);\n            }\n        });\n        if (updatedColumns.length === 0) {\n            return;\n        }\n        this.updateDisplayedColumns(source);\n        if (utils_1._.exists(createEvent) && createEvent) {\n            var event_7 = createEvent();\n            event_7.columns = updatedColumns;\n            event_7.column = updatedColumns.length === 1 ? updatedColumns[0] : null;\n            this.eventService.dispatchEvent(event_7);\n        }\n    };\n    ColumnController.prototype.getDisplayedColBefore = function (col) {\n        var allDisplayedColumns = this.getAllDisplayedColumns();\n        var oldIndex = allDisplayedColumns.indexOf(col);\n        if (oldIndex > 0) {\n            return allDisplayedColumns[oldIndex - 1];\n        }\n        else {\n            return null;\n        }\n    };\n    // used by:\n    // + rowRenderer -> for navigation\n    ColumnController.prototype.getDisplayedColAfter = function (col) {\n        var allDisplayedColumns = this.getAllDisplayedColumns();\n        var oldIndex = allDisplayedColumns.indexOf(col);\n        if (oldIndex < (allDisplayedColumns.length - 1)) {\n            return allDisplayedColumns[oldIndex + 1];\n        }\n        else {\n            return null;\n        }\n    };\n    ColumnController.prototype.getDisplayedGroupAfter = function (columnGroup) {\n        // pick one col in this group at random\n        var col = columnGroup.getDisplayedLeafColumns()[0];\n        var requiredLevel = columnGroup.getOriginalColumnGroup().getLevel();\n        while (true) {\n            // keep moving to the next col, until we get to another group\n            col = this.getDisplayedColAfter(col);\n            // if no col after, means no group after\n            if (!col) {\n                return null;\n            }\n            // get group at same level as the one we are looking for\n            var groupPointer = col.getParent();\n            while (groupPointer.getOriginalColumnGroup().getLevel() !== requiredLevel) {\n                groupPointer = groupPointer.getParent();\n            }\n            if (groupPointer !== columnGroup) {\n                return groupPointer;\n            }\n        }\n    };\n    ColumnController.prototype.isPinningLeft = function () {\n        return this.displayedLeftColumns.length > 0;\n    };\n    ColumnController.prototype.isPinningRight = function () {\n        return this.displayedRightColumns.length > 0;\n    };\n    ColumnController.prototype.getPrimaryAndSecondaryAndAutoColumns = function () {\n        var result = this.primaryColumns ? this.primaryColumns.slice(0) : [];\n        if (this.groupAutoColumns && utils_1._.exists(this.groupAutoColumns)) {\n            this.groupAutoColumns.forEach(function (col) { return result.push(col); });\n        }\n        if (this.secondaryColumnsPresent && this.secondaryColumns) {\n            this.secondaryColumns.forEach(function (column) { return result.push(column); });\n        }\n        return result;\n    };\n    ColumnController.prototype.createStateItemFromColumn = function (column) {\n        var rowGroupIndex = column.isRowGroupActive() ? this.rowGroupColumns.indexOf(column) : null;\n        var pivotIndex = column.isPivotActive() ? this.pivotColumns.indexOf(column) : null;\n        var aggFunc = column.isValueActive() ? column.getAggFunc() : null;\n        return {\n            colId: column.getColId(),\n            hide: !column.isVisible(),\n            aggFunc: aggFunc,\n            width: column.getActualWidth(),\n            pivotIndex: pivotIndex,\n            pinned: column.getPinned(),\n            rowGroupIndex: rowGroupIndex\n        };\n    };\n    ColumnController.prototype.getColumnState = function () {\n        if (utils_1._.missing(this.primaryColumns)) {\n            return [];\n        }\n        var primaryColumnState = this.primaryColumns.map(this.createStateItemFromColumn.bind(this));\n        var groupAutoColumnState = this.groupAutoColumns\n            // if groupAutoCols, then include them\n            ? this.groupAutoColumns.map(this.createStateItemFromColumn.bind(this))\n            // otherwise no\n            : [];\n        var columnStateList = groupAutoColumnState.concat(primaryColumnState);\n        if (!this.pivotMode) {\n            this.orderColumnStateList(columnStateList);\n        }\n        return columnStateList;\n    };\n    ColumnController.prototype.orderColumnStateList = function (columnStateList) {\n        var gridColumnIds = this.gridColumns.map(function (column) { return column.getColId(); });\n        columnStateList.sort(function (itemA, itemB) {\n            var posA = gridColumnIds.indexOf(itemA.colId);\n            var posB = gridColumnIds.indexOf(itemB.colId);\n            return posA - posB;\n        });\n    };\n    ColumnController.prototype.resetColumnState = function (suppressEverythingEvent, source) {\n        // NOTE = there is one bug here that no customer has noticed - if a column has colDef.lockPosition,\n        // this is ignored  below when ordering the cols. to work, we should always put lockPosition cols first.\n        // As a work around, developers should just put lockPosition columns first in their colDef list.\n        if (suppressEverythingEvent === void 0) { suppressEverythingEvent = false; }\n        if (source === void 0) { source = \"api\"; }\n        // we can't use 'allColumns' as the order might of messed up, so get the primary ordered list\n        var primaryColumns = this.getColumnsFromTree(this.primaryColumnTree);\n        var columnStates = [];\n        // we start at 1000, so if user has mix of rowGroup and group specified, it will work with both.\n        // eg IF user has ColA.rowGroupIndex=0, ColB.rowGroupIndex=1, ColC.rowGroup=true,\n        // THEN result will be ColA.rowGroupIndex=0, ColB.rowGroupIndex=1, ColC.rowGroup=-1000\n        var letRowGroupIndex = 1000;\n        var letPivotIndex = 1000;\n        if (primaryColumns) {\n            primaryColumns.forEach(function (column) {\n                var rowGroupIndex = column.getColDef().rowGroupIndex;\n                var rowGroup = column.getColDef().rowGroup;\n                var pivotIndex = column.getColDef().pivotIndex;\n                var pivot = column.getColDef().pivot;\n                var stateItem = {\n                    colId: column.getColId(),\n                    aggFunc: column.getColDef().aggFunc,\n                    hide: column.getColDef().hide,\n                    pinned: column.getColDef().pinned,\n                    rowGroupIndex: rowGroupIndex,\n                    pivotIndex: column.getColDef().pivotIndex,\n                    width: column.getColDef().width\n                };\n                if (utils_1._.missing(rowGroupIndex) && rowGroup) {\n                    stateItem.rowGroupIndex = letRowGroupIndex++;\n                }\n                if (utils_1._.missing(pivotIndex) && pivot) {\n                    stateItem.pivotIndex = letPivotIndex++;\n                }\n                columnStates.push(stateItem);\n            });\n        }\n        this.setColumnState(columnStates, suppressEverythingEvent, source);\n    };\n    ColumnController.prototype.setColumnState = function (columnState, suppressEverythingEvent, source) {\n        var _this = this;\n        if (suppressEverythingEvent === void 0) { suppressEverythingEvent = false; }\n        if (source === void 0) { source = \"api\"; }\n        if (utils_1._.missingOrEmpty(this.primaryColumns)) {\n            return false;\n        }\n        var columnStateBefore = this.getColumnState();\n        this.autoGroupsNeedBuilding = true;\n        // at the end below, this list will have all columns we got no state for\n        var columnsWithNoState = this.primaryColumns.slice();\n        this.rowGroupColumns = [];\n        this.valueColumns = [];\n        this.pivotColumns = [];\n        var success = true;\n        var rowGroupIndexes = {};\n        var pivotIndexes = {};\n        var autoGroupColumnStates = [];\n        if (columnState) {\n            columnState.forEach(function (stateItem) {\n                // auto group columns are re-created so deferring syncing with ColumnState\n                if (utils_1._.exists(_this.getAutoColumn(stateItem.colId))) {\n                    autoGroupColumnStates.push(stateItem);\n                    return;\n                }\n                var column = _this.getPrimaryColumn(stateItem.colId);\n                if (!column) {\n                    console.warn('ag-grid: column ' + stateItem.colId + ' not found');\n                    success = false;\n                }\n                else {\n                    _this.syncColumnWithStateItem(column, stateItem, rowGroupIndexes, pivotIndexes, source);\n                    utils_1._.removeFromArray(columnsWithNoState, column);\n                }\n            });\n        }\n        // anything left over, we got no data for, so add in the column as non-value, non-rowGroup and hidden\n        columnsWithNoState.forEach(this.syncColumnWithNoState.bind(this));\n        // sort the lists according to the indexes that were provided\n        this.rowGroupColumns.sort(this.sortColumnListUsingIndexes.bind(this, rowGroupIndexes));\n        this.pivotColumns.sort(this.sortColumnListUsingIndexes.bind(this, pivotIndexes));\n        this.updateGridColumns();\n        // sync newly created auto group columns with ColumnState\n        autoGroupColumnStates.forEach(function (stateItem) {\n            var autoCol = _this.getAutoColumn(stateItem.colId);\n            _this.syncColumnWithStateItem(autoCol, stateItem, rowGroupIndexes, pivotIndexes, source);\n        });\n        if (columnState) {\n            var orderOfColIds_1 = columnState.map(function (stateItem) { return stateItem.colId; });\n            this.gridColumns.sort(function (colA, colB) {\n                var indexA = orderOfColIds_1.indexOf(colA.getId());\n                var indexB = orderOfColIds_1.indexOf(colB.getId());\n                return indexA - indexB;\n            });\n        }\n        this.updateDisplayedColumns(source);\n        if (!suppressEverythingEvent) {\n            var event_8 = {\n                type: events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                source: source\n            };\n            this.eventService.dispatchEvent(event_8);\n        }\n        this.raiseColumnEvents(columnStateBefore, source);\n        return success;\n    };\n    ColumnController.prototype.raiseColumnEvents = function (columnStateBefore, source) {\n        var _this = this;\n        if (this.gridOptionsWrapper.isSuppressSetColumnStateEvents()) {\n            return;\n        }\n        var columnStateAfter = this.getColumnState();\n        // raises generic ColumnEvents where all columns are returned rather than what has changed\n        var raiseEventWithAllColumns = function (eventType, idMapper, columns) {\n            var unchanged = utils_1._.compareArrays(columnStateBefore.map(idMapper).sort(), columnStateAfter.map(idMapper).sort());\n            if (unchanged) {\n                return;\n            }\n            // returning all columns rather than what has changed!\n            var event = {\n                type: eventType,\n                columns: columns,\n                column: columns.length === 1 ? columns[0] : null,\n                api: _this.gridApi,\n                columnApi: _this.columnApi,\n                source: source\n            };\n            _this.eventService.dispatchEvent(event);\n        };\n        // determines which columns have changed according to supplied predicate\n        var getChangedColumns = function (changedPredicate) {\n            var changedColumns = [];\n            var columnStateBeforeMap = {};\n            columnStateBefore.forEach(function (col) {\n                columnStateBeforeMap[col.colId] = col;\n            });\n            _this.gridColumns.forEach(function (column) {\n                var colStateBefore = columnStateBeforeMap[column.getColId()];\n                if (!colStateBefore || changedPredicate(colStateBefore, column)) {\n                    changedColumns.push(column);\n                }\n            });\n            return changedColumns;\n        };\n        // generic ColumnEvents which return current column list\n        var valueColumnIdMapper = function (cs) { return cs.colId + '-' + cs.aggFunc; };\n        raiseEventWithAllColumns(events_1.Events.EVENT_COLUMN_VALUE_CHANGED, valueColumnIdMapper, this.valueColumns);\n        var pivotColumnIdMapper = function (cs) { return cs.colId + '-' + cs.pivotIndex; };\n        raiseEventWithAllColumns(events_1.Events.EVENT_COLUMN_PIVOT_CHANGED, pivotColumnIdMapper, this.pivotColumns);\n        var rowGroupColumnIdMapper = function (cs) { return cs.colId + '-' + cs.rowGroupIndex; };\n        raiseEventWithAllColumns(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, rowGroupColumnIdMapper, this.rowGroupColumns);\n        // specific ColumnEvents which return what's changed\n        var pinnedChangePredicate = function (cs, c) { return cs.pinned !== c.getPinned(); };\n        this.raiseColumnPinnedEvent(getChangedColumns(pinnedChangePredicate), source);\n        var visibilityChangePredicate = function (cs, c) { return cs.hide === c.isVisible(); };\n        var cols = getChangedColumns(visibilityChangePredicate);\n        this.raiseColumnVisibleEvent(cols, source);\n        var resizeChangePredicate = function (cs, c) { return cs.width !== c.getActualWidth(); };\n        this.raiseColumnResizeEvent(getChangedColumns(resizeChangePredicate), source);\n        // special handling for moved column events\n        this.raiseColumnMovedEvent(columnStateBefore, source);\n    };\n    ColumnController.prototype.raiseColumnPinnedEvent = function (changedColumns, source) {\n        if (changedColumns.length > 0) {\n            var event_9 = {\n                type: events_1.Events.EVENT_COLUMN_PINNED,\n                pinned: null,\n                columns: changedColumns,\n                column: null,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                source: source\n            };\n            this.eventService.dispatchEvent(event_9);\n        }\n    };\n    ColumnController.prototype.raiseColumnVisibleEvent = function (changedColumns, source) {\n        if (changedColumns.length > 0) {\n            var event_10 = {\n                type: events_1.Events.EVENT_COLUMN_VISIBLE,\n                visible: undefined,\n                columns: changedColumns,\n                column: null,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                source: source\n            };\n            this.eventService.dispatchEvent(event_10);\n        }\n    };\n    ColumnController.prototype.raiseColumnResizeEvent = function (changedColumns, source) {\n        if (changedColumns.length > 0) {\n            var event_11 = {\n                type: events_1.Events.EVENT_COLUMN_RESIZED,\n                columns: changedColumns,\n                column: null,\n                finished: true,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                source: source\n            };\n            this.eventService.dispatchEvent(event_11);\n        }\n    };\n    ColumnController.prototype.raiseColumnMovedEvent = function (columnStateBefore, source) {\n        var movedColumns = [];\n        var columnStateAfter = this.getColumnState();\n        var _loop_3 = function (i) {\n            var before = columnStateBefore[i];\n            var after = columnStateAfter[i];\n            // don't consider column if reintroduced or hidden\n            if (!before || after.hide) {\n                return \"continue\";\n            }\n            if (before.colId !== after.colId) {\n                var predicate = function (column) { return column.getColId() === after.colId; };\n                var movedColumn = utils_1._.find(this_1.allDisplayedColumns, predicate);\n                movedColumns.push(movedColumn);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < columnStateAfter.length; i++) {\n            _loop_3(i);\n        }\n        if (movedColumns.length > 0) {\n            var event_12 = {\n                type: events_1.Events.EVENT_COLUMN_MOVED,\n                columns: movedColumns,\n                column: null,\n                toIndex: undefined,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                source: source\n            };\n            this.eventService.dispatchEvent(event_12);\n        }\n    };\n    ColumnController.prototype.sortColumnListUsingIndexes = function (indexes, colA, colB) {\n        var indexA = indexes[colA.getId()];\n        var indexB = indexes[colB.getId()];\n        return indexA - indexB;\n    };\n    ColumnController.prototype.syncColumnWithNoState = function (column, source) {\n        column.setVisible(false, source);\n        column.setAggFunc(null);\n        column.setPinned(null);\n        column.setRowGroupActive(false, source);\n        column.setPivotActive(false, source);\n        column.setValueActive(false, source);\n    };\n    ColumnController.prototype.syncColumnWithStateItem = function (column, stateItem, rowGroupIndexes, pivotIndexes, source) {\n        if (!column) {\n            return;\n        }\n        // following ensures we are left with boolean true or false, eg converts (null, undefined, 0) all to true\n        column.setVisible(!stateItem.hide, source);\n        // sets pinned to 'left' or 'right'\n        column.setPinned(stateItem.pinned);\n        // if width provided and valid, use it, otherwise stick with the old width\n        var minColWidth = this.gridOptionsWrapper.getMinColWidth();\n        if (stateItem.width && minColWidth &&\n            (stateItem.width >= minColWidth)) {\n            column.setActualWidth(stateItem.width, source);\n        }\n        if (typeof stateItem.aggFunc === 'string') {\n            column.setAggFunc(stateItem.aggFunc);\n            column.setValueActive(true, source);\n            this.valueColumns.push(column);\n        }\n        else {\n            if (utils_1._.exists(stateItem.aggFunc)) {\n                console.warn('ag-Grid: stateItem.aggFunc must be a string. if using your own aggregation ' +\n                    'functions, register the functions first before using them in get/set state. This is because it is' +\n                    'intended for the column state to be stored and retrieved as simple JSON.');\n            }\n            column.setAggFunc(null);\n            column.setValueActive(false, source);\n        }\n        if (typeof stateItem.rowGroupIndex === 'number') {\n            this.rowGroupColumns.push(column);\n            column.setRowGroupActive(true, source);\n            rowGroupIndexes[column.getId()] = stateItem.rowGroupIndex;\n        }\n        else {\n            column.setRowGroupActive(false, source);\n        }\n        if (typeof stateItem.pivotIndex === 'number') {\n            this.pivotColumns.push(column);\n            column.setPivotActive(true, source);\n            pivotIndexes[column.getId()] = stateItem.pivotIndex;\n        }\n        else {\n            column.setPivotActive(false, source);\n        }\n    };\n    ColumnController.prototype.getGridColumns = function (keys) {\n        return this.getColumns(keys, this.getGridColumn.bind(this));\n    };\n    ColumnController.prototype.getColumns = function (keys, columnLookupCallback) {\n        var foundColumns = [];\n        if (keys) {\n            keys.forEach(function (key) {\n                var column = columnLookupCallback(key);\n                if (column) {\n                    foundColumns.push(column);\n                }\n            });\n        }\n        return foundColumns;\n    };\n    // used by growGroupPanel\n    ColumnController.prototype.getColumnWithValidation = function (key) {\n        if (key == null) {\n            return null;\n        }\n        var column = this.getPrimaryColumn(key);\n        if (!column) {\n            console.warn('ag-Grid: could not find column ' + key);\n        }\n        return column;\n    };\n    ColumnController.prototype.getPrimaryColumn = function (key) {\n        return this.getColumn(key, this.primaryColumns);\n    };\n    ColumnController.prototype.getGridColumn = function (key) {\n        return this.getColumn(key, this.gridColumns);\n    };\n    ColumnController.prototype.getColumn = function (key, columnList) {\n        if (!key) {\n            return null;\n        }\n        for (var i = 0; i < columnList.length; i++) {\n            if (this.columnsMatch(columnList[i], key)) {\n                return columnList[i];\n            }\n        }\n        return this.getAutoColumn(key);\n    };\n    ColumnController.prototype.getAutoColumn = function (key) {\n        var _this = this;\n        if (!this.groupAutoColumns || !utils_1._.exists(this.groupAutoColumns) || utils_1._.missing(this.groupAutoColumns)) {\n            return null;\n        }\n        return utils_1._.find(this.groupAutoColumns, function (groupCol) {\n            return _this.columnsMatch(groupCol, key);\n        });\n    };\n    ColumnController.prototype.columnsMatch = function (column, key) {\n        var columnMatches = column === key;\n        var colDefMatches = column.getColDef() === key;\n        var idMatches = column.getColId() == key;\n        return columnMatches || colDefMatches || idMatches;\n    };\n    ColumnController.prototype.getDisplayNameForColumn = function (column, location, includeAggFunc) {\n        if (includeAggFunc === void 0) { includeAggFunc = false; }\n        if (!column) {\n            return null;\n        }\n        var headerName = this.getHeaderName(column.getColDef(), column, null, null, location);\n        if (includeAggFunc) {\n            return this.wrapHeaderNameWithAggFunc(column, headerName);\n        }\n        else {\n            return headerName;\n        }\n    };\n    ColumnController.prototype.getDisplayNameForOriginalColumnGroup = function (columnGroup, originalColumnGroup, location) {\n        var colGroupDef = originalColumnGroup ? originalColumnGroup.getColGroupDef() : null;\n        if (colGroupDef) {\n            return this.getHeaderName(colGroupDef, null, columnGroup, originalColumnGroup, location);\n        }\n        else {\n            return null;\n        }\n    };\n    ColumnController.prototype.getDisplayNameForColumnGroup = function (columnGroup, location) {\n        return this.getDisplayNameForOriginalColumnGroup(columnGroup, columnGroup.getOriginalColumnGroup(), location);\n    };\n    // location is where the column is going to appear, ie who is calling us\n    ColumnController.prototype.getHeaderName = function (colDef, column, columnGroup, originalColumnGroup, location) {\n        var headerValueGetter = colDef.headerValueGetter;\n        if (headerValueGetter) {\n            var params = {\n                colDef: colDef,\n                column: column,\n                columnGroup: columnGroup,\n                originalColumnGroup: originalColumnGroup,\n                location: location,\n                api: this.gridOptionsWrapper.getApi(),\n                context: this.gridOptionsWrapper.getContext()\n            };\n            if (typeof headerValueGetter === 'function') {\n                // valueGetter is a function, so just call it\n                return headerValueGetter(params);\n            }\n            else if (typeof headerValueGetter === 'string') {\n                // valueGetter is an expression, so execute the expression\n                return this.expressionService.evaluate(headerValueGetter, params);\n            }\n            else {\n                console.warn('ag-grid: headerValueGetter must be a function or a string');\n                return '';\n            }\n        }\n        else if (colDef.headerName != null) {\n            return colDef.headerName;\n        }\n        else if (colDef.field) {\n            return utils_1._.camelCaseToHumanText(colDef.field);\n        }\n        else {\n            return '';\n        }\n    };\n    /*\n        private getHeaderGroupName(columnGroup: ColumnGroup): string {\n            let colGroupDef = columnGroup.getOriginalColumnGroup().getColGroupDef();\n            let headerValueGetter = colGroupDef.headerValueGetter;\n\n            if (headerValueGetter) {\n                let params = {\n                    columnGroup: columnGroup,\n                    colDef: colGroupDef,\n                    api: this.gridOptionsWrapper.getApi(),\n                    context: this.gridOptionsWrapper.getContext()\n                };\n\n                if (typeof headerValueGetter === 'function') {\n                    // valueGetter is a function, so just call it\n                    return headerValueGetter(params);\n                } else if (typeof headerValueGetter === 'string') {\n                    // valueGetter is an expression, so execute the expression\n                    return this.expressionService.evaluate(headerValueGetter, params);\n                } else {\n                    console.warn('ag-grid: headerValueGetter must be a function or a string');\n                    return '';\n                }\n            } else {\n                return colGroupDef.headerName;\n            }\n        }\n    */\n    ColumnController.prototype.wrapHeaderNameWithAggFunc = function (column, headerName) {\n        if (this.gridOptionsWrapper.isSuppressAggFuncInHeader()) {\n            return headerName;\n        }\n        // only columns with aggregation active can have aggregations\n        var pivotValueColumn = column.getColDef().pivotValueColumn;\n        var pivotActiveOnThisColumn = utils_1._.exists(pivotValueColumn);\n        var aggFunc = null;\n        var aggFuncFound;\n        // otherwise we have a measure that is active, and we are doing aggregation on it\n        if (pivotActiveOnThisColumn) {\n            aggFunc = pivotValueColumn ? pivotValueColumn.getAggFunc() : null;\n            aggFuncFound = true;\n        }\n        else {\n            var measureActive = column.isValueActive();\n            var aggregationPresent = this.pivotMode || !this.isRowGroupEmpty();\n            if (measureActive && aggregationPresent) {\n                aggFunc = column.getAggFunc();\n                aggFuncFound = true;\n            }\n            else {\n                aggFuncFound = false;\n            }\n        }\n        if (aggFuncFound) {\n            var aggFuncString = (typeof aggFunc === 'string') ? aggFunc : 'func';\n            var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n            var aggFuncStringTranslated = localeTextFunc(aggFuncString, aggFuncString);\n            return aggFuncStringTranslated + \"(\" + headerName + \")\";\n        }\n        else {\n            return headerName;\n        }\n    };\n    // returns the group with matching colId and instanceId. If instanceId is missing,\n    // matches only on the colId.\n    ColumnController.prototype.getColumnGroup = function (colId, instanceId) {\n        if (!colId) {\n            return null;\n        }\n        if (colId instanceof columnGroup_1.ColumnGroup) {\n            return colId;\n        }\n        var allColumnGroups = this.getAllDisplayedColumnGroups();\n        var checkInstanceId = typeof instanceId === 'number';\n        var result = null;\n        this.columnUtils.depthFirstAllColumnTreeSearch(allColumnGroups, function (child) {\n            if (child instanceof columnGroup_1.ColumnGroup) {\n                var columnGroup = child;\n                var matched = void 0;\n                if (checkInstanceId) {\n                    matched = colId === columnGroup.getGroupId() && instanceId === columnGroup.getInstanceId();\n                }\n                else {\n                    matched = colId === columnGroup.getGroupId();\n                }\n                if (matched) {\n                    result = columnGroup;\n                }\n            }\n        });\n        return result;\n    };\n    ColumnController.prototype.isReady = function () {\n        return this.ready;\n    };\n    ColumnController.prototype.createValueColumns = function (source, oldPrimaryColumns) {\n        this.valueColumns = this.extractColumns(oldPrimaryColumns, this.valueColumns, function (col, flag) { return col.setValueActive(flag, source); }, \n        // aggFunc doesn't have index variant, cos order of value cols doesn't matter, so always return null\n        function () { return null; }, \n        // aggFunc is a string, so return it's existence\n        function (colDef) { return !!colDef.aggFunc; });\n        // all new columns added will have aggFunc missing, so set it to what is in the colDef\n        this.valueColumns.forEach(function (col) {\n            if (!col.getAggFunc()) {\n                col.setAggFunc(col.getColDef().aggFunc);\n            }\n        });\n    };\n    ColumnController.prototype.extractRowGroupColumns = function (source, oldPrimaryColumns) {\n        this.rowGroupColumns = this.extractColumns(oldPrimaryColumns, this.rowGroupColumns, function (col, flag) { return col.setRowGroupActive(flag, source); }, function (colDef) { return colDef.rowGroupIndex; }, function (colDef) { return colDef.rowGroup; });\n    };\n    ColumnController.prototype.extractColumns = function (oldPrimaryColumns, previousCols, setFlagFunc, getIndexFunc, getValueFunc) {\n        var _this = this;\n        if (!previousCols) {\n            previousCols = [];\n        }\n        // remove cols that no longer exist\n        var colPresentInPrimaryFunc = function (col) { return _this.primaryColumns.indexOf(col) >= 0; };\n        var colMissingFromPrimaryFunc = function (col) { return _this.primaryColumns.indexOf(col) < 0; };\n        var colNewFunc = function (col) { return !oldPrimaryColumns || oldPrimaryColumns.indexOf(col) < 0; };\n        var removedCols = previousCols.filter(colMissingFromPrimaryFunc);\n        var existingCols = previousCols.filter(colPresentInPrimaryFunc);\n        var newPrimaryCols = this.primaryColumns.filter(colNewFunc);\n        removedCols.forEach(function (col) { return setFlagFunc(col, false); });\n        var newCols = [];\n        // we only want to work on new columns, as old columns already got processed first time around\n        // pull out items with xxxIndex\n        newPrimaryCols.forEach(function (col) {\n            var index = getIndexFunc(col.getColDef());\n            if (typeof index === 'number') {\n                newCols.push(col);\n            }\n        });\n        // then sort them\n        newCols.sort(function (colA, colB) {\n            var indexA = getIndexFunc(colA.getColDef());\n            var indexB = getIndexFunc(colB.getColDef());\n            if (indexA === indexB) {\n                return 0;\n            }\n            else if (indexA < indexB) {\n                return -1;\n            }\n            else {\n                return 1;\n            }\n        });\n        // now just pull out items xxx (boolean value), they will be added at the end\n        // after the indexed ones, but in the order the columns appear\n        newPrimaryCols.forEach(function (col) {\n            var booleanValue = getValueFunc(col.getColDef());\n            if (booleanValue) {\n                // if user already specified xxxIndex then we skip it as this col already included\n                if (newCols.indexOf(col) >= 0) {\n                    return;\n                }\n                newCols.push(col);\n            }\n        });\n        newCols.forEach(function (col) { return setFlagFunc(col, true); });\n        var res = existingCols.concat(newCols);\n        return res;\n    };\n    ColumnController.prototype.extractPivotColumns = function (source, oldPrimaryColumns) {\n        this.pivotColumns = this.extractColumns(oldPrimaryColumns, this.pivotColumns, function (col, flag) { return col.setPivotActive(flag, source); }, function (colDef) { return colDef.pivotIndex; }, function (colDef) { return colDef.pivot; });\n    };\n    ColumnController.prototype.resetColumnGroupState = function (source) {\n        if (source === void 0) { source = \"api\"; }\n        var stateItems = [];\n        this.columnUtils.depthFirstOriginalTreeSearch(null, this.primaryColumnTree, function (child) {\n            if (child instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                var groupState = {\n                    groupId: child.getGroupId(),\n                    open: child.getColGroupDef().openByDefault\n                };\n                stateItems.push(groupState);\n            }\n        });\n        this.setColumnGroupState(stateItems, source);\n    };\n    ColumnController.prototype.getColumnGroupState = function () {\n        var columnGroupState = [];\n        this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function (node) {\n            if (node instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                var originalColumnGroup = node;\n                columnGroupState.push({\n                    groupId: originalColumnGroup.getGroupId(),\n                    open: originalColumnGroup.isExpanded()\n                });\n            }\n        });\n        return columnGroupState;\n    };\n    ColumnController.prototype.setColumnGroupState = function (stateItems, source) {\n        var _this = this;\n        if (source === void 0) { source = \"api\"; }\n        this.columnAnimationService.start();\n        var impactedGroups = [];\n        stateItems.forEach(function (stateItem) {\n            var groupKey = stateItem.groupId;\n            var newValue = stateItem.open;\n            var originalColumnGroup = _this.getOriginalColumnGroup(groupKey);\n            if (!originalColumnGroup) {\n                return;\n            }\n            if (originalColumnGroup.isExpanded() === newValue) {\n                return;\n            }\n            _this.logger.log('columnGroupOpened(' + originalColumnGroup.getGroupId() + ',' + newValue + ')');\n            originalColumnGroup.setExpanded(newValue);\n            impactedGroups.push(originalColumnGroup);\n        });\n        this.updateGroupsAndDisplayedColumns(source);\n        this.setFirstRightAndLastLeftPinned(source);\n        impactedGroups.forEach(function (originalColumnGroup) {\n            var event = {\n                type: events_1.Events.EVENT_COLUMN_GROUP_OPENED,\n                columnGroup: originalColumnGroup,\n                api: _this.gridApi,\n                columnApi: _this.columnApi\n            };\n            _this.eventService.dispatchEvent(event);\n        });\n        this.columnAnimationService.finish();\n    };\n    // called by headerRenderer - when a header is opened or closed\n    ColumnController.prototype.setColumnGroupOpened = function (key, newValue, source) {\n        if (source === void 0) { source = \"api\"; }\n        var keyAsString;\n        if (key instanceof originalColumnGroup_1.OriginalColumnGroup) {\n            keyAsString = key.getId();\n        }\n        else {\n            keyAsString = key;\n        }\n        this.setColumnGroupState([{ groupId: keyAsString, open: newValue }], source);\n    };\n    ColumnController.prototype.getOriginalColumnGroup = function (key) {\n        if (key instanceof originalColumnGroup_1.OriginalColumnGroup) {\n            return key;\n        }\n        if (typeof key !== 'string') {\n            console.error('ag-Grid: group key must be a string');\n        }\n        // otherwise, search for the column group by id\n        var res = null;\n        this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function (node) {\n            if (node instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                var originalColumnGroup = node;\n                if (originalColumnGroup.getId() === key) {\n                    res = originalColumnGroup;\n                }\n            }\n        });\n        return res;\n    };\n    ColumnController.prototype.calculateColumnsForDisplay = function () {\n        var _this = this;\n        var columnsForDisplay;\n        if (this.pivotMode && !this.secondaryColumnsPresent) {\n            // pivot mode is on, but we are not pivoting, so we only\n            // show columns we are aggregating on\n            columnsForDisplay = utils_1._.filter(this.gridColumns, function (column) {\n                var isAutoGroupCol = _this.groupAutoColumns && _this.groupAutoColumns.indexOf(column) >= 0;\n                var isValueCol = _this.valueColumns && _this.valueColumns.indexOf(column) >= 0;\n                return isAutoGroupCol || isValueCol;\n            });\n        }\n        else {\n            // otherwise continue as normal. this can be working on the primary\n            // or secondary columns, whatever the gridColumns are set to\n            columnsForDisplay = utils_1._.filter(this.gridColumns, function (column) {\n                // keep col if a) it's auto-group or b) it's visible\n                var isAutoGroupCol = _this.groupAutoColumns && _this.groupAutoColumns.indexOf(column) >= 0;\n                return isAutoGroupCol || column.isVisible();\n            });\n        }\n        return columnsForDisplay;\n    };\n    ColumnController.prototype.checkColSpanActiveInCols = function (columns) {\n        var result = false;\n        columns.forEach(function (col) {\n            if (utils_1._.exists(col.getColDef().colSpan)) {\n                result = true;\n            }\n        });\n        return result;\n    };\n    ColumnController.prototype.calculateColumnsForGroupDisplay = function () {\n        var _this = this;\n        this.groupDisplayColumns = [];\n        var checkFunc = function (col) {\n            var colDef = col.getColDef();\n            if (colDef && utils_1._.exists(colDef.showRowGroup)) {\n                _this.groupDisplayColumns.push(col);\n            }\n        };\n        this.gridColumns.forEach(checkFunc);\n        if (this.groupAutoColumns) {\n            this.groupAutoColumns.forEach(checkFunc);\n        }\n    };\n    ColumnController.prototype.getGroupDisplayColumns = function () {\n        return this.groupDisplayColumns;\n    };\n    ColumnController.prototype.updateDisplayedColumns = function (source) {\n        var columnsForDisplay = this.calculateColumnsForDisplay();\n        this.buildDisplayedTrees(columnsForDisplay);\n        this.calculateColumnsForGroupDisplay();\n        // also called when group opened/closed\n        this.updateGroupsAndDisplayedColumns(source);\n        // also called when group opened/closed\n        this.setFirstRightAndLastLeftPinned(source);\n    };\n    ColumnController.prototype.isSecondaryColumnsPresent = function () {\n        return this.secondaryColumnsPresent;\n    };\n    ColumnController.prototype.setSecondaryColumns = function (colDefs, source) {\n        if (source === void 0) { source = \"api\"; }\n        var newColsPresent = colDefs && colDefs.length > 0;\n        // if not cols passed, and we had to cols anyway, then do nothing\n        if (!newColsPresent && !this.secondaryColumnsPresent) {\n            return;\n        }\n        if (newColsPresent) {\n            this.processSecondaryColumnDefinitions(colDefs);\n            var balancedTreeResult = this.columnFactory.createColumnTree(colDefs, false);\n            this.secondaryBalancedTree = balancedTreeResult.columnTree;\n            this.secondaryHeaderRowCount = balancedTreeResult.treeDept + 1;\n            this.secondaryColumns = this.getColumnsFromTree(this.secondaryBalancedTree);\n            this.secondaryColumnsPresent = true;\n        }\n        else {\n            this.secondaryBalancedTree = null;\n            this.secondaryHeaderRowCount = -1;\n            this.secondaryColumns = null;\n            this.secondaryColumnsPresent = false;\n        }\n        this.updateGridColumns();\n        this.updateDisplayedColumns(source);\n    };\n    ColumnController.prototype.processSecondaryColumnDefinitions = function (colDefs) {\n        var columnCallback = this.gridOptionsWrapper.getProcessSecondaryColDefFunc();\n        var groupCallback = this.gridOptionsWrapper.getProcessSecondaryColGroupDefFunc();\n        if (!columnCallback && !groupCallback) {\n            return undefined;\n        }\n        if (colDefs) {\n            searchForColDefs(colDefs);\n        }\n        function searchForColDefs(colDefs2) {\n            colDefs2.forEach(function (abstractColDef) {\n                var isGroup = utils_1._.exists(abstractColDef.children);\n                if (isGroup) {\n                    var colGroupDef = abstractColDef;\n                    if (groupCallback) {\n                        groupCallback(colGroupDef);\n                    }\n                    searchForColDefs(colGroupDef.children);\n                }\n                else {\n                    var colDef = abstractColDef;\n                    if (columnCallback) {\n                        columnCallback(colDef);\n                    }\n                }\n            });\n        }\n    };\n    // called from: setColumnState, setColumnDefs, setSecondaryColumns\n    ColumnController.prototype.updateGridColumns = function () {\n        if (this.gridColsArePrimary) {\n            this.lastPrimaryOrder = this.gridColumns;\n        }\n        if (this.secondaryColumns && this.secondaryBalancedTree) {\n            this.gridBalancedTree = this.secondaryBalancedTree.slice();\n            this.gridHeaderRowCount = this.secondaryHeaderRowCount;\n            this.gridColumns = this.secondaryColumns.slice();\n            this.gridColsArePrimary = false;\n        }\n        else {\n            this.gridBalancedTree = this.primaryColumnTree.slice();\n            this.gridHeaderRowCount = this.primaryHeaderRowCount;\n            this.gridColumns = this.primaryColumns.slice();\n            this.gridColsArePrimary = true;\n            // updateGridColumns gets called after user adds a row group. we want to maintain the order of the columns\n            // when this happens (eg if user moved a column) rather than revert back to the original column order.\n            // likewise if changing in/out of pivot mode, we want to maintain the order of the primary cols\n            this.orderGridColsLikeLastPrimary();\n        }\n        this.addAutoGroupToGridColumns();\n        this.autoRowHeightColumns = this.gridColumns.filter(function (col) { return col.getColDef().autoHeight; });\n        this.putFixedColumnsFirst();\n        this.setupQuickFilterColumns();\n        this.clearDisplayedColumns();\n        this.colSpanActive = this.checkColSpanActiveInCols(this.gridColumns);\n        var event = {\n            type: events_1.Events.EVENT_GRID_COLUMNS_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ColumnController.prototype.orderGridColsLikeLastPrimary = function () {\n        var _this = this;\n        if (utils_1._.missing(this.lastPrimaryOrder)) {\n            return;\n        }\n        // only do the sort if at least one column is accounted for. columns will be not accounted for\n        // if changing from secondary to primary columns\n        var noColsFound = true;\n        this.gridColumns.forEach(function (col) {\n            if (_this.lastPrimaryOrder.indexOf(col) >= 0) {\n                noColsFound = false;\n            }\n        });\n        if (noColsFound) {\n            return;\n        }\n        // order cols in the same order as before. we need to make sure that all\n        // cols still exists, so filter out any that no longer exist.\n        var oldColsOrdered = this.lastPrimaryOrder.filter(function (col) { return _this.gridColumns.indexOf(col) >= 0; });\n        var newColsOrdered = this.gridColumns.filter(function (col) { return oldColsOrdered.indexOf(col) < 0; });\n        // add in the new columns, at the end (if no group), or at the end of the group (if a group)\n        var newGridColumns = oldColsOrdered.slice();\n        newColsOrdered.forEach(function (newCol) {\n            var parent = newCol.getOriginalParent();\n            // if no parent, means we are not grouping, so just add the column to the end\n            if (!parent) {\n                newGridColumns.push(newCol);\n                return;\n            }\n            // find the group the column belongs to. if no siblings at the current level (eg col in group on it's\n            // own) then go up one level and look for siblings there.\n            var siblings = [];\n            while (!siblings.length && parent) {\n                var leafCols = parent.getLeafColumns();\n                leafCols.forEach(function (leafCol) {\n                    var presentInNewGriColumns = newGridColumns.indexOf(leafCol) >= 0;\n                    var noYetInSiblings = siblings.indexOf(leafCol) < 0;\n                    if (presentInNewGriColumns && noYetInSiblings) {\n                        siblings.push(leafCol);\n                    }\n                });\n                parent = parent.getOriginalParent();\n            }\n            // if no siblings exist at any level, this means the col is in a group (or parent groups) on it's own\n            if (!siblings.length) {\n                newGridColumns.push(newCol);\n                return;\n            }\n            // find index of last column in the group\n            var indexes = siblings.map(function (col) { return newGridColumns.indexOf(col); });\n            var lastIndex = Math.max.apply(Math, indexes);\n            utils_1._.insertIntoArray(newGridColumns, newCol, lastIndex + 1);\n        });\n        this.gridColumns = newGridColumns;\n    };\n    ColumnController.prototype.isPrimaryColumnGroupsPresent = function () {\n        return this.primaryHeaderRowCount > 1;\n    };\n    // if we are using autoGroupCols, then they should be included for quick filter. this covers the\n    // following scenarios:\n    // a) user provides 'field' into autoGroupCol of normal grid, so now because a valid col to filter leafs on\n    // b) using tree data and user depends on autoGroupCol for first col, and we also want to filter on this\n    //    (tree data is a bit different, as parent rows can be filtered on, unlike row grouping)\n    ColumnController.prototype.setupQuickFilterColumns = function () {\n        if (this.groupAutoColumns) {\n            this.columnsForQuickFilter = this.primaryColumns.concat(this.groupAutoColumns);\n        }\n        else {\n            this.columnsForQuickFilter = this.primaryColumns;\n        }\n    };\n    ColumnController.prototype.putFixedColumnsFirst = function () {\n        var locked = this.gridColumns.filter(function (c) { return c.getColDef().lockPosition; });\n        var unlocked = this.gridColumns.filter(function (c) { return !c.getColDef().lockPosition; });\n        this.gridColumns = locked.concat(unlocked);\n    };\n    ColumnController.prototype.addAutoGroupToGridColumns = function () {\n        // add in auto-group here\n        this.createGroupAutoColumnsIfNeeded();\n        if (utils_1._.missing(this.groupAutoColumns)) {\n            return;\n        }\n        this.gridColumns = this.groupAutoColumns ? this.groupAutoColumns.concat(this.gridColumns) : this.gridColumns;\n        var autoColBalancedTree = this.columnFactory.createForAutoGroups(this.groupAutoColumns, this.gridBalancedTree);\n        this.gridBalancedTree = autoColBalancedTree.concat(this.gridBalancedTree);\n    };\n    // gets called after we copy down grid columns, to make sure any part of the gui\n    // that tries to draw, eg the header, it will get empty lists of columns rather\n    // than stale columns. for example, the header will received gridColumnsChanged\n    // event, so will try and draw, but it will draw successfully when it acts on the\n    // virtualColumnsChanged event\n    ColumnController.prototype.clearDisplayedColumns = function () {\n        this.displayedLeftColumnTree = [];\n        this.displayedRightColumnTree = [];\n        this.displayedCentreColumnTree = [];\n        this.displayedLeftHeaderRows = {};\n        this.displayedRightHeaderRows = {};\n        this.displayedCentreHeaderRows = {};\n        this.displayedLeftColumns = [];\n        this.displayedRightColumns = [];\n        this.displayedCenterColumns = [];\n        this.allDisplayedColumns = [];\n        this.allDisplayedVirtualColumns = [];\n    };\n    ColumnController.prototype.updateGroupsAndDisplayedColumns = function (source) {\n        this.updateOpenClosedVisibilityInColumnGroups();\n        this.updateDisplayedColumnsFromTrees(source);\n        this.updateVirtualSets();\n        this.updateBodyWidths();\n        // this event is picked up by the gui, headerRenderer and rowRenderer, to recalculate what columns to display\n        var event = {\n            type: events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ColumnController.prototype.updateDisplayedColumnsFromTrees = function (source) {\n        this.addToDisplayedColumns(this.displayedLeftColumnTree, this.displayedLeftColumns);\n        this.addToDisplayedColumns(this.displayedCentreColumnTree, this.displayedCenterColumns);\n        this.addToDisplayedColumns(this.displayedRightColumnTree, this.displayedRightColumns);\n        this.setupAllDisplayedColumns();\n        this.setLeftValues(source);\n    };\n    ColumnController.prototype.setupAllDisplayedColumns = function () {\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            this.allDisplayedColumns = this.displayedRightColumns\n                .concat(this.displayedCenterColumns)\n                .concat(this.displayedLeftColumns);\n        }\n        else {\n            this.allDisplayedColumns = this.displayedLeftColumns\n                .concat(this.displayedCenterColumns)\n                .concat(this.displayedRightColumns);\n        }\n    };\n    // sets the left pixel position of each column\n    ColumnController.prototype.setLeftValues = function (source) {\n        this.setLeftValuesOfColumns(source);\n        this.setLeftValuesOfGroups();\n    };\n    ColumnController.prototype.setLeftValuesOfColumns = function (source) {\n        var _this = this;\n        // go through each list of displayed columns\n        var allColumns = this.primaryColumns.slice(0);\n        // let totalColumnWidth = this.getWidthOfColsInList()\n        var doingRtl = this.gridOptionsWrapper.isEnableRtl();\n        [this.displayedLeftColumns, this.displayedRightColumns, this.displayedCenterColumns].forEach(function (columns) {\n            if (doingRtl) {\n                // when doing RTL, we start at the top most pixel (ie RHS) and work backwards\n                var left_1 = _this.getWidthOfColsInList(columns);\n                columns.forEach(function (column) {\n                    left_1 -= column.getActualWidth();\n                    column.setLeft(left_1, source);\n                });\n            }\n            else {\n                // otherwise normal LTR, we start at zero\n                var left_2 = 0;\n                columns.forEach(function (column) {\n                    column.setLeft(left_2, source);\n                    left_2 += column.getActualWidth();\n                });\n            }\n            utils_1._.removeAllFromArray(allColumns, columns);\n        });\n        // items left in allColumns are columns not displayed, so remove the left position. this is\n        // important for the rows, as if a col is made visible, then taken out, then made visible again,\n        // we don't want the animation of the cell floating in from the old position, whatever that was.\n        allColumns.forEach(function (column) {\n            column.setLeft(null, source);\n        });\n    };\n    ColumnController.prototype.setLeftValuesOfGroups = function () {\n        // a groups left value is the lest left value of it's children\n        [this.displayedLeftColumnTree, this.displayedRightColumnTree, this.displayedCentreColumnTree].forEach(function (columns) {\n            columns.forEach(function (column) {\n                if (column instanceof columnGroup_1.ColumnGroup) {\n                    var columnGroup = column;\n                    columnGroup.checkLeft();\n                }\n            });\n        });\n    };\n    ColumnController.prototype.addToDisplayedColumns = function (displayedColumnTree, displayedColumns) {\n        displayedColumns.length = 0;\n        this.columnUtils.depthFirstDisplayedColumnTreeSearch(displayedColumnTree, function (child) {\n            if (child instanceof column_1.Column) {\n                displayedColumns.push(child);\n            }\n        });\n    };\n    ColumnController.prototype.updateDisplayedCenterVirtualColumns = function () {\n        if (this.suppressColumnVirtualisation) {\n            // no virtualisation, so don't filter\n            this.allDisplayedCenterVirtualColumns = this.displayedCenterColumns;\n        }\n        else {\n            // filter out what should be visible\n            this.allDisplayedCenterVirtualColumns = this.filterOutColumnsWithinViewport();\n        }\n        this.allDisplayedVirtualColumns = this.allDisplayedCenterVirtualColumns\n            .concat(this.displayedLeftColumns)\n            .concat(this.displayedRightColumns);\n        // return map of virtual col id's, for easy lookup when building the groups.\n        // the map will be colId=>true, ie col id's mapping to 'true'.\n        var result = {};\n        this.allDisplayedVirtualColumns.forEach(function (col) {\n            result[col.getId()] = true;\n        });\n        return result;\n    };\n    ColumnController.prototype.getVirtualHeaderGroupRow = function (type, dept) {\n        var result;\n        switch (type) {\n            case column_1.Column.PINNED_LEFT:\n                result = this.displayedLeftHeaderRows[dept];\n                break;\n            case column_1.Column.PINNED_RIGHT:\n                result = this.displayedRightHeaderRows[dept];\n                break;\n            default:\n                result = this.displayedCentreHeaderRows[dept];\n                break;\n        }\n        if (utils_1._.missing(result)) {\n            result = [];\n        }\n        return result;\n    };\n    ColumnController.prototype.updateDisplayedVirtualGroups = function (virtualColIds) {\n        // go through each group, see if any of it's cols are displayed, and if yes,\n        // then this group is included\n        this.displayedLeftHeaderRows = {};\n        this.displayedRightHeaderRows = {};\n        this.displayedCentreHeaderRows = {};\n        testGroup(this.displayedLeftColumnTree, this.displayedLeftHeaderRows, 0);\n        testGroup(this.displayedRightColumnTree, this.displayedRightHeaderRows, 0);\n        testGroup(this.displayedCentreColumnTree, this.displayedCentreHeaderRows, 0);\n        function testGroup(children, result, dept) {\n            var returnValue = false;\n            for (var i = 0; i < children.length; i++) {\n                // see if this item is within viewport\n                var child = children[i];\n                var addThisItem = void 0;\n                if (child instanceof column_1.Column) {\n                    // for column, test if column is included\n                    addThisItem = virtualColIds[child.getId()] === true;\n                }\n                else {\n                    // if group, base decision on children\n                    var columnGroup = child;\n                    addThisItem = testGroup(columnGroup.getDisplayedChildren(), result, dept + 1);\n                }\n                if (addThisItem) {\n                    returnValue = true;\n                    if (!result[dept]) {\n                        result[dept] = [];\n                    }\n                    result[dept].push(child);\n                }\n            }\n            return returnValue;\n        }\n    };\n    ColumnController.prototype.updateVirtualSets = function () {\n        var virtualColIds = this.updateDisplayedCenterVirtualColumns();\n        this.updateDisplayedVirtualGroups(virtualColIds);\n    };\n    ColumnController.prototype.filterOutColumnsWithinViewport = function () {\n        return utils_1._.filter(this.displayedCenterColumns, this.isColumnInViewport.bind(this));\n    };\n    // called from api\n    ColumnController.prototype.sizeColumnsToFit = function (gridWidth, source) {\n        var _this = this;\n        if (source === void 0) { source = \"api\"; }\n        // avoid divide by zero\n        var allDisplayedColumns = this.getAllDisplayedColumns();\n        if (gridWidth <= 0 || allDisplayedColumns.length === 0) {\n            return;\n        }\n        var colsToNotSpread = utils_1._.filter(allDisplayedColumns, function (column) {\n            return column.getColDef().suppressSizeToFit === true;\n        });\n        var colsToSpread = utils_1._.filter(allDisplayedColumns, function (column) {\n            return column.getColDef().suppressSizeToFit !== true;\n        });\n        // make a copy of the cols that are going to be resized\n        var colsToFireEventFor = colsToSpread.slice(0);\n        var finishedResizing = false;\n        while (!finishedResizing) {\n            finishedResizing = true;\n            var availablePixels = gridWidth - this.getWidthOfColsInList(colsToNotSpread);\n            if (availablePixels <= 0) {\n                // no width, set everything to minimum\n                colsToSpread.forEach(function (column) {\n                    column.setMinimum(source);\n                });\n            }\n            else {\n                var scale = availablePixels / this.getWidthOfColsInList(colsToSpread);\n                // we set the pixels for the last col based on what's left, as otherwise\n                // we could be a pixel or two short or extra because of rounding errors.\n                var pixelsForLastCol = availablePixels;\n                // backwards through loop, as we are removing items as we go\n                for (var i = colsToSpread.length - 1; i >= 0; i--) {\n                    var column = colsToSpread[i];\n                    var newWidth = Math.round(column.getActualWidth() * scale);\n                    if (newWidth < column.getMinWidth()) {\n                        column.setMinimum(source);\n                        moveToNotSpread(column);\n                        finishedResizing = false;\n                    }\n                    else if (column.isGreaterThanMax(newWidth)) {\n                        column.setActualWidth(column.getMaxWidth(), source);\n                        moveToNotSpread(column);\n                        finishedResizing = false;\n                    }\n                    else {\n                        var onLastCol = i === 0;\n                        if (onLastCol) {\n                            column.setActualWidth(pixelsForLastCol, source);\n                        }\n                        else {\n                            column.setActualWidth(newWidth, source);\n                        }\n                    }\n                    pixelsForLastCol -= newWidth;\n                }\n            }\n        }\n        this.setLeftValues(source);\n        this.updateBodyWidths();\n        colsToFireEventFor.forEach(function (column) {\n            var event = {\n                type: events_1.Events.EVENT_COLUMN_RESIZED,\n                column: column,\n                columns: [column],\n                finished: true,\n                api: _this.gridApi,\n                columnApi: _this.columnApi,\n                source: \"sizeColumnsToFit\"\n            };\n            _this.eventService.dispatchEvent(event);\n        });\n        function moveToNotSpread(column) {\n            utils_1._.removeFromArray(colsToSpread, column);\n            colsToNotSpread.push(column);\n        }\n    };\n    ColumnController.prototype.buildDisplayedTrees = function (visibleColumns) {\n        var leftVisibleColumns = utils_1._.filter(visibleColumns, function (column) {\n            return column.getPinned() === 'left';\n        });\n        var rightVisibleColumns = utils_1._.filter(visibleColumns, function (column) {\n            return column.getPinned() === 'right';\n        });\n        var centerVisibleColumns = utils_1._.filter(visibleColumns, function (column) {\n            return column.getPinned() !== 'left' && column.getPinned() !== 'right';\n        });\n        var groupInstanceIdCreator = new groupInstanceIdCreator_1.GroupInstanceIdCreator();\n        this.displayedLeftColumnTree = this.displayedGroupCreator.createDisplayedGroups(leftVisibleColumns, this.gridBalancedTree, groupInstanceIdCreator, column_1.Column.PINNED_LEFT, this.displayedLeftColumnTree);\n        this.displayedRightColumnTree = this.displayedGroupCreator.createDisplayedGroups(rightVisibleColumns, this.gridBalancedTree, groupInstanceIdCreator, column_1.Column.PINNED_RIGHT, this.displayedRightColumnTree);\n        this.displayedCentreColumnTree = this.displayedGroupCreator.createDisplayedGroups(centerVisibleColumns, this.gridBalancedTree, groupInstanceIdCreator, null, this.displayedCentreColumnTree);\n    };\n    ColumnController.prototype.updateOpenClosedVisibilityInColumnGroups = function () {\n        var allColumnGroups = this.getAllDisplayedColumnGroups();\n        this.columnUtils.depthFirstAllColumnTreeSearch(allColumnGroups, function (child) {\n            if (child instanceof columnGroup_1.ColumnGroup) {\n                var columnGroup = child;\n                columnGroup.calculateDisplayedColumns();\n            }\n        });\n    };\n    ColumnController.prototype.getGroupAutoColumns = function () {\n        return this.groupAutoColumns;\n    };\n    ColumnController.prototype.createGroupAutoColumnsIfNeeded = function () {\n        if (!this.autoGroupsNeedBuilding) {\n            return;\n        }\n        this.autoGroupsNeedBuilding = false;\n        var groupFullWidthRow = this.gridOptionsWrapper.isGroupUseEntireRow(this.pivotMode);\n        // we never suppress auto col for pivot mode, as there is no way for user to provide group columns\n        // in pivot mode. pivot mode has auto group column (provide by grid) and value columns (provided by\n        // pivot feature in the grid).\n        var groupSuppressAutoColumn = this.gridOptionsWrapper.isGroupSuppressAutoColumn() && !this.pivotMode;\n        var groupSuppressRow = this.gridOptionsWrapper.isGroupSuppressRow();\n        var groupingActive = this.rowGroupColumns.length > 0 || this.usingTreeData;\n        var needAutoColumns = groupingActive && !groupSuppressAutoColumn && !groupFullWidthRow && !groupSuppressRow;\n        if (needAutoColumns) {\n            var newAutoGroupCols = this.autoGroupColService.createAutoGroupColumns(this.rowGroupColumns);\n            var autoColsDifferent = !this.autoColsEqual(newAutoGroupCols, this.groupAutoColumns);\n            if (autoColsDifferent) {\n                this.groupAutoColumns = newAutoGroupCols;\n            }\n        }\n        else {\n            this.groupAutoColumns = null;\n        }\n    };\n    ColumnController.prototype.autoColsEqual = function (colsA, colsB) {\n        var bothMissing = !colsA && !colsB;\n        if (bothMissing) {\n            return true;\n        }\n        var atLeastOneListMissing = !colsA || !colsB;\n        if (atLeastOneListMissing) {\n            return false;\n        }\n        if (colsA.length !== colsB.length) {\n            return false;\n        }\n        for (var i = 0; i < colsA.length; i++) {\n            var colA = colsA[i];\n            var colB = colsB[i];\n            if (colA.getColId() !== colB.getColId()) {\n                return false;\n            }\n        }\n        return true;\n    };\n    ColumnController.prototype.getWidthOfColsInList = function (columnList) {\n        var result = 0;\n        for (var i = 0; i < columnList.length; i++) {\n            result += columnList[i].getActualWidth();\n        }\n        return result;\n    };\n    ColumnController.prototype.getGridBalancedTree = function () {\n        return this.gridBalancedTree;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ColumnController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], ColumnController.prototype, \"expressionService\", void 0);\n    __decorate([\n        context_1.Autowired('columnFactory'),\n        __metadata(\"design:type\", columnFactory_1.ColumnFactory)\n    ], ColumnController.prototype, \"columnFactory\", void 0);\n    __decorate([\n        context_1.Autowired('displayedGroupCreator'),\n        __metadata(\"design:type\", displayedGroupCreator_1.DisplayedGroupCreator)\n    ], ColumnController.prototype, \"displayedGroupCreator\", void 0);\n    __decorate([\n        context_1.Autowired('autoWidthCalculator'),\n        __metadata(\"design:type\", autoWidthCalculator_1.AutoWidthCalculator)\n    ], ColumnController.prototype, \"autoWidthCalculator\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ColumnController.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('columnUtils'),\n        __metadata(\"design:type\", columnUtils_1.ColumnUtils)\n    ], ColumnController.prototype, \"columnUtils\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], ColumnController.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnAnimationService'),\n        __metadata(\"design:type\", columnAnimationService_1.ColumnAnimationService)\n    ], ColumnController.prototype, \"columnAnimationService\", void 0);\n    __decorate([\n        context_1.Autowired('autoGroupColService'),\n        __metadata(\"design:type\", autoGroupColService_1.AutoGroupColService)\n    ], ColumnController.prototype, \"autoGroupColService\", void 0);\n    __decorate([\n        context_1.Optional('aggFuncService'),\n        __metadata(\"design:type\", Object)\n    ], ColumnController.prototype, \"aggFuncService\", void 0);\n    __decorate([\n        context_1.Optional('valueCache'),\n        __metadata(\"design:type\", valueCache_1.ValueCache)\n    ], ColumnController.prototype, \"valueCache\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], ColumnController.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], ColumnController.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ColumnController.prototype, \"init\", null);\n    __decorate([\n        __param(0, context_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], ColumnController.prototype, \"setBeans\", null);\n    ColumnController = __decorate([\n        context_1.Bean('columnController')\n    ], ColumnController);\n    return ColumnController;\n}());\nexports.ColumnController = ColumnController;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventKeys_1 = require(\"./eventKeys\");\nexports.Events = eventKeys_1.Events;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = /** @class */ (function () {\n    function Constants() {\n    }\n    Constants.STEP_EVERYTHING = 0;\n    Constants.STEP_FILTER = 1;\n    Constants.STEP_SORT = 2;\n    Constants.STEP_MAP = 3;\n    Constants.STEP_AGGREGATE = 4;\n    Constants.STEP_PIVOT = 5;\n    Constants.ROW_BUFFER_SIZE = 10;\n    Constants.LAYOUT_INTERVAL = 500;\n    Constants.BATCH_WAIT_MILLIS = 50;\n    Constants.EXPORT_TYPE_DRAG_COPY = 'dragCopy';\n    Constants.EXPORT_TYPE_CLIPBOARD = 'clipboard';\n    Constants.EXPORT_TYPE_EXCEL = 'excel';\n    Constants.EXPORT_TYPE_CSV = 'csv';\n    Constants.KEY_BACKSPACE = 8;\n    Constants.KEY_TAB = 9;\n    Constants.KEY_NEW_LINE = 10;\n    Constants.KEY_ENTER = 13;\n    Constants.KEY_SHIFT = 16;\n    Constants.KEY_ESCAPE = 27;\n    Constants.KEY_SPACE = 32;\n    Constants.KEY_LEFT = 37;\n    Constants.KEY_UP = 38;\n    Constants.KEY_RIGHT = 39;\n    Constants.KEY_DOWN = 40;\n    Constants.KEY_DELETE = 46;\n    Constants.KEY_A = 65;\n    Constants.KEY_C = 67;\n    Constants.KEY_V = 86;\n    Constants.KEY_D = 68;\n    Constants.KEY_F2 = 113;\n    Constants.KEY_PAGE_UP = 33;\n    Constants.KEY_PAGE_DOWN = 34;\n    Constants.KEY_PAGE_HOME = 36;\n    Constants.KEY_PAGE_END = 35;\n    Constants.ROW_MODEL_TYPE_INFINITE = 'infinite';\n    Constants.ROW_MODEL_TYPE_VIEWPORT = 'viewport';\n    Constants.ROW_MODEL_TYPE_CLIENT_SIDE = 'clientSide';\n    Constants.ROW_MODEL_TYPE_SERVER_SIDE = 'serverSide';\n    Constants.DEPRECATED_ROW_MODEL_TYPE_NORMAL = 'normal';\n    Constants.ALWAYS = 'always';\n    Constants.ONLY_WHEN_GROUPING = 'onlyWhenGrouping';\n    Constants.PINNED_TOP = 'top';\n    Constants.PINNED_BOTTOM = 'bottom';\n    Constants.DOM_LAYOUT_NORMAL = 'normal';\n    Constants.DOM_LAYOUT_PRINT = 'print';\n    Constants.DOM_LAYOUT_AUTO_HEIGHT = 'autoHeight';\n    Constants.GROUP_AUTO_COLUMN_ID = 'ag-Grid-AutoColumn';\n    return Constants;\n}());\nexports.Constants = Constants;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar csvCreator_1 = require(\"./exporter/csvCreator\");\nvar rowRenderer_1 = require(\"./rendering/rowRenderer\");\nvar filterManager_1 = require(\"./filter/filterManager\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar selectionController_1 = require(\"./selectionController\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar valueService_1 = require(\"./valueService/valueService\");\nvar eventService_1 = require(\"./eventService\");\nvar constants_1 = require(\"./constants\");\nvar context_1 = require(\"./context/context\");\nvar sortController_1 = require(\"./sortController\");\nvar focusedCellController_1 = require(\"./focusedCellController\");\nvar cellRendererFactory_1 = require(\"./rendering/cellRendererFactory\");\nvar paginationProxy_1 = require(\"./rowModels/paginationProxy\");\nvar immutableService_1 = require(\"./rowModels/clientSide/immutableService\");\nvar valueCache_1 = require(\"./valueService/valueCache\");\nvar alignedGridsService_1 = require(\"./alignedGridsService\");\nvar pinnedRowModel_1 = require(\"./rowModels/pinnedRowModel\");\nvar animationFrameService_1 = require(\"./misc/animationFrameService\");\nvar utils_1 = require(\"./utils\");\nvar GridApi = /** @class */ (function () {\n    function GridApi() {\n        this.detailGridInfoMap = {};\n    }\n    GridApi.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    GridApi.prototype.registerGridCore = function (gridCore) {\n        this.gridCore = gridCore;\n    };\n    GridApi.prototype.registerHeaderRootComp = function (headerRootComp) {\n        this.headerRootComp = headerRootComp;\n    };\n    GridApi.prototype.init = function () {\n        switch (this.rowModel.getType()) {\n            case constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE:\n                this.clientSideRowModel = this.rowModel;\n                break;\n            case constants_1.Constants.ROW_MODEL_TYPE_INFINITE:\n                this.infinitePageRowModel = this.rowModel;\n                break;\n            case constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE:\n                this.serverSideRowModel = this.rowModel;\n                break;\n        }\n    };\n    /** Used internally by grid. Not intended to be used by the client. Interface may change between releases. */\n    GridApi.prototype.__getAlignedGridService = function () {\n        return this.alignedGridsService;\n    };\n    GridApi.prototype.addDetailGridInfo = function (id, gridInfo) {\n        this.detailGridInfoMap[id] = gridInfo;\n    };\n    GridApi.prototype.removeDetailGridInfo = function (id) {\n        this.detailGridInfoMap[id] = undefined;\n    };\n    GridApi.prototype.getDetailGridInfo = function (id) {\n        return this.detailGridInfoMap[id];\n    };\n    GridApi.prototype.forEachDetailGridInfo = function (callback) {\n        var index = 0;\n        utils_1._.iterateObject(this.detailGridInfoMap, function (id, gridInfo) {\n            // check for undefined, as old references will still be lying around\n            if (utils_1._.exists(gridInfo)) {\n                callback(gridInfo, index);\n                index++;\n            }\n        });\n    };\n    GridApi.prototype.getDataAsCsv = function (params) {\n        return this.csvCreator.getDataAsCsv(params);\n    };\n    GridApi.prototype.exportDataAsCsv = function (params) {\n        this.csvCreator.exportDataAsCsv(params);\n    };\n    GridApi.prototype.getDataAsExcel = function (params) {\n        if (!this.excelCreator) {\n            console.warn('ag-Grid: Excel export is only available in ag-Grid Enterprise');\n        }\n        return this.excelCreator.getDataAsExcelXml(params);\n    };\n    GridApi.prototype.exportDataAsExcel = function (params) {\n        if (!this.excelCreator) {\n            console.warn('ag-Grid: Excel export is only available in ag-Grid Enterprise');\n        }\n        this.excelCreator.exportDataAsExcel(params);\n    };\n    /** @deprecated */\n    GridApi.prototype.setEnterpriseDatasource = function (datasource) {\n        console.warn(\"ag-grid: since version 18.x, api.setEnterpriseDatasource() should be replaced with api.setServerSideDatasource()\");\n        this.setServerSideDatasource(datasource);\n    };\n    GridApi.prototype.setServerSideDatasource = function (datasource) {\n        if (this.gridOptionsWrapper.isRowModelServerSide()) {\n            // should really have an IEnterpriseRowModel interface, so we are not casting to any\n            this.rowModel.setDatasource(datasource);\n        }\n        else {\n            console.warn(\"ag-Grid: you can only use an enterprise datasource when gridOptions.rowModelType is '\" + constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE + \"'\");\n        }\n    };\n    GridApi.prototype.setDatasource = function (datasource) {\n        if (this.gridOptionsWrapper.isRowModelInfinite()) {\n            this.rowModel.setDatasource(datasource);\n        }\n        else {\n            console.warn(\"ag-Grid: you can only use a datasource when gridOptions.rowModelType is '\" + constants_1.Constants.ROW_MODEL_TYPE_INFINITE + \"'\");\n        }\n    };\n    GridApi.prototype.setViewportDatasource = function (viewportDatasource) {\n        if (this.gridOptionsWrapper.isRowModelViewport()) {\n            // this is bad coding, because it's using an interface that's exposed in the enterprise.\n            // really we should create an interface in the core for viewportDatasource and let\n            // the enterprise implement it, rather than casting to 'any' here\n            this.rowModel.setViewportDatasource(viewportDatasource);\n        }\n        else {\n            console.warn(\"ag-Grid: you can only use a viewport datasource when gridOptions.rowModelType is '\" + constants_1.Constants.ROW_MODEL_TYPE_VIEWPORT + \"'\");\n        }\n    };\n    GridApi.prototype.setRowData = function (rowData) {\n        if (this.gridOptionsWrapper.isRowModelDefault()) {\n            if (this.gridOptionsWrapper.isDeltaRowDataMode()) {\n                var _a = this.immutableService.createTransactionForRowData(rowData), transaction = _a[0], orderIdMap = _a[1];\n                this.clientSideRowModel.updateRowData(transaction, orderIdMap);\n                // need to force updating of full width rows - note this wouldn't be necessary the full width cell comp listened\n                // to the data change event on the row node and refreshed itself.\n                this.rowRenderer.refreshFullWidthRows();\n            }\n            else {\n                this.selectionController.reset();\n                this.clientSideRowModel.setRowData(rowData);\n            }\n        }\n        else {\n            console.warn('cannot call setRowData unless using normal row model');\n        }\n    };\n    /** @deprecated */\n    GridApi.prototype.setFloatingTopRowData = function (rows) {\n        console.warn('ag-Grid: since v12, api.setFloatingTopRowData() is now api.setPinnedTopRowData()');\n        this.setPinnedTopRowData(rows);\n    };\n    /** @deprecated */\n    GridApi.prototype.setFloatingBottomRowData = function (rows) {\n        console.warn('ag-Grid: since v12, api.setFloatingBottomRowData() is now api.setPinnedBottomRowData()');\n        this.setPinnedBottomRowData(rows);\n    };\n    /** @deprecated */\n    GridApi.prototype.getFloatingTopRowCount = function () {\n        console.warn('ag-Grid: since v12, api.getFloatingTopRowCount() is now api.getPinnedTopRowCount()');\n        return this.getPinnedTopRowCount();\n    };\n    /** @deprecated */\n    GridApi.prototype.getFloatingBottomRowCount = function () {\n        console.warn('ag-Grid: since v12, api.getFloatingBottomRowCount() is now api.getPinnedBottomRowCount()');\n        return this.getPinnedBottomRowCount();\n    };\n    /** @deprecated */\n    GridApi.prototype.getFloatingTopRow = function (index) {\n        console.warn('ag-Grid: since v12, api.getFloatingTopRow() is now api.getPinnedTopRow()');\n        return this.getPinnedTopRow(index);\n    };\n    /** @deprecated */\n    GridApi.prototype.getFloatingBottomRow = function (index) {\n        console.warn('ag-Grid: since v12, api.getFloatingBottomRow() is now api.getPinnedBottomRow()');\n        return this.getPinnedBottomRow(index);\n    };\n    GridApi.prototype.setPinnedTopRowData = function (rows) {\n        this.pinnedRowModel.setPinnedTopRowData(rows);\n    };\n    GridApi.prototype.setPinnedBottomRowData = function (rows) {\n        this.pinnedRowModel.setPinnedBottomRowData(rows);\n    };\n    GridApi.prototype.getPinnedTopRowCount = function () {\n        return this.pinnedRowModel.getPinnedTopRowCount();\n    };\n    GridApi.prototype.getPinnedBottomRowCount = function () {\n        return this.pinnedRowModel.getPinnedBottomRowCount();\n    };\n    GridApi.prototype.getPinnedTopRow = function (index) {\n        return this.pinnedRowModel.getPinnedTopRow(index);\n    };\n    GridApi.prototype.getPinnedBottomRow = function (index) {\n        return this.pinnedRowModel.getPinnedBottomRow(index);\n    };\n    GridApi.prototype.setColumnDefs = function (colDefs, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.columnController.setColumnDefs(colDefs, source);\n    };\n    GridApi.prototype.expireValueCache = function () {\n        this.valueCache.expire();\n    };\n    GridApi.prototype.getVerticalPixelRange = function () {\n        return this.gridPanel.getVScrollPosition();\n    };\n    GridApi.prototype.getHorizontalPixelRange = function () {\n        return this.gridPanel.getHScrollPosition();\n    };\n    GridApi.prototype.setAlwaysShowVerticalScroll = function (show) {\n        this.gridOptionsWrapper.setProperty('alwaysShowVerticalScroll', show);\n    };\n    GridApi.prototype.refreshToolPanel = function () {\n        this.gridCore.refreshSideBar();\n    };\n    GridApi.prototype.refreshCells = function (params) {\n        if (params === void 0) { params = {}; }\n        if (Array.isArray(params)) {\n            // the old version of refreshCells() took an array of rowNodes for the first argument\n            console.warn('since ag-Grid v11.1, refreshCells() now takes parameters, please see the documentation.');\n            return;\n        }\n        this.rowRenderer.refreshCells(params);\n    };\n    GridApi.prototype.flashCells = function (params) {\n        if (params === void 0) { params = {}; }\n        this.rowRenderer.flashCells(params);\n    };\n    GridApi.prototype.redrawRows = function (params) {\n        if (params === void 0) { params = {}; }\n        if (params && params.rowNodes) {\n            this.rowRenderer.redrawRows(params.rowNodes);\n        }\n        else {\n            this.rowRenderer.redrawAfterModelUpdate();\n        }\n    };\n    GridApi.prototype.timeFullRedraw = function (count) {\n        if (count === void 0) { count = 1; }\n        var iterationCount = 0;\n        var totalProcessing = 0;\n        var totalReflow = 0;\n        var that = this;\n        doOneIteration();\n        function doOneIteration() {\n            var start = (new Date()).getTime();\n            that.rowRenderer.redrawAfterModelUpdate();\n            var endProcessing = (new Date()).getTime();\n            window.setTimeout(function () {\n                var endReflow = (new Date()).getTime();\n                var durationProcessing = endProcessing - start;\n                var durationReflow = endReflow - endProcessing;\n                // tslint:disable-next-line\n                console.log('duration:  processing = ' + durationProcessing + 'ms, reflow = ' + durationReflow + 'ms');\n                iterationCount++;\n                totalProcessing += durationProcessing;\n                totalReflow += durationReflow;\n                if (iterationCount < count) {\n                    // wait for 1s between tests\n                    window.setTimeout(doOneIteration, 1000);\n                }\n                else {\n                    finish();\n                }\n            }, 0);\n        }\n        function finish() {\n            // tslint:disable-next-line\n            console.log('tests complete. iteration count = ' + iterationCount);\n            // tslint:disable-next-line\n            console.log('average processing = ' + (totalProcessing / iterationCount) + 'ms');\n            // tslint:disable-next-line\n            console.log('average reflow = ' + (totalReflow / iterationCount) + 'ms');\n        }\n    };\n    /** @deprecated */\n    GridApi.prototype.refreshView = function () {\n        console.warn('ag-Grid: since v11.1, refreshView() is deprecated, please call refreshCells() or redrawRows() instead');\n        this.redrawRows();\n    };\n    //** @deprecated */\n    GridApi.prototype.refreshRows = function (rowNodes) {\n        console.warn('since ag-Grid v11.1, refreshRows() is deprecated, please use refreshCells({rowNodes: rows}) or redrawRows({rowNodes: rows}) instead');\n        this.refreshCells({ rowNodes: rowNodes });\n    };\n    /** @deprecated */\n    GridApi.prototype.rowDataChanged = function (rows) {\n        console.warn('ag-Grid: rowDataChanged is deprecated, either call refreshView() to refresh everything, or call rowNode.setRowData(newData) to set value on a particular node');\n        this.redrawRows();\n    };\n    /** @deprecated */\n    GridApi.prototype.softRefreshView = function () {\n        console.error('ag-Grid: since v16, softRefreshView() is no longer supported. Please check the documentation on how to refresh.');\n    };\n    /** @deprecated */\n    GridApi.prototype.refreshGroupRows = function () {\n        console.warn('ag-Grid: since v11.1, refreshGroupRows() is no longer supported, call refreshCells() instead. ' +\n            'Because refreshCells() now does dirty checking, it will only refresh cells that have changed, so it should ' +\n            'not be necessary to only refresh the group rows.');\n        this.refreshCells();\n    };\n    GridApi.prototype.setFunctionsReadOnly = function (readOnly) {\n        this.gridOptionsWrapper.setProperty('functionsReadOnly', readOnly);\n    };\n    GridApi.prototype.refreshHeader = function () {\n        this.headerRootComp.refreshHeader();\n        this.gridPanel.setHeaderAndFloatingHeights();\n    };\n    GridApi.prototype.isAnyFilterPresent = function () {\n        return this.filterManager.isAnyFilterPresent();\n    };\n    GridApi.prototype.isAdvancedFilterPresent = function () {\n        console.warn('ag-Grid: isAdvancedFilterPresent() is deprecated, please use isColumnFilterPresent()');\n        return this.isColumnFilterPresent();\n    };\n    GridApi.prototype.isColumnFilterPresent = function () {\n        return this.filterManager.isAdvancedFilterPresent();\n    };\n    GridApi.prototype.isQuickFilterPresent = function () {\n        return this.filterManager.isQuickFilterPresent();\n    };\n    GridApi.prototype.getModel = function () {\n        return this.rowModel;\n    };\n    GridApi.prototype.onGroupExpandedOrCollapsed = function (deprecated_refreshFromIndex) {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.warn('ag-Grid: cannot call onGroupExpandedOrCollapsed unless using normal row model');\n        }\n        if (utils_1._.exists(deprecated_refreshFromIndex)) {\n            console.warn('ag-Grid: api.onGroupExpandedOrCollapsed - refreshFromIndex parameter is no longer used, the grid will refresh all rows');\n        }\n        // we don't really want the user calling this if one one rowNode was expanded, instead they should be\n        // calling rowNode.setExpanded(boolean) - this way we do a 'keepRenderedRows=false' so that the whole\n        // grid gets refreshed again - otherwise the row with the rowNodes that were changed won't get updated,\n        // and thus the expand icon in the group cell won't get 'opened' or 'closed'.\n        this.clientSideRowModel.refreshModel({ step: constants_1.Constants.STEP_MAP });\n    };\n    GridApi.prototype.refreshInMemoryRowModel = function (step) {\n        console.warn(\"ag-grid: since version 18.x, api.refreshInMemoryRowModel() should be replaced with api.refreshClientSideRowModel()\");\n        this.refreshClientSideRowModel(step);\n    };\n    GridApi.prototype.refreshClientSideRowModel = function (step) {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.warn('cannot call refreshClientSideRowModel unless using normal row model');\n        }\n        var paramsStep = constants_1.Constants.STEP_EVERYTHING;\n        var stepsMapped = {\n            group: constants_1.Constants.STEP_EVERYTHING,\n            filter: constants_1.Constants.STEP_FILTER,\n            map: constants_1.Constants.STEP_MAP,\n            aggregate: constants_1.Constants.STEP_AGGREGATE,\n            sort: constants_1.Constants.STEP_SORT,\n            pivot: constants_1.Constants.STEP_PIVOT\n        };\n        if (utils_1._.exists(step)) {\n            paramsStep = stepsMapped[step];\n        }\n        if (utils_1._.missing(paramsStep)) {\n            console.error(\"ag-Grid: invalid step \" + step + \", available steps are \" + Object.keys(stepsMapped).join(', '));\n            return;\n        }\n        var modelParams = {\n            step: paramsStep,\n            keepRenderedRows: true,\n            animate: true,\n            keepEditingRows: true\n        };\n        this.clientSideRowModel.refreshModel(modelParams);\n    };\n    GridApi.prototype.isAnimationFrameQueueEmpty = function () {\n        return this.animationFrameService.isQueueEmpty();\n    };\n    GridApi.prototype.getRowNode = function (id) {\n        return this.rowModel.getRowNode(id);\n    };\n    GridApi.prototype.expandAll = function () {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.warn('ag-Grid: cannot call expandAll unless using normal row model');\n            return;\n        }\n        this.clientSideRowModel.expandOrCollapseAll(true);\n    };\n    GridApi.prototype.collapseAll = function () {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.warn('ag-Grid: cannot call collapseAll unless using normal row model');\n            return;\n        }\n        this.clientSideRowModel.expandOrCollapseAll(false);\n    };\n    GridApi.prototype.addVirtualRowListener = function (eventName, rowIndex, callback) {\n        if (typeof eventName !== 'string') {\n            console.warn('ag-Grid: addVirtualRowListener is deprecated, please use addRenderedRowListener.');\n        }\n        this.addRenderedRowListener(eventName, rowIndex, callback);\n    };\n    GridApi.prototype.addRenderedRowListener = function (eventName, rowIndex, callback) {\n        if (eventName === 'virtualRowSelected') {\n            console.warn(\"ag-Grid: event virtualRowSelected is deprecated, to register for individual row\\n                selection events, add a listener directly to the row node.\");\n        }\n        this.rowRenderer.addRenderedRowListener(eventName, rowIndex, callback);\n    };\n    GridApi.prototype.setQuickFilter = function (newFilter) {\n        this.filterManager.setQuickFilter(newFilter);\n    };\n    GridApi.prototype.selectIndex = function (index, tryMulti, suppressEvents) {\n        console.warn('ag-Grid: do not use api for selection, call node.setSelected(value) instead');\n        if (suppressEvents) {\n            console.warn('ag-Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it');\n        }\n        this.selectionController.selectIndex(index, tryMulti);\n    };\n    GridApi.prototype.deselectIndex = function (index, suppressEvents) {\n        if (suppressEvents === void 0) { suppressEvents = false; }\n        console.warn('ag-Grid: do not use api for selection, call node.setSelected(value) instead');\n        if (suppressEvents) {\n            console.warn('ag-Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it');\n        }\n        this.selectionController.deselectIndex(index);\n    };\n    GridApi.prototype.selectNode = function (node, tryMulti, suppressEvents) {\n        if (tryMulti === void 0) { tryMulti = false; }\n        if (suppressEvents === void 0) { suppressEvents = false; }\n        console.warn('ag-Grid: API for selection is deprecated, call node.setSelected(value) instead');\n        if (suppressEvents) {\n            console.warn('ag-Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it');\n        }\n        node.setSelectedParams({ newValue: true, clearSelection: !tryMulti });\n    };\n    GridApi.prototype.deselectNode = function (node, suppressEvents) {\n        if (suppressEvents === void 0) { suppressEvents = false; }\n        console.warn('ag-Grid: API for selection is deprecated, call node.setSelected(value) instead');\n        if (suppressEvents) {\n            console.warn('ag-Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it');\n        }\n        node.setSelectedParams({ newValue: false });\n    };\n    GridApi.prototype.selectAll = function () {\n        this.selectionController.selectAllRowNodes();\n    };\n    GridApi.prototype.deselectAll = function () {\n        this.selectionController.deselectAllRowNodes();\n    };\n    GridApi.prototype.selectAllFiltered = function () {\n        this.selectionController.selectAllRowNodes(true);\n    };\n    GridApi.prototype.deselectAllFiltered = function () {\n        this.selectionController.deselectAllRowNodes(true);\n    };\n    GridApi.prototype.recomputeAggregates = function () {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.warn('cannot call recomputeAggregates unless using normal row model');\n        }\n        console.warn(\"recomputeAggregates is deprecated, please call api.refreshClientSideRowModel('aggregate') instead\");\n        this.clientSideRowModel.refreshModel({ step: constants_1.Constants.STEP_AGGREGATE });\n    };\n    GridApi.prototype.sizeColumnsToFit = function () {\n        this.gridPanel.sizeColumnsToFit();\n    };\n    GridApi.prototype.showLoadingOverlay = function () {\n        this.gridPanel.showLoadingOverlay();\n    };\n    GridApi.prototype.showNoRowsOverlay = function () {\n        this.gridPanel.showNoRowsOverlay();\n    };\n    GridApi.prototype.hideOverlay = function () {\n        this.gridPanel.hideOverlay();\n    };\n    GridApi.prototype.isNodeSelected = function (node) {\n        console.warn('ag-Grid: no need to call api.isNodeSelected(), just call node.isSelected() instead');\n        return node.isSelected();\n    };\n    GridApi.prototype.getSelectedNodesById = function () {\n        console.error('ag-Grid: since version 3.4, getSelectedNodesById no longer exists, use getSelectedNodes() instead');\n        return null;\n    };\n    GridApi.prototype.getSelectedNodes = function () {\n        return this.selectionController.getSelectedNodes();\n    };\n    GridApi.prototype.getSelectedRows = function () {\n        return this.selectionController.getSelectedRows();\n    };\n    GridApi.prototype.getBestCostNodeSelection = function () {\n        return this.selectionController.getBestCostNodeSelection();\n    };\n    GridApi.prototype.getRenderedNodes = function () {\n        return this.rowRenderer.getRenderedNodes();\n    };\n    GridApi.prototype.ensureColIndexVisible = function (index) {\n        console.warn('ag-Grid: ensureColIndexVisible(index) no longer supported, use ensureColumnVisible(colKey) instead.');\n    };\n    GridApi.prototype.ensureColumnVisible = function (key) {\n        this.gridPanel.ensureColumnVisible(key);\n    };\n    // Valid values for position are bottom, middle and top\n    GridApi.prototype.ensureIndexVisible = function (index, position) {\n        this.gridPanel.ensureIndexVisible(index, position);\n    };\n    // Valid values for position are bottom, middle and top\n    GridApi.prototype.ensureNodeVisible = function (comparator, position) {\n        this.gridCore.ensureNodeVisible(comparator, position);\n    };\n    GridApi.prototype.forEachLeafNode = function (callback) {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.warn('cannot call forEachNode unless using normal row model');\n        }\n        this.clientSideRowModel.forEachLeafNode(callback);\n    };\n    GridApi.prototype.forEachNode = function (callback) {\n        this.rowModel.forEachNode(callback);\n    };\n    GridApi.prototype.forEachNodeAfterFilter = function (callback) {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.warn('cannot call forEachNodeAfterFilter unless using normal row model');\n        }\n        this.clientSideRowModel.forEachNodeAfterFilter(callback);\n    };\n    GridApi.prototype.forEachNodeAfterFilterAndSort = function (callback) {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.warn('cannot call forEachNodeAfterFilterAndSort unless using normal row model');\n        }\n        this.clientSideRowModel.forEachNodeAfterFilterAndSort(callback);\n    };\n    GridApi.prototype.getFilterApiForColDef = function (colDef) {\n        console.warn('ag-grid API method getFilterApiForColDef deprecated, use getFilterApi instead');\n        return this.getFilterInstance(colDef);\n    };\n    GridApi.prototype.getFilterInstance = function (key) {\n        var column = this.columnController.getPrimaryColumn(key);\n        if (column) {\n            return this.filterManager.getFilterComponent(column, 'NO_UI').resolveNow(null, function (filterComp) { return filterComp; });\n        }\n    };\n    GridApi.prototype.getFilterApi = function (key) {\n        console.warn('ag-Grid: getFilterApi is deprecated, use getFilterInstance instead');\n        return this.getFilterInstance(key);\n    };\n    GridApi.prototype.destroyFilter = function (key) {\n        var column = this.columnController.getPrimaryColumn(key);\n        if (column) {\n            return this.filterManager.destroyFilter(column, \"filterDestroyed\");\n        }\n    };\n    GridApi.prototype.getStatusPanel = function (key) {\n        if (this.statusBarService) {\n            return this.statusBarService.getStatusPanel(key);\n        }\n    };\n    GridApi.prototype.getColumnDef = function (key) {\n        var column = this.columnController.getPrimaryColumn(key);\n        if (column) {\n            return column.getColDef();\n        }\n        else {\n            return null;\n        }\n    };\n    GridApi.prototype.onFilterChanged = function () {\n        this.filterManager.onFilterChanged();\n    };\n    GridApi.prototype.onSortChanged = function () {\n        this.sortController.onSortChanged();\n    };\n    GridApi.prototype.setSortModel = function (sortModel, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.sortController.setSortModel(sortModel, source);\n    };\n    GridApi.prototype.getSortModel = function () {\n        return this.sortController.getSortModel();\n    };\n    GridApi.prototype.setFilterModel = function (model) {\n        this.filterManager.setFilterModel(model);\n    };\n    GridApi.prototype.getFilterModel = function () {\n        return this.filterManager.getFilterModel();\n    };\n    GridApi.prototype.getFocusedCell = function () {\n        return this.focusedCellController.getFocusedCell();\n    };\n    GridApi.prototype.clearFocusedCell = function () {\n        return this.focusedCellController.clearFocusedCell();\n    };\n    GridApi.prototype.setFocusedCell = function (rowIndex, colKey, floating) {\n        this.focusedCellController.setFocusedCell(rowIndex, colKey, floating, true);\n    };\n    GridApi.prototype.setSuppressRowDrag = function (value) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_SUPPRESS_ROW_DRAG, value);\n    };\n    GridApi.prototype.setHeaderHeight = function (headerHeight) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_HEADER_HEIGHT, headerHeight);\n        this.doLayout();\n    };\n    GridApi.prototype.setGridAutoHeight = function (gridAutoHeight) {\n        console.warn('api.setGridAutoHeight(boolean) is deprecated, please use api.setDomLayout() instead');\n        this.setDomLayout(gridAutoHeight ? 'autoHeight' : 'normal');\n    };\n    GridApi.prototype.setDomLayout = function (domLayout) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_DOM_LAYOUT, domLayout);\n    };\n    GridApi.prototype.setEnableCellTextSelection = function (selectable) {\n        this.gridPanel.setCellTextSelection(selectable);\n    };\n    GridApi.prototype.setGroupHeaderHeight = function (headerHeight) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, headerHeight);\n        this.doLayout();\n    };\n    GridApi.prototype.setFloatingFiltersHeight = function (headerHeight) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, headerHeight);\n        this.doLayout();\n    };\n    GridApi.prototype.setPivotGroupHeaderHeight = function (headerHeight) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, headerHeight);\n        this.doLayout();\n    };\n    GridApi.prototype.setPivotHeaderHeight = function (headerHeight) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, headerHeight);\n        this.doLayout();\n    };\n    GridApi.prototype.isSideBarVisible = function () {\n        return this.gridCore.isSideBarVisible();\n    };\n    GridApi.prototype.setSideBarVisible = function (show) {\n        this.gridCore.setSideBarVisible(show);\n    };\n    GridApi.prototype.showToolPanel = function (show) {\n        console.warn(\"ag-grid: from v19 api.showToolPanel has been deprecated in favour of api.setSideBarVisible\");\n        this.setSideBarVisible(show);\n    };\n    GridApi.prototype.openToolPanel = function (key) {\n        this.gridCore.openToolPanel(key);\n    };\n    GridApi.prototype.closeToolPanel = function () {\n        this.gridCore.closeToolPanel();\n    };\n    GridApi.prototype.getOpenedToolPanel = function () {\n        return this.gridCore.getOpenedToolPanel();\n    };\n    GridApi.prototype.getSideBar = function () {\n        return this.gridCore.getSideBar();\n    };\n    GridApi.prototype.setSideBar = function (def) {\n        return this.gridCore.setSideBar(def);\n    };\n    GridApi.prototype.setSuppressClipboardPaste = function (value) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_SUPPRESS_CLIPBOARD_PASTE, value);\n    };\n    GridApi.prototype.isToolPanelShowing = function () {\n        return this.gridCore.isToolPanelShowing();\n    };\n    GridApi.prototype.doLayout = function () {\n        this.gridPanel.checkViewportAndScrolls();\n    };\n    GridApi.prototype.resetRowHeights = function () {\n        if (utils_1._.exists(this.clientSideRowModel)) {\n            this.clientSideRowModel.resetRowHeights();\n        }\n    };\n    GridApi.prototype.setGroupRemoveSingleChildren = function (value) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_REMOVE_SINGLE_CHILDREN, value);\n    };\n    GridApi.prototype.setGroupRemoveLowestSingleChildren = function (value) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN, value);\n    };\n    GridApi.prototype.onRowHeightChanged = function () {\n        if (utils_1._.exists(this.clientSideRowModel)) {\n            this.clientSideRowModel.onRowHeightChanged();\n        }\n    };\n    GridApi.prototype.getValue = function (colKey, rowNode) {\n        var column = this.columnController.getPrimaryColumn(colKey);\n        if (utils_1._.missing(column)) {\n            column = this.columnController.getGridColumn(colKey);\n        }\n        if (utils_1._.missing(column)) {\n            return null;\n        }\n        else {\n            return this.valueService.getValue(column, rowNode);\n        }\n    };\n    GridApi.prototype.addEventListener = function (eventType, listener) {\n        var async = this.gridOptionsWrapper.useAsyncEvents();\n        this.eventService.addEventListener(eventType, listener, async);\n    };\n    GridApi.prototype.addGlobalListener = function (listener) {\n        var async = this.gridOptionsWrapper.useAsyncEvents();\n        this.eventService.addGlobalListener(listener, async);\n    };\n    GridApi.prototype.removeEventListener = function (eventType, listener) {\n        var async = this.gridOptionsWrapper.useAsyncEvents();\n        this.eventService.removeEventListener(eventType, listener, async);\n    };\n    GridApi.prototype.removeGlobalListener = function (listener) {\n        var async = this.gridOptionsWrapper.useAsyncEvents();\n        this.eventService.removeGlobalListener(listener, async);\n    };\n    GridApi.prototype.dispatchEvent = function (event) {\n        this.eventService.dispatchEvent(event);\n    };\n    GridApi.prototype.destroy = function () {\n        // destroy the UI first (as they use the services)\n        this.gridCore.destroy();\n        // destroy the services\n        this.context.destroy();\n    };\n    GridApi.prototype.resetQuickFilter = function () {\n        this.rowModel.forEachNode(function (node) { return node.quickFilterAggregateText = null; });\n    };\n    GridApi.prototype.getRangeSelections = function () {\n        console.warn(\"ag-Grid: in v20.1.x, api.getRangeSelections() is gone, please use getCellRanges() instead.\\n        We had to change how cell selections works a small bit to allow charting to integrate. The return type of\\n        getCellRanges() is a bit different, please check the ag-Grid documentation.\");\n        return null;\n    };\n    GridApi.prototype.getCellRanges = function () {\n        if (this.rangeController) {\n            return this.rangeController.getCellRanges();\n        }\n        else {\n            console.warn('ag-Grid: cell range selection is only available in ag-Grid Enterprise');\n            return null;\n        }\n    };\n    GridApi.prototype.camelCaseToHumanReadable = function (camelCase) {\n        return utils_1._.camelCaseToHumanText(camelCase);\n    };\n    GridApi.prototype.addRangeSelection = function (deprecatedNoLongerUsed) {\n        console.warn('ag-Grid: As of version 21.x, range selection changed slightly to allow charting integration. Please call api.addCellRange() instead of api.addRangeSelection()');\n    };\n    GridApi.prototype.addCellRange = function (params) {\n        if (!this.rangeController) {\n            console.warn('ag-Grid: cell range selection is only available in ag-Grid Enterprise');\n        }\n        this.rangeController.addCellRange(params);\n    };\n    GridApi.prototype.clearRangeSelection = function () {\n        if (!this.rangeController) {\n            console.warn('ag-Grid: cell range selection is only available in ag-Grid Enterprise');\n        }\n        this.rangeController.removeAllCellRanges();\n    };\n    GridApi.prototype.chartRange = function (params) {\n        if (!this.context.isModuleRegistered(\"chartsModule\" /* ChartsModule */)) {\n            utils_1._.doOnce(function () {\n                console.warn('ag-grid: Cannot chart range - the Charts Module has not been included.');\n            }, 'ChartsModuleCheck');\n            return;\n        }\n        return this.rangeChartService.chartCellRange(params);\n    };\n    GridApi.prototype.copySelectedRowsToClipboard = function (includeHeader, columnKeys) {\n        if (!this.clipboardService) {\n            console.warn('ag-Grid: clipboard is only available in ag-Grid Enterprise');\n        }\n        this.clipboardService.copySelectedRowsToClipboard(includeHeader, columnKeys);\n    };\n    GridApi.prototype.copySelectedRangeToClipboard = function (includeHeader) {\n        if (!this.clipboardService) {\n            console.warn('ag-Grid: clipboard is only available in ag-Grid Enterprise');\n        }\n        this.clipboardService.copySelectedRangeToClipboard(includeHeader);\n    };\n    GridApi.prototype.copySelectedRangeDown = function () {\n        if (!this.clipboardService) {\n            console.warn('ag-Grid: clipboard is only available in ag-Grid Enterprise');\n        }\n        this.clipboardService.copyRangeDown();\n    };\n    GridApi.prototype.showColumnMenuAfterButtonClick = function (colKey, buttonElement) {\n        // use grid column so works with pivot mode\n        var column = this.columnController.getGridColumn(colKey);\n        this.menuFactory.showMenuAfterButtonClick(column, buttonElement);\n    };\n    GridApi.prototype.showColumnMenuAfterMouseClick = function (colKey, mouseEvent) {\n        // use grid column so works with pivot mode\n        var column = this.columnController.getGridColumn(colKey);\n        this.menuFactory.showMenuAfterMouseEvent(column, mouseEvent);\n    };\n    GridApi.prototype.hidePopupMenu = function () {\n        // hide the context menu if in enterprise\n        if (this.contextMenuFactory) {\n            this.contextMenuFactory.hideActiveMenu();\n        }\n        // and hide the column menu always\n        this.menuFactory.hideActiveMenu();\n    };\n    GridApi.prototype.setPopupParent = function (ePopupParent) {\n        this.gridOptionsWrapper.setProperty(gridOptionsWrapper_1.GridOptionsWrapper.PROP_POPUP_PARENT, ePopupParent);\n    };\n    GridApi.prototype.tabToNextCell = function () {\n        return this.rowRenderer.tabToNextCell(false);\n    };\n    GridApi.prototype.tabToPreviousCell = function () {\n        return this.rowRenderer.tabToNextCell(true);\n    };\n    GridApi.prototype.getCellRendererInstances = function (params) {\n        if (params === void 0) { params = {}; }\n        return this.rowRenderer.getCellRendererInstances(params);\n    };\n    GridApi.prototype.getCellEditorInstances = function (params) {\n        if (params === void 0) { params = {}; }\n        return this.rowRenderer.getCellEditorInstances(params);\n    };\n    GridApi.prototype.getEditingCells = function () {\n        return this.rowRenderer.getEditingCells();\n    };\n    GridApi.prototype.stopEditing = function (cancel) {\n        if (cancel === void 0) { cancel = false; }\n        this.rowRenderer.stopEditing(cancel);\n    };\n    GridApi.prototype.startEditingCell = function (params) {\n        var column = this.columnController.getGridColumn(params.colKey);\n        if (!column) {\n            console.warn(\"ag-Grid: no column found for \" + params.colKey);\n            return;\n        }\n        var cellPosition = {\n            rowIndex: params.rowIndex,\n            rowPinned: params.rowPinned,\n            column: column\n        };\n        var notPinned = utils_1._.missing(params.rowPinned);\n        if (notPinned) {\n            this.gridPanel.ensureIndexVisible(params.rowIndex);\n        }\n        this.rowRenderer.startEditingCell(cellPosition, params.keyPress, params.charPress);\n    };\n    GridApi.prototype.addAggFunc = function (key, aggFunc) {\n        if (this.aggFuncService) {\n            this.aggFuncService.addAggFunc(key, aggFunc);\n        }\n    };\n    GridApi.prototype.addAggFuncs = function (aggFuncs) {\n        if (this.aggFuncService) {\n            this.aggFuncService.addAggFuncs(aggFuncs);\n        }\n    };\n    GridApi.prototype.clearAggFuncs = function () {\n        if (this.aggFuncService) {\n            this.aggFuncService.clear();\n        }\n    };\n    GridApi.prototype.updateRowData = function (rowDataTransaction) {\n        var res = null;\n        if (this.clientSideRowModel) {\n            res = this.clientSideRowModel.updateRowData(rowDataTransaction);\n        }\n        else if (this.infinitePageRowModel) {\n            this.infinitePageRowModel.updateRowData(rowDataTransaction);\n        }\n        else {\n            console.error('ag-Grid: updateRowData() only works with ClientSideRowModel and InfiniteRowModel.');\n        }\n        // refresh all the full width rows\n        this.rowRenderer.refreshFullWidthRows();\n        // do change detection for all present cells\n        if (!this.gridOptionsWrapper.isSuppressChangeDetection()) {\n            this.rowRenderer.refreshCells();\n        }\n        return res;\n    };\n    GridApi.prototype.batchUpdateRowData = function (rowDataTransaction, callback) {\n        if (!this.clientSideRowModel) {\n            console.error('ag-Grid: api.batchUpdateRowData() only works with ClientSideRowModel.');\n            return;\n        }\n        this.clientSideRowModel.batchUpdateRowData(rowDataTransaction, callback);\n    };\n    GridApi.prototype.insertItemsAtIndex = function (index, items, skipRefresh) {\n        if (skipRefresh === void 0) { skipRefresh = false; }\n        console.warn('ag-Grid: insertItemsAtIndex() is deprecated, use updateRowData(transaction) instead.');\n        this.updateRowData({ add: items, addIndex: index, update: null, remove: null });\n    };\n    GridApi.prototype.removeItems = function (rowNodes, skipRefresh) {\n        if (skipRefresh === void 0) { skipRefresh = false; }\n        console.warn('ag-Grid: removeItems() is deprecated, use updateRowData(transaction) instead.');\n        var dataToRemove = rowNodes.map(function (rowNode) { return rowNode.data; });\n        this.updateRowData({ add: null, addIndex: null, update: null, remove: dataToRemove });\n    };\n    GridApi.prototype.addItems = function (items, skipRefresh) {\n        if (skipRefresh === void 0) { skipRefresh = false; }\n        console.warn('ag-Grid: addItems() is deprecated, use updateRowData(transaction) instead.');\n        this.updateRowData({ add: items, addIndex: null, update: null, remove: null });\n    };\n    GridApi.prototype.refreshVirtualPageCache = function () {\n        console.warn('ag-Grid: refreshVirtualPageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead');\n        this.refreshInfiniteCache();\n    };\n    GridApi.prototype.refreshInfinitePageCache = function () {\n        console.warn('ag-Grid: refreshInfinitePageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead');\n        this.refreshInfiniteCache();\n    };\n    GridApi.prototype.refreshInfiniteCache = function () {\n        if (this.infinitePageRowModel) {\n            this.infinitePageRowModel.refreshCache();\n        }\n        else {\n            console.warn(\"ag-Grid: api.refreshInfiniteCache is only available when rowModelType='infinite'.\");\n        }\n    };\n    GridApi.prototype.purgeVirtualPageCache = function () {\n        console.warn('ag-Grid: purgeVirtualPageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead');\n        this.purgeInfinitePageCache();\n    };\n    GridApi.prototype.purgeInfinitePageCache = function () {\n        console.warn('ag-Grid: purgeInfinitePageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead');\n        this.purgeInfiniteCache();\n    };\n    GridApi.prototype.purgeInfiniteCache = function () {\n        if (this.infinitePageRowModel) {\n            this.infinitePageRowModel.purgeCache();\n        }\n        else {\n            console.warn(\"ag-Grid: api.purgeInfiniteCache is only available when rowModelType='infinite'.\");\n        }\n    };\n    /** @deprecated */\n    GridApi.prototype.purgeEnterpriseCache = function (route) {\n        console.warn(\"ag-grid: since version 18.x, api.purgeEnterpriseCache() should be replaced with api.purgeServerSideCache()\");\n        this.purgeServerSideCache(route);\n    };\n    GridApi.prototype.purgeServerSideCache = function (route) {\n        if (this.serverSideRowModel) {\n            this.serverSideRowModel.purgeCache(route);\n        }\n        else {\n            console.warn(\"ag-Grid: api.purgeServerSideCache is only available when rowModelType='enterprise'.\");\n        }\n    };\n    GridApi.prototype.getVirtualRowCount = function () {\n        console.warn('ag-Grid: getVirtualRowCount() is now called getInfiniteRowCount(), please call getInfiniteRowCount() instead');\n        return this.getInfiniteRowCount();\n    };\n    GridApi.prototype.getInfiniteRowCount = function () {\n        if (this.infinitePageRowModel) {\n            return this.infinitePageRowModel.getVirtualRowCount();\n        }\n        else {\n            console.warn(\"ag-Grid: api.getVirtualRowCount is only available when rowModelType='virtual'.\");\n        }\n    };\n    GridApi.prototype.isMaxRowFound = function () {\n        if (this.infinitePageRowModel) {\n            return this.infinitePageRowModel.isMaxRowFound();\n        }\n        else {\n            console.warn(\"ag-Grid: api.isMaxRowFound is only available when rowModelType='virtual'.\");\n        }\n    };\n    GridApi.prototype.setVirtualRowCount = function (rowCount, maxRowFound) {\n        console.warn('ag-Grid: setVirtualRowCount() is now called setInfiniteRowCount(), please call setInfiniteRowCount() instead');\n        this.setInfiniteRowCount(rowCount, maxRowFound);\n    };\n    GridApi.prototype.setInfiniteRowCount = function (rowCount, maxRowFound) {\n        if (this.infinitePageRowModel) {\n            this.infinitePageRowModel.setVirtualRowCount(rowCount, maxRowFound);\n        }\n        else {\n            console.warn(\"ag-Grid: api.setVirtualRowCount is only available when rowModelType='virtual'.\");\n        }\n    };\n    GridApi.prototype.getVirtualPageState = function () {\n        console.warn('ag-Grid: getVirtualPageState() is now called getCacheBlockState(), please call getCacheBlockState() instead');\n        return this.getCacheBlockState();\n    };\n    GridApi.prototype.getInfinitePageState = function () {\n        console.warn('ag-Grid: getInfinitePageState() is now called getCacheBlockState(), please call getCacheBlockState() instead');\n        return this.getCacheBlockState();\n    };\n    GridApi.prototype.getCacheBlockState = function () {\n        if (this.infinitePageRowModel) {\n            return this.infinitePageRowModel.getBlockState();\n        }\n        else if (this.serverSideRowModel) {\n            return this.serverSideRowModel.getBlockState();\n        }\n        else {\n            console.warn(\"ag-Grid: api.getCacheBlockState() is only available when rowModelType='infinite' or rowModelType='serverSide'.\");\n        }\n    };\n    GridApi.prototype.checkGridSize = function () {\n        this.gridPanel.setHeaderAndFloatingHeights();\n    };\n    GridApi.prototype.getFirstRenderedRow = function () {\n        console.warn('in ag-Grid v12, getFirstRenderedRow() was renamed to getFirstDisplayedRow()');\n        return this.getFirstDisplayedRow();\n    };\n    GridApi.prototype.getFirstDisplayedRow = function () {\n        return this.rowRenderer.getFirstVirtualRenderedRow();\n    };\n    GridApi.prototype.getLastRenderedRow = function () {\n        console.warn('in ag-Grid v12, getLastRenderedRow() was renamed to getLastDisplayedRow()');\n        return this.getLastDisplayedRow();\n    };\n    GridApi.prototype.getLastDisplayedRow = function () {\n        return this.rowRenderer.getLastVirtualRenderedRow();\n    };\n    GridApi.prototype.getDisplayedRowAtIndex = function (index) {\n        return this.rowModel.getRow(index);\n    };\n    GridApi.prototype.getDisplayedRowCount = function () {\n        return this.rowModel.getRowCount();\n    };\n    GridApi.prototype.paginationIsLastPageFound = function () {\n        return this.paginationProxy.isLastPageFound();\n    };\n    GridApi.prototype.paginationGetPageSize = function () {\n        return this.paginationProxy.getPageSize();\n    };\n    GridApi.prototype.paginationSetPageSize = function (size) {\n        this.gridOptionsWrapper.setProperty('paginationPageSize', size);\n    };\n    GridApi.prototype.paginationGetCurrentPage = function () {\n        return this.paginationProxy.getCurrentPage();\n    };\n    GridApi.prototype.paginationGetTotalPages = function () {\n        return this.paginationProxy.getTotalPages();\n    };\n    GridApi.prototype.paginationGetRowCount = function () {\n        return this.paginationProxy.getTotalRowCount();\n    };\n    GridApi.prototype.paginationGoToNextPage = function () {\n        this.paginationProxy.goToNextPage();\n    };\n    GridApi.prototype.paginationGoToPreviousPage = function () {\n        this.paginationProxy.goToPreviousPage();\n    };\n    GridApi.prototype.paginationGoToFirstPage = function () {\n        this.paginationProxy.goToFirstPage();\n    };\n    GridApi.prototype.paginationGoToLastPage = function () {\n        this.paginationProxy.goToLastPage();\n    };\n    GridApi.prototype.paginationGoToPage = function (page) {\n        this.paginationProxy.goToPage(page);\n    };\n    __decorate([\n        context_1.Autowired('immutableService'),\n        __metadata(\"design:type\", immutableService_1.ImmutableService)\n    ], GridApi.prototype, \"immutableService\", void 0);\n    __decorate([\n        context_1.Autowired('csvCreator'),\n        __metadata(\"design:type\", csvCreator_1.CsvCreator)\n    ], GridApi.prototype, \"csvCreator\", void 0);\n    __decorate([\n        context_1.Optional('excelCreator'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"excelCreator\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], GridApi.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], GridApi.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GridApi.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], GridApi.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GridApi.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], GridApi.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('alignedGridsService'),\n        __metadata(\"design:type\", alignedGridsService_1.AlignedGridsService)\n    ], GridApi.prototype, \"alignedGridsService\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GridApi.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('pinnedRowModel'),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], GridApi.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], GridApi.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('sortController'),\n        __metadata(\"design:type\", sortController_1.SortController)\n    ], GridApi.prototype, \"sortController\", void 0);\n    __decorate([\n        context_1.Autowired('paginationProxy'),\n        __metadata(\"design:type\", paginationProxy_1.PaginationProxy)\n    ], GridApi.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        context_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], GridApi.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Optional('rangeController'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"rangeController\", void 0);\n    __decorate([\n        context_1.Optional('clipboardService'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"clipboardService\", void 0);\n    __decorate([\n        context_1.Optional('aggFuncService'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"aggFuncService\", void 0);\n    __decorate([\n        context_1.Autowired('menuFactory'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"menuFactory\", void 0);\n    __decorate([\n        context_1.Optional('contextMenuFactory'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"contextMenuFactory\", void 0);\n    __decorate([\n        context_1.Autowired('cellRendererFactory'),\n        __metadata(\"design:type\", cellRendererFactory_1.CellRendererFactory)\n    ], GridApi.prototype, \"cellRendererFactory\", void 0);\n    __decorate([\n        context_1.Autowired('valueCache'),\n        __metadata(\"design:type\", valueCache_1.ValueCache)\n    ], GridApi.prototype, \"valueCache\", void 0);\n    __decorate([\n        context_1.Optional('sideBarComp'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"sideBarComp\", void 0);\n    __decorate([\n        context_1.Autowired('animationFrameService'),\n        __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)\n    ], GridApi.prototype, \"animationFrameService\", void 0);\n    __decorate([\n        context_1.Optional('statusBarService'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"statusBarService\", void 0);\n    __decorate([\n        context_1.Optional('rangeChartService'),\n        __metadata(\"design:type\", Object)\n    ], GridApi.prototype, \"rangeChartService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridApi.prototype, \"init\", null);\n    GridApi = __decorate([\n        context_1.Bean('gridApi')\n    ], GridApi);\n    return GridApi;\n}());\nexports.GridApi = GridApi;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar beanStub_1 = require(\"../context/beanStub\");\nvar utils_1 = require(\"../utils\");\nvar compIdSequence = new utils_1.NumberSequence();\nvar Component = /** @class */ (function (_super) {\n    __extends(Component, _super);\n    function Component(template) {\n        var _this = _super.call(this) || this;\n        _this.childComponents = [];\n        _this.annotatedEventListeners = [];\n        _this.visible = true;\n        // unique id for this row component. this is used for getting a reference to the HTML dom.\n        // we cannot use the RowNode id as this is not unique (due to animation, old rows can be lying\n        // around as we create a new rowComp instance for the same row node).\n        _this.compId = compIdSequence.next();\n        if (template) {\n            _this.setTemplate(template);\n        }\n        return _this;\n    }\n    Component.prototype.getCompId = function () {\n        return this.compId;\n    };\n    // for registered components only, eg creates AgCheckbox instance from ag-checkbox HTML tag\n    Component.prototype.createChildComponentsFromTags = function (parentNode) {\n        var _this = this;\n        // we MUST take a copy of the list first, as the 'swapComponentForNode' adds comments into the DOM\n        // which messes up the traversal order of the children.\n        var childNodeList = utils_1._.copyNodeList(parentNode.childNodes);\n        childNodeList.forEach(function (childNode) {\n            var childComp = _this.getContext().createComponentFromElement(childNode, function (childComp) {\n                // copy over all attributes, including css classes, so any attributes user put on the tag\n                // wll be carried across\n                _this.copyAttributesFromNode(childNode, childComp.getGui());\n            });\n            if (childComp) {\n                // replace the tag (eg ag-checkbox) with the proper HTMLElement (eg 'div') in the dom\n                _this.swapComponentForNode(childComp, parentNode, childNode);\n            }\n            else if (childNode.childNodes) {\n                _this.createChildComponentsFromTags(childNode);\n            }\n        });\n    };\n    Component.prototype.copyAttributesFromNode = function (source, dest) {\n        utils_1._.iterateNamedNodeMap(source.attributes, function (name, value) {\n            dest.setAttribute(name, value);\n        });\n    };\n    Component.prototype.swapComponentForNode = function (newComponent, parentNode, childNode) {\n        var eComponent = newComponent.getGui();\n        parentNode.replaceChild(eComponent, childNode);\n        parentNode.insertBefore(document.createComment(childNode.nodeName), eComponent);\n        this.childComponents.push(newComponent);\n        this.swapInComponentForQuerySelectors(newComponent, childNode);\n    };\n    Component.prototype.swapInComponentForQuerySelectors = function (newComponent, childNode) {\n        var thisProto = Object.getPrototypeOf(this);\n        var thisNoType = this;\n        while (thisProto != null) {\n            var metaData = thisProto.__agComponentMetaData;\n            var currentProtoName = (thisProto.constructor).name;\n            if (metaData && metaData[currentProtoName] && metaData[currentProtoName].querySelectors) {\n                metaData[currentProtoName].querySelectors.forEach(function (querySelector) {\n                    if (thisNoType[querySelector.attributeName] === childNode) {\n                        thisNoType[querySelector.attributeName] = newComponent;\n                    }\n                });\n            }\n            thisProto = Object.getPrototypeOf(thisProto);\n        }\n    };\n    Component.prototype.setTemplate = function (template) {\n        var eGui = utils_1._.loadTemplate(template);\n        this.setTemplateFromElement(eGui);\n    };\n    Component.prototype.setTemplateFromElement = function (element) {\n        this.eGui = element;\n        this.eGui.__agComponent = this;\n        this.addAnnotatedEventListeners();\n        this.wireQuerySelectors();\n        // context will not be available when user sets template in constructor\n        var contextIsAvailable = !!this.getContext();\n        if (contextIsAvailable) {\n            this.createChildComponentsFromTags(this.getGui());\n        }\n    };\n    Component.prototype.createChildComponentsPreConstruct = function () {\n        // ui exists if user sets template in constructor. when this happens, we have to wait for the context\n        // to be autoWired first before we can create child components.\n        var uiExists = !!this.getGui();\n        if (uiExists) {\n            this.createChildComponentsFromTags(this.getGui());\n        }\n    };\n    Component.prototype.wireQuerySelectors = function () {\n        var _this = this;\n        if (!this.eGui) {\n            return;\n        }\n        var thisProto = Object.getPrototypeOf(this);\n        var _loop_1 = function () {\n            var metaData = thisProto.__agComponentMetaData;\n            var currentProtoName = (thisProto.constructor).name;\n            if (metaData && metaData[currentProtoName] && metaData[currentProtoName].querySelectors) {\n                var thisNoType_1 = this_1;\n                metaData[currentProtoName].querySelectors.forEach(function (querySelector) {\n                    var resultOfQuery = _this.eGui.querySelector(querySelector.querySelector);\n                    if (resultOfQuery) {\n                        var backingComponent = resultOfQuery.__agComponent;\n                        if (backingComponent) {\n                            thisNoType_1[querySelector.attributeName] = backingComponent;\n                        }\n                        else {\n                            thisNoType_1[querySelector.attributeName] = resultOfQuery;\n                        }\n                    }\n                    else {\n                        // put debug msg in here if query selector fails???\n                    }\n                });\n            }\n            thisProto = Object.getPrototypeOf(thisProto);\n        };\n        var this_1 = this;\n        while (thisProto != null) {\n            _loop_1();\n        }\n    };\n    Component.prototype.addAnnotatedEventListeners = function () {\n        var _this = this;\n        this.removeAnnotatedEventListeners();\n        if (!this.eGui) {\n            return;\n        }\n        var listenerMethods = this.getAgComponentMetaData('listenerMethods');\n        if (utils_1._.missingOrEmpty(listenerMethods)) {\n            return;\n        }\n        if (!this.annotatedEventListeners) {\n            this.annotatedEventListeners = [];\n        }\n        listenerMethods.forEach(function (eventListener) {\n            var listener = _this[eventListener.methodName].bind(_this);\n            _this.eGui.addEventListener(eventListener.eventName, listener);\n            _this.annotatedEventListeners.push({ eventName: eventListener.eventName, listener: listener });\n        });\n    };\n    Component.prototype.getAgComponentMetaData = function (key) {\n        var res = [];\n        var thisProto = Object.getPrototypeOf(this);\n        while (thisProto != null) {\n            var metaData = thisProto.__agComponentMetaData;\n            var currentProtoName = (thisProto.constructor).name;\n            if (metaData && metaData[currentProtoName] && metaData[currentProtoName][key]) {\n                res = res.concat(metaData[currentProtoName][key]);\n            }\n            thisProto = Object.getPrototypeOf(thisProto);\n        }\n        return res;\n    };\n    Component.prototype.removeAnnotatedEventListeners = function () {\n        var _this = this;\n        if (!this.annotatedEventListeners || !this.eGui) {\n            return;\n        }\n        this.annotatedEventListeners.forEach(function (eventListener) {\n            _this.eGui.removeEventListener(eventListener.eventName, eventListener.listener);\n        });\n        this.annotatedEventListeners = [];\n    };\n    Component.prototype.getGui = function () {\n        return this.eGui;\n    };\n    Component.prototype.setParentComponent = function (component) {\n        this.parentComponent = component;\n    };\n    Component.prototype.getParentComponent = function () {\n        return this.parentComponent;\n    };\n    // this method is for older code, that wants to provide the gui element,\n    // it is not intended for this to be in ag-Stack\n    Component.prototype.setGui = function (eGui) {\n        this.eGui = eGui;\n    };\n    Component.prototype.queryForHtmlElement = function (cssSelector) {\n        return this.eGui.querySelector(cssSelector);\n    };\n    Component.prototype.queryForHtmlInputElement = function (cssSelector) {\n        return this.eGui.querySelector(cssSelector);\n    };\n    Component.prototype.appendChild = function (newChild) {\n        if (utils_1._.isNodeOrElement(newChild)) {\n            this.eGui.appendChild(newChild);\n        }\n        else {\n            var childComponent = newChild;\n            this.eGui.appendChild(childComponent.getGui());\n            this.childComponents.push(childComponent);\n        }\n    };\n    Component.prototype.addFeature = function (context, feature) {\n        context.wireBean(feature);\n        if (feature.destroy) {\n            this.addDestroyFunc(feature.destroy.bind(feature));\n        }\n    };\n    Component.prototype.isVisible = function () {\n        return this.visible;\n    };\n    Component.prototype.setVisible = function (visible, visibilityMode) {\n        var isDisplay = visibilityMode !== 'visibility';\n        if (visible !== this.visible) {\n            this.visible = visible;\n            utils_1._.addOrRemoveCssClass(this.eGui, isDisplay ? 'ag-hidden' : 'ag-invisible', !visible);\n            var event_1 = {\n                type: Component.EVENT_VISIBLE_CHANGED,\n                visible: this.visible\n            };\n            this.dispatchEvent(event_1);\n        }\n    };\n    Component.prototype.addOrRemoveCssClass = function (className, addOrRemove) {\n        utils_1._.addOrRemoveCssClass(this.eGui, className, addOrRemove);\n    };\n    Component.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.childComponents.forEach(function (childComponent) {\n            if (childComponent && childComponent.destroy) {\n                childComponent.destroy();\n            }\n        });\n        this.childComponents.length = 0;\n        this.removeAnnotatedEventListeners();\n    };\n    Component.prototype.addGuiEventListener = function (event, listener) {\n        var _this = this;\n        this.getGui().addEventListener(event, listener);\n        this.addDestroyFunc(function () { return _this.getGui().removeEventListener(event, listener); });\n    };\n    Component.prototype.addCssClass = function (className) {\n        utils_1._.addCssClass(this.getGui(), className);\n    };\n    Component.prototype.removeCssClass = function (className) {\n        utils_1._.removeCssClass(this.getGui(), className);\n    };\n    Component.prototype.getAttribute = function (key) {\n        var eGui = this.getGui();\n        return eGui ? eGui.getAttribute(key) : null;\n    };\n    Component.prototype.getRefElement = function (refName) {\n        return this.queryForHtmlElement('[ref=\"' + refName + '\"]');\n    };\n    Component.EVENT_VISIBLE_CHANGED = 'visibleChanged';\n    __decorate([\n        context_1.PreConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Component.prototype, \"createChildComponentsPreConstruct\", null);\n    return Component;\n}(beanStub_1.BeanStub));\nexports.Component = Component;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar columnController_1 = require(\"./columnController\");\nvar context_1 = require(\"../context/context\");\nvar ColumnApi = /** @class */ (function () {\n    function ColumnApi() {\n    }\n    ColumnApi.prototype.sizeColumnsToFit = function (gridWidth) { this.columnController.sizeColumnsToFit(gridWidth, 'api'); };\n    ColumnApi.prototype.setColumnGroupOpened = function (group, newValue) { this.columnController.setColumnGroupOpened(group, newValue, 'api'); };\n    ColumnApi.prototype.getColumnGroup = function (name, instanceId) { return this.columnController.getColumnGroup(name, instanceId); };\n    ColumnApi.prototype.getOriginalColumnGroup = function (name) { return this.columnController.getOriginalColumnGroup(name); };\n    ColumnApi.prototype.getDisplayNameForColumn = function (column, location) { return this.columnController.getDisplayNameForColumn(column, location); };\n    ColumnApi.prototype.getDisplayNameForColumnGroup = function (columnGroup, location) { return this.columnController.getDisplayNameForColumnGroup(columnGroup, location); };\n    ColumnApi.prototype.getColumn = function (key) { return this.columnController.getPrimaryColumn(key); };\n    ColumnApi.prototype.setColumnState = function (columnState) { return this.columnController.setColumnState(columnState, false, 'api'); };\n    ColumnApi.prototype.getColumnState = function () { return this.columnController.getColumnState(); };\n    ColumnApi.prototype.resetColumnState = function () { this.columnController.resetColumnState(false, 'api'); };\n    ColumnApi.prototype.getColumnGroupState = function () { return this.columnController.getColumnGroupState(); };\n    ColumnApi.prototype.setColumnGroupState = function (stateItems) { this.columnController.setColumnGroupState(stateItems, 'api'); };\n    ColumnApi.prototype.resetColumnGroupState = function () { this.columnController.resetColumnGroupState('api'); };\n    ColumnApi.prototype.isPinning = function () { return this.columnController.isPinningLeft() || this.columnController.isPinningRight(); };\n    ColumnApi.prototype.isPinningLeft = function () { return this.columnController.isPinningLeft(); };\n    ColumnApi.prototype.isPinningRight = function () { return this.columnController.isPinningRight(); };\n    ColumnApi.prototype.getDisplayedColAfter = function (col) { return this.columnController.getDisplayedColAfter(col); };\n    ColumnApi.prototype.getDisplayedColBefore = function (col) { return this.columnController.getDisplayedColBefore(col); };\n    ColumnApi.prototype.setColumnVisible = function (key, visible) { this.columnController.setColumnVisible(key, visible, 'api'); };\n    ColumnApi.prototype.setColumnsVisible = function (keys, visible) { this.columnController.setColumnsVisible(keys, visible, 'api'); };\n    ColumnApi.prototype.setColumnPinned = function (key, pinned) { this.columnController.setColumnPinned(key, pinned, 'api'); };\n    ColumnApi.prototype.setColumnsPinned = function (keys, pinned) { this.columnController.setColumnsPinned(keys, pinned, 'api'); };\n    ColumnApi.prototype.getAllColumns = function () { return this.columnController.getAllPrimaryColumns(); };\n    ColumnApi.prototype.getAllGridColumns = function () { return this.columnController.getAllGridColumns(); };\n    ColumnApi.prototype.getDisplayedLeftColumns = function () { return this.columnController.getDisplayedLeftColumns(); };\n    ColumnApi.prototype.getDisplayedCenterColumns = function () { return this.columnController.getDisplayedCenterColumns(); };\n    ColumnApi.prototype.getDisplayedRightColumns = function () { return this.columnController.getDisplayedRightColumns(); };\n    ColumnApi.prototype.getAllDisplayedColumns = function () { return this.columnController.getAllDisplayedColumns(); };\n    ColumnApi.prototype.getAllDisplayedVirtualColumns = function () { return this.columnController.getAllDisplayedVirtualColumns(); };\n    ColumnApi.prototype.moveColumn = function (key, toIndex) {\n        if (typeof key === 'number') {\n            // moveColumn used to take indexes, so this is advising user who hasn't moved to new method name\n            console.warn('ag-Grid: you are using moveColumn(fromIndex, toIndex) - moveColumn takes a column key and a destination index, not two indexes, to move with indexes use moveColumnByIndex(from,to) instead');\n            this.columnController.moveColumnByIndex(key, toIndex, 'api');\n        }\n        else {\n            this.columnController.moveColumn(key, toIndex, 'api');\n        }\n    };\n    ColumnApi.prototype.moveColumnByIndex = function (fromIndex, toIndex) { this.columnController.moveColumnByIndex(fromIndex, toIndex, 'api'); };\n    ColumnApi.prototype.moveColumns = function (columnsToMoveKeys, toIndex) { this.columnController.moveColumns(columnsToMoveKeys, toIndex, 'api'); };\n    ColumnApi.prototype.moveRowGroupColumn = function (fromIndex, toIndex) { this.columnController.moveRowGroupColumn(fromIndex, toIndex); };\n    ColumnApi.prototype.setColumnAggFunc = function (column, aggFunc) { this.columnController.setColumnAggFunc(column, aggFunc); };\n    ColumnApi.prototype.setColumnWidth = function (key, newWidth, finished) {\n        if (finished === void 0) { finished = true; }\n        this.columnController.setColumnWidth(key, newWidth, false, finished);\n    };\n    ColumnApi.prototype.setPivotMode = function (pivotMode) { this.columnController.setPivotMode(pivotMode); };\n    ColumnApi.prototype.isPivotMode = function () { return this.columnController.isPivotMode(); };\n    ColumnApi.prototype.getSecondaryPivotColumn = function (pivotKeys, valueColKey) { return this.columnController.getSecondaryPivotColumn(pivotKeys, valueColKey); };\n    ColumnApi.prototype.setValueColumns = function (colKeys) { this.columnController.setValueColumns(colKeys, 'api'); };\n    ColumnApi.prototype.getValueColumns = function () { return this.columnController.getValueColumns(); };\n    ColumnApi.prototype.removeValueColumn = function (colKey) { this.columnController.removeValueColumn(colKey, 'api'); };\n    ColumnApi.prototype.removeValueColumns = function (colKeys) { this.columnController.removeValueColumns(colKeys, 'api'); };\n    ColumnApi.prototype.addValueColumn = function (colKey) { this.columnController.addValueColumn(colKey, 'api'); };\n    ColumnApi.prototype.addValueColumns = function (colKeys) { this.columnController.addValueColumns(colKeys, 'api'); };\n    ColumnApi.prototype.setRowGroupColumns = function (colKeys) { this.columnController.setRowGroupColumns(colKeys, 'api'); };\n    ColumnApi.prototype.removeRowGroupColumn = function (colKey) { this.columnController.removeRowGroupColumn(colKey, 'api'); };\n    ColumnApi.prototype.removeRowGroupColumns = function (colKeys) { this.columnController.removeRowGroupColumns(colKeys, 'api'); };\n    ColumnApi.prototype.addRowGroupColumn = function (colKey) { this.columnController.addRowGroupColumn(colKey, 'api'); };\n    ColumnApi.prototype.addRowGroupColumns = function (colKeys) { this.columnController.addRowGroupColumns(colKeys, 'api'); };\n    ColumnApi.prototype.getRowGroupColumns = function () { return this.columnController.getRowGroupColumns(); };\n    ColumnApi.prototype.setPivotColumns = function (colKeys) { this.columnController.setPivotColumns(colKeys, 'api'); };\n    ColumnApi.prototype.removePivotColumn = function (colKey) { this.columnController.removePivotColumn(colKey, 'api'); };\n    ColumnApi.prototype.removePivotColumns = function (colKeys) { this.columnController.removePivotColumns(colKeys, 'api'); };\n    ColumnApi.prototype.addPivotColumn = function (colKey) { this.columnController.addPivotColumn(colKey, 'api'); };\n    ColumnApi.prototype.addPivotColumns = function (colKeys) { this.columnController.addPivotColumns(colKeys, 'api'); };\n    ColumnApi.prototype.getPivotColumns = function () { return this.columnController.getPivotColumns(); };\n    ColumnApi.prototype.getLeftDisplayedColumnGroups = function () { return this.columnController.getLeftDisplayedColumnGroups(); };\n    ColumnApi.prototype.getCenterDisplayedColumnGroups = function () { return this.columnController.getCenterDisplayedColumnGroups(); };\n    ColumnApi.prototype.getRightDisplayedColumnGroups = function () { return this.columnController.getRightDisplayedColumnGroups(); };\n    ColumnApi.prototype.getAllDisplayedColumnGroups = function () { return this.columnController.getAllDisplayedColumnGroups(); };\n    ColumnApi.prototype.autoSizeColumn = function (key) { return this.columnController.autoSizeColumn(key, 'api'); };\n    ColumnApi.prototype.autoSizeColumns = function (keys) { return this.columnController.autoSizeColumns(keys, 'api'); };\n    ColumnApi.prototype.autoSizeAllColumns = function () { this.columnController.autoSizeAllColumns('api'); };\n    ColumnApi.prototype.setSecondaryColumns = function (colDefs) { this.columnController.setSecondaryColumns(colDefs, 'api'); };\n    ColumnApi.prototype.getSecondaryColumns = function () { return this.columnController.getSecondaryColumns(); };\n    ColumnApi.prototype.getPrimaryColumns = function () { return this.columnController.getAllPrimaryColumns(); };\n    // below goes through deprecated items, prints message to user, then calls the new version of the same method\n    ColumnApi.prototype.columnGroupOpened = function (group, newValue) {\n        console.error('ag-Grid: columnGroupOpened no longer exists, use setColumnGroupOpened');\n        this.setColumnGroupOpened(group, newValue);\n    };\n    ColumnApi.prototype.hideColumns = function (colIds, hide) {\n        console.error('ag-Grid: hideColumns is deprecated, use setColumnsVisible');\n        this.columnController.setColumnsVisible(colIds, !hide, 'api');\n    };\n    ColumnApi.prototype.hideColumn = function (colId, hide) {\n        console.error('ag-Grid: hideColumn is deprecated, use setColumnVisible');\n        this.columnController.setColumnVisible(colId, !hide, 'api');\n    };\n    ColumnApi.prototype.setState = function (columnState) {\n        console.error('ag-Grid: setState is deprecated, use setColumnState');\n        return this.setColumnState(columnState);\n    };\n    ColumnApi.prototype.getState = function () {\n        console.error('ag-Grid: getState is deprecated, use getColumnState');\n        return this.getColumnState();\n    };\n    ColumnApi.prototype.resetState = function () {\n        console.error('ag-Grid: resetState is deprecated, use resetColumnState');\n        this.resetColumnState();\n    };\n    ColumnApi.prototype.getAggregationColumns = function () {\n        console.error('ag-Grid: getAggregationColumns is deprecated, use getValueColumns');\n        return this.columnController.getValueColumns();\n    };\n    ColumnApi.prototype.removeAggregationColumn = function (colKey) {\n        console.error('ag-Grid: removeAggregationColumn is deprecated, use removeValueColumn');\n        this.columnController.removeValueColumn(colKey, 'api');\n    };\n    ColumnApi.prototype.removeAggregationColumns = function (colKeys) {\n        console.error('ag-Grid: removeAggregationColumns is deprecated, use removeValueColumns');\n        this.columnController.removeValueColumns(colKeys, 'api');\n    };\n    ColumnApi.prototype.addAggregationColumn = function (colKey) {\n        console.error('ag-Grid: addAggregationColumn is deprecated, use addValueColumn');\n        this.columnController.addValueColumn(colKey, 'api');\n    };\n    ColumnApi.prototype.addAggregationColumns = function (colKeys) {\n        console.error('ag-Grid: addAggregationColumns is deprecated, use addValueColumns');\n        this.columnController.addValueColumns(colKeys, 'api');\n    };\n    ColumnApi.prototype.setColumnAggFunction = function (column, aggFunc) {\n        console.error('ag-Grid: setColumnAggFunction is deprecated, use setColumnAggFunc');\n        this.columnController.setColumnAggFunc(column, aggFunc, 'api');\n    };\n    ColumnApi.prototype.getDisplayNameForCol = function (column) {\n        console.error('ag-Grid: getDisplayNameForCol is deprecated, use getDisplayNameForColumn');\n        return this.getDisplayNameForColumn(column, null);\n    };\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], ColumnApi.prototype, \"columnController\", void 0);\n    ColumnApi = __decorate([\n        context_1.Bean('columnApi')\n    ], ColumnApi);\n    return ColumnApi;\n}());\nexports.ColumnApi = ColumnApi;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction QuerySelector(selector) {\n    return querySelectorFunc.bind(this, selector);\n}\nexports.QuerySelector = QuerySelector;\nfunction RefSelector(ref) {\n    return querySelectorFunc.bind(this, \"[ref=\" + ref + \"]\");\n}\nexports.RefSelector = RefSelector;\nfunction querySelectorFunc(selector, classPrototype, methodOrAttributeName, index) {\n    if (selector === null) {\n        console.error(\"ag-Grid: QuerySelector selector should not be null\");\n        return;\n    }\n    if (typeof index === \"number\") {\n        console.error(\"ag-Grid: QuerySelector should be on an attribute\");\n        return;\n    }\n    addToObjectProps(classPrototype, 'querySelectors', {\n        attributeName: methodOrAttributeName,\n        querySelector: selector\n    });\n}\n// think we should take this out, put property bindings on the\nfunction Listener(eventName) {\n    return listenerFunc.bind(this, eventName);\n}\nexports.Listener = Listener;\nfunction listenerFunc(eventName, target, methodName) {\n    if (eventName === null) {\n        console.error(\"ag-Grid: EventListener eventName should not be null\");\n        return;\n    }\n    addToObjectProps(target, 'listenerMethods', {\n        methodName: methodName,\n        eventName: eventName\n    });\n}\n// think we should take this out, put property bindings on the\nfunction Method(eventName) {\n    return methodFunc.bind(this, eventName);\n}\nexports.Method = Method;\nfunction methodFunc(alias, target, methodName) {\n    if (alias === null) {\n        console.error(\"ag-Grid: EventListener eventName should not be null\");\n        return;\n    }\n    addToObjectProps(target, 'methods', {\n        methodName: methodName,\n        alias: alias\n    });\n}\nfunction addToObjectProps(target, key, value) {\n    // it's an attribute on the class\n    var props = getOrCreateProps(target, target.constructor.name);\n    if (!props[key]) {\n        props[key] = [];\n    }\n    props[key].push(value);\n}\nfunction getOrCreateProps(target, instanceName) {\n    if (!target.__agComponentMetaData) {\n        target.__agComponentMetaData = {};\n    }\n    if (!target.__agComponentMetaData[instanceName]) {\n        target.__agComponentMetaData[instanceName] = {};\n    }\n    return target.__agComponentMetaData[instanceName];\n}\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventService_1 = require(\"../eventService\");\nvar utils_1 = require(\"../utils\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnUtils_1 = require(\"../columnController/columnUtils\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\n// Wrapper around a user provide column definition. The grid treats the column definition as ready only.\n// This class contains all the runtime information about a column, plus some logic (the definition has no logic).\n// This class implements both interfaces ColumnGroupChild and OriginalColumnGroupChild as the class can\n// appear as a child of either the original tree or the displayed tree. However the relevant group classes\n// for each type only implements one, as each group can only appear in it's associated tree (eg OriginalColumnGroup\n// can only appear in OriginalColumn tree).\nvar Column = /** @class */ (function () {\n    function Column(colDef, userProvidedColDef, colId, primary) {\n        this.moving = false;\n        this.menuVisible = false;\n        this.filterActive = false;\n        this.eventService = new eventService_1.EventService();\n        this.rowGroupActive = false;\n        this.pivotActive = false;\n        this.aggregationActive = false;\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n        this.visible = !colDef.hide;\n        this.sort = colDef.sort;\n        this.sortedAt = colDef.sortedAt;\n        this.colId = colId;\n        this.primary = primary;\n    }\n    // gets called when user provides an alternative colDef, eg\n    Column.prototype.setColDef = function (colDef, userProvidedColDef) {\n        this.colDef = colDef;\n        this.userProvidedColDef = userProvidedColDef;\n    };\n    Column.prototype.getUserProvidedColDef = function () {\n        return this.userProvidedColDef;\n    };\n    Column.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Column.prototype.getParent = function () {\n        return this.parent;\n    };\n    Column.prototype.setOriginalParent = function (originalParent) {\n        this.originalParent = originalParent;\n    };\n    Column.prototype.getOriginalParent = function () {\n        return this.originalParent;\n    };\n    // this is done after constructor as it uses gridOptionsWrapper\n    Column.prototype.initialise = function () {\n        this.setPinned(this.colDef.pinned);\n        var minColWidth = this.gridOptionsWrapper.getMinColWidth();\n        var maxColWidth = this.gridOptionsWrapper.getMaxColWidth();\n        if (this.colDef.minWidth) {\n            this.minWidth = this.colDef.minWidth;\n        }\n        else {\n            this.minWidth = minColWidth;\n        }\n        if (this.colDef.maxWidth) {\n            this.maxWidth = this.colDef.maxWidth;\n        }\n        else {\n            this.maxWidth = maxColWidth;\n        }\n        this.actualWidth = this.columnUtils.calculateColInitialWidth(this.colDef);\n        var suppressDotNotation = this.gridOptionsWrapper.isSuppressFieldDotNotation();\n        this.fieldContainsDots = utils_1._.exists(this.colDef.field) && this.colDef.field.indexOf('.') >= 0 && !suppressDotNotation;\n        this.tooltipFieldContainsDots = utils_1._.exists(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf('.') >= 0 && !suppressDotNotation;\n        this.validate();\n    };\n    Column.prototype.isEmptyGroup = function () {\n        return false;\n    };\n    Column.prototype.isRowGroupDisplayed = function (colId) {\n        if (utils_1._.missing(this.colDef) || utils_1._.missing(this.colDef.showRowGroup)) {\n            return false;\n        }\n        var showingAllGroups = this.colDef.showRowGroup === true;\n        var showingThisGroup = this.colDef.showRowGroup === colId;\n        return showingAllGroups || showingThisGroup;\n    };\n    Column.prototype.getUniqueId = function () {\n        return this.getId();\n    };\n    Column.prototype.isPrimary = function () {\n        return this.primary;\n    };\n    Column.prototype.isFilterAllowed = function () {\n        // filter defined means it's a string, class or true.\n        // if its false, null or undefined then it's false.\n        var filterDefined = !!this.colDef.filter || !!this.colDef.filterFramework;\n        return this.primary && filterDefined;\n    };\n    Column.prototype.isFieldContainsDots = function () {\n        return this.fieldContainsDots;\n    };\n    Column.prototype.isTooltipFieldContainsDots = function () {\n        return this.tooltipFieldContainsDots;\n    };\n    Column.prototype.validate = function () {\n        var colDefAny = this.colDef;\n        if (!this.gridOptionsWrapper.isEnterprise()) {\n            var itemsNotAllowedWithoutEnterprise = ['enableRowGroup', 'rowGroup', 'rowGroupIndex', 'enablePivot', 'enableValue', 'pivot', 'pivotIndex', 'aggFunc', 'chartDataType'];\n            itemsNotAllowedWithoutEnterprise.forEach(function (item) {\n                if (utils_1._.exists(colDefAny[item])) {\n                    console.warn(\"ag-Grid: \" + item + \" is only valid in ag-Grid-Enterprise, your column definition should not have \" + item);\n                }\n            });\n        }\n        if (this.gridOptionsWrapper.isTreeData()) {\n            var itemsNotAllowedWithTreeData = ['rowGroup', 'rowGroupIndex', 'pivot', 'pivotIndex'];\n            itemsNotAllowedWithTreeData.forEach(function (item) {\n                if (utils_1._.exists(colDefAny[item])) {\n                    console.warn(\"ag-Grid: \" + item + \" is not possible when doing tree data, your column definition should not have \" + item);\n                }\n            });\n        }\n        if (utils_1._.exists(this.colDef.width) && typeof this.colDef.width !== 'number') {\n            console.warn('ag-Grid: colDef.width should be a number, not ' + typeof this.colDef.width);\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.restrictToOneGroup', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.restrictToOneGroup is deprecated. You should use showRowGroup');\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator');\n        }\n        if (utils_1._.get(this, 'colDef.cellRendererParams.keyMap', null)) {\n            console.warn('ag-Grid: Since ag-grid 11.0.0 cellRendererParams.keyMap is deprecated. You should use colDef.keyCreator');\n        }\n        if (colDefAny.floatingCellRenderer) {\n            console.warn('ag-Grid: since v11, floatingCellRenderer is now pinnedRowCellRenderer');\n            this.colDef.pinnedRowCellRenderer = colDefAny.floatingCellRenderer;\n        }\n        if (colDefAny.floatingRendererFramework) {\n            console.warn('ag-Grid: since v11, floatingRendererFramework is now pinnedRowCellRendererFramework');\n            this.colDef.pinnedRowCellRendererFramework = colDefAny.floatingRendererFramework;\n        }\n        if (colDefAny.floatingRendererParams) {\n            console.warn('ag-Grid: since v11, floatingRendererParams is now pinnedRowCellRendererParams');\n            this.colDef.pinnedRowCellRendererParams = colDefAny.floatingRendererParams;\n        }\n        if (colDefAny.floatingValueFormatter) {\n            console.warn('ag-Grid: since v11, floatingValueFormatter is now pinnedRowValueFormatter');\n            this.colDef.pinnedRowValueFormatter = colDefAny.floatingValueFormatter;\n        }\n        if (colDefAny.cellFormatter) {\n            console.warn('ag-Grid: since v12, cellFormatter is now valueFormatter');\n            if (utils_1._.missing(this.colDef.valueFormatter)) {\n                this.colDef.valueFormatter = colDefAny.cellFormatter;\n            }\n        }\n        if (colDefAny.headerCellTemplate) {\n            console.warn('ag-Grid: since v15, headerCellTemplate is gone, use header component instead.');\n        }\n        if (colDefAny.headerCellRenderer) {\n            console.warn('ag-Grid: since v15, headerCellRenderer is gone, use header component instead.');\n        }\n        if (colDefAny.volatile) {\n            console.warn('ag-Grid: since v16, colDef.volatile is gone, please check refresh docs on how to refresh specific cells.');\n        }\n        if (colDefAny.suppressSorting) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressSorting is gone, instead use colDef.sortable=false.\", this.colDef);\n            this.colDef.sortable = false;\n        }\n        if (colDefAny.suppressFilter) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressFilter is gone, instead use colDef.filter=false.\", this.colDef);\n            this.colDef.filter = false;\n        }\n        if (colDefAny.suppressResize) {\n            console.warn(\"ag-Grid: since v20, colDef.suppressResize is gone, instead use colDef.resizable=false.\", this.colDef);\n            this.colDef.resizable = false;\n        }\n        if (colDefAny.tooltip) {\n            console.warn(\"ag-Grid: since v20.1, colDef.tooltip is gone, instead use colDef.tooltipValueGetter.\", this.colDef);\n            this.colDef.tooltipValueGetter = colDefAny.tooltip;\n        }\n    };\n    Column.prototype.addEventListener = function (eventType, listener) {\n        this.eventService.addEventListener(eventType, listener);\n    };\n    Column.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    Column.prototype.createIsColumnFuncParams = function (rowNode) {\n        return {\n            node: rowNode,\n            data: rowNode.data,\n            column: this,\n            colDef: this.colDef,\n            context: this.gridOptionsWrapper.getContext(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n    };\n    Column.prototype.isSuppressNavigable = function (rowNode) {\n        // if boolean set, then just use it\n        if (typeof this.colDef.suppressNavigable === 'boolean') {\n            return this.colDef.suppressNavigable;\n        }\n        // if function, then call the function to find out\n        if (typeof this.colDef.suppressNavigable === 'function') {\n            var params = this.createIsColumnFuncParams(rowNode);\n            var userFunc = this.colDef.suppressNavigable;\n            return userFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.isCellEditable = function (rowNode) {\n        // only allow editing of groups if the user has this option enabled\n        if (rowNode.group && !this.gridOptionsWrapper.isEnableGroupEdit()) {\n            return false;\n        }\n        return this.isColumnFunc(rowNode, this.colDef.editable);\n    };\n    Column.prototype.isRowDrag = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.rowDrag);\n    };\n    Column.prototype.isCellCheckboxSelection = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef.checkboxSelection);\n    };\n    Column.prototype.isSuppressPaste = function (rowNode) {\n        return this.isColumnFunc(rowNode, this.colDef ? this.colDef.suppressPaste : null);\n    };\n    Column.prototype.isResizable = function () {\n        return this.colDef.resizable === true;\n    };\n    Column.prototype.isColumnFunc = function (rowNode, value) {\n        // if boolean set, then just use it\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        // if function, then call the function to find out\n        if (typeof value === 'function') {\n            var params = this.createIsColumnFuncParams(rowNode);\n            var editableFunc = value;\n            return editableFunc(params);\n        }\n        return false;\n    };\n    Column.prototype.setMoving = function (moving, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.moving = moving;\n        this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MOVING_CHANGED, source));\n    };\n    Column.prototype.createColumnEvent = function (type, source) {\n        return {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: type,\n            column: this,\n            columns: [this],\n            source: source\n        };\n    };\n    Column.prototype.isMoving = function () {\n        return this.moving;\n    };\n    Column.prototype.getSort = function () {\n        return this.sort;\n    };\n    Column.prototype.setSort = function (sort, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.sort !== sort) {\n            this.sort = sort;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_SORT_CHANGED, source));\n        }\n    };\n    Column.prototype.setMenuVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.menuVisible !== visible) {\n            this.menuVisible = visible;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_MENU_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isMenuVisible = function () {\n        return this.menuVisible;\n    };\n    Column.prototype.isSortAscending = function () {\n        return this.sort === Column.SORT_ASC;\n    };\n    Column.prototype.isSortDescending = function () {\n        return this.sort === Column.SORT_DESC;\n    };\n    Column.prototype.isSortNone = function () {\n        return utils_1._.missing(this.sort);\n    };\n    Column.prototype.isSorting = function () {\n        return utils_1._.exists(this.sort);\n    };\n    Column.prototype.getSortedAt = function () {\n        return this.sortedAt;\n    };\n    Column.prototype.setSortedAt = function (sortedAt) {\n        this.sortedAt = sortedAt;\n    };\n    Column.prototype.setAggFunc = function (aggFunc) {\n        this.aggFunc = aggFunc;\n    };\n    Column.prototype.getAggFunc = function () {\n        return this.aggFunc;\n    };\n    Column.prototype.getLeft = function () {\n        return this.left;\n    };\n    Column.prototype.getOldLeft = function () {\n        return this.oldLeft;\n    };\n    Column.prototype.getRight = function () {\n        return this.left + this.actualWidth;\n    };\n    Column.prototype.setLeft = function (left, source) {\n        if (source === void 0) { source = \"api\"; }\n        this.oldLeft = this.left;\n        if (this.left !== left) {\n            this.left = left;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LEFT_CHANGED, source));\n        }\n    };\n    Column.prototype.isFilterActive = function () {\n        return this.filterActive;\n    };\n    // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\n    Column.prototype.setFilterActive = function (active, source, additionalEventAttributes) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.filterActive !== active) {\n            this.filterActive = active;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FILTER_ACTIVE_CHANGED, source));\n        }\n        var filterChangedEvent = this.createColumnEvent(Column.EVENT_FILTER_CHANGED, source);\n        if (additionalEventAttributes) {\n            utils_1._.mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        this.eventService.dispatchEvent(filterChangedEvent);\n    };\n    Column.prototype.setPinned = function (pinned) {\n        if (pinned === true || pinned === Column.PINNED_LEFT) {\n            this.pinned = Column.PINNED_LEFT;\n        }\n        else if (pinned === Column.PINNED_RIGHT) {\n            this.pinned = Column.PINNED_RIGHT;\n        }\n        else {\n            this.pinned = null;\n        }\n    };\n    Column.prototype.setFirstRightPinned = function (firstRightPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.firstRightPinned !== firstRightPinned) {\n            this.firstRightPinned = firstRightPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.setLastLeftPinned = function (lastLeftPinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.lastLeftPinned !== lastLeftPinned) {\n            this.lastLeftPinned = lastLeftPinned;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_LAST_LEFT_PINNED_CHANGED, source));\n        }\n    };\n    Column.prototype.isFirstRightPinned = function () {\n        return this.firstRightPinned;\n    };\n    Column.prototype.isLastLeftPinned = function () {\n        return this.lastLeftPinned;\n    };\n    Column.prototype.isPinned = function () {\n        return this.pinned === Column.PINNED_LEFT || this.pinned === Column.PINNED_RIGHT;\n    };\n    Column.prototype.isPinnedLeft = function () {\n        return this.pinned === Column.PINNED_LEFT;\n    };\n    Column.prototype.isPinnedRight = function () {\n        return this.pinned === Column.PINNED_RIGHT;\n    };\n    Column.prototype.getPinned = function () {\n        return this.pinned;\n    };\n    Column.prototype.setVisible = function (visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        var newValue = visible === true;\n        if (this.visible !== newValue) {\n            this.visible = newValue;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VISIBLE_CHANGED, source));\n        }\n    };\n    Column.prototype.isVisible = function () {\n        return this.visible;\n    };\n    Column.prototype.getColDef = function () {\n        return this.colDef;\n    };\n    Column.prototype.getColumnGroupShow = function () {\n        return this.colDef.columnGroupShow;\n    };\n    Column.prototype.getColId = function () {\n        return this.colId;\n    };\n    Column.prototype.getId = function () {\n        return this.getColId();\n    };\n    Column.prototype.getDefinition = function () {\n        return this.colDef;\n    };\n    Column.prototype.getActualWidth = function () {\n        return this.actualWidth;\n    };\n    Column.prototype.createBaseColDefParams = function (rowNode) {\n        var params = {\n            node: rowNode,\n            data: rowNode.data,\n            colDef: this.colDef,\n            column: this,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext()\n        };\n        return params;\n    };\n    Column.prototype.getColSpan = function (rowNode) {\n        if (utils_1._.missing(this.colDef.colSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var colSpan = this.colDef.colSpan(params);\n        // colSpan must be number equal to or greater than 1\n        return Math.max(colSpan, 1);\n    };\n    Column.prototype.getRowSpan = function (rowNode) {\n        if (utils_1._.missing(this.colDef.rowSpan)) {\n            return 1;\n        }\n        var params = this.createBaseColDefParams(rowNode);\n        var rowSpan = this.colDef.rowSpan(params);\n        // rowSpan must be number equal to or greater than 1\n        return Math.max(rowSpan, 1);\n    };\n    Column.prototype.setActualWidth = function (actualWidth, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.actualWidth !== actualWidth) {\n            this.actualWidth = actualWidth;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_WIDTH_CHANGED, source));\n        }\n    };\n    Column.prototype.isGreaterThanMax = function (width) {\n        if (this.maxWidth) {\n            return width > this.maxWidth;\n        }\n        return false;\n    };\n    Column.prototype.getMinWidth = function () {\n        return this.minWidth;\n    };\n    Column.prototype.getMaxWidth = function () {\n        return this.maxWidth;\n    };\n    Column.prototype.setMinimum = function (source) {\n        if (source === void 0) { source = \"api\"; }\n        this.setActualWidth(this.minWidth, source);\n    };\n    Column.prototype.setRowGroupActive = function (rowGroup, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.rowGroupActive !== rowGroup) {\n            this.rowGroupActive = rowGroup;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_ROW_GROUP_CHANGED, source));\n        }\n    };\n    Column.prototype.isRowGroupActive = function () {\n        return this.rowGroupActive;\n    };\n    Column.prototype.setPivotActive = function (pivot, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.pivotActive !== pivot) {\n            this.pivotActive = pivot;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_PIVOT_CHANGED, source));\n        }\n    };\n    Column.prototype.isPivotActive = function () {\n        return this.pivotActive;\n    };\n    Column.prototype.isAnyFunctionActive = function () {\n        return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\n    };\n    Column.prototype.isAnyFunctionAllowed = function () {\n        return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\n    };\n    Column.prototype.setValueActive = function (value, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (this.aggregationActive !== value) {\n            this.aggregationActive = value;\n            this.eventService.dispatchEvent(this.createColumnEvent(Column.EVENT_VALUE_CHANGED, source));\n        }\n    };\n    Column.prototype.isValueActive = function () {\n        return this.aggregationActive;\n    };\n    Column.prototype.isAllowPivot = function () {\n        return this.colDef.enablePivot === true;\n    };\n    Column.prototype.isAllowValue = function () {\n        return this.colDef.enableValue === true;\n    };\n    Column.prototype.isAllowRowGroup = function () {\n        return this.colDef.enableRowGroup === true;\n    };\n    Column.prototype.getMenuTabs = function (defaultValues) {\n        var menuTabs = this.getColDef().menuTabs;\n        if (menuTabs == null) {\n            menuTabs = defaultValues;\n        }\n        return menuTabs;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPosition as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPosition = function () {\n        console.warn('ag-Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead.');\n        return this.colDef ? !!this.colDef.lockPosition : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockVisible as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockVisible = function () {\n        console.warn('ag-Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead.');\n        return this.colDef ? !!this.colDef.lockVisible : false;\n    };\n    // this used to be needed, as previous version of ag-grid had lockPinned as column state,\n    // so couldn't depend on colDef version.\n    Column.prototype.isLockPinned = function () {\n        console.warn('ag-Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead.');\n        return this.colDef ? !!this.colDef.lockPinned : false;\n    };\n    // + renderedHeaderCell - for making header cell transparent when moving\n    Column.EVENT_MOVING_CHANGED = 'movingChanged';\n    // + renderedCell - changing left position\n    Column.EVENT_LEFT_CHANGED = 'leftChanged';\n    // + renderedCell - changing width\n    Column.EVENT_WIDTH_CHANGED = 'widthChanged';\n    // + renderedCell - for changing pinned classes\n    Column.EVENT_LAST_LEFT_PINNED_CHANGED = 'lastLeftPinnedChanged';\n    Column.EVENT_FIRST_RIGHT_PINNED_CHANGED = 'firstRightPinnedChanged';\n    // + renderedColumn - for changing visibility icon\n    Column.EVENT_VISIBLE_CHANGED = 'visibleChanged';\n    // + every time the filter changes, used in the floating filters\n    Column.EVENT_FILTER_CHANGED = 'filterChanged';\n    // + renderedHeaderCell - marks the header with filter icon\n    Column.EVENT_FILTER_ACTIVE_CHANGED = 'filterActiveChanged';\n    // + renderedHeaderCell - marks the header with sort icon\n    Column.EVENT_SORT_CHANGED = 'sortChanged';\n    Column.EVENT_MENU_VISIBLE_CHANGED = 'menuVisibleChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_PIVOT_CHANGED = 'columnPivotChanged';\n    // + toolpanel, for gui updates\n    Column.EVENT_VALUE_CHANGED = 'columnValueChanged';\n    Column.PINNED_RIGHT = 'right';\n    Column.PINNED_LEFT = 'left';\n    Column.SORT_ASC = 'asc';\n    Column.SORT_DESC = 'desc';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], Column.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnUtils'),\n        __metadata(\"design:type\", columnUtils_1.ColumnUtils)\n    ], Column.prototype, \"columnUtils\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], Column.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], Column.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Column.prototype, \"initialise\", null);\n    return Column;\n}());\nexports.Column = Column;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar context_1 = require(\"./context/context\");\nvar context_2 = require(\"./context/context\");\nvar LoggerFactory = /** @class */ (function () {\n    function LoggerFactory() {\n    }\n    LoggerFactory.prototype.setBeans = function (gridOptionsWrapper) {\n        this.logging = gridOptionsWrapper.isDebug();\n    };\n    LoggerFactory.prototype.create = function (name) {\n        return new Logger(name, this.isLogging.bind(this));\n    };\n    LoggerFactory.prototype.isLogging = function () {\n        return this.logging;\n    };\n    __decorate([\n        __param(0, context_2.Qualifier('gridOptionsWrapper')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [gridOptionsWrapper_1.GridOptionsWrapper]),\n        __metadata(\"design:returntype\", void 0)\n    ], LoggerFactory.prototype, \"setBeans\", null);\n    LoggerFactory = __decorate([\n        context_1.Bean('loggerFactory')\n    ], LoggerFactory);\n    return LoggerFactory;\n}());\nexports.LoggerFactory = LoggerFactory;\nvar Logger = /** @class */ (function () {\n    function Logger(name, isLoggingFunc) {\n        this.name = name;\n        this.isLoggingFunc = isLoggingFunc;\n    }\n    Logger.prototype.isLogging = function () {\n        return this.isLoggingFunc();\n    };\n    Logger.prototype.log = function (message) {\n        if (this.isLoggingFunc()) {\n            // tslint:disable-next-line\n            console.log('ag-Grid.' + this.name + ': ' + message);\n        }\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventService_1 = require(\"../eventService\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar context_1 = require(\"./context\");\nvar utils_1 = require(\"../utils\");\nvar BeanStub = /** @class */ (function () {\n    function BeanStub() {\n        this.destroyFunctions = [];\n        this.destroyed = false;\n    }\n    // this was a test constructor niall built, when active, it prints after 5 seconds all beans/components that are\n    // not destroyed. to use, create a new grid, then api.destroy() before 5 seconds. then anything that gets printed\n    // points to a bean or component that was not properly disposed of.\n    // constructor() {\n    //     setTimeout(()=> {\n    //         if (this.isAlive()) {\n    //             let prototype: any = Object.getPrototypeOf(this);\n    //             const constructor: any = prototype.constructor;\n    //             const constructorString = constructor.toString();\n    //             const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n    //             console.log('is alive ' + beanName);\n    //         }\n    //     }, 5000);\n    // }\n    // CellComp and GridComp and override this because they get the FrameworkOverrides from the Beans bean\n    BeanStub.prototype.getFrameworkOverrides = function () {\n        return this.frameworkOverrides;\n    };\n    BeanStub.prototype.getContext = function () {\n        return this.context;\n    };\n    BeanStub.prototype.destroy = function () {\n        // let prototype: any = Object.getPrototypeOf(this);\n        // const constructor: any = prototype.constructor;\n        // const constructorString = constructor.toString();\n        // const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\n        this.destroyFunctions.forEach(function (func) { return func(); });\n        this.destroyFunctions.length = 0;\n        this.destroyed = true;\n        this.dispatchEvent({ type: BeanStub.EVENT_DESTROYED });\n    };\n    BeanStub.prototype.addEventListener = function (eventType, listener) {\n        if (!this.localEventService) {\n            this.localEventService = new eventService_1.EventService();\n        }\n        this.localEventService.addEventListener(eventType, listener);\n    };\n    BeanStub.prototype.removeEventListener = function (eventType, listener) {\n        if (this.localEventService) {\n            this.localEventService.removeEventListener(eventType, listener);\n        }\n    };\n    BeanStub.prototype.dispatchEventAsync = function (event) {\n        var _this = this;\n        window.setTimeout(function () { return _this.dispatchEvent(event); }, 0);\n    };\n    BeanStub.prototype.dispatchEvent = function (event) {\n        if (this.localEventService) {\n            this.localEventService.dispatchEvent(event);\n        }\n    };\n    BeanStub.prototype.addDestroyableEventListener = function (eElement, event, listener) {\n        var _this = this;\n        if (this.destroyed) {\n            return;\n        }\n        if (eElement instanceof HTMLElement) {\n            utils_1._.addSafePassiveEventListener(this.getFrameworkOverrides(), eElement, event, listener);\n        }\n        else if (eElement instanceof Window) {\n            eElement.addEventListener(event, listener);\n        }\n        else if (eElement instanceof gridOptionsWrapper_1.GridOptionsWrapper) {\n            eElement.addEventListener(event, listener);\n        }\n        else {\n            eElement.addEventListener(event, listener);\n        }\n        var destroyFunc = function () {\n            if (eElement instanceof HTMLElement) {\n                eElement.removeEventListener(event, listener);\n            }\n            else if (eElement instanceof Window) {\n                eElement.removeEventListener(event, listener);\n            }\n            else if (eElement instanceof gridOptionsWrapper_1.GridOptionsWrapper) {\n                eElement.removeEventListener(event, listener);\n            }\n            else {\n                eElement.removeEventListener(event, listener);\n            }\n            _this.destroyFunctions = _this.destroyFunctions.filter(function (fn) { return fn !== destroyFunc; });\n        };\n        this.destroyFunctions.push(destroyFunc);\n        return destroyFunc;\n    };\n    BeanStub.prototype.isAlive = function () {\n        return !this.destroyed;\n    };\n    BeanStub.prototype.addDestroyFunc = function (func) {\n        // if we are already destroyed, we execute the func now\n        if (this.isAlive()) {\n            this.destroyFunctions.push(func);\n        }\n        else {\n            func();\n        }\n    };\n    BeanStub.EVENT_DESTROYED = 'destroyed';\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], BeanStub.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('frameworkOverrides'),\n        __metadata(\"design:type\", Object)\n    ], BeanStub.prototype, \"frameworkOverrides\", void 0);\n    __decorate([\n        context_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BeanStub.prototype, \"destroy\", null);\n    return BeanStub;\n}());\nexports.BeanStub = BeanStub;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar popupService_1 = require(\"../widgets/popupService\");\nvar valueService_1 = require(\"../valueService/valueService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar gridApi_1 = require(\"../gridApi\");\nvar userComponentFactory_1 = require(\"../components/framework/userComponentFactory\");\nvar FilterManager = /** @class */ (function () {\n    function FilterManager() {\n        this.allFilters = {};\n        this.quickFilter = null;\n        this.quickFilterParts = null;\n        // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\n        // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\n        // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\n        // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\n        // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\n        this.processingFilterChange = false;\n    }\n    FilterManager_1 = FilterManager;\n    FilterManager.prototype.registerGridCore = function (gridCore) {\n        this.gridCore = gridCore;\n    };\n    FilterManager.prototype.init = function () {\n        this.eventService.addEventListener(events_1.Events.EVENT_ROW_DATA_CHANGED, this.onNewRowsLoaded.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n        this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText());\n        this.setQuickFilterParts();\n        this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter();\n        // check this here, in case there is a filter from the start\n        this.checkExternalFilter();\n    };\n    FilterManager.prototype.setQuickFilterParts = function () {\n        if (this.quickFilter) {\n            this.quickFilterParts = this.quickFilter.split(' ');\n        }\n        else {\n            this.quickFilterParts = null;\n        }\n    };\n    FilterManager.prototype.setFilterModel = function (model) {\n        var _this = this;\n        var allPromises = [];\n        if (model) {\n            // mark the filters as we set them, so any active filters left over we stop\n            var modelKeys_1 = Object.keys(model);\n            utils_1._.iterateObject(this.allFilters, function (colId, filterWrapper) {\n                utils_1._.removeFromArray(modelKeys_1, colId);\n                var newModel = model[colId];\n                _this.setModelOnFilterWrapper(filterWrapper.filterPromise, newModel);\n                allPromises.push(filterWrapper.filterPromise);\n            });\n            // at this point, processedFields contains data for which we don't have a filter working yet\n            utils_1._.iterateArray(modelKeys_1, function (colId) {\n                var column = _this.columnController.getPrimaryColumn(colId);\n                if (!column) {\n                    console.warn('Warning ag-grid setFilterModel - no column found for colId ' + colId);\n                    return;\n                }\n                var filterWrapper = _this.getOrCreateFilterWrapper(column, 'NO_UI');\n                _this.setModelOnFilterWrapper(filterWrapper.filterPromise, model[colId]);\n                allPromises.push(filterWrapper.filterPromise);\n            });\n        }\n        else {\n            utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n                _this.setModelOnFilterWrapper(filterWrapper.filterPromise, null);\n                allPromises.push(filterWrapper.filterPromise);\n            });\n        }\n        utils_1.Promise.all(allPromises).then(function (whatever) {\n            _this.onFilterChanged();\n        });\n    };\n    FilterManager.prototype.setModelOnFilterWrapper = function (filterPromise, newModel) {\n        filterPromise.then(function (filter) {\n            if (typeof filter.setModel !== 'function') {\n                console.warn('Warning ag-grid - filter missing setModel method, which is needed for setFilterModel');\n                return;\n            }\n            filter.setModel(newModel);\n        });\n    };\n    FilterManager.prototype.getFilterModel = function () {\n        var result = {};\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            // because user can provide filters, we provide useful error checking and messages\n            var filterPromise = filterWrapper.filterPromise;\n            var filter = filterPromise.resolveNow(null, function (filter) { return filter; });\n            if (filter == null) {\n                return null;\n            }\n            if (typeof filter.getModel !== 'function') {\n                console.warn('Warning ag-grid - filter API missing getModel method, which is needed for getFilterModel');\n                return;\n            }\n            var model = filter.getModel();\n            if (utils_1._.exists(model)) {\n                result[key] = model;\n            }\n        });\n        return result;\n    };\n    // returns true if any advanced filter (ie not quick filter) active\n    FilterManager.prototype.isAdvancedFilterPresent = function () {\n        return this.advancedFilterPresent;\n    };\n    // called by:\n    // 1) onFilterChanged()\n    // 2) onNewRowsLoaded()\n    FilterManager.prototype.setAdvancedFilterPresent = function () {\n        var atLeastOneActive = false;\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            if (filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); })) {\n                atLeastOneActive = true;\n            }\n        });\n        this.advancedFilterPresent = atLeastOneActive;\n    };\n    FilterManager.prototype.updateFilterFlagInColumns = function (source, additionalEventAttributes) {\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            var filterActive = filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); });\n            filterWrapper.column.setFilterActive(filterActive, source, additionalEventAttributes);\n        });\n    };\n    // returns true if quickFilter or advancedFilter\n    FilterManager.prototype.isAnyFilterPresent = function () {\n        return this.isQuickFilterPresent() || this.advancedFilterPresent || this.externalFilterPresent;\n    };\n    FilterManager.prototype.doesFilterPass = function (node, filterToSkip) {\n        var data = node.data;\n        var colKeys = Object.keys(this.allFilters);\n        for (var i = 0, l = colKeys.length; i < l; i++) { // critical code, don't use functional programming\n            var colId = colKeys[i];\n            var filterWrapper = this.allFilters[colId];\n            // if no filter, always pass\n            if (filterWrapper === undefined) {\n                continue;\n            }\n            var filter = filterWrapper.filterPromise.resolveNow(undefined, function (filter) { return filter; });\n            // if filter not yet there, continue\n            if (filter === undefined) {\n                continue;\n            }\n            if (filter === filterToSkip) {\n                continue;\n            }\n            // don't bother with filters that are not active\n            if (!filter.isFilterActive()) {\n                continue;\n            }\n            if (!filter.doesFilterPass) { // because users can do custom filters, give nice error message\n                console.error('Filter is missing method doesFilterPass');\n            }\n            var params = {\n                node: node,\n                data: data\n            };\n            if (!filter.doesFilterPass(params)) {\n                return false;\n            }\n        }\n        // all filters passed\n        return true;\n    };\n    FilterManager.prototype.parseQuickFilter = function (newFilter) {\n        if (utils_1._.missing(newFilter) || newFilter === \"\") {\n            return null;\n        }\n        if (!this.gridOptionsWrapper.isRowModelDefault()) {\n            console.warn('ag-grid: quick filtering only works with the Client-side Row Model');\n            return null;\n        }\n        return newFilter.toUpperCase();\n    };\n    // returns true if it has changed (not just same value again)\n    FilterManager.prototype.setQuickFilter = function (newFilter) {\n        var parsedFilter = this.parseQuickFilter(newFilter);\n        if (this.quickFilter !== parsedFilter) {\n            this.quickFilter = parsedFilter;\n            this.setQuickFilterParts();\n            this.onFilterChanged();\n        }\n    };\n    FilterManager.prototype.checkExternalFilter = function () {\n        this.externalFilterPresent = this.gridOptionsWrapper.isExternalFilterPresent();\n    };\n    FilterManager.prototype.onFilterChanged = function (additionalEventAttributes) {\n        this.setAdvancedFilterPresent();\n        this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes);\n        this.checkExternalFilter();\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            filterWrapper.filterPromise.then(function (filter) {\n                if (filter.onAnyFilterChanged) {\n                    filter.onAnyFilterChanged();\n                }\n            });\n        });\n        var filterChangedEvent = {\n            type: events_1.Events.EVENT_FILTER_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        if (additionalEventAttributes) {\n            utils_1._.mergeDeep(filterChangedEvent, additionalEventAttributes);\n        }\n        // because internal events are not async in ag-grid, when the dispatchEvent\n        // method comes back, we know all listeners have finished executing.\n        this.processingFilterChange = true;\n        this.eventService.dispatchEvent(filterChangedEvent);\n        this.processingFilterChange = false;\n    };\n    FilterManager.prototype.isSuppressFlashingCellsBecauseFiltering = function () {\n        if (this.allowShowChangeAfterFilter) {\n            // if user has elected to always flash cell changes, then return false always\n            return false;\n        }\n        else {\n            // otherwise we suppress flashing changes when filtering\n            return this.processingFilterChange;\n        }\n    };\n    FilterManager.prototype.isQuickFilterPresent = function () {\n        return this.quickFilter !== null;\n    };\n    FilterManager.prototype.doesRowPassOtherFilters = function (filterToSkip, node) {\n        return this.doesRowPassFilter(node, filterToSkip);\n    };\n    FilterManager.prototype.doesRowPassQuickFilterNoCache = function (node, filterPart) {\n        var _this = this;\n        var columns = this.columnController.getAllColumnsForQuickFilter();\n        var filterPasses = false;\n        columns.forEach(function (column) {\n            if (filterPasses) {\n                return;\n            }\n            var part = _this.getQuickFilterTextForColumn(column, node);\n            if (utils_1._.exists(part)) {\n                if (part.indexOf(filterPart) >= 0) {\n                    filterPasses = true;\n                }\n            }\n        });\n        return filterPasses;\n    };\n    FilterManager.prototype.doesRowPassQuickFilterCache = function (node, filterPart) {\n        if (!node.quickFilterAggregateText) {\n            this.aggregateRowForQuickFilter(node);\n        }\n        var filterPasses = node.quickFilterAggregateText.indexOf(filterPart) >= 0;\n        return filterPasses;\n    };\n    FilterManager.prototype.doesRowPassQuickFilter = function (node) {\n        var _this = this;\n        var filterPasses = true;\n        var usingCache = this.gridOptionsWrapper.isCacheQuickFilter();\n        this.quickFilterParts.forEach(function (filterPart) {\n            var partPasses = usingCache ?\n                _this.doesRowPassQuickFilterCache(node, filterPart) : _this.doesRowPassQuickFilterNoCache(node, filterPart);\n            // each part must pass, if any fails, then the whole filter fails\n            if (!partPasses) {\n                filterPasses = false;\n            }\n        });\n        return filterPasses;\n    };\n    FilterManager.prototype.doesRowPassFilter = function (node, filterToSkip) {\n        // the row must pass ALL of the filters, so if any of them fail,\n        // we return true. that means if a row passes the quick filter,\n        // but fails the column filter, it fails overall\n        // first up, check quick filter\n        if (this.isQuickFilterPresent()) {\n            if (!this.doesRowPassQuickFilter(node)) {\n                return false;\n            }\n        }\n        // secondly, give the client a chance to reject this row\n        if (this.externalFilterPresent) {\n            if (!this.gridOptionsWrapper.doesExternalFilterPass(node)) {\n                return false;\n            }\n        }\n        // lastly, check our internal advanced filter\n        if (this.advancedFilterPresent) {\n            if (!this.doesFilterPass(node, filterToSkip)) {\n                return false;\n            }\n        }\n        // got this far, all filters pass\n        return true;\n    };\n    FilterManager.prototype.getQuickFilterTextForColumn = function (column, rowNode) {\n        var value = this.valueService.getValue(column, rowNode, true);\n        var valueAfterCallback;\n        var colDef = column.getColDef();\n        if (column.getColDef().getQuickFilterText) {\n            var params = {\n                value: value,\n                node: rowNode,\n                data: rowNode.data,\n                column: column,\n                colDef: colDef\n            };\n            valueAfterCallback = column.getColDef().getQuickFilterText(params);\n        }\n        else {\n            valueAfterCallback = value;\n        }\n        if (utils_1._.exists(valueAfterCallback)) {\n            return valueAfterCallback.toString().toUpperCase();\n        }\n        else {\n            return null;\n        }\n    };\n    FilterManager.prototype.aggregateRowForQuickFilter = function (node) {\n        var _this = this;\n        var stringParts = [];\n        var columns = this.columnController.getAllColumnsForQuickFilter();\n        columns.forEach(function (column) {\n            var part = _this.getQuickFilterTextForColumn(column, node);\n            if (utils_1._.exists(part)) {\n                stringParts.push(part);\n            }\n        });\n        node.quickFilterAggregateText = stringParts.join(FilterManager_1.QUICK_FILTER_SEPARATOR);\n    };\n    FilterManager.prototype.onNewRowsLoaded = function (source) {\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            filterWrapper.filterPromise.then(function (filter) {\n                if (filter.onNewRowsLoaded) {\n                    filter.onNewRowsLoaded();\n                }\n            });\n        });\n        this.updateFilterFlagInColumns(source);\n        this.setAdvancedFilterPresent();\n    };\n    FilterManager.prototype.createValueGetter = function (column) {\n        var _this = this;\n        return function (node) {\n            return _this.valueService.getValue(column, node, true);\n        };\n    };\n    FilterManager.prototype.getFilterComponent = function (column, source) {\n        var filterWrapper = this.getOrCreateFilterWrapper(column, source);\n        return filterWrapper.filterPromise;\n    };\n    FilterManager.prototype.isFilterActive = function (column) {\n        var filterWrapper = this.cachedFilter(column);\n        if (filterWrapper) {\n            return filterWrapper.filterPromise.resolveNow(false, function (filter) { return filter.isFilterActive(); });\n        }\n        else {\n            return false;\n        }\n    };\n    FilterManager.prototype.getOrCreateFilterWrapper = function (column, source) {\n        var filterWrapper = this.cachedFilter(column);\n        if (!filterWrapper) {\n            filterWrapper = this.createFilterWrapper(column, source);\n            this.allFilters[column.getColId()] = filterWrapper;\n        }\n        else {\n            if (source !== 'NO_UI') {\n                this.putIntoGui(filterWrapper, source);\n            }\n        }\n        return filterWrapper;\n    };\n    FilterManager.prototype.cachedFilter = function (column) {\n        return this.allFilters[column.getColId()];\n    };\n    FilterManager.prototype.createFilterInstance = function (column, $scope) {\n        var _this = this;\n        var defaultFilter = 'agTextColumnFilter';\n        if (this.gridOptionsWrapper.isEnterprise()) {\n            defaultFilter = 'agSetColumnFilter';\n        }\n        var event = {\n            type: events_1.Events.EVENT_FILTER_MODIFIED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        var sanitisedColDef = utils_1._.cloneObject(column.getColDef());\n        var params = this.createFilterParams(column, sanitisedColDef, $scope);\n        params.filterChangedCallback = this.onFilterChanged.bind(this);\n        params.filterModifiedCallback = function () { return _this.eventService.dispatchEvent(event); };\n        // we modify params in a callback as we need the filter instance, and this isn't available\n        // when creating the params above\n        var modifyParamsCallback = function (params, filter) { return utils_1._.assign(params, {\n            doesRowPassOtherFilter: _this.doesRowPassOtherFilters.bind(_this, filter),\n        }); };\n        return this.userComponentFactory.newFilterComponent(sanitisedColDef, params, defaultFilter, modifyParamsCallback);\n    };\n    FilterManager.prototype.createFilterParams = function (column, colDef, $scope) {\n        if ($scope === void 0) { $scope = null; }\n        var params = {\n            api: this.gridOptionsWrapper.getApi(),\n            column: column,\n            colDef: colDef,\n            rowModel: this.rowModel,\n            filterChangedCallback: null,\n            filterModifiedCallback: null,\n            valueGetter: this.createValueGetter(column),\n            context: this.gridOptionsWrapper.getContext(),\n            doesRowPassOtherFilter: null\n        };\n        // hack in scope if using AngularJS\n        if ($scope) {\n            params.$scope = $scope;\n        }\n        return params;\n    };\n    FilterManager.prototype.createFilterWrapper = function (column, source) {\n        var filterWrapper = {\n            column: column,\n            filterPromise: null,\n            scope: null,\n            compiledElement: null,\n            guiPromise: utils_1.Promise.external()\n        };\n        filterWrapper.scope = this.gridOptionsWrapper.isAngularCompileFilters() ? this.$scope.$new() : null;\n        filterWrapper.filterPromise = this.createFilterInstance(column, filterWrapper.scope);\n        this.putIntoGui(filterWrapper, source);\n        return filterWrapper;\n    };\n    FilterManager.prototype.putIntoGui = function (filterWrapper, source) {\n        var _this = this;\n        var eFilterGui = document.createElement('div');\n        eFilterGui.className = 'ag-filter';\n        filterWrapper.filterPromise.then(function (filter) {\n            var guiFromFilter = filter.getGui();\n            if (utils_1._.missing(guiFromFilter)) {\n                console.warn(\"getGui method from filter returned \" + guiFromFilter + \", it should be a DOM element or an HTML template string.\");\n            }\n            // for backwards compatibility with Angular 1 - we\n            // used to allow providing back HTML from getGui().\n            // once we move away from supporting Angular 1\n            // directly, we can change this.\n            if (typeof guiFromFilter === 'string') {\n                guiFromFilter = utils_1._.loadTemplate(guiFromFilter);\n            }\n            eFilterGui.appendChild(guiFromFilter);\n            if (filterWrapper.scope) {\n                var compiledElement = _this.$compile(eFilterGui)(filterWrapper.scope);\n                filterWrapper.compiledElement = compiledElement;\n                window.setTimeout(function () { return filterWrapper.scope.$apply(); }, 0);\n            }\n            filterWrapper.guiPromise.resolve(eFilterGui);\n            _this.eventService.dispatchEvent({\n                type: events_1.Events.EVENT_FILTER_OPENED,\n                column: filterWrapper.column,\n                source: source,\n                eGui: eFilterGui,\n                api: _this.gridApi,\n                columnApi: _this.columnApi\n            });\n        });\n    };\n    FilterManager.prototype.onNewColumnsLoaded = function () {\n        var _this = this;\n        var atLeastOneFilterGone = false;\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            var oldColumn = !_this.columnController.getPrimaryColumn(filterWrapper.column);\n            if (oldColumn) {\n                atLeastOneFilterGone = true;\n                _this.disposeFilterWrapper(filterWrapper, \"filterDestroyed\");\n            }\n        });\n        if (atLeastOneFilterGone) {\n            this.onFilterChanged();\n        }\n    };\n    // destroys the filter, so it not longer takes part\n    FilterManager.prototype.destroyFilter = function (column, source) {\n        if (source === void 0) { source = \"api\"; }\n        var filterWrapper = this.allFilters[column.getColId()];\n        if (filterWrapper) {\n            this.disposeFilterWrapper(filterWrapper, source);\n            this.onFilterChanged();\n        }\n    };\n    FilterManager.prototype.disposeFilterWrapper = function (filterWrapper, source) {\n        var _this = this;\n        filterWrapper.filterPromise.then(function (filter) {\n            filter.setModel(null);\n            if (filter.destroy) {\n                filter.destroy();\n            }\n            filterWrapper.column.setFilterActive(false, source);\n            if (filterWrapper.scope) {\n                if (filterWrapper.compiledElement) {\n                    filterWrapper.compiledElement.remove();\n                }\n                filterWrapper.scope.$destroy();\n            }\n            delete _this.allFilters[filterWrapper.column.getColId()];\n        });\n    };\n    FilterManager.prototype.destroy = function () {\n        var _this = this;\n        utils_1._.iterateObject(this.allFilters, function (key, filterWrapper) {\n            _this.disposeFilterWrapper(filterWrapper, \"filterDestroyed\");\n        });\n    };\n    var FilterManager_1;\n    FilterManager.QUICK_FILTER_SEPARATOR = '\\n';\n    __decorate([\n        context_1.Autowired('$compile'),\n        __metadata(\"design:type\", Object)\n    ], FilterManager.prototype, \"$compile\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], FilterManager.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FilterManager.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('popupService'),\n        __metadata(\"design:type\", popupService_1.PopupService)\n    ], FilterManager.prototype, \"popupService\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], FilterManager.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], FilterManager.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], FilterManager.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], FilterManager.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('enterprise'),\n        __metadata(\"design:type\", Boolean)\n    ], FilterManager.prototype, \"enterprise\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], FilterManager.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], FilterManager.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], FilterManager.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], FilterManager.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FilterManager.prototype, \"init\", null);\n    __decorate([\n        context_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FilterManager.prototype, \"destroy\", null);\n    FilterManager = FilterManager_1 = __decorate([\n        context_1.Bean('filterManager')\n    ], FilterManager);\n    return FilterManager;\n}());\nexports.FilterManager = FilterManager;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logger_1 = require(\"../logger\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar dragService_1 = require(\"./dragService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar environment_1 = require(\"../environment\");\nvar utils_1 = require(\"../utils\");\nvar DragSourceType;\n(function (DragSourceType) {\n    DragSourceType[DragSourceType[\"ToolPanel\"] = 0] = \"ToolPanel\";\n    DragSourceType[DragSourceType[\"HeaderCell\"] = 1] = \"HeaderCell\";\n    DragSourceType[DragSourceType[\"RowDrag\"] = 2] = \"RowDrag\";\n})(DragSourceType = exports.DragSourceType || (exports.DragSourceType = {}));\nvar VDirection;\n(function (VDirection) {\n    VDirection[VDirection[\"Up\"] = 0] = \"Up\";\n    VDirection[VDirection[\"Down\"] = 1] = \"Down\";\n})(VDirection = exports.VDirection || (exports.VDirection = {}));\nvar HDirection;\n(function (HDirection) {\n    HDirection[HDirection[\"Left\"] = 0] = \"Left\";\n    HDirection[HDirection[\"Right\"] = 1] = \"Right\";\n})(HDirection = exports.HDirection || (exports.HDirection = {}));\nvar DragAndDropService = /** @class */ (function () {\n    function DragAndDropService() {\n        this.dragSourceAndParamsList = [];\n        this.dropTargets = [];\n    }\n    DragAndDropService_1 = DragAndDropService;\n    DragAndDropService.prototype.init = function () {\n        this.ePinnedIcon = utils_1._.createIcon('columnMovePin', this.gridOptionsWrapper, null);\n        this.ePlusIcon = utils_1._.createIcon('columnMoveAdd', this.gridOptionsWrapper, null);\n        this.eHiddenIcon = utils_1._.createIcon('columnMoveHide', this.gridOptionsWrapper, null);\n        this.eMoveIcon = utils_1._.createIcon('columnMoveMove', this.gridOptionsWrapper, null);\n        this.eLeftIcon = utils_1._.createIcon('columnMoveLeft', this.gridOptionsWrapper, null);\n        this.eRightIcon = utils_1._.createIcon('columnMoveRight', this.gridOptionsWrapper, null);\n        this.eGroupIcon = utils_1._.createIcon('columnMoveGroup', this.gridOptionsWrapper, null);\n        this.eAggregateIcon = utils_1._.createIcon('columnMoveValue', this.gridOptionsWrapper, null);\n        this.ePivotIcon = utils_1._.createIcon('columnMovePivot', this.gridOptionsWrapper, null);\n        this.eDropNotAllowedIcon = utils_1._.createIcon('dropNotAllowed', this.gridOptionsWrapper, null);\n    };\n    DragAndDropService.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('OldToolPanelDragAndDropService');\n    };\n    DragAndDropService.prototype.getStringType = function (type) {\n        switch (type) {\n            case DragSourceType.RowDrag: return 'row';\n            case DragSourceType.HeaderCell: return 'headerCell';\n            case DragSourceType.ToolPanel: return 'toolPanel';\n            default:\n                console.warn(\"ag-Grid: bug - unknown drag type \" + type);\n                return null;\n        }\n    };\n    DragAndDropService.prototype.addDragSource = function (dragSource, allowTouch) {\n        if (allowTouch === void 0) { allowTouch = false; }\n        var params = {\n            eElement: dragSource.eElement,\n            dragStartPixels: dragSource.dragStartPixels,\n            onDragStart: this.onDragStart.bind(this, dragSource),\n            onDragStop: this.onDragStop.bind(this),\n            onDragging: this.onDragging.bind(this)\n        };\n        this.dragSourceAndParamsList.push({ params: params, dragSource: dragSource });\n        this.dragService.addDragSource(params, allowTouch);\n    };\n    DragAndDropService.prototype.removeDragSource = function (dragSource) {\n        var sourceAndParams = utils_1._.find(this.dragSourceAndParamsList, function (item) { return item.dragSource === dragSource; });\n        if (sourceAndParams) {\n            this.dragService.removeDragSource(sourceAndParams.params);\n            utils_1._.removeFromArray(this.dragSourceAndParamsList, sourceAndParams);\n        }\n    };\n    DragAndDropService.prototype.destroy = function () {\n        var _this = this;\n        this.dragSourceAndParamsList.forEach(function (sourceAndParams) {\n            _this.dragService.removeDragSource(sourceAndParams.params);\n        });\n        this.dragSourceAndParamsList.length = 0;\n    };\n    DragAndDropService.prototype.nudge = function () {\n        if (this.dragging) {\n            this.onDragging(this.eventLastTime, true);\n        }\n    };\n    DragAndDropService.prototype.onDragStart = function (dragSource, mouseEvent) {\n        this.dragging = true;\n        this.dragSource = dragSource;\n        this.eventLastTime = mouseEvent;\n        this.dragItem = this.dragSource.dragItemCallback();\n        this.lastDropTarget = this.dragSource.dragSourceDropTarget;\n        if (this.dragSource.dragStarted) {\n            this.dragSource.dragStarted();\n        }\n        this.createGhost();\n    };\n    DragAndDropService.prototype.onDragStop = function (mouseEvent) {\n        this.eventLastTime = null;\n        this.dragging = false;\n        if (this.dragSource.dragStopped) {\n            this.dragSource.dragStopped();\n        }\n        if (this.lastDropTarget && this.lastDropTarget.onDragStop) {\n            var draggingEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, null, null, false);\n            this.lastDropTarget.onDragStop(draggingEvent);\n        }\n        this.lastDropTarget = null;\n        this.dragItem = null;\n        this.removeGhost();\n    };\n    DragAndDropService.prototype.onDragging = function (mouseEvent, fromNudge) {\n        var hDirection = this.workOutHDirection(mouseEvent);\n        var vDirection = this.workOutVDirection(mouseEvent);\n        this.eventLastTime = mouseEvent;\n        this.positionGhost(mouseEvent);\n        // check if mouseEvent intersects with any of the drop targets\n        var dropTarget = utils_1._.find(this.dropTargets, this.isMouseOnDropTarget.bind(this, mouseEvent));\n        if (dropTarget !== this.lastDropTarget) {\n            this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\n            this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n            this.lastDropTarget = dropTarget;\n        }\n        else if (dropTarget) {\n            var draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n            dropTarget.onDragging(draggingEvent);\n        }\n    };\n    DragAndDropService.prototype.enterDragTargetIfExists = function (dropTarget, mouseEvent, hDirection, vDirection, fromNudge) {\n        if (!dropTarget) {\n            return;\n        }\n        var dragEnterEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n        dropTarget.onDragEnter(dragEnterEvent);\n        this.setGhostIcon(dropTarget.getIconName ? dropTarget.getIconName() : null);\n    };\n    DragAndDropService.prototype.leaveLastTargetIfExists = function (mouseEvent, hDirection, vDirection, fromNudge) {\n        if (!this.lastDropTarget) {\n            return;\n        }\n        var dragLeaveEvent = this.createDropTargetEvent(this.lastDropTarget, mouseEvent, hDirection, vDirection, fromNudge);\n        this.lastDropTarget.onDragLeave(dragLeaveEvent);\n        this.setGhostIcon(null);\n    };\n    DragAndDropService.prototype.getAllContainersFromDropTarget = function (dropTarget) {\n        var containers = [dropTarget.getContainer()];\n        var secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\n        if (secondaryContainers) {\n            containers = containers.concat(secondaryContainers);\n        }\n        return containers;\n    };\n    // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\n    DragAndDropService.prototype.isMouseOnDropTarget = function (mouseEvent, dropTarget) {\n        var allContainers = this.getAllContainersFromDropTarget(dropTarget);\n        var mouseOverTarget = false;\n        allContainers.forEach(function (eContainer) {\n            if (!eContainer) {\n                return;\n            } // secondary can be missing\n            var rect = eContainer.getBoundingClientRect();\n            // if element is not visible, then width and height are zero\n            if (rect.width === 0 || rect.height === 0) {\n                return;\n            }\n            var horizontalFit = mouseEvent.clientX >= rect.left && mouseEvent.clientX <= rect.right;\n            var verticalFit = mouseEvent.clientY >= rect.top && mouseEvent.clientY <= rect.bottom;\n            //console.log(`rect.width = ${rect.width} || rect.height = ${rect.height} ## verticalFit = ${verticalFit}, horizontalFit = ${horizontalFit}, `);\n            if (horizontalFit && verticalFit) {\n                mouseOverTarget = true;\n            }\n        });\n        if (mouseOverTarget) {\n            var mouseOverTargetAndInterested = dropTarget.isInterestedIn(this.dragSource.type);\n            return mouseOverTargetAndInterested;\n        }\n        else {\n            return false;\n        }\n    };\n    DragAndDropService.prototype.addDropTarget = function (dropTarget) {\n        this.dropTargets.push(dropTarget);\n    };\n    DragAndDropService.prototype.workOutHDirection = function (event) {\n        if (this.eventLastTime.clientX > event.clientX) {\n            return HDirection.Left;\n        }\n        else if (this.eventLastTime.clientX < event.clientX) {\n            return HDirection.Right;\n        }\n        else {\n            return null;\n        }\n    };\n    DragAndDropService.prototype.workOutVDirection = function (event) {\n        if (this.eventLastTime.clientY > event.clientY) {\n            return VDirection.Up;\n        }\n        else if (this.eventLastTime.clientY < event.clientY) {\n            return VDirection.Down;\n        }\n        else {\n            return null;\n        }\n    };\n    DragAndDropService.prototype.createDropTargetEvent = function (dropTarget, event, hDirection, vDirection, fromNudge) {\n        // localise x and y to the target component\n        var rect = dropTarget.getContainer().getBoundingClientRect();\n        var x = event.clientX - rect.left;\n        var y = event.clientY - rect.top;\n        var dropTargetEvent = {\n            event: event,\n            x: x,\n            y: y,\n            vDirection: vDirection,\n            hDirection: hDirection,\n            dragSource: this.dragSource,\n            fromNudge: fromNudge,\n            dragItem: this.dragItem\n        };\n        return dropTargetEvent;\n    };\n    DragAndDropService.prototype.positionGhost = function (event) {\n        var ghostRect = this.eGhost.getBoundingClientRect();\n        var ghostHeight = ghostRect.height;\n        // for some reason, without the '-2', it still overlapped by 1 or 2 pixels, which\n        // then brought in scrollbars to the browser. no idea why, but putting in -2 here\n        // works around it which is good enough for me.\n        var browserWidth = utils_1._.getBodyWidth() - 2;\n        var browserHeight = utils_1._.getBodyHeight() - 2;\n        // put ghost vertically in middle of cursor\n        var top = event.pageY - (ghostHeight / 2);\n        // horizontally, place cursor just right of icon\n        var left = event.pageX - 30;\n        var usrDocument = this.gridOptionsWrapper.getDocument();\n        var windowScrollY = window.pageYOffset || usrDocument.documentElement.scrollTop;\n        var windowScrollX = window.pageXOffset || usrDocument.documentElement.scrollLeft;\n        // check ghost is not positioned outside of the browser\n        if (browserWidth > 0) {\n            if ((left + this.eGhost.clientWidth) > (browserWidth + windowScrollX)) {\n                left = browserWidth + windowScrollX - this.eGhost.clientWidth;\n            }\n        }\n        if (left < 0) {\n            left = 0;\n        }\n        if (browserHeight > 0) {\n            if ((top + this.eGhost.clientHeight) > (browserHeight + windowScrollY)) {\n                top = browserHeight + windowScrollY - this.eGhost.clientHeight;\n            }\n        }\n        if (top < 0) {\n            top = 0;\n        }\n        this.eGhost.style.left = left + 'px';\n        this.eGhost.style.top = top + 'px';\n    };\n    DragAndDropService.prototype.removeGhost = function () {\n        if (this.eGhost && this.eGhostParent) {\n            this.eGhostParent.removeChild(this.eGhost);\n        }\n        this.eGhost = null;\n    };\n    DragAndDropService.prototype.createGhost = function () {\n        this.eGhost = utils_1._.loadTemplate(DragAndDropService_1.GHOST_TEMPLATE);\n        var theme = this.environment.getTheme();\n        if (theme) {\n            utils_1._.addCssClass(this.eGhost, theme);\n        }\n        this.eGhostIcon = this.eGhost.querySelector('.ag-dnd-ghost-icon');\n        this.setGhostIcon(null);\n        var eText = this.eGhost.querySelector('.ag-dnd-ghost-label');\n        eText.innerHTML = utils_1._.escape(this.dragSource.dragItemName);\n        this.eGhost.style.height = '25px';\n        this.eGhost.style.top = '20px';\n        this.eGhost.style.left = '20px';\n        var usrDocument = this.gridOptionsWrapper.getDocument();\n        this.eGhostParent = usrDocument.querySelector('body');\n        if (!this.eGhostParent) {\n            console.warn('ag-Grid: could not find document body, it is needed for dragging columns');\n        }\n        else {\n            this.eGhostParent.appendChild(this.eGhost);\n        }\n    };\n    DragAndDropService.prototype.setGhostIcon = function (iconName, shake) {\n        if (shake === void 0) { shake = false; }\n        utils_1._.clearElement(this.eGhostIcon);\n        var eIcon;\n        switch (iconName) {\n            case DragAndDropService_1.ICON_ADD:\n                eIcon = this.ePlusIcon;\n                break;\n            case DragAndDropService_1.ICON_PINNED:\n                eIcon = this.ePinnedIcon;\n                break;\n            case DragAndDropService_1.ICON_MOVE:\n                eIcon = this.eMoveIcon;\n                break;\n            case DragAndDropService_1.ICON_LEFT:\n                eIcon = this.eLeftIcon;\n                break;\n            case DragAndDropService_1.ICON_RIGHT:\n                eIcon = this.eRightIcon;\n                break;\n            case DragAndDropService_1.ICON_GROUP:\n                eIcon = this.eGroupIcon;\n                break;\n            case DragAndDropService_1.ICON_AGGREGATE:\n                eIcon = this.eAggregateIcon;\n                break;\n            case DragAndDropService_1.ICON_PIVOT:\n                eIcon = this.ePivotIcon;\n                break;\n            case DragAndDropService_1.ICON_NOT_ALLOWED:\n                eIcon = this.eDropNotAllowedIcon;\n                break;\n            default:\n                eIcon = this.eHiddenIcon;\n                break;\n        }\n        this.eGhostIcon.appendChild(eIcon);\n        utils_1._.addOrRemoveCssClass(this.eGhostIcon, 'ag-shake-left-to-right', shake);\n    };\n    var DragAndDropService_1;\n    DragAndDropService.ICON_PINNED = 'pinned';\n    DragAndDropService.ICON_ADD = 'add';\n    DragAndDropService.ICON_MOVE = 'move';\n    DragAndDropService.ICON_LEFT = 'left';\n    DragAndDropService.ICON_RIGHT = 'right';\n    DragAndDropService.ICON_GROUP = 'group';\n    DragAndDropService.ICON_AGGREGATE = 'aggregate';\n    DragAndDropService.ICON_PIVOT = 'pivot';\n    DragAndDropService.ICON_NOT_ALLOWED = 'notAllowed';\n    DragAndDropService.GHOST_TEMPLATE = '<div class=\"ag-dnd-ghost\">' +\n        '  <span class=\"ag-dnd-ghost-icon ag-shake-left-to-right\"></span>' +\n        '  <div class=\"ag-dnd-ghost-label\">' +\n        '  </div>' +\n        '</div>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], DragAndDropService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('dragService'),\n        __metadata(\"design:type\", dragService_1.DragService)\n    ], DragAndDropService.prototype, \"dragService\", void 0);\n    __decorate([\n        context_1.Autowired('environment'),\n        __metadata(\"design:type\", environment_1.Environment)\n    ], DragAndDropService.prototype, \"environment\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], DragAndDropService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DragAndDropService.prototype, \"init\", null);\n    __decorate([\n        __param(0, context_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], DragAndDropService.prototype, \"setBeans\", null);\n    __decorate([\n        context_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DragAndDropService.prototype, \"destroy\", null);\n    DragAndDropService = DragAndDropService_1 = __decorate([\n        context_1.Bean('dragAndDropService')\n    ], DragAndDropService);\n    return DragAndDropService;\n}());\nexports.DragAndDropService = DragAndDropService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar userComponentRegistry_1 = require(\"./userComponentRegistry\");\nvar agComponentUtils_1 = require(\"./agComponentUtils\");\nvar componentMetadataProvider_1 = require(\"./componentMetadataProvider\");\nvar utils_1 = require(\"../../utils\");\nvar ComponentSource;\n(function (ComponentSource) {\n    ComponentSource[ComponentSource[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ComponentSource[ComponentSource[\"REGISTERED_BY_NAME\"] = 1] = \"REGISTERED_BY_NAME\";\n    ComponentSource[ComponentSource[\"HARDCODED\"] = 2] = \"HARDCODED\";\n})(ComponentSource = exports.ComponentSource || (exports.ComponentSource = {}));\nvar UserComponentFactory = /** @class */ (function () {\n    function UserComponentFactory() {\n    }\n    UserComponentFactory.prototype.newDateComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, \"dateComponent\", \"agDateInput\");\n    };\n    UserComponentFactory.prototype.newHeaderComponent = function (params) {\n        return this.createAndInitUserComponent(params.column.getColDef(), params, \"headerComponent\", \"agColumnHeader\");\n    };\n    UserComponentFactory.prototype.newHeaderGroupComponent = function (params) {\n        return this.createAndInitUserComponent(params.columnGroup.getColGroupDef(), params, \"headerGroupComponent\", \"agColumnGroupHeader\");\n    };\n    UserComponentFactory.prototype.newFullWidthGroupRowInnerCellRenderer = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, \"groupRowInnerRenderer\", null, true);\n    };\n    // this one is unusual, as it can be LoadingCellRenderer, DetailCellRenderer, FullWidthCellRenderer or GroupRowRenderer.\n    // so we have to pass the type in.\n    UserComponentFactory.prototype.newFullWidthCellRenderer = function (params, cellRendererType, cellRendererName) {\n        return this.createAndInitUserComponent(null, params, cellRendererType, cellRendererName);\n    };\n    UserComponentFactory.prototype.newCellRenderer = function (target, params) {\n        return this.createAndInitUserComponent(target, params, \"cellRenderer\", null, true);\n    };\n    UserComponentFactory.prototype.newPinnedRowCellRenderer = function (target, params) {\n        return this.createAndInitUserComponent(target, params, \"pinnedRowCellRenderer\", null, true);\n    };\n    UserComponentFactory.prototype.newCellEditor = function (colDef, params) {\n        return this.createAndInitUserComponent(colDef, params, 'cellEditor', 'agCellEditor');\n    };\n    UserComponentFactory.prototype.newInnerCellRenderer = function (target, params) {\n        return this.createAndInitUserComponent(target, params, \"innerRenderer\", null);\n    };\n    UserComponentFactory.prototype.newLoadingOverlayComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, \"loadingOverlayComponent\", \"agLoadingOverlay\");\n    };\n    UserComponentFactory.prototype.newNoRowsOverlayComponent = function (params) {\n        return this.createAndInitUserComponent(this.gridOptions, params, \"noRowsOverlayComponent\", \"agNoRowsOverlay\");\n    };\n    UserComponentFactory.prototype.newTooltipComponent = function (params) {\n        var colDef = params.column && params.column.getColDef();\n        return this.createAndInitUserComponent(colDef, params, \"tooltipComponent\", 'agTooltipComponent');\n    };\n    UserComponentFactory.prototype.newFilterComponent = function (colDef, params, defaultFilter, modifyParamsCallback) {\n        return this.createAndInitUserComponent(colDef, params, 'filter', defaultFilter, false, modifyParamsCallback);\n    };\n    UserComponentFactory.prototype.newFloatingFilterComponent = function (colDef, params, defaultFloatingFilter) {\n        return this.createAndInitUserComponent(colDef, params, \"floatingFilterComponent\", defaultFloatingFilter, true);\n    };\n    UserComponentFactory.prototype.newToolPanelComponent = function (toolPanelDef, params) {\n        return this.createAndInitUserComponent(toolPanelDef, params, 'toolPanel');\n    };\n    UserComponentFactory.prototype.newStatusPanelComponent = function (def, params) {\n        return this.createAndInitUserComponent(def, params, 'statusPanel');\n    };\n    /**\n     * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n     * It takes\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param defaultComponentName: The actual name of the component to instantiate, this is usually the same as propertyName, but in\n     *      some cases is not, like floatingFilter, if it is the same is not necessary to specify\n     *  @param optional: Handy method to tell if this should return a component ALWAYS. if that is the case, but there is no\n     *      component found, it throws an error, by default all components are MANDATORY\n     *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n     *  params are and the component that init is about to get called for\n     */\n    UserComponentFactory.prototype.createAndInitUserComponent = function (definitionObject, paramsFromGrid, propertyName, defaultComponentName, \n    // optional items are: FloatingFilter, CellComp (for cellRenderer)\n    optional, \n    // used by FilterManager only\n    modifyParamsCallback) {\n        if (optional === void 0) { optional = false; }\n        if (!definitionObject) {\n            definitionObject = this.gridOptions;\n        }\n        // Create the component instance\n        var componentAndParams = this.createComponentInstance(definitionObject, propertyName, paramsFromGrid, defaultComponentName, optional);\n        if (!componentAndParams) {\n            return null;\n        }\n        var componentInstance = componentAndParams.componentInstance;\n        // Wire the component and call the init method with the correct params\n        var params = this.createFinalParams(definitionObject, propertyName, paramsFromGrid, componentAndParams.paramsFromSelector);\n        this.addReactHacks(params);\n        // give caller chance to set any params that depend on the componentInstance (need here as the\n        // componentInstance was not available when createUserComponent was called)\n        var paramsAfterCallback = modifyParamsCallback ? modifyParamsCallback(params, componentInstance) : params;\n        var deferredInit = this.initComponent(componentInstance, paramsAfterCallback);\n        if (deferredInit == null) {\n            // const p = new Promise<A>(resolve => {\n            //     setTimeout( ()=> {\n            //         resolve(componentInstance);\n            //     }, 1000);\n            // });\n            // return p;\n            return utils_1.Promise.resolve(componentInstance);\n        }\n        else {\n            var asPromise = deferredInit;\n            return asPromise.map(function (notRelevant) { return componentInstance; });\n        }\n    };\n    UserComponentFactory.prototype.addReactHacks = function (params) {\n        // a temporary fix for AG-1574\n        // AG-1715 raised to do a wider ranging refactor to improve this\n        var agGridReact = this.context.getBean('agGridReact');\n        if (agGridReact) {\n            params.agGridReact = utils_1._.cloneObject(agGridReact);\n        }\n        // AG-1716 - directly related to AG-1574 and AG-1715\n        var frameworkComponentWrapper = this.context.getBean('frameworkComponentWrapper');\n        if (frameworkComponentWrapper) {\n            params.frameworkComponentWrapper = frameworkComponentWrapper;\n        }\n    };\n    /**\n     * This method creates a component given everything needed to guess what sort of component needs to be instantiated\n     * It takes\n     *  @param clazz: The class to instantiate,\n     *  @param agGridParams: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     *  @param modifyParamsCallback: A chance to customise the params passed to the init method. It receives what the current\n     *  params are and the component that init is about to get called for\n     */\n    UserComponentFactory.prototype.createUserComponentFromConcreteClass = function (clazz, agGridParams) {\n        var internalComponent = new clazz();\n        this.initComponent(internalComponent, agGridParams);\n        return internalComponent;\n    };\n    /**\n     * This method returns the underlying representation of the component to be created. ie for Javascript the\n     * underlying function where we should be calling new into. In case of the frameworks, the framework class\n     * object that represents the component to be created.\n     *\n     * This method is handy for different reasons, for example if you want to check if a component has a particular\n     * method implemented without having to create the component, just by inspecting the source component\n     *\n     * It takes\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param params: Params to be passed to the dynamic component function in case it needs to be\n     *      invoked\n     *  @param defaultComponentName: The name of the component to load if there is no component specified\n     */\n    UserComponentFactory.prototype.lookupComponentClassDef = function (definitionObject, propertyName, params, defaultComponentName) {\n        if (params === void 0) { params = null; }\n        /**\n         * There are five things that can happen when resolving a component.\n         *  a) HardcodedFwComponent: That holder[propertyName]Framework has associated a Framework native component\n         *  b) HardcodedJsComponent: That holder[propertyName] has associate a JS component\n         *  c) hardcodedJsFunction: That holder[propertyName] has associate a JS function\n         *  d) hardcodedNameComponent: That holder[propertyName] has associate a string that represents a component to load\n         *  e) That none of the three previous are specified, then we need to use the DefaultRegisteredComponent\n         */\n        var hardcodedNameComponent = null;\n        var HardcodedJsComponent = null;\n        var hardcodedJsFunction = null;\n        var HardcodedFwComponent = null;\n        var componentSelectorFunc;\n        if (definitionObject != null) {\n            var componentPropertyValue = definitionObject[propertyName];\n            // for filters only, we allow 'true' for the component, which means default filter to be used\n            var usingDefaultComponent = componentPropertyValue === true;\n            if (componentPropertyValue != null && !usingDefaultComponent) {\n                if (typeof componentPropertyValue === 'string') {\n                    hardcodedNameComponent = componentPropertyValue;\n                }\n                else if (typeof componentPropertyValue === 'boolean') {\n                    // never happens, as we test for usingDefaultComponent above,\n                    // however it's needed for the next block to compile\n                }\n                else if (this.agComponentUtils.doesImplementIComponent(componentPropertyValue)) {\n                    HardcodedJsComponent = componentPropertyValue;\n                }\n                else {\n                    hardcodedJsFunction = componentPropertyValue;\n                }\n            }\n            HardcodedFwComponent = definitionObject[propertyName + \"Framework\"];\n            componentSelectorFunc = definitionObject[propertyName + \"Selector\"];\n        }\n        /**\n         * Since we allow many types of flavors for specifying the components, let's make sure this is not an illegal\n         * combination\n         */\n        if ((HardcodedJsComponent && HardcodedFwComponent) ||\n            (hardcodedNameComponent && HardcodedFwComponent) ||\n            (hardcodedJsFunction && HardcodedFwComponent)) {\n            throw Error(\"ag-grid: you are trying to specify: \" + propertyName + \" twice as a component.\");\n        }\n        if (HardcodedFwComponent && !this.frameworkComponentWrapper) {\n            throw Error(\"ag-grid: you are specifying a framework component but you are not using a framework version of ag-grid for : \" + propertyName);\n        }\n        if (componentSelectorFunc && (hardcodedNameComponent || HardcodedJsComponent || hardcodedJsFunction || HardcodedFwComponent)) {\n            throw Error(\"ag-grid: you can't specify both, the selector and the component of ag-grid for : \" + propertyName);\n        }\n        /**\n         * At this stage we are guaranteed to either have,\n         * DEPRECATED\n         * - A unique HardcodedFwComponent\n         * - A unique HardcodedJsComponent\n         * - A unique hardcodedJsFunction\n         * BY NAME- FAVOURED APPROACH\n         * - A unique hardcodedNameComponent\n         * - None of the previous, hence we revert to: RegisteredComponent\n         */\n        if (HardcodedFwComponent) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n            // console.warn(`${HardcodedFwComponent}`);\n            return {\n                componentFromFramework: true,\n                component: HardcodedFwComponent,\n                source: ComponentSource.HARDCODED,\n                paramsFromSelector: null\n            };\n        }\n        if (HardcodedJsComponent) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a component directly is deprecated, you should register the component by name`);\n            // console.warn(`${HardcodedJsComponent}`);\n            return {\n                componentFromFramework: false,\n                component: HardcodedJsComponent,\n                source: ComponentSource.HARDCODED,\n                paramsFromSelector: null\n            };\n        }\n        if (hardcodedJsFunction) {\n            // console.warn(`ag-grid: Since version 12.1.0 specifying a function directly is deprecated, you should register the component by name`);\n            // console.warn(`${hardcodedJsFunction}`);\n            return this.agComponentUtils.adaptFunction(propertyName, hardcodedJsFunction, false, ComponentSource.HARDCODED);\n        }\n        var selectorResult = componentSelectorFunc ? componentSelectorFunc(params) : null;\n        var componentNameToUse;\n        if (selectorResult && selectorResult.component) {\n            componentNameToUse = selectorResult.component;\n        }\n        else if (hardcodedNameComponent) {\n            componentNameToUse = hardcodedNameComponent;\n        }\n        else {\n            componentNameToUse = defaultComponentName;\n        }\n        if (!componentNameToUse) {\n            return null;\n        }\n        var registeredCompClassDef = this.lookupFromRegisteredComponents(propertyName, componentNameToUse);\n        return {\n            componentFromFramework: registeredCompClassDef.componentFromFramework,\n            component: registeredCompClassDef.component,\n            source: registeredCompClassDef.source,\n            paramsFromSelector: selectorResult ? selectorResult.params : null\n        };\n    };\n    UserComponentFactory.prototype.lookupFromRegisteredComponents = function (propertyName, componentNameOpt) {\n        var componentName = componentNameOpt != null ? componentNameOpt : propertyName;\n        var registeredComponent = this.userComponentRegistry.retrieve(componentName);\n        if (registeredComponent == null) {\n            return null;\n        }\n        //If it is a FW it has to be registered as a component\n        if (registeredComponent.componentFromFramework) {\n            return {\n                component: registeredComponent.component,\n                componentFromFramework: true,\n                source: ComponentSource.REGISTERED_BY_NAME,\n                paramsFromSelector: null\n            };\n        }\n        //If it is JS it may be a function or a component\n        if (this.agComponentUtils.doesImplementIComponent(registeredComponent.component)) {\n            return {\n                component: registeredComponent.component,\n                componentFromFramework: false,\n                source: (registeredComponent.source == userComponentRegistry_1.RegisteredComponentSource.REGISTERED) ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT,\n                paramsFromSelector: null\n            };\n        }\n        // This is a function\n        return this.agComponentUtils.adaptFunction(propertyName, registeredComponent.component, registeredComponent.componentFromFramework, (registeredComponent.source == userComponentRegistry_1.RegisteredComponentSource.REGISTERED) ? ComponentSource.REGISTERED_BY_NAME : ComponentSource.DEFAULT);\n    };\n    /**\n     * Useful to check what would be the resultant params for a given object\n     *  @param definitionObject: This is the context for which this component needs to be created, it can be gridOptions\n     *      (global) or columnDef mostly.\n     *  @param propertyName: The name of the property used in ag-grid as a convention to refer to the component, it can be:\n     *      'floatingFilter', 'cellRenderer', is used to find if the user is specifying a custom component\n     *  @param paramsFromGrid: Params to be passed to the component and passed by ag-Grid. This will get merged with any params\n     *      specified by the user in the configuration\n     * @returns {any} It merges the user agGridParams with the actual params specified by the user.\n     */\n    UserComponentFactory.prototype.createFinalParams = function (definitionObject, propertyName, paramsFromGrid, paramsFromSelector) {\n        if (paramsFromSelector === void 0) { paramsFromSelector = null; }\n        var res = {};\n        utils_1._.mergeDeep(res, paramsFromGrid);\n        var userParams = definitionObject ? definitionObject[propertyName + \"Params\"] : null;\n        if (userParams != null) {\n            if (typeof userParams === 'function') {\n                utils_1._.mergeDeep(res, userParams(paramsFromGrid));\n            }\n            else if (typeof userParams === 'object') {\n                utils_1._.mergeDeep(res, userParams);\n            }\n        }\n        utils_1._.mergeDeep(res, paramsFromSelector);\n        return res;\n    };\n    UserComponentFactory.prototype.createComponentInstance = function (holder, propertyName, paramsForSelector, defaultComponentName, optional) {\n        var componentToUse = this.lookupComponentClassDef(holder, propertyName, paramsForSelector, defaultComponentName);\n        var missing = !componentToUse || !componentToUse.component;\n        if (missing) {\n            if (!optional) {\n                console.error(\"Error creating component \" + propertyName + \"=>\" + defaultComponentName);\n            }\n            return null;\n        }\n        var componentInstance;\n        if (componentToUse.componentFromFramework) {\n            // Using framework component\n            var FrameworkComponentRaw = componentToUse.component;\n            var thisComponentConfig = this.componentMetadataProvider.retrieve(propertyName);\n            componentInstance = this.frameworkComponentWrapper.wrap(FrameworkComponentRaw, thisComponentConfig.mandatoryMethodList, thisComponentConfig.optionalMethodList, defaultComponentName);\n        }\n        else {\n            // Using plain JavaScript component\n            componentInstance = new componentToUse.component();\n        }\n        return { componentInstance: componentInstance, paramsFromSelector: componentToUse.paramsFromSelector };\n    };\n    UserComponentFactory.prototype.initComponent = function (component, finalParams) {\n        this.context.wireBean(component);\n        if (component.init == null) {\n            return;\n        }\n        else {\n            return component.init(finalParams);\n        }\n    };\n    __decorate([\n        context_1.Autowired(\"gridOptions\"),\n        __metadata(\"design:type\", Object)\n    ], UserComponentFactory.prototype, \"gridOptions\", void 0);\n    __decorate([\n        context_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], UserComponentFactory.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired(\"context\"),\n        __metadata(\"design:type\", context_1.Context)\n    ], UserComponentFactory.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired(\"agComponentUtils\"),\n        __metadata(\"design:type\", agComponentUtils_1.AgComponentUtils)\n    ], UserComponentFactory.prototype, \"agComponentUtils\", void 0);\n    __decorate([\n        context_1.Autowired(\"componentMetadataProvider\"),\n        __metadata(\"design:type\", componentMetadataProvider_1.ComponentMetadataProvider)\n    ], UserComponentFactory.prototype, \"componentMetadataProvider\", void 0);\n    __decorate([\n        context_1.Autowired(\"userComponentRegistry\"),\n        __metadata(\"design:type\", userComponentRegistry_1.UserComponentRegistry)\n    ], UserComponentFactory.prototype, \"userComponentRegistry\", void 0);\n    __decorate([\n        context_1.Optional(\"frameworkComponentWrapper\"),\n        __metadata(\"design:type\", Object)\n    ], UserComponentFactory.prototype, \"frameworkComponentWrapper\", void 0);\n    UserComponentFactory = __decorate([\n        context_1.Bean('userComponentFactory')\n    ], UserComponentFactory);\n    return UserComponentFactory;\n}());\nexports.UserComponentFactory = UserComponentFactory;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar eventService_1 = require(\"../eventService\");\nvar rowComp_1 = require(\"./rowComp\");\nvar column_1 = require(\"../entities/column\");\nvar events_1 = require(\"../events\");\nvar constants_1 = require(\"../constants\");\nvar cellComp_1 = require(\"./cellComp\");\nvar context_1 = require(\"../context/context\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar logger_1 = require(\"../logger\");\nvar focusedCellController_1 = require(\"../focusedCellController\");\nvar cellNavigationService_1 = require(\"../cellNavigationService\");\nvar beanStub_1 = require(\"../context/beanStub\");\nvar paginationProxy_1 = require(\"../rowModels/paginationProxy\");\nvar gridApi_1 = require(\"../gridApi\");\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\nvar beans_1 = require(\"./beans\");\nvar animationFrameService_1 = require(\"../misc/animationFrameService\");\nvar maxDivHeightScaler_1 = require(\"./maxDivHeightScaler\");\nvar utils_1 = require(\"../utils\");\nvar RowRenderer = /** @class */ (function (_super) {\n    __extends(RowRenderer, _super);\n    function RowRenderer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.destroyFuncsForColumnListeners = [];\n        // map of row ids to row objects. keeps track of which elements\n        // are rendered for which rows in the dom.\n        _this.rowCompsByIndex = {};\n        _this.floatingTopRowComps = [];\n        _this.floatingBottomRowComps = [];\n        // we only allow one refresh at a time, otherwise the internal memory structure here\n        // will get messed up. this can happen if the user has a cellRenderer, and inside the\n        // renderer they call an API method that results in another pass of the refresh,\n        // then it will be trying to draw rows in the middle of a refresh.\n        _this.refreshInProgress = false;\n        return _this;\n    }\n    RowRenderer.prototype.registerGridCore = function (gridCore) {\n        this.gridCore = gridCore;\n    };\n    RowRenderer.prototype.getGridCore = function () {\n        return this.gridCore;\n    };\n    RowRenderer.prototype.agWire = function (loggerFactory) {\n        this.logger = loggerFactory.create(\"RowRenderer\");\n    };\n    RowRenderer.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n        this.rowContainers = this.gridPanel.getRowContainers();\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_PAGINATION_CHANGED, this.onPageLoaded.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_BODY_SCROLL, this.redrawAfterScroll.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_BODY_HEIGHT_CHANGED, this.redrawAfterScroll.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n        this.registerCellEventListeners();\n        this.printLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        this.embedFullWidthRows = this.printLayout || this.gridOptionsWrapper.isEmbedFullWidthRows();\n        this.redrawAfterModelUpdate();\n    };\n    // in a clean design, each cell would register for each of these events. however when scrolling, all the cells\n    // registering and de-registering for events is a performance bottleneck. so we register here once and inform\n    // all active cells.\n    RowRenderer.prototype.registerCellEventListeners = function () {\n        var _this = this;\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_CELL_FOCUSED, function (event) {\n            _this.forEachCellComp(function (cellComp) { return cellComp.onCellFocused(event); });\n        });\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_FLASH_CELLS, function (event) {\n            _this.forEachCellComp(function (cellComp) { return cellComp.onFlashCells(event); });\n        });\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_HOVER_CHANGED, function () {\n            _this.forEachCellComp(function (cellComp) { return cellComp.onColumnHover(); });\n        });\n        // only for printLayout - because we are rendering all the cells in the same row, regardless of pinned state,\n        // then changing the width of the containers will impact left position. eg the center cols all have their\n        // left position adjusted by the width of the left pinned column, so if the pinned left column width changes,\n        // all the center cols need to be shifted to accommodate this. when in normal layout, the pinned cols are\n        // in different containers so doesn't impact.\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, function () {\n            if (_this.printLayout) {\n                _this.forEachCellComp(function (cellComp) { return cellComp.onLeftChanged(); });\n            }\n        });\n        var rangeSelectionEnabled = this.gridOptionsWrapper.isEnableRangeSelection();\n        if (rangeSelectionEnabled) {\n            this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_RANGE_SELECTION_CHANGED, function () {\n                _this.forEachCellComp(function (cellComp) { return cellComp.onRangeSelectionChanged(); });\n            });\n            this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_MOVED, function () {\n                _this.forEachCellComp(function (cellComp) { return cellComp.updateRangeBordersIfRangeCount(); });\n            });\n            this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_PINNED, function () {\n                _this.forEachCellComp(function (cellComp) { return cellComp.updateRangeBordersIfRangeCount(); });\n            });\n            this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_VISIBLE, function () {\n                _this.forEachCellComp(function (cellComp) { return cellComp.updateRangeBordersIfRangeCount(); });\n            });\n        }\n        // add listeners to the grid columns\n        this.refreshListenersToColumnsForCellComps();\n        // if the grid columns change, then refresh the listeners again\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_GRID_COLUMNS_CHANGED, this.refreshListenersToColumnsForCellComps.bind(this));\n        this.addDestroyFunc(this.removeGridColumnListeners.bind(this));\n    };\n    // executes all functions in destroyFuncsForColumnListeners and then clears the list\n    RowRenderer.prototype.removeGridColumnListeners = function () {\n        this.destroyFuncsForColumnListeners.forEach(function (func) { return func(); });\n        this.destroyFuncsForColumnListeners.length = 0;\n    };\n    // this function adds listeners onto all the grid columns, which are the column that we could have cellComps for.\n    // when the grid columns change, we add listeners again. in an ideal design, each CellComp would just register to\n    // the column it belongs to on creation, however this was a bottleneck with the number of cells, so do it here\n    // once instead.\n    RowRenderer.prototype.refreshListenersToColumnsForCellComps = function () {\n        var _this = this;\n        this.removeGridColumnListeners();\n        var cols = this.columnController.getAllGridColumns();\n        if (!cols) {\n            return;\n        }\n        cols.forEach(function (col) {\n            var forEachCellWithThisCol = function (callback) {\n                _this.forEachCellComp(function (cellComp) {\n                    if (cellComp.getColumn() === col) {\n                        callback(cellComp);\n                    }\n                });\n            };\n            var leftChangedListener = function () {\n                forEachCellWithThisCol(function (cellComp) { return cellComp.onLeftChanged(); });\n            };\n            var widthChangedListener = function () {\n                forEachCellWithThisCol(function (cellComp) { return cellComp.onWidthChanged(); });\n            };\n            var firstRightPinnedChangedListener = function () {\n                forEachCellWithThisCol(function (cellComp) { return cellComp.onFirstRightPinnedChanged(); });\n            };\n            var lastLeftPinnedChangedListener = function () {\n                forEachCellWithThisCol(function (cellComp) { return cellComp.onLastLeftPinnedChanged(); });\n            };\n            col.addEventListener(column_1.Column.EVENT_LEFT_CHANGED, leftChangedListener);\n            col.addEventListener(column_1.Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n            col.addEventListener(column_1.Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, firstRightPinnedChangedListener);\n            col.addEventListener(column_1.Column.EVENT_LAST_LEFT_PINNED_CHANGED, lastLeftPinnedChangedListener);\n            _this.destroyFuncsForColumnListeners.push(function () {\n                col.removeEventListener(column_1.Column.EVENT_LEFT_CHANGED, leftChangedListener);\n                col.removeEventListener(column_1.Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n                col.removeEventListener(column_1.Column.EVENT_FIRST_RIGHT_PINNED_CHANGED, firstRightPinnedChangedListener);\n                col.removeEventListener(column_1.Column.EVENT_LAST_LEFT_PINNED_CHANGED, lastLeftPinnedChangedListener);\n            });\n        });\n    };\n    RowRenderer.prototype.onDomLayoutChanged = function () {\n        var printLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        var embedFullWidthRows = printLayout || this.gridOptionsWrapper.isEmbedFullWidthRows();\n        // if moving towards or away from print layout, means we need to destroy all rows, as rows are not laid\n        // out using absolute positioning when doing print layout\n        var destroyRows = embedFullWidthRows !== this.embedFullWidthRows || this.printLayout !== printLayout;\n        this.printLayout = printLayout;\n        this.embedFullWidthRows = embedFullWidthRows;\n        if (destroyRows) {\n            this.redrawAfterModelUpdate();\n        }\n    };\n    // for row models that have datasources, when we update the datasource, we need to force the rowRenderer\n    // to redraw all rows. otherwise the old rows from the old datasource will stay displayed.\n    RowRenderer.prototype.datasourceChanged = function () {\n        this.firstRenderedRow = 0;\n        this.lastRenderedRow = -1;\n        var rowIndexesToRemove = Object.keys(this.rowCompsByIndex);\n        this.removeRowComps(rowIndexesToRemove);\n    };\n    RowRenderer.prototype.onPageLoaded = function (refreshEvent) {\n        if (utils_1._.missing(refreshEvent)) {\n            refreshEvent = {\n                type: events_1.Events.EVENT_MODEL_UPDATED,\n                api: this.gridApi,\n                columnApi: this.columnApi,\n                animate: false,\n                keepRenderedRows: false,\n                newData: false,\n                newPage: false\n            };\n        }\n        this.onModelUpdated(refreshEvent);\n    };\n    RowRenderer.prototype.getAllCellsForColumn = function (column) {\n        var eCells = [];\n        utils_1._.iterateObject(this.rowCompsByIndex, callback);\n        utils_1._.iterateObject(this.floatingBottomRowComps, callback);\n        utils_1._.iterateObject(this.floatingTopRowComps, callback);\n        function callback(key, rowComp) {\n            var eCell = rowComp.getCellForCol(column);\n            if (eCell) {\n                eCells.push(eCell);\n            }\n        }\n        return eCells;\n    };\n    RowRenderer.prototype.refreshFloatingRowComps = function () {\n        this.refreshFloatingRows(this.floatingTopRowComps, this.pinnedRowModel.getPinnedTopRowData(), this.rowContainers.floatingTopPinnedLeft, this.rowContainers.floatingTopPinnedRight, this.rowContainers.floatingTop, this.rowContainers.floatingTopFullWidth);\n        this.refreshFloatingRows(this.floatingBottomRowComps, this.pinnedRowModel.getPinnedBottomRowData(), this.rowContainers.floatingBottomPinnedLeft, this.rowContainers.floatingBottomPinnedRight, this.rowContainers.floatingBottom, this.rowContainers.floatingBottomFullWith);\n    };\n    RowRenderer.prototype.refreshFloatingRows = function (rowComps, rowNodes, pinnedLeftContainerComp, pinnedRightContainerComp, bodyContainerComp, fullWidthContainerComp) {\n        var _this = this;\n        rowComps.forEach(function (row) {\n            row.destroy();\n        });\n        rowComps.length = 0;\n        if (rowNodes) {\n            rowNodes.forEach(function (node) {\n                var rowComp = new rowComp_1.RowComp(_this.$scope, bodyContainerComp, pinnedLeftContainerComp, pinnedRightContainerComp, fullWidthContainerComp, node, _this.beans, false, false, _this.printLayout, _this.embedFullWidthRows);\n                rowComp.init();\n                rowComps.push(rowComp);\n            });\n        }\n        this.flushContainers(rowComps);\n    };\n    RowRenderer.prototype.onPinnedRowDataChanged = function () {\n        // recycling rows in order to ensure cell editing is not cancelled\n        var params = {\n            recycleRows: true\n        };\n        this.redrawAfterModelUpdate(params);\n    };\n    RowRenderer.prototype.onModelUpdated = function (refreshEvent) {\n        var params = {\n            recycleRows: refreshEvent.keepRenderedRows,\n            animate: refreshEvent.animate,\n            newData: refreshEvent.newData,\n            newPage: refreshEvent.newPage,\n            // because this is a model updated event (not pinned rows), we\n            // can skip updating the pinned rows. this is needed so that if user\n            // is doing transaction updates, the pinned rows are not getting constantly\n            // trashed - or editing cells in pinned rows are not refreshed and put into read mode\n            onlyBody: true\n        };\n        this.redrawAfterModelUpdate(params);\n    };\n    // if the row nodes are not rendered, no index is returned\n    RowRenderer.prototype.getRenderedIndexesForRowNodes = function (rowNodes) {\n        var result = [];\n        if (utils_1._.missing(rowNodes)) {\n            return result;\n        }\n        utils_1._.iterateObject(this.rowCompsByIndex, function (index, renderedRow) {\n            var rowNode = renderedRow.getRowNode();\n            if (rowNodes.indexOf(rowNode) >= 0) {\n                result.push(index);\n            }\n        });\n        return result;\n    };\n    RowRenderer.prototype.redrawRows = function (rowNodes) {\n        if (!rowNodes || rowNodes.length == 0) {\n            return;\n        }\n        // we only need to be worried about rendered rows, as this method is\n        // called to what's rendered. if the row isn't rendered, we don't care\n        var indexesToRemove = this.getRenderedIndexesForRowNodes(rowNodes);\n        // remove the rows\n        this.removeRowComps(indexesToRemove);\n        // add draw them again\n        this.redrawAfterModelUpdate({\n            recycleRows: true\n        });\n    };\n    RowRenderer.prototype.getCellToRestoreFocusToAfterRefresh = function (params) {\n        var focusedCell = params.suppressKeepFocus ? null : this.focusedCellController.getFocusCellToUseAfterRefresh();\n        if (utils_1._.missing(focusedCell)) {\n            return null;\n        }\n        // if the dom is not actually focused on a cell, then we don't try to refocus. the problem this\n        // solves is with editing - if the user is editing, eg focus is on a text field, and not on the\n        // cell itself, then the cell can be registered as having focus, however it's the text field that\n        // has the focus and not the cell div. therefore, when the refresh is finished, the grid will focus\n        // the cell, and not the textfield. that means if the user is in a text field, and the grid refreshes,\n        // the focus is lost from the text field. we do not want this.\n        var activeElement = document.activeElement;\n        var domData = this.gridOptionsWrapper.getDomData(activeElement, cellComp_1.CellComp.DOM_DATA_KEY_CELL_COMP);\n        var elementIsNotACellDev = utils_1._.missing(domData);\n        if (elementIsNotACellDev) {\n            return null;\n        }\n        return focusedCell;\n    };\n    // gets called after changes to the model.\n    RowRenderer.prototype.redrawAfterModelUpdate = function (params) {\n        if (params === void 0) { params = {}; }\n        this.getLockOnRefresh();\n        var focusedCell = this.getCellToRestoreFocusToAfterRefresh(params);\n        this.sizeContainerToPageHeight();\n        this.scrollToTopIfNewData(params);\n        // never recycle rows when print layout, we draw each row again from scratch. this is because print layout\n        // uses normal dom layout to put cells into dom - it doesn't allow reordering rows.\n        var recycleRows = !this.printLayout && params.recycleRows;\n        var animate = params.animate && this.gridOptionsWrapper.isAnimateRows();\n        var rowsToRecycle = this.binRowComps(recycleRows);\n        this.redraw(rowsToRecycle, animate);\n        if (!params.onlyBody) {\n            this.refreshFloatingRowComps();\n        }\n        this.restoreFocusedCell(focusedCell);\n        this.releaseLockOnRefresh();\n    };\n    RowRenderer.prototype.scrollToTopIfNewData = function (params) {\n        var scrollToTop = params.newData || params.newPage;\n        var suppressScrollToTop = this.gridOptionsWrapper.isSuppressScrollOnNewData();\n        if (scrollToTop && !suppressScrollToTop) {\n            this.gridPanel.scrollToTop();\n        }\n    };\n    RowRenderer.prototype.sizeContainerToPageHeight = function () {\n        var containers = [\n            this.rowContainers.body,\n            this.rowContainers.fullWidth,\n            this.rowContainers.pinnedLeft,\n            this.rowContainers.pinnedRight\n        ];\n        if (this.printLayout) {\n            containers.forEach(function (container) { return container.setHeight(null); });\n            return;\n        }\n        var containerHeight = this.paginationProxy.getCurrentPageHeight();\n        // we need at least 1 pixel for the horizontal scroll to work. so if there are now rows,\n        // we still want the scroll to be present, otherwise there would be no way to scroll the header\n        // which might be needed us user wants to access columns\n        // on the RHS - and if that was where the filter was that cause no rows to be presented, there\n        // is no way to remove the filter.\n        if (containerHeight === 0) {\n            containerHeight = 1;\n        }\n        this.maxDivHeightScaler.setModelHeight(containerHeight);\n        var realHeight = this.maxDivHeightScaler.getUiContainerHeight();\n        containers.forEach(function (container) { return container.setHeight(realHeight); });\n    };\n    RowRenderer.prototype.getLockOnRefresh = function () {\n        if (this.refreshInProgress) {\n            throw new Error(\"ag-Grid: cannot get grid to draw rows when it is in the middle of drawing rows. \" +\n                \"Your code probably called a grid API method while the grid was in the render stage. To overcome \" +\n                \"this, put the API call into a timeout, eg instead of api.refreshView(), \" +\n                \"call setTimeout(function(){api.refreshView(),0}). To see what part of your code \" +\n                \"that caused the refresh check this stacktrace.\");\n        }\n        this.refreshInProgress = true;\n    };\n    RowRenderer.prototype.releaseLockOnRefresh = function () {\n        this.refreshInProgress = false;\n    };\n    // sets the focus to the provided cell, if the cell is provided. this way, the user can call refresh without\n    // worry about the focus been lost. this is important when the user is using keyboard navigation to do edits\n    // and the cellEditor is calling 'refresh' to get other cells to update (as other cells might depend on the\n    // edited cell).\n    RowRenderer.prototype.restoreFocusedCell = function (cellPosition) {\n        if (cellPosition) {\n            this.focusedCellController.setFocusedCell(cellPosition.rowIndex, cellPosition.column, cellPosition.rowPinned, true);\n        }\n    };\n    RowRenderer.prototype.stopEditing = function (cancel) {\n        if (cancel === void 0) { cancel = false; }\n        this.forEachRowComp(function (key, rowComp) {\n            rowComp.stopEditing(cancel);\n        });\n    };\n    RowRenderer.prototype.forEachCellComp = function (callback) {\n        this.forEachRowComp(function (key, rowComp) { return rowComp.forEachCellComp(callback); });\n    };\n    RowRenderer.prototype.forEachRowComp = function (callback) {\n        utils_1._.iterateObject(this.rowCompsByIndex, callback);\n        utils_1._.iterateObject(this.floatingTopRowComps, callback);\n        utils_1._.iterateObject(this.floatingBottomRowComps, callback);\n    };\n    RowRenderer.prototype.addRenderedRowListener = function (eventName, rowIndex, callback) {\n        var rowComp = this.rowCompsByIndex[rowIndex];\n        if (rowComp) {\n            rowComp.addEventListener(eventName, callback);\n        }\n    };\n    RowRenderer.prototype.flashCells = function (params) {\n        if (params === void 0) { params = {}; }\n        this.forEachCellCompFiltered(params.rowNodes, params.columns, function (cellComp) { return cellComp.flashCell(); });\n    };\n    RowRenderer.prototype.refreshCells = function (params) {\n        if (params === void 0) { params = {}; }\n        var refreshCellParams = {\n            forceRefresh: params.force,\n            newData: false\n        };\n        this.forEachCellCompFiltered(params.rowNodes, params.columns, function (cellComp) { return cellComp.refreshCell(refreshCellParams); });\n    };\n    RowRenderer.prototype.getCellRendererInstances = function (params) {\n        var res = [];\n        this.forEachCellCompFiltered(params.rowNodes, params.columns, function (cellComp) {\n            var cellRenderer = cellComp.getCellRenderer();\n            if (cellRenderer) {\n                res.push(cellRenderer);\n            }\n        });\n        return res;\n    };\n    RowRenderer.prototype.getCellEditorInstances = function (params) {\n        var res = [];\n        this.forEachCellCompFiltered(params.rowNodes, params.columns, function (cellComp) {\n            var cellEditor = cellComp.getCellEditor();\n            if (cellEditor) {\n                res.push(cellEditor);\n            }\n        });\n        return res;\n    };\n    RowRenderer.prototype.getEditingCells = function () {\n        var res = [];\n        this.forEachCellComp(function (cellComp) {\n            if (cellComp.isEditing()) {\n                var cellPosition = cellComp.getCellPosition();\n                res.push(cellPosition);\n            }\n        });\n        return res;\n    };\n    // calls the callback for each cellComp that match the provided rowNodes and columns. eg if one row node\n    // and two columns provided, that identifies 4 cells, so callback gets called 4 times, once for each cell.\n    RowRenderer.prototype.forEachCellCompFiltered = function (rowNodes, columns, callback) {\n        var _this = this;\n        var rowIdsMap;\n        if (utils_1._.exists(rowNodes)) {\n            rowIdsMap = {\n                top: {},\n                bottom: {},\n                normal: {}\n            };\n            rowNodes.forEach(function (rowNode) {\n                if (rowNode.rowPinned === constants_1.Constants.PINNED_TOP) {\n                    rowIdsMap.top[rowNode.id] = true;\n                }\n                else if (rowNode.rowPinned === constants_1.Constants.PINNED_BOTTOM) {\n                    rowIdsMap.bottom[rowNode.id] = true;\n                }\n                else {\n                    rowIdsMap.normal[rowNode.id] = true;\n                }\n            });\n        }\n        var colIdsMap;\n        if (utils_1._.exists(columns)) {\n            colIdsMap = {};\n            columns.forEach(function (colKey) {\n                var column = _this.columnController.getGridColumn(colKey);\n                if (utils_1._.exists(column)) {\n                    colIdsMap[column.getId()] = true;\n                }\n            });\n        }\n        var processRow = function (rowComp) {\n            var rowNode = rowComp.getRowNode();\n            var id = rowNode.id;\n            var floating = rowNode.rowPinned;\n            // skip this row if it is missing from the provided list\n            if (utils_1._.exists(rowIdsMap)) {\n                if (floating === constants_1.Constants.PINNED_BOTTOM) {\n                    if (!rowIdsMap.bottom[id]) {\n                        return;\n                    }\n                }\n                else if (floating === constants_1.Constants.PINNED_TOP) {\n                    if (!rowIdsMap.top[id]) {\n                        return;\n                    }\n                }\n                else {\n                    if (!rowIdsMap.normal[id]) {\n                        return;\n                    }\n                }\n            }\n            rowComp.forEachCellComp(function (cellComp) {\n                var colId = cellComp.getColumn().getId();\n                var excludeColFromRefresh = colIdsMap && !colIdsMap[colId];\n                if (excludeColFromRefresh) {\n                    return;\n                }\n                callback(cellComp);\n            });\n        };\n        utils_1._.iterateObject(this.rowCompsByIndex, function (index, rowComp) {\n            processRow(rowComp);\n        });\n        if (this.floatingTopRowComps) {\n            this.floatingTopRowComps.forEach(processRow);\n        }\n        if (this.floatingBottomRowComps) {\n            this.floatingBottomRowComps.forEach(processRow);\n        }\n    };\n    RowRenderer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        var rowIndexesToRemove = Object.keys(this.rowCompsByIndex);\n        this.removeRowComps(rowIndexesToRemove);\n    };\n    RowRenderer.prototype.binRowComps = function (recycleRows) {\n        var _this = this;\n        var indexesToRemove;\n        var rowsToRecycle = {};\n        if (recycleRows) {\n            indexesToRemove = [];\n            utils_1._.iterateObject(this.rowCompsByIndex, function (index, rowComp) {\n                var rowNode = rowComp.getRowNode();\n                if (utils_1._.exists(rowNode.id)) {\n                    rowsToRecycle[rowNode.id] = rowComp;\n                    delete _this.rowCompsByIndex[index];\n                }\n                else {\n                    indexesToRemove.push(index);\n                }\n            });\n        }\n        else {\n            indexesToRemove = Object.keys(this.rowCompsByIndex);\n        }\n        this.removeRowComps(indexesToRemove);\n        return rowsToRecycle;\n    };\n    // takes array of row indexes\n    RowRenderer.prototype.removeRowComps = function (rowsToRemove) {\n        var _this = this;\n        // if no fromIndex then set to -1, which will refresh everything\n        // let realFromIndex = -1;\n        rowsToRemove.forEach(function (indexToRemove) {\n            var renderedRow = _this.rowCompsByIndex[indexToRemove];\n            renderedRow.destroy();\n            delete _this.rowCompsByIndex[indexToRemove];\n        });\n    };\n    // gets called when rows don't change, but viewport does, so after:\n    // 1) height of grid body changes, ie number of displayed rows has changed\n    // 2) grid scrolled to new position\n    // 3) ensure index visible (which is a scroll)\n    RowRenderer.prototype.redrawAfterScroll = function () {\n        this.getLockOnRefresh();\n        this.redraw(null, false, true);\n        this.releaseLockOnRefresh();\n    };\n    RowRenderer.prototype.removeRowCompsNotToDraw = function (indexesToDraw) {\n        // for speedy lookup, dump into map\n        var indexesToDrawMap = {};\n        indexesToDraw.forEach(function (index) { return (indexesToDrawMap[index] = true); });\n        var existingIndexes = Object.keys(this.rowCompsByIndex);\n        var indexesNotToDraw = utils_1._.filter(existingIndexes, function (index) { return !indexesToDrawMap[index]; });\n        this.removeRowComps(indexesNotToDraw);\n    };\n    RowRenderer.prototype.calculateIndexesToDraw = function () {\n        var _this = this;\n        // all in all indexes in the viewport\n        var indexesToDraw = utils_1._.createArrayOfNumbers(this.firstRenderedRow, this.lastRenderedRow);\n        // add in indexes of rows we want to keep, because they are currently editing\n        utils_1._.iterateObject(this.rowCompsByIndex, function (indexStr, rowComp) {\n            var index = Number(indexStr);\n            if (index < _this.firstRenderedRow || index > _this.lastRenderedRow) {\n                if (_this.keepRowBecauseEditingOrFocused(rowComp)) {\n                    indexesToDraw.push(index);\n                }\n            }\n        });\n        indexesToDraw.sort(function (a, b) { return a - b; });\n        return indexesToDraw;\n    };\n    RowRenderer.prototype.redraw = function (rowsToRecycle, animate, afterScroll) {\n        var _this = this;\n        if (animate === void 0) { animate = false; }\n        if (afterScroll === void 0) { afterScroll = false; }\n        this.maxDivHeightScaler.updateOffset();\n        this.workOutFirstAndLastRowsToRender();\n        // the row can already exist and be in the following:\n        // rowsToRecycle -> if model change, then the index may be different, however row may\n        //                         exist here from previous time (mapped by id).\n        // this.rowCompsByIndex -> if just a scroll, then this will contain what is currently in the viewport\n        // this is all the indexes we want, including those that already exist, so this method\n        // will end up going through each index and drawing only if the row doesn't already exist\n        var indexesToDraw = this.calculateIndexesToDraw();\n        this.removeRowCompsNotToDraw(indexesToDraw);\n        // never animate when doing print layout - as we want to get things ready to print as quickly as possible,\n        // otherwise we risk the printer printing a row that's half faded (half way through fading in)\n        if (this.printLayout) {\n            animate = false;\n        }\n        // add in new rows\n        var nextVmTurnFunctions = [];\n        var rowComps = [];\n        indexesToDraw.forEach(function (rowIndex) {\n            var rowComp = _this.createOrUpdateRowComp(rowIndex, rowsToRecycle, animate, afterScroll);\n            if (utils_1._.exists(rowComp)) {\n                rowComps.push(rowComp);\n                utils_1._.pushAll(nextVmTurnFunctions, rowComp.getAndClearNextVMTurnFunctions());\n            }\n        });\n        this.flushContainers(rowComps);\n        utils_1._.executeNextVMTurn(nextVmTurnFunctions);\n        var useAnimationFrame = afterScroll && !this.gridOptionsWrapper.isSuppressAnimationFrame() && !this.printLayout;\n        if (useAnimationFrame) {\n            this.beans.taskQueue.addP2Task(this.destroyRowComps.bind(this, rowsToRecycle, animate));\n        }\n        else {\n            this.destroyRowComps(rowsToRecycle, animate);\n        }\n        this.checkAngularCompile();\n    };\n    RowRenderer.prototype.flushContainers = function (rowComps) {\n        utils_1._.iterateObject(this.rowContainers, function (key, rowContainerComp) {\n            if (rowContainerComp) {\n                rowContainerComp.flushRowTemplates();\n            }\n        });\n        rowComps.forEach(function (rowComp) { return rowComp.afterFlush(); });\n    };\n    RowRenderer.prototype.onDisplayedColumnsChanged = function () {\n        var pinningLeft = this.columnController.isPinningLeft();\n        var pinningRight = this.columnController.isPinningRight();\n        var atLeastOneChanged = this.pinningLeft !== pinningLeft || pinningRight !== this.pinningRight;\n        if (atLeastOneChanged) {\n            this.pinningLeft = pinningLeft;\n            this.pinningRight = pinningRight;\n            if (this.embedFullWidthRows) {\n                this.redrawFullWidthEmbeddedRows();\n            }\n        }\n    };\n    // when embedding, what gets showed in each section depends on what is pinned. eg if embedding group expand / collapse,\n    // then it should go into the pinned left area if pinning left, or the center area if not pinning.\n    RowRenderer.prototype.redrawFullWidthEmbeddedRows = function () {\n        // if either of the pinned panels has shown / hidden, then need to redraw the fullWidth bits when\n        // embedded, as what appears in each section depends on whether we are pinned or not\n        var rowsToRemove = [];\n        utils_1._.iterateObject(this.rowCompsByIndex, function (id, rowComp) {\n            if (rowComp.isFullWidth()) {\n                var rowIndex = rowComp.getRowNode().rowIndex;\n                rowsToRemove.push(rowIndex.toString());\n            }\n        });\n        this.refreshFloatingRowComps();\n        this.removeRowComps(rowsToRemove);\n        this.redrawAfterScroll();\n    };\n    RowRenderer.prototype.refreshFullWidthRows = function () {\n        var rowsToRemove = [];\n        utils_1._.iterateObject(this.rowCompsByIndex, function (id, rowComp) {\n            if (rowComp.isFullWidth()) {\n                var fullWidthRowsRefreshed = rowComp.refreshFullWidth();\n                if (!fullWidthRowsRefreshed) {\n                    var rowIndex = rowComp.getRowNode().rowIndex;\n                    rowsToRemove.push(rowIndex.toString());\n                }\n            }\n        });\n        this.removeRowComps(rowsToRemove);\n        this.redrawAfterScroll();\n    };\n    RowRenderer.prototype.createOrUpdateRowComp = function (rowIndex, rowsToRecycle, animate, afterScroll) {\n        var rowNode;\n        var rowComp = this.rowCompsByIndex[rowIndex];\n        // if no row comp, see if we can get it from the previous rowComps\n        if (!rowComp) {\n            rowNode = this.paginationProxy.getRow(rowIndex);\n            if (utils_1._.exists(rowNode) && utils_1._.exists(rowsToRecycle) && rowsToRecycle[rowNode.id] && rowNode.alreadyRendered) {\n                rowComp = rowsToRecycle[rowNode.id];\n                rowsToRecycle[rowNode.id] = null;\n            }\n        }\n        var creatingNewRowComp = !rowComp;\n        if (creatingNewRowComp) {\n            // create a new one\n            if (!rowNode) {\n                rowNode = this.paginationProxy.getRow(rowIndex);\n            }\n            if (utils_1._.exists(rowNode)) {\n                rowComp = this.createRowComp(rowNode, animate, afterScroll);\n            }\n            else {\n                // this should never happen - if somehow we are trying to create\n                // a row for a rowNode that does not exist.\n                return;\n            }\n        }\n        else {\n            // ensure row comp is in right position in DOM\n            rowComp.ensureDomOrder();\n        }\n        if (rowNode) {\n            // set node as 'alreadyRendered' to ensure we only recycle rowComps that have been rendered, this ensures\n            // we don't reuse rowComps that have been removed and then re-added in the same batch transaction.\n            rowNode.alreadyRendered = true;\n        }\n        this.rowCompsByIndex[rowIndex] = rowComp;\n        return rowComp;\n    };\n    RowRenderer.prototype.destroyRowComps = function (rowCompsMap, animate) {\n        var delayedFuncs = [];\n        utils_1._.iterateObject(rowCompsMap, function (nodeId, rowComp) {\n            // if row was used, then it's null\n            if (!rowComp) {\n                return;\n            }\n            rowComp.destroy(animate);\n            utils_1._.pushAll(delayedFuncs, rowComp.getAndClearDelayedDestroyFunctions());\n        });\n        utils_1._.executeInAWhile(delayedFuncs);\n    };\n    RowRenderer.prototype.checkAngularCompile = function () {\n        var _this = this;\n        // if we are doing angular compiling, then do digest the scope here\n        if (this.gridOptionsWrapper.isAngularCompileRows()) {\n            // we do it in a timeout, in case we are already in an apply\n            window.setTimeout(function () {\n                _this.$scope.$apply();\n            }, 0);\n        }\n    };\n    RowRenderer.prototype.workOutFirstAndLastRowsToRender = function () {\n        var newFirst;\n        var newLast;\n        if (!this.paginationProxy.isRowsToRender()) {\n            newFirst = 0;\n            newLast = -1; // setting to -1 means nothing in range\n        }\n        else if (this.printLayout) {\n            newFirst = this.paginationProxy.getPageFirstRow();\n            newLast = this.paginationProxy.getPageLastRow();\n        }\n        else {\n            var paginationOffset = this.paginationProxy ? this.paginationProxy.getPixelOffset() : 0;\n            var maxDivHeightScaler = this.maxDivHeightScaler.getOffset();\n            var bodyVRange = this.gridPanel.getVScrollPosition();\n            var bodyTopPixel = bodyVRange.top;\n            var bodyBottomPixel = bodyVRange.bottom;\n            var bufferPixels = this.gridOptionsWrapper.getRowBufferInPixels();\n            var firstPixel = bodyTopPixel + paginationOffset + maxDivHeightScaler - bufferPixels;\n            var lastPixel = bodyBottomPixel + paginationOffset + maxDivHeightScaler + bufferPixels;\n            this.ensureAllRowsInRangeHaveHeightsCalculated(firstPixel, lastPixel);\n            var firstRowIndex = this.paginationProxy.getRowIndexAtPixel(firstPixel);\n            var lastRowIndex = this.paginationProxy.getRowIndexAtPixel(lastPixel);\n            var pageFirstRow = this.paginationProxy.getPageFirstRow();\n            var pageLastRow = this.paginationProxy.getPageLastRow();\n            // adjust, in case buffer extended actual size\n            if (firstRowIndex < pageFirstRow) {\n                firstRowIndex = pageFirstRow;\n            }\n            if (lastRowIndex > pageLastRow) {\n                lastRowIndex = pageLastRow;\n            }\n            newFirst = firstRowIndex;\n            newLast = lastRowIndex;\n        }\n        // sometimes user doesn't set CSS right and ends up with grid with no height and grid ends up\n        // trying to render all the rows, eg 10,000+ rows. this will kill the browser. so instead of\n        // killing the browser, we limit the number of rows. just in case some use case we didn't think\n        // of, we also have a property to not do this operation.\n        var rowLayoutNormal = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_NORMAL;\n        var suppressRowCountRestriction = this.gridOptionsWrapper.isSuppressMaxRenderedRowRestriction();\n        var rowBufferMaxSize = Math.max(this.gridOptionsWrapper.getRowBuffer(), 500);\n        if (rowLayoutNormal && !suppressRowCountRestriction) {\n            if (newLast - newFirst > rowBufferMaxSize) {\n                newLast = newFirst + rowBufferMaxSize;\n            }\n        }\n        var firstDiffers = newFirst !== this.firstRenderedRow;\n        var lastDiffers = newLast !== this.lastRenderedRow;\n        if (firstDiffers || lastDiffers) {\n            this.firstRenderedRow = newFirst;\n            this.lastRenderedRow = newLast;\n            var event_1 = {\n                type: events_1.Events.EVENT_VIEWPORT_CHANGED,\n                firstRow: newFirst,\n                lastRow: newLast,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n        if (this.paginationProxy.isRowsToRender()) {\n            var event_2 = {\n                type: events_1.Events.EVENT_FIRST_DATA_RENDERED,\n                firstRow: newFirst,\n                lastRow: newLast,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEventOnce(event_2);\n        }\n    };\n    RowRenderer.prototype.ensureAllRowsInRangeHaveHeightsCalculated = function (topPixel, bottomPixel) {\n        // ensureRowHeightsVisible only works with CSRM, as it's the only row model that allows lazy row height calcs.\n        // all the other row models just hard code so the method just returns back false\n        var rowHeightsChanged = this.paginationProxy.ensureRowHeightsValid(topPixel, bottomPixel, -1, -1);\n        if (rowHeightsChanged) {\n            // if row heights have changed, we need to resize the containers the rows sit it\n            this.sizeContainerToPageHeight();\n            // we also need to update heightScaler as this has dependency of row container height\n            this.maxDivHeightScaler.updateOffset();\n        }\n    };\n    RowRenderer.prototype.getFirstVirtualRenderedRow = function () {\n        return this.firstRenderedRow;\n    };\n    RowRenderer.prototype.getLastVirtualRenderedRow = function () {\n        return this.lastRenderedRow;\n    };\n    // check that none of the rows to remove are editing or focused as:\n    // a) if editing, we want to keep them, otherwise the user will loose the context of the edit,\n    //    eg user starts editing, enters some text, then scrolls down and then up, next time row rendered\n    //    the edit is reset - so we want to keep it rendered.\n    // b) if focused, we want ot keep keyboard focus, so if user ctrl+c, it goes to clipboard,\n    //    otherwise the user can range select and drag (with focus cell going out of the viewport)\n    //    and then ctrl+c, nothing will happen if cell is removed from dom.\n    RowRenderer.prototype.keepRowBecauseEditingOrFocused = function (rowComp) {\n        var REMOVE_ROW = false;\n        var KEEP_ROW = true;\n        var rowNode = rowComp.getRowNode();\n        var rowHasFocus = this.focusedCellController.isRowNodeFocused(rowNode);\n        var rowIsEditing = rowComp.isEditing();\n        var mightWantToKeepRow = rowHasFocus || rowIsEditing;\n        // if we deffo don't want to keep it,\n        if (!mightWantToKeepRow) {\n            return REMOVE_ROW;\n        }\n        // editing row, only remove if it is no longer rendered, eg filtered out or new data set.\n        // the reason we want to keep is if user is scrolling up and down, we don't want to loose\n        // the context of the editing in process.\n        var rowNodePresent = this.paginationProxy.isRowPresent(rowNode);\n        return rowNodePresent ? KEEP_ROW : REMOVE_ROW;\n    };\n    RowRenderer.prototype.createRowComp = function (rowNode, animate, afterScroll) {\n        var suppressAnimationFrame = this.gridOptionsWrapper.isSuppressAnimationFrame();\n        // we don't use animations frames for printing, so the user can put the grid into print mode\n        // and immediately print - otherwise the user would have to wait for the rows to draw in the background\n        // (via the animation frames) which is awkward to do from code.\n        // we only do the animation frames after scrolling, as this is where we want the smooth user experience.\n        // having animation frames for other times makes the grid look 'jumpy'.\n        var useAnimationFrameForCreate = afterScroll && !suppressAnimationFrame && !this.printLayout;\n        var rowComp = new rowComp_1.RowComp(this.$scope, this.rowContainers.body, this.rowContainers.pinnedLeft, this.rowContainers.pinnedRight, this.rowContainers.fullWidth, rowNode, this.beans, animate, useAnimationFrameForCreate, this.printLayout, this.embedFullWidthRows);\n        rowComp.init();\n        return rowComp;\n    };\n    RowRenderer.prototype.getRenderedNodes = function () {\n        var renderedRows = this.rowCompsByIndex;\n        return Object.keys(renderedRows).map(function (key) {\n            return renderedRows[key].getRowNode();\n        });\n    };\n    // we use index for rows, but column object for columns, as the next column (by index) might not\n    // be visible (header grouping) so it's not reliable, so using the column object instead.\n    RowRenderer.prototype.navigateToNextCell = function (event, key, currentCell, allowUserOverride) {\n        // we keep searching for a next cell until we find one. this is how the group rows get skipped\n        var nextCell = currentCell;\n        var finished = false;\n        while (!finished) {\n            // if the current cell is spanning across multiple columns, we need to move\n            // our current position to be the last cell on the right before finding the\n            // the next target.\n            if (key === constants_1.Constants.KEY_RIGHT) {\n                nextCell = this.getLastCellOfColSpan(nextCell);\n            }\n            nextCell = this.cellNavigationService.getNextCellToFocus(key, nextCell);\n            if (utils_1._.missing(nextCell)) {\n                // pointer points to nothing, we have hit a border of the grid\n                finished = true;\n            }\n            else {\n                var rowNode = this.paginationProxy.getRow(nextCell.rowIndex);\n                if (rowNode.group) {\n                    // full width rows cannot be focused, so if it's a group and using full width rows,\n                    // we need to skip over the row\n                    var pivotMode = this.columnController.isPivotMode();\n                    var usingFullWidthRows = this.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n                    if (usingFullWidthRows) {\n                        finished = !rowNode.group;\n                    }\n                    else {\n                        finished = true;\n                    }\n                }\n                else {\n                    finished = true;\n                }\n            }\n        }\n        // allow user to override what cell to go to next. when doing normal cell navigation (with keys)\n        // we allow this, however if processing 'enter after edit' we don't allow override\n        if (allowUserOverride) {\n            var userFunc = this.gridOptionsWrapper.getNavigateToNextCellFunc();\n            if (utils_1._.exists(userFunc)) {\n                var params = {\n                    key: key,\n                    previousCellPosition: currentCell,\n                    nextCellPosition: nextCell ? nextCell : null,\n                    event: event\n                };\n                var userCell = userFunc(params);\n                if (utils_1._.exists(userCell)) {\n                    if (userCell.floating) {\n                        utils_1._.doOnce(function () { console.warn(\"ag-Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?\"); }, 'no floating in userCell');\n                        userCell.rowPinned = userCell.floating;\n                    }\n                    nextCell = {\n                        rowPinned: userCell.rowPinned,\n                        rowIndex: userCell.rowIndex,\n                        column: userCell.column\n                    };\n                }\n                else {\n                    nextCell = null;\n                }\n            }\n        }\n        // no next cell means we have reached a grid boundary, eg left, right, top or bottom of grid\n        if (!nextCell) {\n            return;\n        }\n        // in case we have col spanning we get the cellComp and use it to\n        // get the position. This was we always focus the first cell inside\n        // the spanning.\n        this.ensureCellVisible(nextCell); // ensureCellVisible first, to make sure nextCell is rendered\n        var cellComp = this.getComponentForCell(nextCell);\n        nextCell = cellComp.getCellPosition();\n        // we call this again, as nextCell can be different to it's previous value due to Column Spanning\n        // (ie if cursor moving from right to left, and cell is spanning columns, then nextCell was the\n        // last column in the group, however now it's the first column in the group). if we didn't do\n        // ensureCellVisible again, then we could only be showing the last portion (last column) of the\n        // merged cells.\n        this.ensureCellVisible(nextCell);\n        this.focusedCellController.setFocusedCell(nextCell.rowIndex, nextCell.column, nextCell.rowPinned, true);\n        if (this.rangeController) {\n            this.rangeController.setRangeToCell(nextCell);\n        }\n    };\n    RowRenderer.prototype.getLastCellOfColSpan = function (cell) {\n        var cellComp = this.getComponentForCell(cell);\n        var colSpanningList = cellComp.getColSpanningList();\n        if (colSpanningList.length === 1) {\n            return cell;\n        }\n        return {\n            rowIndex: cell.rowIndex,\n            column: utils_1._.last(colSpanningList),\n            rowPinned: cell.rowPinned\n        };\n    };\n    RowRenderer.prototype.ensureCellVisible = function (gridCell) {\n        // this scrolls the row into view\n        if (utils_1._.missing(gridCell.rowPinned)) {\n            this.gridPanel.ensureIndexVisible(gridCell.rowIndex);\n        }\n        if (!gridCell.column.isPinned()) {\n            this.gridPanel.ensureColumnVisible(gridCell.column);\n        }\n        // need to nudge the scrolls for the floating items. otherwise when we set focus on a non-visible\n        // floating cell, the scrolls get out of sync\n        this.gridPanel.horizontallyScrollHeaderCenterAndFloatingCenter();\n        // need to flush frames, to make sure the correct cells are rendered\n        this.animationFrameService.flushAllFrames();\n    };\n    RowRenderer.prototype.startEditingCell = function (gridCell, keyPress, charPress) {\n        var cell = this.getComponentForCell(gridCell);\n        if (cell) {\n            cell.startRowOrCellEdit(keyPress, charPress);\n        }\n    };\n    RowRenderer.prototype.getComponentForCell = function (cellPosition) {\n        var rowComponent;\n        switch (cellPosition.rowPinned) {\n            case constants_1.Constants.PINNED_TOP:\n                rowComponent = this.floatingTopRowComps[cellPosition.rowIndex];\n                break;\n            case constants_1.Constants.PINNED_BOTTOM:\n                rowComponent = this.floatingBottomRowComps[cellPosition.rowIndex];\n                break;\n            default:\n                rowComponent = this.rowCompsByIndex[cellPosition.rowIndex];\n                break;\n        }\n        if (!rowComponent) {\n            return null;\n        }\n        var cellComponent = rowComponent.getRenderedCellForColumn(cellPosition.column);\n        return cellComponent;\n    };\n    RowRenderer.prototype.getRowNode = function (gridRow) {\n        switch (gridRow.rowPinned) {\n            case constants_1.Constants.PINNED_TOP:\n                return this.pinnedRowModel.getPinnedTopRowData()[gridRow.rowIndex];\n            case constants_1.Constants.PINNED_BOTTOM:\n                return this.pinnedRowModel.getPinnedBottomRowData()[gridRow.rowIndex];\n            default:\n                return this.rowModel.getRow(gridRow.rowIndex);\n        }\n    };\n    RowRenderer.prototype.onTabKeyDown = function (previousRenderedCell, keyboardEvent) {\n        var backwards = keyboardEvent.shiftKey;\n        var success = this.moveToCellAfter(previousRenderedCell, backwards);\n        if (success) {\n            keyboardEvent.preventDefault();\n        }\n    };\n    RowRenderer.prototype.tabToNextCell = function (backwards) {\n        var focusedCell = this.focusedCellController.getFocusedCell();\n        // if no focus, then cannot navigate\n        if (utils_1._.missing(focusedCell)) {\n            return false;\n        }\n        var renderedCell = this.getComponentForCell(focusedCell);\n        // if cell is not rendered, means user has scrolled away from the cell\n        if (utils_1._.missing(renderedCell)) {\n            return false;\n        }\n        var result = this.moveToCellAfter(renderedCell, backwards);\n        return result;\n    };\n    RowRenderer.prototype.moveToCellAfter = function (previousRenderedCell, backwards) {\n        var editing = previousRenderedCell.isEditing();\n        var res;\n        if (editing) {\n            if (this.gridOptionsWrapper.isFullRowEdit()) {\n                res = this.moveToNextEditingRow(previousRenderedCell, backwards);\n            }\n            else {\n                res = this.moveToNextEditingCell(previousRenderedCell, backwards);\n            }\n        }\n        else {\n            res = this.moveToNextCellNotEditing(previousRenderedCell, backwards);\n        }\n        return res;\n    };\n    RowRenderer.prototype.moveToNextEditingCell = function (previousRenderedCell, backwards) {\n        var gridCell = previousRenderedCell.getCellPosition();\n        // need to do this before getting next cell to edit, in case the next cell\n        // has editable function (eg colDef.editable=func() ) and it depends on the\n        // result of this cell, so need to save updates from the first edit, in case\n        // the value is referenced in the function.\n        previousRenderedCell.stopEditing();\n        // find the next cell to start editing\n        var nextRenderedCell = this.findNextCellToFocusOn(gridCell, backwards, true);\n        var foundCell = utils_1._.exists(nextRenderedCell);\n        // only prevent default if we found a cell. so if user is on last cell and hits tab, then we default\n        // to the normal tabbing so user can exit the grid.\n        if (foundCell) {\n            nextRenderedCell.startEditingIfEnabled(null, null, true);\n            nextRenderedCell.focusCell(false);\n        }\n        return foundCell;\n    };\n    RowRenderer.prototype.moveToNextEditingRow = function (previousRenderedCell, backwards) {\n        var gridCell = previousRenderedCell.getCellPosition();\n        // find the next cell to start editing\n        var nextRenderedCell = this.findNextCellToFocusOn(gridCell, backwards, true);\n        var foundCell = utils_1._.exists(nextRenderedCell);\n        // only prevent default if we found a cell. so if user is on last cell and hits tab, then we default\n        // to the normal tabbing so user can exit the grid.\n        if (foundCell) {\n            this.moveEditToNextCellOrRow(previousRenderedCell, nextRenderedCell);\n        }\n        return foundCell;\n    };\n    RowRenderer.prototype.moveToNextCellNotEditing = function (previousRenderedCell, backwards) {\n        var gridCell = previousRenderedCell.getCellPosition();\n        // find the next cell to start editing\n        var nextRenderedCell = this.findNextCellToFocusOn(gridCell, backwards, false);\n        var foundCell = utils_1._.exists(nextRenderedCell);\n        // only prevent default if we found a cell. so if user is on last cell and hits tab, then we default\n        // to the normal tabbing so user can exit the grid.\n        if (foundCell) {\n            nextRenderedCell.focusCell(true);\n        }\n        return foundCell;\n    };\n    RowRenderer.prototype.moveEditToNextCellOrRow = function (previousRenderedCell, nextRenderedCell) {\n        var pGridCell = previousRenderedCell.getCellPosition();\n        var nGridCell = nextRenderedCell.getCellPosition();\n        var rowsMatch = pGridCell.rowIndex === nGridCell.rowIndex && pGridCell.rowPinned === nGridCell.rowPinned;\n        if (rowsMatch) {\n            // same row, so we don't start / stop editing, we just move the focus along\n            previousRenderedCell.setFocusOutOnEditor();\n            nextRenderedCell.setFocusInOnEditor();\n        }\n        else {\n            var pRow = previousRenderedCell.getRenderedRow();\n            var nRow = nextRenderedCell.getRenderedRow();\n            previousRenderedCell.setFocusOutOnEditor();\n            pRow.stopEditing();\n            nRow.startRowEditing();\n            nextRenderedCell.setFocusInOnEditor();\n        }\n        nextRenderedCell.focusCell();\n    };\n    // called by the cell, when tab is pressed while editing.\n    // @return: RenderedCell when navigation successful, otherwise null\n    RowRenderer.prototype.findNextCellToFocusOn = function (gridCell, backwards, startEditing) {\n        var nextCell = gridCell;\n        while (true) {\n            if (!backwards) {\n                nextCell = this.getLastCellOfColSpan(nextCell);\n            }\n            nextCell = this.cellNavigationService.getNextTabbedCell(nextCell, backwards);\n            // allow user to override what cell to go to next\n            var userFunc = this.gridOptionsWrapper.getTabToNextCellFunc();\n            if (utils_1._.exists(userFunc)) {\n                var params = {\n                    backwards: backwards,\n                    editing: startEditing,\n                    previousCellPosition: gridCell,\n                    nextCellPosition: nextCell ? nextCell : null\n                };\n                var userCell = userFunc(params);\n                if (utils_1._.exists(userCell)) {\n                    if (userCell.floating) {\n                        utils_1._.doOnce(function () { console.warn(\"ag-Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?\"); }, 'no floating in userCell');\n                        userCell.rowPinned = userCell.floating;\n                    }\n                    nextCell = {\n                        rowIndex: userCell.rowIndex,\n                        column: userCell.column,\n                        rowPinned: userCell.rowPinned\n                    };\n                }\n                else {\n                    nextCell = null;\n                }\n            }\n            // if no 'next cell', means we have got to last cell of grid, so nothing to move to,\n            // so bottom right cell going forwards, or top left going backwards\n            if (!nextCell) {\n                return null;\n            }\n            // if editing, but cell not editable, skip cell. we do this before we do all of\n            // the 'ensure index visible' and 'flush all frames', otherwise if we are skipping\n            // a bunch of cells (eg 10 rows) then all the work on ensuring cell visible is useless\n            // (except for the last one) which causes grid to stall for a while.\n            if (startEditing) {\n                var rowNode = this.lookupRowNodeForCell(nextCell);\n                var cellIsEditable = nextCell.column.isCellEditable(rowNode);\n                if (!cellIsEditable) {\n                    continue;\n                }\n            }\n            // this scrolls the row into view\n            var cellIsNotFloating = utils_1._.missing(nextCell.rowPinned);\n            if (cellIsNotFloating) {\n                this.gridPanel.ensureIndexVisible(nextCell.rowIndex);\n            }\n            // pinned columns don't scroll, so no need to ensure index visible\n            if (!nextCell.column.isPinned()) {\n                this.gridPanel.ensureColumnVisible(nextCell.column);\n            }\n            // need to nudge the scrolls for the floating items. otherwise when we set focus on a non-visible\n            // floating cell, the scrolls get out of sync\n            this.gridPanel.horizontallyScrollHeaderCenterAndFloatingCenter();\n            // get the grid panel to flush all animation frames - otherwise the call below to get the cellComp\n            // could fail, if we just scrolled the grid (to make a cell visible) and the rendering hasn't finished.\n            this.animationFrameService.flushAllFrames();\n            // we have to call this after ensureColumnVisible - otherwise it could be a virtual column\n            // or row that is not currently in view, hence the renderedCell would not exist\n            var nextCellComp = this.getComponentForCell(nextCell);\n            // if next cell is fullWidth row, then no rendered cell,\n            // as fullWidth rows have no cells, so we skip it\n            if (utils_1._.missing(nextCellComp)) {\n                continue;\n            }\n            if (nextCellComp.isSuppressNavigable()) {\n                continue;\n            }\n            // by default, when we click a cell, it gets selected into a range, so to keep keyboard navigation\n            // consistent, we set into range here also.\n            if (this.rangeController) {\n                this.rangeController.setRangeToCell(nextCell);\n            }\n            // we successfully tabbed onto a grid cell, so return true\n            return nextCellComp;\n        }\n    };\n    RowRenderer.prototype.lookupRowNodeForCell = function (cell) {\n        if (cell.rowPinned === constants_1.Constants.PINNED_TOP) {\n            return this.pinnedRowModel.getPinnedTopRow(cell.rowIndex);\n        }\n        if (cell.rowPinned === constants_1.Constants.PINNED_BOTTOM) {\n            return this.pinnedRowModel.getPinnedBottomRow(cell.rowIndex);\n        }\n        return this.paginationProxy.getRow(cell.rowIndex);\n    };\n    __decorate([\n        context_1.Autowired(\"paginationProxy\"),\n        __metadata(\"design:type\", paginationProxy_1.PaginationProxy)\n    ], RowRenderer.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        context_1.Autowired(\"columnController\"),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], RowRenderer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], RowRenderer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired(\"$scope\"),\n        __metadata(\"design:type\", Object)\n    ], RowRenderer.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired(\"eventService\"),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], RowRenderer.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired(\"pinnedRowModel\"),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], RowRenderer.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        context_1.Autowired(\"rowModel\"),\n        __metadata(\"design:type\", Object)\n    ], RowRenderer.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired(\"loggerFactory\"),\n        __metadata(\"design:type\", logger_1.LoggerFactory)\n    ], RowRenderer.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        context_1.Autowired(\"focusedCellController\"),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], RowRenderer.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Autowired(\"cellNavigationService\"),\n        __metadata(\"design:type\", cellNavigationService_1.CellNavigationService)\n    ], RowRenderer.prototype, \"cellNavigationService\", void 0);\n    __decorate([\n        context_1.Autowired(\"columnApi\"),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], RowRenderer.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired(\"gridApi\"),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], RowRenderer.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired(\"beans\"),\n        __metadata(\"design:type\", beans_1.Beans)\n    ], RowRenderer.prototype, \"beans\", void 0);\n    __decorate([\n        context_1.Autowired(\"maxDivHeightScaler\"),\n        __metadata(\"design:type\", maxDivHeightScaler_1.MaxDivHeightScaler)\n    ], RowRenderer.prototype, \"maxDivHeightScaler\", void 0);\n    __decorate([\n        context_1.Autowired(\"animationFrameService\"),\n        __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)\n    ], RowRenderer.prototype, \"animationFrameService\", void 0);\n    __decorate([\n        context_1.Optional(\"rangeController\"),\n        __metadata(\"design:type\", Object)\n    ], RowRenderer.prototype, \"rangeController\", void 0);\n    __decorate([\n        __param(0, context_1.Qualifier(\"loggerFactory\")),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], RowRenderer.prototype, \"agWire\", null);\n    RowRenderer = __decorate([\n        context_1.Bean(\"rowRenderer\")\n    ], RowRenderer);\n    return RowRenderer;\n}(beanStub_1.BeanStub));\nexports.RowRenderer = RowRenderer;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar selectionController_1 = require(\"../selectionController\");\nvar valueService_1 = require(\"../valueService/valueService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar context_1 = require(\"../context/context\");\nvar constants_1 = require(\"../constants\");\nvar valueCache_1 = require(\"../valueService/valueCache\");\nvar gridApi_1 = require(\"../gridApi\");\nvar utils_1 = require(\"../utils\");\nvar RowNode = /** @class */ (function () {\n    function RowNode() {\n        /** Children mapped by the pivot columns */\n        this.childrenMapped = {};\n        /** True by default - can be overridden via gridOptions.isRowSelectable(rowNode) */\n        this.selectable = true;\n        /** Used by sorting service - to give deterministic sort to groups. Previously we\n         * just id for this, however id is a string and had slower sorting compared to numbers. */\n        this.__objectId = RowNode.OBJECT_ID_SEQUENCE++;\n        /** True when nodes with the same id are being removed and added as part of the same batch transaction */\n        this.alreadyRendered = false;\n        this.selected = false;\n    }\n    RowNode.prototype.setData = function (data) {\n        var oldData = this.data;\n        this.data = data;\n        this.valueCache.onDataChanged();\n        this.updateDataOnDetailNode();\n        this.checkRowSelectable();\n        var event = this.createDataChangedEvent(data, oldData, false);\n        this.dispatchLocalEvent(event);\n    };\n    // when we are doing master / detail, the detail node is lazy created, but then kept around.\n    // so if we show / hide the detail, the same detail rowNode is used. so we need to keep the data\n    // in sync, otherwise expand/collapse of the detail would still show the old values.\n    RowNode.prototype.updateDataOnDetailNode = function () {\n        if (this.detailNode) {\n            this.detailNode.data = this.data;\n        }\n    };\n    RowNode.prototype.createDataChangedEvent = function (newData, oldData, update) {\n        return {\n            type: RowNode.EVENT_DATA_CHANGED,\n            node: this,\n            oldData: oldData,\n            newData: newData,\n            update: update\n        };\n    };\n    RowNode.prototype.createLocalRowEvent = function (type) {\n        return {\n            type: type,\n            node: this\n        };\n    };\n    // similar to setRowData, however it is expected that the data is the same data item. this\n    // is intended to be used with Redux type stores, where the whole data can be changed. we are\n    // guaranteed that the data is the same entity (so grid doesn't need to worry about the id of the\n    // underlying data changing, hence doesn't need to worry about selection). the grid, upon receiving\n    // dataChanged event, will refresh the cells rather than rip them all out (so user can show transitions).\n    RowNode.prototype.updateData = function (data) {\n        var oldData = this.data;\n        this.data = data;\n        this.updateDataOnDetailNode();\n        this.checkRowSelectable();\n        this.updateDataOnDetailNode();\n        var event = this.createDataChangedEvent(data, oldData, true);\n        this.dispatchLocalEvent(event);\n    };\n    RowNode.prototype.getRowIndexString = function () {\n        if (this.rowPinned === constants_1.Constants.PINNED_TOP) {\n            return 't-' + this.rowIndex;\n        }\n        else if (this.rowPinned === constants_1.Constants.PINNED_BOTTOM) {\n            return 'b-' + this.rowIndex;\n        }\n        else {\n            return this.rowIndex.toString();\n        }\n    };\n    RowNode.prototype.createDaemonNode = function () {\n        var oldNode = new RowNode();\n        this.context.wireBean(oldNode);\n        // just copy the id and data, this is enough for the node to be used\n        // in the selection controller (the selection controller is the only\n        // place where daemon nodes can live).\n        oldNode.id = this.id;\n        oldNode.data = this.data;\n        oldNode.daemon = true;\n        oldNode.selected = this.selected;\n        oldNode.level = this.level;\n        return oldNode;\n    };\n    RowNode.prototype.setDataAndId = function (data, id) {\n        var oldNode = utils_1._.exists(this.id) ? this.createDaemonNode() : null;\n        var oldData = this.data;\n        this.data = data;\n        this.updateDataOnDetailNode();\n        this.setId(id);\n        this.selectionController.syncInRowNode(this, oldNode);\n        this.checkRowSelectable();\n        var event = this.createDataChangedEvent(data, oldData, false);\n        this.dispatchLocalEvent(event);\n    };\n    RowNode.prototype.checkRowSelectable = function () {\n        var isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();\n        var shouldInvokeIsRowSelectable = isRowSelectableFunc && utils_1._.exists(this);\n        this.setRowSelectable(shouldInvokeIsRowSelectable ? isRowSelectableFunc(this) : true);\n    };\n    RowNode.prototype.setRowSelectable = function (newVal) {\n        if (this.selectable !== newVal) {\n            this.selectable = newVal;\n            if (this.eventService) {\n                this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_SELECTABLE_CHANGED));\n            }\n        }\n    };\n    RowNode.prototype.setId = function (id) {\n        // see if user is providing the id's\n        var getRowNodeId = this.gridOptionsWrapper.getRowNodeIdFunc();\n        if (getRowNodeId) {\n            // if user is providing the id's, then we set the id only after the data has been set.\n            // this is important for virtual pagination and viewport, where empty rows exist.\n            if (this.data) {\n                this.id = getRowNodeId(this.data);\n            }\n            else {\n                // this can happen if user has set blank into the rowNode after the row previously\n                // having data. this happens in virtual page row model, when data is delete and\n                // the page is refreshed.\n                this.id = undefined;\n            }\n        }\n        else {\n            this.id = id;\n        }\n    };\n    RowNode.prototype.isPixelInRange = function (pixel) {\n        return pixel >= this.rowTop && pixel < (this.rowTop + this.rowHeight);\n    };\n    RowNode.prototype.clearRowTop = function () {\n        this.oldRowTop = this.rowTop;\n        this.setRowTop(null);\n    };\n    RowNode.prototype.setFirstChild = function (firstChild) {\n        if (this.firstChild === firstChild) {\n            return;\n        }\n        this.firstChild = firstChild;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_FIRST_CHILD_CHANGED));\n        }\n    };\n    RowNode.prototype.setLastChild = function (lastChild) {\n        if (this.lastChild === lastChild) {\n            return;\n        }\n        this.lastChild = lastChild;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_LAST_CHILD_CHANGED));\n        }\n    };\n    RowNode.prototype.setChildIndex = function (childIndex) {\n        if (this.childIndex === childIndex) {\n            return;\n        }\n        this.childIndex = childIndex;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_CHILD_INDEX_CHANGED));\n        }\n    };\n    RowNode.prototype.setRowTop = function (rowTop) {\n        if (this.rowTop === rowTop) {\n            return;\n        }\n        this.rowTop = rowTop;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_TOP_CHANGED));\n        }\n    };\n    RowNode.prototype.setDragging = function (dragging) {\n        if (this.dragging === dragging) {\n            return;\n        }\n        this.dragging = dragging;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_DRAGGING_CHANGED));\n        }\n    };\n    RowNode.prototype.setAllChildrenCount = function (allChildrenCount) {\n        if (this.allChildrenCount === allChildrenCount) {\n            return;\n        }\n        this.allChildrenCount = allChildrenCount;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED));\n        }\n    };\n    RowNode.prototype.setRowHeight = function (rowHeight, estimated) {\n        if (estimated === void 0) { estimated = false; }\n        this.rowHeight = rowHeight;\n        this.rowHeightEstimated = estimated;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_HEIGHT_CHANGED));\n        }\n    };\n    RowNode.prototype.setRowIndex = function (rowIndex) {\n        this.rowIndex = rowIndex;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_ROW_INDEX_CHANGED));\n        }\n    };\n    RowNode.prototype.setUiLevel = function (uiLevel) {\n        if (this.uiLevel === uiLevel) {\n            return;\n        }\n        this.uiLevel = uiLevel;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_UI_LEVEL_CHANGED));\n        }\n    };\n    RowNode.prototype.setExpanded = function (expanded) {\n        if (this.expanded === expanded) {\n            return;\n        }\n        this.expanded = expanded;\n        if (this.eventService) {\n            this.eventService.dispatchEvent(this.createLocalRowEvent(RowNode.EVENT_EXPANDED_CHANGED));\n        }\n        var event = this.createGlobalRowEvent(events_1.Events.EVENT_ROW_GROUP_OPENED);\n        this.mainEventService.dispatchEvent(event);\n        if (this.gridOptionsWrapper.isGroupIncludeFooter()) {\n            this.gridApi.redrawRows({ rowNodes: [this] });\n        }\n    };\n    RowNode.prototype.createGlobalRowEvent = function (type) {\n        var event = {\n            type: type,\n            node: this,\n            data: this.data,\n            rowIndex: this.rowIndex,\n            rowPinned: this.rowPinned,\n            context: this.gridOptionsWrapper.getContext(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n        return event;\n    };\n    RowNode.prototype.dispatchLocalEvent = function (event) {\n        if (this.eventService) {\n            this.eventService.dispatchEvent(event);\n        }\n    };\n    // we also allow editing the value via the editors. when it is done via\n    // the editors, no 'cell changed' event gets fired, as it's assumed that\n    // the cell knows about the change given it's in charge of the editing.\n    // this method is for the client to call, so the cell listens for the change\n    // event, and also flashes the cell when the change occurs.\n    RowNode.prototype.setDataValue = function (colKey, newValue) {\n        var column = this.columnController.getPrimaryColumn(colKey);\n        this.valueService.setValue(this, column, newValue);\n        this.dispatchCellChangedEvent(column, newValue);\n    };\n    RowNode.prototype.setGroupValue = function (colKey, newValue) {\n        var column = this.columnController.getGridColumn(colKey);\n        if (utils_1._.missing(this.groupData)) {\n            this.groupData = {};\n        }\n        this.groupData[column.getColId()] = newValue;\n        this.dispatchCellChangedEvent(column, newValue);\n    };\n    // sets the data for an aggregation\n    RowNode.prototype.setAggData = function (newAggData) {\n        var _this = this;\n        // find out all keys that could potentially change\n        var colIds = utils_1._.getAllKeysInObjects([this.aggData, newAggData]);\n        this.aggData = newAggData;\n        // if no event service, nobody has registered for events, so no need fire event\n        if (this.eventService) {\n            colIds.forEach(function (colId) {\n                var column = _this.columnController.getGridColumn(colId);\n                var value = _this.aggData ? _this.aggData[colId] : undefined;\n                _this.dispatchCellChangedEvent(column, value);\n            });\n        }\n    };\n    RowNode.prototype.hasChildren = function () {\n        // we need to return true when this.group=true, as this is used by server side row model\n        // (as children are lazy loaded and stored in a cache anyway). otherwise we return true\n        // if children exist.\n        return this.group || (this.childrenAfterGroup && this.childrenAfterGroup.length > 0);\n    };\n    RowNode.prototype.isEmptyRowGroupNode = function () {\n        return this.group && utils_1._.missingOrEmpty(this.childrenAfterGroup);\n    };\n    RowNode.prototype.dispatchCellChangedEvent = function (column, newValue) {\n        var cellChangedEvent = {\n            type: RowNode.EVENT_CELL_CHANGED,\n            node: this,\n            column: column,\n            newValue: newValue\n        };\n        this.dispatchLocalEvent(cellChangedEvent);\n    };\n    RowNode.prototype.resetQuickFilterAggregateText = function () {\n        this.quickFilterAggregateText = null;\n    };\n    RowNode.prototype.isExpandable = function () {\n        return this.hasChildren() || this.master;\n    };\n    RowNode.prototype.isSelected = function () {\n        // for footers, we just return what our sibling selected state is, as cannot select a footer\n        if (this.footer) {\n            return this.sibling.isSelected();\n        }\n        return this.selected;\n    };\n    RowNode.prototype.depthFirstSearch = function (callback) {\n        if (this.childrenAfterGroup) {\n            this.childrenAfterGroup.forEach(function (child) { return child.depthFirstSearch(callback); });\n        }\n        callback(this);\n    };\n    // + rowController.updateGroupsInSelection()\n    // + selectionController.calculatedSelectedForAllGroupNodes()\n    RowNode.prototype.calculateSelectedFromChildren = function () {\n        var atLeastOneSelected = false;\n        var atLeastOneDeSelected = false;\n        var atLeastOneMixed = false;\n        var newSelectedValue;\n        if (this.childrenAfterGroup) {\n            for (var i = 0; i < this.childrenAfterGroup.length; i++) {\n                var child = this.childrenAfterGroup[i];\n                // skip non-selectable nodes to prevent inconsistent selection values\n                if (!child.selectable) {\n                    continue;\n                }\n                var childState = child.isSelected();\n                switch (childState) {\n                    case true:\n                        atLeastOneSelected = true;\n                        break;\n                    case false:\n                        atLeastOneDeSelected = true;\n                        break;\n                    default:\n                        atLeastOneMixed = true;\n                        break;\n                }\n            }\n        }\n        if (atLeastOneMixed) {\n            newSelectedValue = undefined;\n        }\n        else if (atLeastOneSelected && !atLeastOneDeSelected) {\n            newSelectedValue = true;\n        }\n        else if (!atLeastOneSelected && atLeastOneDeSelected) {\n            newSelectedValue = false;\n        }\n        else {\n            newSelectedValue = undefined;\n        }\n        this.selectThisNode(newSelectedValue);\n    };\n    RowNode.prototype.setSelectedInitialValue = function (selected) {\n        this.selected = selected;\n    };\n    RowNode.prototype.setSelected = function (newValue, clearSelection, suppressFinishActions) {\n        if (clearSelection === void 0) { clearSelection = false; }\n        if (suppressFinishActions === void 0) { suppressFinishActions = false; }\n        this.setSelectedParams({\n            newValue: newValue,\n            clearSelection: clearSelection,\n            suppressFinishActions: suppressFinishActions,\n            rangeSelect: false\n        });\n    };\n    RowNode.prototype.isRowPinned = function () {\n        return this.rowPinned === constants_1.Constants.PINNED_TOP || this.rowPinned === constants_1.Constants.PINNED_BOTTOM;\n    };\n    // to make calling code more readable, this is the same method as setSelected except it takes names parameters\n    RowNode.prototype.setSelectedParams = function (params) {\n        var groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        var newValue = params.newValue === true;\n        var clearSelection = params.clearSelection === true;\n        var suppressFinishActions = params.suppressFinishActions === true;\n        var rangeSelect = params.rangeSelect === true;\n        // groupSelectsFiltered only makes sense when group selects children\n        var groupSelectsFiltered = groupSelectsChildren && (params.groupSelectsFiltered === true);\n        if (this.id === undefined) {\n            console.warn('ag-Grid: cannot select node until id for node is known');\n            return 0;\n        }\n        if (this.rowPinned) {\n            console.warn('ag-Grid: cannot select pinned rows');\n            return 0;\n        }\n        // if we are a footer, we don't do selection, just pass the info\n        // to the sibling (the parent of the group)\n        if (this.footer) {\n            var count = this.sibling.setSelectedParams(params);\n            return count;\n        }\n        if (rangeSelect) {\n            var newRowClicked = this.selectionController.getLastSelectedNode() !== this;\n            var allowMultiSelect = this.gridOptionsWrapper.isRowSelectionMulti();\n            if (newRowClicked && allowMultiSelect) {\n                return this.doRowRangeSelection();\n            }\n        }\n        var updatedCount = 0;\n        // when groupSelectsFiltered, then this node may end up intermediate despite\n        // trying to set it to true / false. this group will be calculated further on\n        // down when we call calculatedSelectedForAllGroupNodes(). we need to skip it\n        // here, otherwise the updatedCount would include it.\n        var skipThisNode = groupSelectsFiltered && this.group;\n        if (!skipThisNode) {\n            var thisNodeWasSelected = this.selectThisNode(newValue);\n            if (thisNodeWasSelected) {\n                updatedCount++;\n            }\n        }\n        if (groupSelectsChildren && this.group) {\n            updatedCount += this.selectChildNodes(newValue, groupSelectsFiltered);\n        }\n        // clear other nodes if not doing multi select\n        if (!suppressFinishActions) {\n            var clearOtherNodes = newValue && (clearSelection || !this.gridOptionsWrapper.isRowSelectionMulti());\n            if (clearOtherNodes) {\n                updatedCount += this.selectionController.clearOtherNodes(this);\n            }\n            // only if we selected something, then update groups and fire events\n            if (updatedCount > 0) {\n                this.selectionController.updateGroupsFromChildrenSelections();\n                // this is the very end of the 'action node', so we are finished all the updates,\n                // include any parent / child changes that this method caused\n                var event_1 = {\n                    type: events_1.Events.EVENT_SELECTION_CHANGED,\n                    api: this.gridApi,\n                    columnApi: this.columnApi\n                };\n                this.mainEventService.dispatchEvent(event_1);\n            }\n            // so if user next does shift-select, we know where to start the selection from\n            if (newValue) {\n                this.selectionController.setLastSelectedNode(this);\n            }\n        }\n        return updatedCount;\n    };\n    // selects all rows between this node and the last selected node (or the top if this is the first selection).\n    // not to be mixed up with 'cell range selection' where you drag the mouse, this is row range selection, by\n    // holding down 'shift'.\n    RowNode.prototype.doRowRangeSelection = function () {\n        var updatedCount = 0;\n        var groupsSelectChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        var lastSelectedNode = this.selectionController.getLastSelectedNode();\n        var nodesToSelect = this.rowModel.getNodesInRangeForSelection(this, lastSelectedNode);\n        nodesToSelect.forEach(function (rowNode) {\n            if (rowNode.group && groupsSelectChildren) {\n                return;\n            }\n            var nodeWasSelected = rowNode.selectThisNode(true);\n            if (nodeWasSelected) {\n                updatedCount++;\n            }\n        });\n        this.selectionController.updateGroupsFromChildrenSelections();\n        var event = {\n            type: events_1.Events.EVENT_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.mainEventService.dispatchEvent(event);\n        return updatedCount;\n    };\n    RowNode.prototype.isParentOfNode = function (potentialParent) {\n        var parentNode = this.parent;\n        while (parentNode) {\n            if (parentNode === potentialParent) {\n                return true;\n            }\n            parentNode = parentNode.parent;\n        }\n        return false;\n    };\n    RowNode.prototype.selectThisNode = function (newValue) {\n        if (!this.selectable || this.selected === newValue) {\n            return false;\n        }\n        this.selected = newValue;\n        if (this.eventService) {\n            this.dispatchLocalEvent(this.createLocalRowEvent(RowNode.EVENT_ROW_SELECTED));\n        }\n        var event = this.createGlobalRowEvent(events_1.Events.EVENT_ROW_SELECTED);\n        this.mainEventService.dispatchEvent(event);\n        return true;\n    };\n    RowNode.prototype.selectChildNodes = function (newValue, groupSelectsFiltered) {\n        var children = groupSelectsFiltered ? this.childrenAfterFilter : this.childrenAfterGroup;\n        var updatedCount = 0;\n        if (utils_1._.missing(children)) {\n            return;\n        }\n        for (var i = 0; i < children.length; i++) {\n            updatedCount += children[i].setSelectedParams({\n                newValue: newValue,\n                clearSelection: false,\n                suppressFinishActions: true,\n                groupSelectsFiltered: groupSelectsFiltered\n            });\n        }\n        return updatedCount;\n    };\n    RowNode.prototype.addEventListener = function (eventType, listener) {\n        if (!this.eventService) {\n            this.eventService = new eventService_1.EventService();\n        }\n        this.eventService.addEventListener(eventType, listener);\n    };\n    RowNode.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    RowNode.prototype.onMouseEnter = function () {\n        this.dispatchLocalEvent(this.createLocalRowEvent(RowNode.EVENT_MOUSE_ENTER));\n    };\n    RowNode.prototype.onMouseLeave = function () {\n        this.dispatchLocalEvent(this.createLocalRowEvent(RowNode.EVENT_MOUSE_LEAVE));\n    };\n    RowNode.prototype.getFirstChildOfFirstChild = function (rowGroupColumn) {\n        var currentRowNode = this;\n        // if we are hiding groups, then if we are the first child, of the first child,\n        // all the way up to the column we are interested in, then we show the group cell.\n        var isCandidate = true;\n        var foundFirstChildPath = false;\n        var nodeToSwapIn;\n        while (isCandidate && !foundFirstChildPath) {\n            var parentRowNode = currentRowNode.parent;\n            var firstChild = utils_1._.exists(parentRowNode) && currentRowNode.firstChild;\n            if (firstChild) {\n                if (parentRowNode.rowGroupColumn === rowGroupColumn) {\n                    foundFirstChildPath = true;\n                    nodeToSwapIn = parentRowNode;\n                }\n            }\n            else {\n                isCandidate = false;\n            }\n            currentRowNode = parentRowNode;\n        }\n        return foundFirstChildPath ? nodeToSwapIn : null;\n    };\n    RowNode.OBJECT_ID_SEQUENCE = 0;\n    RowNode.EVENT_ROW_SELECTED = 'rowSelected';\n    RowNode.EVENT_DATA_CHANGED = 'dataChanged';\n    RowNode.EVENT_CELL_CHANGED = 'cellChanged';\n    RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED = 'allChildrenCountChanged';\n    RowNode.EVENT_MOUSE_ENTER = 'mouseEnter';\n    RowNode.EVENT_MOUSE_LEAVE = 'mouseLeave';\n    RowNode.EVENT_HEIGHT_CHANGED = 'heightChanged';\n    RowNode.EVENT_TOP_CHANGED = 'topChanged';\n    RowNode.EVENT_FIRST_CHILD_CHANGED = 'firstChildChanged';\n    RowNode.EVENT_LAST_CHILD_CHANGED = 'lastChildChanged';\n    RowNode.EVENT_CHILD_INDEX_CHANGED = 'childIndexChanged';\n    RowNode.EVENT_ROW_INDEX_CHANGED = 'rowIndexChanged';\n    RowNode.EVENT_EXPANDED_CHANGED = 'expandedChanged';\n    RowNode.EVENT_SELECTABLE_CHANGED = 'selectableChanged';\n    RowNode.EVENT_UI_LEVEL_CHANGED = 'uiLevelChanged';\n    RowNode.EVENT_DRAGGING_CHANGED = 'draggingChanged';\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], RowNode.prototype, \"mainEventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], RowNode.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], RowNode.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], RowNode.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], RowNode.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], RowNode.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], RowNode.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('valueCache'),\n        __metadata(\"design:type\", valueCache_1.ValueCache)\n    ], RowNode.prototype, \"valueCache\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], RowNode.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], RowNode.prototype, \"gridApi\", void 0);\n    return RowNode;\n}());\nexports.RowNode = RowNode;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar context_2 = require(\"./context/context\");\nvar logger_1 = require(\"./logger\");\nvar eventService_1 = require(\"./eventService\");\nvar events_1 = require(\"./events\");\nvar context_3 = require(\"./context/context\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar context_4 = require(\"./context/context\");\nvar constants_1 = require(\"./constants\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar gridApi_1 = require(\"./gridApi\");\nvar utils_1 = require(\"./utils\");\nvar changedPath_1 = require(\"./rowModels/clientSide/changedPath\");\nvar SelectionController = /** @class */ (function () {\n    function SelectionController() {\n    }\n    SelectionController.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('SelectionController');\n        this.reset();\n        if (this.gridOptionsWrapper.isRowModelDefault()) {\n            this.eventService.addEventListener(events_1.Events.EVENT_ROW_DATA_CHANGED, this.reset.bind(this));\n        }\n        else {\n            this.logger.log('dont know what to do here');\n        }\n    };\n    SelectionController.prototype.init = function () {\n        this.groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        this.eventService.addEventListener(events_1.Events.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n    };\n    SelectionController.prototype.setLastSelectedNode = function (rowNode) {\n        this.lastSelectedNode = rowNode;\n    };\n    SelectionController.prototype.getLastSelectedNode = function () {\n        return this.lastSelectedNode;\n    };\n    SelectionController.prototype.getSelectedNodes = function () {\n        var selectedNodes = [];\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode) {\n                selectedNodes.push(rowNode);\n            }\n        });\n        return selectedNodes;\n    };\n    SelectionController.prototype.getSelectedRows = function () {\n        var selectedRows = [];\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode && rowNode.data) {\n                selectedRows.push(rowNode.data);\n            }\n        });\n        return selectedRows;\n    };\n    SelectionController.prototype.removeGroupsFromSelection = function () {\n        var _this = this;\n        utils_1._.iterateObject(this.selectedNodes, function (key, rowNode) {\n            if (rowNode && rowNode.group) {\n                _this.selectedNodes[rowNode.id] = undefined;\n            }\n        });\n    };\n    // should only be called if groupSelectsChildren=true\n    SelectionController.prototype.updateGroupsFromChildrenSelections = function (changedPath) {\n        // we only do this when group selection state depends on selected children\n        if (!this.gridOptionsWrapper.isGroupSelectsChildren()) {\n            return;\n        }\n        // also only do it if CSRM (code should never allow this anyway)\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            return;\n        }\n        var clientSideRowModel = this.rowModel;\n        var rootNode = clientSideRowModel.getRootNode();\n        if (!changedPath) {\n            changedPath = new changedPath_1.ChangedPath(true, rootNode);\n            changedPath.setInactive();\n        }\n        changedPath.forEachChangedNodeDepthFirst(function (rowNode) {\n            if (rowNode !== rootNode) {\n                rowNode.calculateSelectedFromChildren();\n            }\n        });\n        // clientSideRowModel.getTopLevelNodes()!.forEach((rowNode: RowNode) => {\n        //     rowNode.depthFirstSearch((node) => {\n        //         if (node.group) {\n        //         }\n        //     });\n        // });\n    };\n    SelectionController.prototype.getNodeForIdIfSelected = function (id) {\n        return this.selectedNodes[id];\n    };\n    SelectionController.prototype.clearOtherNodes = function (rowNodeToKeepSelected) {\n        var _this = this;\n        var groupsToRefresh = {};\n        var updatedCount = 0;\n        utils_1._.iterateObject(this.selectedNodes, function (key, otherRowNode) {\n            if (otherRowNode && otherRowNode.id !== rowNodeToKeepSelected.id) {\n                var rowNode = _this.selectedNodes[otherRowNode.id];\n                updatedCount += rowNode.setSelectedParams({\n                    newValue: false,\n                    clearSelection: false,\n                    suppressFinishActions: true\n                });\n                if (_this.groupSelectsChildren && otherRowNode.parent) {\n                    groupsToRefresh[otherRowNode.parent.id] = otherRowNode.parent;\n                }\n            }\n        });\n        utils_1._.iterateObject(groupsToRefresh, function (key, group) {\n            group.calculateSelectedFromChildren();\n        });\n        return updatedCount;\n    };\n    SelectionController.prototype.onRowSelected = function (event) {\n        var rowNode = event.node;\n        // we do not store the group rows when the groups select children\n        if (this.groupSelectsChildren && rowNode.group) {\n            return;\n        }\n        if (rowNode.isSelected()) {\n            this.selectedNodes[rowNode.id] = rowNode;\n        }\n        else {\n            this.selectedNodes[rowNode.id] = undefined;\n        }\n    };\n    SelectionController.prototype.syncInRowNode = function (rowNode, oldNode) {\n        this.syncInOldRowNode(rowNode, oldNode);\n        this.syncInNewRowNode(rowNode);\n    };\n    // if the id has changed for the node, then this means the rowNode\n    // is getting used for a different data item, which breaks\n    // our selectedNodes, as the node now is mapped by the old id\n    // which is inconsistent. so to keep the old node as selected,\n    // we swap in the clone (with the old id and old data). this means\n    // the oldNode is effectively a daemon we keep a reference to,\n    // so if client calls api.getSelectedNodes(), it gets the daemon\n    // in the result. when the client un-selects, the reference to the\n    // daemon is removed. the daemon, because it's an oldNode, is not\n    // used by the grid for rendering, it's a copy of what the node used\n    // to be like before the id was changed.\n    SelectionController.prototype.syncInOldRowNode = function (rowNode, oldNode) {\n        var oldNodeHasDifferentId = utils_1._.exists(oldNode) && (rowNode.id !== oldNode.id);\n        if (oldNodeHasDifferentId) {\n            var oldNodeSelected = utils_1._.exists(this.selectedNodes[oldNode.id]);\n            if (oldNodeSelected) {\n                this.selectedNodes[oldNode.id] = oldNode;\n            }\n        }\n    };\n    SelectionController.prototype.syncInNewRowNode = function (rowNode) {\n        if (utils_1._.exists(this.selectedNodes[rowNode.id])) {\n            rowNode.setSelectedInitialValue(true);\n            this.selectedNodes[rowNode.id] = rowNode;\n        }\n        else {\n            rowNode.setSelectedInitialValue(false);\n        }\n    };\n    SelectionController.prototype.reset = function () {\n        this.logger.log('reset');\n        this.selectedNodes = {};\n        this.lastSelectedNode = null;\n    };\n    // returns a list of all nodes at 'best cost' - a feature to be used\n    // with groups / trees. if a group has all it's children selected,\n    // then the group appears in the result, but not the children.\n    // Designed for use with 'children' as the group selection type,\n    // where groups don't actually appear in the selection normally.\n    SelectionController.prototype.getBestCostNodeSelection = function () {\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            console.warn('getBestCostNodeSelection is only available when using normal row model');\n        }\n        var clientSideRowModel = this.rowModel;\n        var topLevelNodes = clientSideRowModel.getTopLevelNodes();\n        if (topLevelNodes === null) {\n            console.warn('selectAll not available doing rowModel=virtual');\n            return;\n        }\n        var result = [];\n        // recursive function, to find the selected nodes\n        function traverse(nodes) {\n            for (var i = 0, l = nodes.length; i < l; i++) {\n                var node = nodes[i];\n                if (node.isSelected()) {\n                    result.push(node);\n                }\n                else {\n                    // if not selected, then if it's a group, and the group\n                    // has children, continue to search for selections\n                    if (node.group && node.children) {\n                        traverse(node.children);\n                    }\n                }\n            }\n        }\n        traverse(topLevelNodes);\n        return result;\n    };\n    SelectionController.prototype.setRowModel = function (rowModel) {\n        this.rowModel = rowModel;\n    };\n    SelectionController.prototype.isEmpty = function () {\n        var count = 0;\n        utils_1._.iterateObject(this.selectedNodes, function (nodeId, rowNode) {\n            if (rowNode) {\n                count++;\n            }\n        });\n        return count === 0;\n    };\n    SelectionController.prototype.deselectAllRowNodes = function (justFiltered) {\n        if (justFiltered === void 0) { justFiltered = false; }\n        var callback = function (rowNode) { return rowNode.selectThisNode(false); };\n        var rowModelClientSide = this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        if (justFiltered) {\n            if (!rowModelClientSide) {\n                console.error('ag-Grid: selecting just filtered only works with In Memory Row Model');\n                return;\n            }\n            var clientSideRowModel = this.rowModel;\n            clientSideRowModel.forEachNodeAfterFilter(callback);\n        }\n        else {\n            utils_1._.iterateObject(this.selectedNodes, function (id, rowNode) {\n                // remember the reference can be to null, as we never 'delete' from the map\n                if (rowNode) {\n                    callback(rowNode);\n                }\n            });\n            // this clears down the map (whereas above only sets the items in map to 'undefined')\n            this.reset();\n        }\n        // the above does not clean up the parent rows if they are selected\n        if (rowModelClientSide && this.groupSelectsChildren) {\n            this.updateGroupsFromChildrenSelections();\n        }\n        var event = {\n            type: events_1.Events.EVENT_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    SelectionController.prototype.selectAllRowNodes = function (justFiltered) {\n        if (justFiltered === void 0) { justFiltered = false; }\n        if (this.rowModel.getType() !== constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            throw new Error(\"selectAll only available with normal row model, ie not \" + this.rowModel.getType());\n        }\n        var clientSideRowModel = this.rowModel;\n        var callback = function (rowNode) { return rowNode.selectThisNode(true); };\n        if (justFiltered) {\n            clientSideRowModel.forEachNodeAfterFilter(callback);\n        }\n        else {\n            clientSideRowModel.forEachNode(callback);\n        }\n        // the above does not clean up the parent rows if they are selected\n        if (this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE && this.groupSelectsChildren) {\n            this.updateGroupsFromChildrenSelections();\n        }\n        var event = {\n            type: events_1.Events.EVENT_SELECTION_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.selectNode = function (rowNode, tryMulti) {\n        if (rowNode) {\n            rowNode.setSelectedParams({ newValue: true, clearSelection: !tryMulti });\n        }\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.deselectIndex = function (rowIndex) {\n        var node = this.rowModel.getRow(rowIndex);\n        this.deselectNode(node);\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.deselectNode = function (rowNode) {\n        if (rowNode) {\n            rowNode.setSelectedParams({ newValue: false, clearSelection: false });\n        }\n    };\n    /**\n     * @method\n     * @deprecated\n     */\n    SelectionController.prototype.selectIndex = function (index, tryMulti) {\n        var node = this.rowModel.getRow(index);\n        this.selectNode(node, tryMulti);\n    };\n    __decorate([\n        context_3.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], SelectionController.prototype, \"eventService\", void 0);\n    __decorate([\n        context_3.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], SelectionController.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_3.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SelectionController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_3.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], SelectionController.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_3.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], SelectionController.prototype, \"gridApi\", void 0);\n    __decorate([\n        __param(0, context_2.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectionController.prototype, \"setBeans\", null);\n    __decorate([\n        context_4.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectionController.prototype, \"init\", null);\n    SelectionController = __decorate([\n        context_1.Bean('selectionController')\n    ], SelectionController);\n    return SelectionController;\n}());\nexports.SelectionController = SelectionController;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar expressionService_1 = require(\"./expressionService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar context_1 = require(\"../context/context\");\nvar events_1 = require(\"../events\");\nvar eventService_1 = require(\"../eventService\");\nvar valueCache_1 = require(\"./valueCache\");\nvar utils_1 = require(\"../utils\");\nvar ValueService = /** @class */ (function () {\n    function ValueService() {\n        this.initialised = false;\n    }\n    ValueService.prototype.init = function () {\n        this.cellExpressions = this.gridOptionsWrapper.isEnableCellExpressions();\n        this.initialised = true;\n    };\n    ValueService.prototype.getValue = function (column, rowNode, forFilter, ignoreAggData) {\n        // console.log(`turnActive = ${this.turnActive}`);\n        if (forFilter === void 0) { forFilter = false; }\n        if (ignoreAggData === void 0) { ignoreAggData = false; }\n        // hack - the grid is getting refreshed before this bean gets initialised, race condition.\n        // really should have a way so they get initialised in the right order???\n        if (!this.initialised) {\n            this.init();\n        }\n        if (!rowNode) {\n            return;\n        }\n        // pull these out to make code below easier to read\n        var colDef = column.getColDef();\n        var field = colDef.field;\n        var colId = column.getId();\n        var data = rowNode.data;\n        var result;\n        // if there is a value getter, this gets precedence over a field\n        var groupDataExists = rowNode.groupData && rowNode.groupData[colId] !== undefined;\n        var aggDataExists = !ignoreAggData && rowNode.aggData && rowNode.aggData[colId] !== undefined;\n        if (forFilter && colDef.filterValueGetter) {\n            result = this.executeFilterValueGetter(colDef.filterValueGetter, data, column, rowNode);\n        }\n        else if (this.gridOptionsWrapper.isTreeData() && aggDataExists) {\n            result = rowNode.aggData[colId];\n        }\n        else if (this.gridOptionsWrapper.isTreeData() && colDef.valueGetter) {\n            result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n        }\n        else if (this.gridOptionsWrapper.isTreeData() && (field && data)) {\n            result = utils_1._.getValueUsingField(data, field, column.isFieldContainsDots());\n        }\n        else if (groupDataExists) {\n            result = rowNode.groupData[colId];\n        }\n        else if (aggDataExists) {\n            result = rowNode.aggData[colId];\n        }\n        else if (colDef.valueGetter) {\n            result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\n        }\n        else if (field && data) {\n            result = utils_1._.getValueUsingField(data, field, column.isFieldContainsDots());\n        }\n        // the result could be an expression itself, if we are allowing cell values to be expressions\n        if (this.cellExpressions && (typeof result === 'string') && result.indexOf('=') === 0) {\n            var cellValueGetter = result.substring(1);\n            result = this.executeValueGetter(cellValueGetter, data, column, rowNode);\n        }\n        return result;\n    };\n    ValueService.prototype.setValue = function (rowNode, colKey, newValue) {\n        var column = this.columnController.getPrimaryColumn(colKey);\n        if (!rowNode || !column) {\n            return;\n        }\n        // this will only happen if user is trying to paste into a group row, which doesn't make sense\n        // the user should not be trying to paste into group rows\n        var data = rowNode.data;\n        if (utils_1._.missing(data)) {\n            rowNode.data = {};\n        }\n        // for backwards compatibility we are also retrieving the newValueHandler as well as the valueSetter\n        var _a = column.getColDef(), field = _a.field, newValueHandler = _a.newValueHandler, valueSetter = _a.valueSetter;\n        // need either a field or a newValueHandler for this to work\n        if (utils_1._.missing(field) && utils_1._.missing(newValueHandler) && utils_1._.missing(valueSetter)) {\n            // we don't tell user about newValueHandler, as that is deprecated\n            console.warn(\"ag-Grid: you need either field or valueSetter set on colDef for editing to work\");\n            return;\n        }\n        var params = {\n            node: rowNode,\n            data: rowNode.data,\n            oldValue: this.getValue(column, rowNode),\n            newValue: newValue,\n            colDef: column.getColDef(),\n            column: column,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext()\n        };\n        params.newValue = newValue;\n        var valueWasDifferent;\n        if (newValueHandler && utils_1._.exists(newValueHandler)) {\n            valueWasDifferent = newValueHandler(params);\n        }\n        else if (utils_1._.exists(valueSetter)) {\n            valueWasDifferent = this.expressionService.evaluate(valueSetter, params);\n        }\n        else {\n            valueWasDifferent = this.setValueUsingField(data, field, newValue, column.isFieldContainsDots());\n        }\n        // in case user forgot to return something (possible if they are not using TypeScript\n        // and just forgot, or using an old newValueHandler we didn't always expect a return\n        // value here), we default the return value to true, so we always refresh.\n        if (valueWasDifferent === undefined) {\n            valueWasDifferent = true;\n        }\n        // if no change to the value, then no need to do the updating, or notifying via events.\n        // otherwise the user could be tabbing around the grid, and cellValueChange would get called\n        // all the time.\n        if (!valueWasDifferent) {\n            return;\n        }\n        // reset quick filter on this row\n        rowNode.resetQuickFilterAggregateText();\n        this.valueCache.onDataChanged();\n        params.newValue = this.getValue(column, rowNode);\n        var onCellValueChanged = column.getColDef().onCellValueChanged;\n        if (typeof onCellValueChanged === 'function') {\n            // to make callback async, do in a timeout\n            setTimeout(function () { return onCellValueChanged(params); }, 0);\n        }\n        var event = {\n            type: events_1.Events.EVENT_CELL_VALUE_CHANGED,\n            event: null,\n            rowIndex: rowNode.rowIndex,\n            rowPinned: rowNode.rowPinned,\n            column: params.column,\n            api: params.api,\n            colDef: params.colDef,\n            columnApi: params.columnApi,\n            context: params.context,\n            data: rowNode.data,\n            node: rowNode,\n            oldValue: params.oldValue,\n            newValue: params.newValue,\n            value: params.newValue\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ValueService.prototype.setValueUsingField = function (data, field, newValue, isFieldContainsDots) {\n        if (!field) {\n            return false;\n        }\n        // if no '.', then it's not a deep value\n        var valuesAreSame = false;\n        if (!isFieldContainsDots) {\n            data[field] = newValue;\n        }\n        else {\n            // otherwise it is a deep value, so need to dig for it\n            var fieldPieces = field.split('.');\n            var currentObject = data;\n            while (fieldPieces.length > 0 && currentObject) {\n                var fieldPiece = fieldPieces.shift();\n                if (fieldPieces.length === 0) {\n                    currentObject[fieldPiece] = newValue;\n                }\n                else {\n                    currentObject = currentObject[fieldPiece];\n                }\n            }\n        }\n        return !valuesAreSame;\n    };\n    ValueService.prototype.executeFilterValueGetter = function (valueGetter, data, column, rowNode) {\n        var params = {\n            data: data,\n            node: rowNode,\n            column: column,\n            colDef: column.getColDef(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext(),\n            getValue: this.getValueCallback.bind(this, rowNode)\n        };\n        return this.expressionService.evaluate(valueGetter, params);\n    };\n    ValueService.prototype.executeValueGetter = function (valueGetter, data, column, rowNode) {\n        var colId = column.getId();\n        // if inside the same turn, just return back the value we got last time\n        var valueFromCache = this.valueCache.getValue(rowNode, colId);\n        if (valueFromCache !== undefined) {\n            return valueFromCache;\n        }\n        var params = {\n            data: data,\n            node: rowNode,\n            column: column,\n            colDef: column.getColDef(),\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            context: this.gridOptionsWrapper.getContext(),\n            getValue: this.getValueCallback.bind(this, rowNode)\n        };\n        var result = this.expressionService.evaluate(valueGetter, params);\n        // if a turn is active, store the value in case the grid asks for it again\n        this.valueCache.setValue(rowNode, colId, result);\n        return result;\n    };\n    ValueService.prototype.getValueCallback = function (node, field) {\n        var otherColumn = this.columnController.getPrimaryColumn(field);\n        if (otherColumn) {\n            return this.getValue(otherColumn, node);\n        }\n        return null;\n    };\n    // used by row grouping and pivot, to get key for a row. col can be a pivot col or a row grouping col\n    ValueService.prototype.getKeyForNode = function (col, rowNode) {\n        var value = this.getValue(col, rowNode);\n        var keyCreator = col.getColDef().keyCreator;\n        var result = keyCreator ? keyCreator({ value: value }) : value;\n        // if already a string, or missing, just return it\n        if (typeof result === 'string' || result == null) {\n            return result;\n        }\n        result = String(result);\n        if (result === '[object Object]') {\n            utils_1._.doOnce(function () {\n                console.warn('ag-Grid: a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se ag-Grid docs) or b) to toString() on the object to return a key');\n            }, 'getKeyForNode - warn about [object,object]');\n        }\n        return result;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ValueService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], ValueService.prototype, \"expressionService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], ValueService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ValueService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('valueCache'),\n        __metadata(\"design:type\", valueCache_1.ValueCache)\n    ], ValueService.prototype, \"valueCache\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ValueService.prototype, \"init\", null);\n    ValueService = __decorate([\n        context_1.Bean('valueService')\n    ], ValueService);\n    return ValueService;\n}());\nexports.ValueService = ValueService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logger_1 = require(\"../logger\");\nvar context_1 = require(\"../context/context\");\nvar context_2 = require(\"../context/context\");\nvar ExpressionService = /** @class */ (function () {\n    function ExpressionService() {\n        this.expressionToFunctionCache = {};\n    }\n    ExpressionService.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('ExpressionService');\n    };\n    ExpressionService.prototype.evaluate = function (expressionOrFunc, params) {\n        if (typeof expressionOrFunc === 'function') {\n            // valueGetter is a function, so just call it\n            var func = expressionOrFunc;\n            return func(params);\n        }\n        else if (typeof expressionOrFunc === 'string') {\n            // valueGetter is an expression, so execute the expression\n            var expression = expressionOrFunc;\n            return this.evaluateExpression(expression, params);\n        }\n        else {\n            console.error('ag-Grid: value should be either a string or a function', expressionOrFunc);\n        }\n    };\n    ExpressionService.prototype.evaluateExpression = function (expression, params) {\n        try {\n            var javaScriptFunction = this.createExpressionFunction(expression);\n            // the params don't have all these values, rather we add every possible\n            // value a params can have, which makes whatever is in the params available.\n            var result = javaScriptFunction(params.value, params.context, params.oldValue, params.newValue, params.value, params.node, params.data, params.colDef, params.rowIndex, params.api, params.columnApi, params.getValue, params.column, params.columnGroup);\n            return result;\n        }\n        catch (e) {\n            // the expression failed, which can happen, as it's the client that\n            // provides the expression. so print a nice message\n            // tslint:disable-next-line\n            console.log('Processing of the expression failed');\n            // tslint:disable-next-line\n            console.log('Expression = ' + expression);\n            // tslint:disable-next-line\n            console.log('Exception = ' + e);\n            return null;\n        }\n    };\n    ExpressionService.prototype.createExpressionFunction = function (expression) {\n        // check cache first\n        if (this.expressionToFunctionCache[expression]) {\n            return this.expressionToFunctionCache[expression];\n        }\n        // if not found in cache, return the function\n        var functionBody = this.createFunctionBody(expression);\n        var theFunction = new Function('x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, columnApi, getValue, column, columnGroup', functionBody);\n        // store in cache\n        this.expressionToFunctionCache[expression] = theFunction;\n        return theFunction;\n    };\n    ExpressionService.prototype.createFunctionBody = function (expression) {\n        // if the expression has the 'return' word in it, then use as is,\n        // if not, then wrap it with return and ';' to make a function\n        if (expression.indexOf('return') >= 0) {\n            return expression;\n        }\n        else {\n            return 'return ' + expression + ';';\n        }\n    };\n    __decorate([\n        __param(0, context_2.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], ExpressionService.prototype, \"setBeans\", null);\n    ExpressionService = __decorate([\n        context_1.Bean('expressionService')\n    ], ExpressionService);\n    return ExpressionService;\n}());\nexports.ExpressionService = ExpressionService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar eventService_1 = require(\"./eventService\");\nvar events_1 = require(\"./events\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar gridApi_1 = require(\"./gridApi\");\nvar cellComp_1 = require(\"./rendering/cellComp\");\nvar utils_1 = require(\"./utils\");\nvar FocusedCellController = /** @class */ (function () {\n    function FocusedCellController() {\n    }\n    FocusedCellController.prototype.init = function () {\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearFocusedCell.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.clearFocusedCell.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_GROUP_OPENED, this.clearFocusedCell.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearFocusedCell.bind(this));\n        // we used to remove focus when moving column, am not sure why. so taking this out and see who complains.\n        // we can delete these three lines of code soon.\n        // this.eventService.addEventListener(Events.EVENT_COLUMN_MOVED, this.clearFocusedCell.bind(this));\n        // this.eventService.addEventListener(Events.EVENT_COLUMN_PINNED, this.clearFocusedCell.bind(this));\n        // this.eventService.addEventListener(Events.EVENT_COLUMN_VISIBLE, this.clearFocusedCell.bind(this));\n    };\n    FocusedCellController.prototype.clearFocusedCell = function () {\n        this.focusedCellPosition = null;\n        this.onCellFocused(false);\n    };\n    FocusedCellController.prototype.getFocusedCell = function () {\n        return this.focusedCellPosition;\n    };\n    // we check if the browser is focusing something, and if it is, and\n    // it's the cell we think is focused, then return the cell. so this\n    // methods returns the cell if a) we think it has focus and b) the\n    // browser thinks it has focus. this then returns nothing if we\n    // first focus a cell, then second click outside the grid, as then the\n    // grid cell will still be focused as far as the grid is concerned,\n    // however the browser focus will have moved somewhere else.\n    FocusedCellController.prototype.getFocusCellToUseAfterRefresh = function () {\n        if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh()) {\n            return null;\n        }\n        if (!this.focusedCellPosition) {\n            return null;\n        }\n        // we check that the browser is actually focusing on the grid, if it is not, then\n        // we have nothing to worry about\n        var browserFocusedCell = this.getGridCellForDomElement(document.activeElement);\n        if (!browserFocusedCell) {\n            return null;\n        }\n        return this.focusedCellPosition;\n    };\n    FocusedCellController.prototype.getGridCellForDomElement = function (eBrowserCell) {\n        var ePointer = eBrowserCell;\n        while (ePointer) {\n            var cellComp = this.gridOptionsWrapper.getDomData(ePointer, cellComp_1.CellComp.DOM_DATA_KEY_CELL_COMP);\n            if (cellComp) {\n                return cellComp.getCellPosition();\n            }\n            ePointer = ePointer.parentNode;\n        }\n        return null;\n    };\n    FocusedCellController.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n        if (forceBrowserFocus === void 0) { forceBrowserFocus = false; }\n        var column = utils_1._.makeNull(this.columnController.getGridColumn(colKey));\n        this.focusedCellPosition = { rowIndex: rowIndex, rowPinned: utils_1._.makeNull(floating), column: column };\n        this.onCellFocused(forceBrowserFocus);\n    };\n    FocusedCellController.prototype.isCellFocused = function (cellPosition) {\n        if (utils_1._.missing(this.focusedCellPosition)) {\n            return false;\n        }\n        return this.focusedCellPosition.column === cellPosition.column && this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n    };\n    FocusedCellController.prototype.isRowNodeFocused = function (rowNode) {\n        return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n    };\n    FocusedCellController.prototype.isAnyCellFocused = function () {\n        return !!this.focusedCellPosition;\n    };\n    FocusedCellController.prototype.isRowFocused = function (rowIndex, floating) {\n        if (utils_1._.missing(this.focusedCellPosition)) {\n            return false;\n        }\n        var floatingOrNull = utils_1._.makeNull(floating);\n        return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === floatingOrNull;\n    };\n    FocusedCellController.prototype.onCellFocused = function (forceBrowserFocus) {\n        var event = {\n            type: events_1.Events.EVENT_CELL_FOCUSED,\n            forceBrowserFocus: forceBrowserFocus,\n            rowIndex: null,\n            column: null,\n            floating: null,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            rowPinned: null\n        };\n        if (this.focusedCellPosition) {\n            event.rowIndex = this.focusedCellPosition.rowIndex;\n            event.column = this.focusedCellPosition.column;\n            event.rowPinned = this.focusedCellPosition.rowPinned;\n        }\n        this.eventService.dispatchEvent(event);\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], FocusedCellController.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FocusedCellController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], FocusedCellController.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], FocusedCellController.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], FocusedCellController.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FocusedCellController.prototype, \"init\", null);\n    FocusedCellController = __decorate([\n        context_1.Bean('focusedCellController')\n    ], FocusedCellController);\n    return FocusedCellController;\n}());\nexports.FocusedCellController = FocusedCellController;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar column_1 = require(\"./entities/column\");\nvar context_1 = require(\"./context/context\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar eventService_1 = require(\"./eventService\");\nvar events_1 = require(\"./events\");\nvar gridApi_1 = require(\"./gridApi\");\nvar utils_1 = require(\"./utils\");\nvar SortController = /** @class */ (function () {\n    function SortController() {\n    }\n    SortController_1 = SortController;\n    SortController.prototype.progressSort = function (column, multiSort, source) {\n        if (source === void 0) { source = \"api\"; }\n        var nextDirection = this.getNextSortDirection(column);\n        this.setSortForColumn(column, nextDirection, multiSort, source);\n    };\n    SortController.prototype.setSortForColumn = function (column, sort, multiSort, source) {\n        if (source === void 0) { source = \"api\"; }\n        // auto correct - if sort not legal value, then set it to 'no sort' (which is null)\n        if (sort !== column_1.Column.SORT_ASC && sort !== column_1.Column.SORT_DESC) {\n            sort = null;\n        }\n        // update sort on current col\n        column.setSort(sort, source);\n        // sortedAt used for knowing order of cols when multi-col sort\n        if (column.getSort()) {\n            var sortedAt = Number(new Date().valueOf());\n            column.setSortedAt(sortedAt);\n        }\n        else {\n            column.setSortedAt(null);\n        }\n        var doingMultiSort = multiSort && !this.gridOptionsWrapper.isSuppressMultiSort();\n        // clear sort on all columns except this one, and update the icons\n        if (!doingMultiSort) {\n            this.clearSortBarThisColumn(column, source);\n        }\n        this.dispatchSortChangedEvents();\n    };\n    // gets called by API, so if data changes, use can call this, which will end up\n    // working out the sort order again of the rows.\n    SortController.prototype.onSortChanged = function () {\n        this.dispatchSortChangedEvents();\n    };\n    SortController.prototype.dispatchSortChangedEvents = function () {\n        var event = {\n            type: events_1.Events.EVENT_SORT_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    SortController.prototype.clearSortBarThisColumn = function (columnToSkip, source) {\n        this.columnController.getPrimaryAndSecondaryAndAutoColumns().forEach(function (columnToClear) {\n            // Do not clear if either holding shift, or if column in question was clicked\n            if (!(columnToClear === columnToSkip)) {\n                // setting to 'undefined' as null means 'none' rather than cleared, otherwise issue will arise\n                // if sort order is: ['desc', null , 'asc'], as it will start at null rather than 'desc'.\n                columnToClear.setSort(undefined, source);\n            }\n        });\n    };\n    SortController.prototype.getNextSortDirection = function (column) {\n        var sortingOrder;\n        if (column.getColDef().sortingOrder) {\n            sortingOrder = column.getColDef().sortingOrder;\n        }\n        else if (this.gridOptionsWrapper.getSortingOrder()) {\n            sortingOrder = this.gridOptionsWrapper.getSortingOrder();\n        }\n        else {\n            sortingOrder = SortController_1.DEFAULT_SORTING_ORDER;\n        }\n        if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\n            console.warn(\"ag-grid: sortingOrder must be an array with at least one element, currently it's \" + sortingOrder);\n            return null;\n        }\n        var currentIndex = sortingOrder.indexOf(column.getSort());\n        var notInArray = currentIndex < 0;\n        var lastItemInArray = currentIndex == sortingOrder.length - 1;\n        var result;\n        if (notInArray || lastItemInArray) {\n            result = sortingOrder[0];\n        }\n        else {\n            result = sortingOrder[currentIndex + 1];\n        }\n        // verify the sort type exists, as the user could provide the sortingOrder, need to make sure it's valid\n        if (SortController_1.DEFAULT_SORTING_ORDER.indexOf(result) < 0) {\n            console.warn('ag-grid: invalid sort type ' + result);\n            return null;\n        }\n        return result;\n    };\n    // used by the public api, for saving the sort model\n    SortController.prototype.getSortModel = function () {\n        var columnsWithSorting = this.getColumnsWithSortingOrdered();\n        return utils_1._.map(columnsWithSorting, function (column) {\n            return {\n                colId: column.getColId(),\n                sort: column.getSort()\n            };\n        });\n    };\n    SortController.prototype.setSortModel = function (sortModel, source) {\n        var _this = this;\n        if (source === void 0) { source = \"api\"; }\n        // first up, clear any previous sort\n        var sortModelProvided = sortModel && sortModel.length > 0;\n        var allColumnsIncludingAuto = this.columnController.getPrimaryAndSecondaryAndAutoColumns();\n        allColumnsIncludingAuto.forEach(function (column) {\n            var sortForCol = null;\n            var sortedAt = -1;\n            if (sortModelProvided && column.getColDef().sortable) {\n                for (var j = 0; j < sortModel.length; j++) {\n                    var sortModelEntry = sortModel[j];\n                    if (typeof sortModelEntry.colId === 'string'\n                        && typeof column.getColId() === 'string'\n                        && _this.compareColIds(sortModelEntry, column)) {\n                        sortForCol = sortModelEntry.sort;\n                        sortedAt = j;\n                    }\n                }\n            }\n            if (sortForCol) {\n                column.setSort(sortForCol, source);\n                column.setSortedAt(sortedAt);\n            }\n            else {\n                column.setSort(null, source);\n                column.setSortedAt(null);\n            }\n        });\n        this.dispatchSortChangedEvents();\n    };\n    SortController.prototype.compareColIds = function (sortModelEntry, column) {\n        return sortModelEntry.colId === column.getColId();\n    };\n    SortController.prototype.getColumnsWithSortingOrdered = function () {\n        // pull out all the columns that have sorting set\n        var allColumnsIncludingAuto = this.columnController.getPrimaryAndSecondaryAndAutoColumns();\n        var columnsWithSorting = utils_1._.filter(allColumnsIncludingAuto, function (column) { return !!column.getSort(); });\n        // put the columns in order of which one got sorted first\n        columnsWithSorting.sort(function (a, b) { return a.sortedAt - b.sortedAt; });\n        return columnsWithSorting;\n    };\n    // used by row controller, when doing the sorting\n    SortController.prototype.getSortForRowController = function () {\n        var columnsWithSorting = this.getColumnsWithSortingOrdered();\n        return utils_1._.map(columnsWithSorting, function (column) {\n            var ascending = column.getSort() === column_1.Column.SORT_ASC;\n            return {\n                inverter: ascending ? 1 : -1,\n                column: column\n            };\n        });\n    };\n    var SortController_1;\n    SortController.DEFAULT_SORTING_ORDER = [column_1.Column.SORT_ASC, column_1.Column.SORT_DESC, null];\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SortController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], SortController.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], SortController.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], SortController.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], SortController.prototype, \"gridApi\", void 0);\n    SortController = SortController_1 = __decorate([\n        context_1.Bean('sortController')\n    ], SortController);\n    return SortController;\n}());\nexports.SortController = SortController;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar beanStub_1 = require(\"../context/beanStub\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar scrollVisibleService_1 = require(\"../gridPanel/scrollVisibleService\");\nvar selectionController_1 = require(\"../selectionController\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar utils_1 = require(\"../utils\");\nvar PaginationAutoPageSizeService = /** @class */ (function (_super) {\n    __extends(PaginationAutoPageSizeService, _super);\n    function PaginationAutoPageSizeService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PaginationAutoPageSizeService.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_BODY_HEIGHT_CHANGED, this.onBodyHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n        this.checkPageSize();\n    };\n    PaginationAutoPageSizeService.prototype.notActive = function () {\n        return !this.gridOptionsWrapper.isPaginationAutoPageSize();\n    };\n    PaginationAutoPageSizeService.prototype.onScrollVisibilityChanged = function () {\n        this.checkPageSize();\n    };\n    PaginationAutoPageSizeService.prototype.onBodyHeightChanged = function () {\n        this.checkPageSize();\n    };\n    PaginationAutoPageSizeService.prototype.checkPageSize = function () {\n        if (this.notActive()) {\n            return;\n        }\n        var rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber();\n        var bodyHeight = this.gridPanel.getBodyHeight();\n        if (bodyHeight > 0) {\n            var newPageSize = Math.floor(bodyHeight / rowHeight);\n            this.gridOptionsWrapper.setProperty('paginationPageSize', newPageSize);\n        }\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], PaginationAutoPageSizeService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], PaginationAutoPageSizeService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('scrollVisibleService'),\n        __metadata(\"design:type\", scrollVisibleService_1.ScrollVisibleService)\n    ], PaginationAutoPageSizeService.prototype, \"scrollVisibleService\", void 0);\n    PaginationAutoPageSizeService = __decorate([\n        context_1.Bean('paginationAutoPageSizeService')\n    ], PaginationAutoPageSizeService);\n    return PaginationAutoPageSizeService;\n}(beanStub_1.BeanStub));\nexports.PaginationAutoPageSizeService = PaginationAutoPageSizeService;\nvar PaginationProxy = /** @class */ (function (_super) {\n    __extends(PaginationProxy, _super);\n    function PaginationProxy() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.currentPage = 0;\n        _this.topRowIndex = 0;\n        _this.bottomRowIndex = 0;\n        _this.pixelOffset = 0;\n        return _this;\n    }\n    PaginationProxy.prototype.postConstruct = function () {\n        this.active = this.gridOptionsWrapper.isPagination();\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, 'paginationPageSize', this.onModelUpdated.bind(this));\n        this.onModelUpdated();\n    };\n    PaginationProxy.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) {\n        var res = this.rowModel.ensureRowHeightsValid(startPixel, endPixel, this.getPageFirstRow(), this.getPageLastRow());\n        if (res) {\n            this.setIndexesAndBounds();\n        }\n        return res;\n    };\n    PaginationProxy.prototype.isLastRowFound = function () {\n        return this.rowModel.isLastRowFound();\n    };\n    PaginationProxy.prototype.onModelUpdated = function (modelUpdatedEvent) {\n        this.setIndexesAndBounds();\n        var paginationChangedEvent = {\n            type: events_1.Events.EVENT_PAGINATION_CHANGED,\n            animate: modelUpdatedEvent ? modelUpdatedEvent.animate : false,\n            newData: modelUpdatedEvent ? modelUpdatedEvent.newData : false,\n            newPage: modelUpdatedEvent ? modelUpdatedEvent.newPage : false,\n            keepRenderedRows: modelUpdatedEvent ? modelUpdatedEvent.keepRenderedRows : false,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(paginationChangedEvent);\n    };\n    PaginationProxy.prototype.goToPage = function (page) {\n        if (!this.active) {\n            return;\n        }\n        if (this.currentPage === page) {\n            return;\n        }\n        this.currentPage = page;\n        var event = {\n            type: events_1.Events.EVENT_MODEL_UPDATED,\n            animate: false,\n            keepRenderedRows: false,\n            newData: false,\n            newPage: true,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.onModelUpdated(event);\n    };\n    PaginationProxy.prototype.getPixelOffset = function () {\n        return this.pixelOffset;\n    };\n    PaginationProxy.prototype.getRow = function (index) {\n        return this.rowModel.getRow(index);\n    };\n    PaginationProxy.prototype.getRowNode = function (id) {\n        return this.rowModel.getRowNode(id);\n    };\n    PaginationProxy.prototype.getRowIndexAtPixel = function (pixel) {\n        return this.rowModel.getRowIndexAtPixel(pixel);\n    };\n    PaginationProxy.prototype.getCurrentPageHeight = function () {\n        if (utils_1._.missing(this.topRowBounds) || utils_1._.missing(this.bottomRowBounds)) {\n            return 0;\n        }\n        return this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop;\n    };\n    PaginationProxy.prototype.isRowPresent = function (rowNode) {\n        if (!this.rowModel.isRowPresent(rowNode)) {\n            return false;\n        }\n        var nodeIsInPage = rowNode.rowIndex >= this.topRowIndex && rowNode.rowIndex <= this.bottomRowIndex;\n        return nodeIsInPage;\n    };\n    PaginationProxy.prototype.isEmpty = function () {\n        return this.rowModel.isEmpty();\n    };\n    PaginationProxy.prototype.isRowsToRender = function () {\n        return this.rowModel.isRowsToRender();\n    };\n    PaginationProxy.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n        return this.rowModel.getNodesInRangeForSelection(firstInRange, lastInRange);\n    };\n    PaginationProxy.prototype.forEachNode = function (callback) {\n        return this.rowModel.forEachNode(callback);\n    };\n    PaginationProxy.prototype.getType = function () {\n        return this.rowModel.getType();\n    };\n    PaginationProxy.prototype.getRowBounds = function (index) {\n        return this.rowModel.getRowBounds(index);\n    };\n    PaginationProxy.prototype.getPageFirstRow = function () {\n        return this.pageSize * this.currentPage;\n    };\n    PaginationProxy.prototype.getPageLastRow = function () {\n        var totalLastRow = (this.pageSize * (this.currentPage + 1)) - 1;\n        var pageLastRow = this.rowModel.getPageLastRow();\n        if (pageLastRow > totalLastRow) {\n            return totalLastRow;\n        }\n        else {\n            return pageLastRow;\n        }\n    };\n    PaginationProxy.prototype.getRowCount = function () {\n        return this.rowModel.getRowCount();\n    };\n    PaginationProxy.prototype.goToPageWithIndex = function (index) {\n        if (!this.active) {\n            return;\n        }\n        var pageNumber = Math.floor(index / this.pageSize);\n        this.goToPage(pageNumber);\n    };\n    PaginationProxy.prototype.getTotalRowCount = function () {\n        return this.rowModel.getPageLastRow() + 1;\n    };\n    PaginationProxy.prototype.isLastPageFound = function () {\n        return this.rowModel.isLastRowFound();\n    };\n    PaginationProxy.prototype.getCurrentPage = function () {\n        return this.currentPage;\n    };\n    PaginationProxy.prototype.goToNextPage = function () {\n        this.goToPage(this.currentPage + 1);\n    };\n    PaginationProxy.prototype.goToPreviousPage = function () {\n        this.goToPage(this.currentPage - 1);\n    };\n    PaginationProxy.prototype.goToFirstPage = function () {\n        this.goToPage(0);\n    };\n    PaginationProxy.prototype.goToLastPage = function () {\n        var rowCount = this.rowModel.getPageLastRow() + 1;\n        var lastPage = Math.floor(rowCount / this.pageSize);\n        this.goToPage(lastPage);\n    };\n    PaginationProxy.prototype.getPageSize = function () {\n        return this.pageSize;\n    };\n    PaginationProxy.prototype.getTotalPages = function () {\n        return this.totalPages;\n    };\n    PaginationProxy.prototype.setPageSize = function () {\n        // show put this into super class\n        this.pageSize = this.gridOptionsWrapper.getPaginationPageSize();\n        if (!(this.pageSize >= 1)) {\n            this.pageSize = 100;\n        }\n    };\n    PaginationProxy.prototype.setIndexesAndBounds = function () {\n        if (this.active) {\n            this.setPageSize();\n            var totalRowCount = this.getTotalRowCount();\n            this.totalPages = Math.floor((totalRowCount - 1) / this.pageSize) + 1;\n            if (this.currentPage >= this.totalPages) {\n                this.currentPage = this.totalPages - 1;\n            }\n            if (!utils_1._.isNumeric(this.currentPage) || this.currentPage < 0) {\n                this.currentPage = 0;\n            }\n            this.topRowIndex = this.pageSize * this.currentPage;\n            this.bottomRowIndex = (this.pageSize * (this.currentPage + 1)) - 1;\n            var maxRowAllowed = this.rowModel.getPageLastRow();\n            if (this.bottomRowIndex > maxRowAllowed) {\n                this.bottomRowIndex = maxRowAllowed;\n            }\n        }\n        else {\n            this.pageSize = this.rowModel.getPageLastRow() + 1;\n            this.totalPages = 1;\n            this.currentPage = 0;\n            this.topRowIndex = 0;\n            this.bottomRowIndex = this.rowModel.getPageLastRow();\n        }\n        this.topRowBounds = this.rowModel.getRowBounds(this.topRowIndex);\n        this.bottomRowBounds = this.rowModel.getRowBounds(this.bottomRowIndex);\n        this.pixelOffset = utils_1._.exists(this.topRowBounds) ? this.topRowBounds.rowTop : 0;\n    };\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], PaginationProxy.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], PaginationProxy.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], PaginationProxy.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], PaginationProxy.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], PaginationProxy.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], PaginationProxy.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PaginationProxy.prototype, \"postConstruct\", null);\n    PaginationProxy = __decorate([\n        context_1.Bean('paginationProxy')\n    ], PaginationProxy);\n    return PaginationProxy;\n}(beanStub_1.BeanStub));\nexports.PaginationProxy = PaginationProxy;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../constants\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar environment_1 = require(\"../environment\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar utils_1 = require(\"../utils\");\nvar PopupService = /** @class */ (function () {\n    function PopupService() {\n        this.activePopupElements = [];\n    }\n    PopupService.prototype.registerGridCore = function (gridCore) {\n        this.gridCore = gridCore;\n    };\n    PopupService.prototype.getDocument = function () {\n        return this.gridOptionsWrapper.getDocument();\n    };\n    PopupService.prototype.getPopupParent = function () {\n        var ePopupParent = this.gridOptionsWrapper.getPopupParent();\n        if (ePopupParent) {\n            return ePopupParent;\n        }\n        return this.gridCore.getRootGui();\n    };\n    PopupService.prototype.positionPopupForMenu = function (params) {\n        var sourceRect = params.eventSource.getBoundingClientRect();\n        var eDocument = this.getDocument();\n        var popupParent = this.getPopupParent();\n        var parentRect;\n        if (popupParent === eDocument.body) {\n            parentRect = eDocument.documentElement.getBoundingClientRect();\n        }\n        else {\n            parentRect = popupParent.getBoundingClientRect();\n        }\n        var y = sourceRect.top - parentRect.top;\n        y = this.keepYWithinBounds(params, y);\n        var minWidth = (params.ePopup.clientWidth > 0) ? params.ePopup.clientWidth : 200;\n        params.ePopup.style.minWidth = minWidth + \"px\";\n        var widthOfParent = parentRect.right - parentRect.left;\n        var maxX = widthOfParent - minWidth;\n        // the x position of the popup depends on RTL or LTR. for normal cases, LTR, we put the child popup\n        // to the right, unless it doesn't fit and we then put it to the left. for RTL it's the other way around,\n        // we try place it first to the left, and then if not to the right.\n        var x;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // for RTL, try left first\n            x = xLeftPosition();\n            if (x < 0) {\n                x = xRightPosition();\n            }\n            if (x > maxX) {\n                x = 0;\n            }\n        }\n        else {\n            // for LTR, try right first\n            x = xRightPosition();\n            if (x > maxX) {\n                x = xLeftPosition();\n            }\n            if (x < 0) {\n                x = 0;\n            }\n        }\n        params.ePopup.style.left = x + \"px\";\n        params.ePopup.style.top = y + \"px\";\n        function xRightPosition() {\n            return sourceRect.right - parentRect.left - 2;\n        }\n        function xLeftPosition() {\n            return sourceRect.left - parentRect.left - minWidth;\n        }\n    };\n    PopupService.prototype.positionPopupUnderMouseEvent = function (params) {\n        var _a = this.calculatePointerAlign(params.mouseEvent), x = _a.x, y = _a.y;\n        var ePopup = params.ePopup, nudgeX = params.nudgeX, nudgeY = params.nudgeY;\n        this.positionPopup({\n            ePopup: ePopup,\n            x: x,\n            y: y,\n            nudgeX: nudgeX,\n            nudgeY: nudgeY,\n            keepWithinBounds: true\n        });\n        this.callPostProcessPopup(params.ePopup, null, params.mouseEvent, params.type, params.column, params.rowNode);\n    };\n    PopupService.prototype.calculatePointerAlign = function (e) {\n        var eDocument = this.getDocument();\n        var popupParent = this.getPopupParent();\n        var parentRect = popupParent.getBoundingClientRect();\n        var documentRect = eDocument.documentElement.getBoundingClientRect();\n        return {\n            x: e.clientX - (popupParent === eDocument.body ? documentRect.left : parentRect.left),\n            y: e.clientY - (popupParent === eDocument.body ? documentRect.top : parentRect.top)\n        };\n    };\n    PopupService.prototype.positionPopupUnderComponent = function (params) {\n        var sourceRect = params.eventSource.getBoundingClientRect();\n        var eDocument = this.getDocument();\n        var popupParent = this.getPopupParent();\n        var alignSide = params.alignSide || 'left';\n        var parentRect;\n        if (popupParent === eDocument.body) {\n            parentRect = eDocument.documentElement.getBoundingClientRect();\n        }\n        else {\n            parentRect = popupParent.getBoundingClientRect();\n        }\n        var x = sourceRect.left - parentRect.left;\n        if (alignSide === 'right') {\n            x -= (params.ePopup.offsetWidth - sourceRect.width);\n        }\n        this.positionPopup({\n            ePopup: params.ePopup,\n            minWidth: params.minWidth,\n            minHeight: params.minHeight,\n            nudgeX: params.nudgeX,\n            nudgeY: params.nudgeY,\n            x: x,\n            y: sourceRect.top - parentRect.top + sourceRect.height,\n            keepWithinBounds: params.keepWithinBounds\n        });\n        this.callPostProcessPopup(params.ePopup, params.eventSource, null, params.type, params.column, params.rowNode);\n    };\n    PopupService.prototype.positionPopupOverComponent = function (params) {\n        var sourceRect = params.eventSource.getBoundingClientRect();\n        var eDocument = this.getDocument();\n        var popupParent = this.getPopupParent();\n        var parentRect;\n        if (popupParent === eDocument.body) {\n            parentRect = eDocument.documentElement.getBoundingClientRect();\n        }\n        else {\n            parentRect = popupParent.getBoundingClientRect();\n        }\n        this.positionPopup({\n            ePopup: params.ePopup,\n            minWidth: params.minWidth,\n            nudgeX: params.nudgeX,\n            nudgeY: params.nudgeY,\n            x: sourceRect.left - parentRect.left,\n            y: sourceRect.top - parentRect.top,\n            keepWithinBounds: params.keepWithinBounds\n        });\n        this.callPostProcessPopup(params.ePopup, params.eventSource, null, params.type, params.column, params.rowNode);\n    };\n    PopupService.prototype.callPostProcessPopup = function (ePopup, eventSource, mouseEvent, type, column, rowNode) {\n        var callback = this.gridOptionsWrapper.getPostProcessPopupFunc();\n        if (callback) {\n            var params = {\n                column: column,\n                rowNode: rowNode,\n                ePopup: ePopup,\n                type: type,\n                eventSource: eventSource,\n                mouseEvent: mouseEvent\n            };\n            callback(params);\n        }\n    };\n    PopupService.prototype.positionPopup = function (params) {\n        var x = params.x;\n        var y = params.y;\n        if (params.nudgeX) {\n            x += params.nudgeX;\n        }\n        if (params.nudgeY) {\n            y += params.nudgeY;\n        }\n        // if popup is overflowing to the bottom, move it up\n        if (params.keepWithinBounds) {\n            x = this.keepXWithinBounds(params, x);\n            y = this.keepYWithinBounds(params, y);\n        }\n        params.ePopup.style.left = x + \"px\";\n        params.ePopup.style.top = y + \"px\";\n    };\n    PopupService.prototype.keepYWithinBounds = function (params, y) {\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        var docElement = eDocument.documentElement;\n        var popupParent = this.getPopupParent();\n        var parentRect = popupParent.getBoundingClientRect();\n        var documentRect = eDocument.documentElement.getBoundingClientRect();\n        var isBody = popupParent === eDocument.body;\n        var defaultPadding = 3;\n        var minHeight = Math.min(200, parentRect.height);\n        var diff = 0;\n        if (params.minHeight && params.minHeight < minHeight) {\n            minHeight = params.minHeight;\n        }\n        else if (params.ePopup.offsetHeight > 0) {\n            minHeight = params.ePopup.clientHeight;\n            diff = utils_1._.getAbsoluteHeight(params.ePopup) - minHeight;\n        }\n        var heightOfParent = isBody ? (utils_1._.getAbsoluteHeight(docElement) + docElement.scrollTop) : parentRect.height;\n        if (isBody) {\n            heightOfParent -= Math.abs(documentRect.top - parentRect.top);\n        }\n        var maxY = heightOfParent - minHeight - diff - defaultPadding;\n        return Math.min(Math.max(y, 0), Math.abs(maxY));\n    };\n    PopupService.prototype.keepXWithinBounds = function (params, x) {\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        var docElement = eDocument.documentElement;\n        var popupParent = this.getPopupParent();\n        var parentRect = popupParent.getBoundingClientRect();\n        var documentRect = eDocument.documentElement.getBoundingClientRect();\n        var isBody = popupParent === eDocument.body;\n        var defaultPadding = 3;\n        var ePopup = params.ePopup;\n        var minWidth = Math.min(200, parentRect.width);\n        var diff = 0;\n        if (params.minWidth && params.minWidth < minWidth) {\n            minWidth = params.minWidth;\n        }\n        else if (ePopup.offsetWidth > 0) {\n            minWidth = ePopup.offsetWidth;\n            ePopup.style.minWidth = minWidth + \"px\";\n            diff = utils_1._.getAbsoluteWidth(ePopup) - minWidth;\n        }\n        var widthOfParent = isBody ? (utils_1._.getAbsoluteWidth(docElement) + docElement.scrollLeft) : parentRect.width;\n        if (isBody) {\n            widthOfParent -= Math.abs(documentRect.left - parentRect.left);\n        }\n        var maxX = widthOfParent - minWidth - diff - defaultPadding;\n        return Math.min(Math.max(x, 0), Math.abs(maxX));\n    };\n    //adds an element to a div, but also listens to background checking for clicks,\n    //so that when the background is clicked, the child is removed again, giving\n    //a model look to popups.\n    PopupService.prototype.addAsModalPopup = function (eChild, closeOnEsc, closedCallback, click) {\n        return this.addPopup(true, eChild, closeOnEsc, closedCallback, click);\n    };\n    PopupService.prototype.addPopup = function (modal, eChild, closeOnEsc, closedCallback, click) {\n        var _this = this;\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        if (!eDocument) {\n            console.warn('ag-grid: could not find the document, document is empty');\n            return function () {\n            };\n        }\n        eChild.style.top = '0px';\n        eChild.style.left = '0px';\n        var ePopupParent = this.getPopupParent();\n        var popupAlreadyShown = utils_1._.isVisible(eChild);\n        if (popupAlreadyShown && ePopupParent.contains(eChild)) {\n            return function () { };\n        }\n        // add env CSS class to child, in case user provided a popup parent, which means\n        // theme class may be missing\n        var eWrapper = document.createElement('div');\n        var theme = this.environment.getTheme();\n        if (theme) {\n            utils_1._.addCssClass(eWrapper, theme);\n        }\n        utils_1._.addCssClass(eWrapper, 'ag-popup');\n        utils_1._.addCssClass(eChild, this.gridOptionsWrapper.isEnableRtl() ? 'ag-rtl' : 'ag-ltr');\n        eWrapper.appendChild(eChild);\n        ePopupParent.appendChild(eWrapper);\n        this.activePopupElements.push(eChild);\n        var popupHidden = false;\n        var hidePopupOnKeyboardEvent = function (event) {\n            var key = event.which || event.keyCode;\n            if (key === constants_1.Constants.KEY_ESCAPE && eWrapper.contains(document.activeElement)) {\n                hidePopup(null);\n            }\n        };\n        var hidePopupOnMouseEvent = function (event) {\n            hidePopup(event);\n        };\n        var hidePopupOnTouchEvent = function (event) {\n            hidePopup(null, event);\n        };\n        var hidePopup = function (mouseEvent, touchEvent) {\n            // we don't hide popup if the event was on the child, or any\n            // children of this child\n            if (_this.isEventFromCurrentPopup(mouseEvent, touchEvent, eChild)) {\n                return;\n            }\n            // if the event to close is actually the open event, then ignore it\n            if (_this.isEventSameChainAsOriginalEvent(click, mouseEvent, touchEvent)) {\n                return;\n            }\n            // this method should only be called once. the client can have different\n            // paths, each one wanting to close, so this method may be called multiple times.\n            if (popupHidden) {\n                return;\n            }\n            popupHidden = true;\n            ePopupParent.removeChild(eWrapper);\n            utils_1._.removeFromArray(_this.activePopupElements, eChild);\n            eDocument.removeEventListener('keydown', hidePopupOnKeyboardEvent);\n            eDocument.removeEventListener('mousedown', hidePopupOnMouseEvent);\n            eDocument.removeEventListener('touchstart', hidePopupOnTouchEvent);\n            eDocument.removeEventListener('contextmenu', hidePopupOnMouseEvent);\n            _this.eventService.removeEventListener(events_1.Events.EVENT_DRAG_STARTED, hidePopupOnMouseEvent);\n            if (closedCallback) {\n                closedCallback();\n            }\n        };\n        // if we add these listeners now, then the current mouse\n        // click will be included, which we don't want\n        window.setTimeout(function () {\n            if (closeOnEsc) {\n                eDocument.addEventListener('keydown', hidePopupOnKeyboardEvent);\n            }\n            if (modal) {\n                eDocument.addEventListener('mousedown', hidePopupOnMouseEvent);\n                _this.eventService.addEventListener(events_1.Events.EVENT_DRAG_STARTED, hidePopupOnMouseEvent);\n                eDocument.addEventListener('touchstart', hidePopupOnTouchEvent);\n                eDocument.addEventListener('contextmenu', hidePopupOnMouseEvent);\n            }\n        }, 0);\n        return hidePopup;\n    };\n    PopupService.prototype.isEventFromCurrentPopup = function (mouseEvent, touchEvent, eChild) {\n        var event = mouseEvent ? mouseEvent : touchEvent;\n        if (!event) {\n            return false;\n        }\n        var indexOfThisChild = this.activePopupElements.indexOf(eChild);\n        for (var i = indexOfThisChild; i < this.activePopupElements.length; i++) {\n            var element = this.activePopupElements[i];\n            if (utils_1._.isElementInEventPath(element, event)) {\n                return true;\n            }\n        }\n        // if the user did not write their own Custom Element to be rendered as popup\n        // and this component has additional popup element, they should have the\n        // `ag-custom-component-popup` class to be detected as part of the Custom Component\n        var el = event.target;\n        while (el && el != document.body) {\n            if (el.classList.contains('ag-custom-component-popup') || el.parentElement === null) {\n                return true;\n            }\n            el = el.parentElement;\n        }\n    };\n    // in some browsers, the context menu event can be fired before the click event, which means\n    // the context menu event could open the popup, but then the click event closes it straight away.\n    PopupService.prototype.isEventSameChainAsOriginalEvent = function (originalClick, mouseEvent, touchEvent) {\n        // we check the coordinates of the event, to see if it's the same event. there is a 1 / 1000 chance that\n        // the event is a different event, however that is an edge case that is not very relevant (the user clicking\n        // twice on the same location isn't a normal path).\n        // event could be mouse event or touch event.\n        var mouseEventOrTouch = null;\n        if (mouseEvent) {\n            // mouse event can be used direction, it has coordinates\n            mouseEventOrTouch = mouseEvent;\n        }\n        else if (touchEvent) {\n            // touch event doesn't have coordinates, need it's touch object\n            mouseEventOrTouch = touchEvent.touches[0];\n        }\n        if (mouseEventOrTouch && originalClick) {\n            // for x, allow 4px margin, to cover iPads, where touch (which opens menu) is followed\n            // by browser click (when you life finger up, touch is interrupted as click in browser)\n            var screenX_1 = mouseEvent ? mouseEvent.screenX : 0;\n            var screenY_1 = mouseEvent ? mouseEvent.screenY : 0;\n            var xMatch = Math.abs(originalClick.screenX - screenX_1) < 5;\n            var yMatch = Math.abs(originalClick.screenY - screenY_1) < 5;\n            if (xMatch && yMatch) {\n                return true;\n            }\n        }\n        return false;\n    };\n    PopupService.prototype.bringPopupToFront = function (ePopup) {\n        var parent = this.getPopupParent();\n        var popupList = parent.querySelectorAll('.ag-popup');\n        while (!utils_1._.containsClass(ePopup, 'ag-popup') && ePopup.parentElement) {\n            ePopup = ePopup.parentElement;\n        }\n        if (popupList.length <= 1 ||\n            popupList[popupList.length - 1] === ePopup ||\n            !parent.contains(ePopup)) {\n            return;\n        }\n        popupList[popupList.length - 1].insertAdjacentElement('afterend', ePopup);\n        var params = {\n            type: 'popupToFront',\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            ePopup: ePopup\n        };\n        this.eventService.dispatchEvent(params);\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], PopupService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('environment'),\n        __metadata(\"design:type\", environment_1.Environment)\n    ], PopupService.prototype, \"environment\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], PopupService.prototype, \"eventService\", void 0);\n    PopupService = __decorate([\n        context_1.Bean('popupService')\n    ], PopupService);\n    return PopupService;\n}());\nexports.PopupService = PopupService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar optionsFactory_1 = require(\"./optionsFactory\");\nvar providedFilter_1 = require(\"./providedFilter\");\nvar utils_1 = require(\"../../utils\");\nvar ConditionPosition;\n(function (ConditionPosition) {\n    ConditionPosition[ConditionPosition[\"One\"] = 0] = \"One\";\n    ConditionPosition[ConditionPosition[\"Two\"] = 1] = \"Two\";\n})(ConditionPosition = exports.ConditionPosition || (exports.ConditionPosition = {}));\nvar DEFAULT_TRANSLATIONS = {\n    loadingOoo: 'Loading...',\n    empty: 'Choose One',\n    equals: 'Equals',\n    notEqual: 'Not equal',\n    lessThan: 'Less than',\n    greaterThan: 'Greater than',\n    inRange: 'In range',\n    lessThanOrEqual: 'Less than or equals',\n    greaterThanOrEqual: 'Greater than or equals',\n    filterOoo: 'Filter...',\n    contains: 'Contains',\n    notContains: 'Not contains',\n    startsWith: 'Starts with',\n    endsWith: 'Ends with',\n    searchOoo: 'Search...',\n    selectAll: 'Select All',\n    applyFilter: 'Apply Filter',\n    clearFilter: 'Clear Filter',\n    andCondition: 'AND',\n    orCondition: 'OR'\n};\n/**\n * Every filter with a dropdown where the user can specify a comparing type against the filter values\n */\nvar SimpleFilter = /** @class */ (function (_super) {\n    __extends(SimpleFilter, _super);\n    function SimpleFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // returns true if this type requires a 'from' field, eg any filter that requires at least one text value\n    SimpleFilter.prototype.showValueFrom = function (type) {\n        return !this.doesFilterHaveHiddenInput(type) && type !== SimpleFilter.EMPTY;\n    };\n    // returns true if this type requires a 'to' field, currently only 'range' returns true\n    SimpleFilter.prototype.showValueTo = function (type) {\n        return type === SimpleFilter.IN_RANGE;\n    };\n    // floating filter calls this when user applies filter from floating filter\n    SimpleFilter.prototype.onFloatingFilterChanged = function (type, value) {\n        this.setValueFromFloatingFilter(value);\n        this.setTypeFromFloatingFilter(type);\n        this.onUiChanged(true);\n    };\n    SimpleFilter.prototype.setTypeFromFloatingFilter = function (type) {\n        this.eType1.value = type;\n        this.eType2.value = null;\n        this.eJoinOperatorAnd.checked = true;\n    };\n    SimpleFilter.prototype.getModelFromUi = function () {\n        if (!this.isConditionUiComplete(ConditionPosition.One)) {\n            return null;\n        }\n        if (this.isAllowTwoConditions() && this.isConditionUiComplete(ConditionPosition.Two)) {\n            var res = {\n                filterType: this.getFilterType(),\n                operator: this.getJoinOperator(),\n                condition1: this.createCondition(ConditionPosition.One),\n                condition2: this.createCondition(ConditionPosition.Two)\n            };\n            return res;\n        }\n        else {\n            var res = this.createCondition(ConditionPosition.One);\n            return res;\n        }\n    };\n    SimpleFilter.prototype.getCondition1Type = function () {\n        return this.eType1.value;\n    };\n    SimpleFilter.prototype.getCondition2Type = function () {\n        return this.eType2.value;\n    };\n    SimpleFilter.prototype.getJoinOperator = function () {\n        return this.eJoinOperatorOr.checked ? 'OR' : 'AND';\n    };\n    SimpleFilter.prototype.areModelsEqual = function (a, b) {\n        // both are missing\n        if (!a && !b) {\n            return true;\n        }\n        // one is missing, other present\n        if ((!a && b) || (a && !b)) {\n            return false;\n        }\n        // one is combined, the other is not\n        var aIsSimple = !a.operator;\n        var bIsSimple = !b.operator;\n        var oneSimpleOneCombined = (!aIsSimple && bIsSimple) || (aIsSimple && !bIsSimple);\n        if (oneSimpleOneCombined) {\n            return false;\n        }\n        var res;\n        // otherwise both present, so compare\n        if (aIsSimple) {\n            var aSimple = a;\n            var bSimple = b;\n            res = this.areSimpleModelsEqual(aSimple, bSimple);\n        }\n        else {\n            var aCombined = a;\n            var bCombined = b;\n            res = aCombined.operator === bCombined.operator\n                && this.areSimpleModelsEqual(aCombined.condition1, bCombined.condition1)\n                && this.areSimpleModelsEqual(aCombined.condition2, bCombined.condition2);\n        }\n        return res;\n    };\n    SimpleFilter.prototype.setModelIntoUi = function (model) {\n        var isCombined = model.operator;\n        if (isCombined) {\n            var combinedModel = model;\n            var orChecked = combinedModel.operator === 'OR';\n            this.eJoinOperatorAnd.checked = !orChecked;\n            this.eJoinOperatorOr.checked = orChecked;\n            this.eType1.value = combinedModel.condition1.type;\n            this.eType2.value = combinedModel.condition2.type;\n            this.setConditionIntoUi(combinedModel.condition1, ConditionPosition.One);\n            this.setConditionIntoUi(combinedModel.condition2, ConditionPosition.Two);\n        }\n        else {\n            var simpleModel = model;\n            this.eJoinOperatorAnd.checked = true;\n            this.eJoinOperatorOr.checked = false;\n            this.eType1.value = simpleModel.type;\n            this.eType2.value = this.optionsFactory.getDefaultOption();\n            this.setConditionIntoUi(simpleModel, ConditionPosition.One);\n            this.setConditionIntoUi(null, ConditionPosition.Two);\n        }\n    };\n    SimpleFilter.prototype.doesFilterPass = function (params) {\n        var model = this.getModel();\n        var isCombined = model.operator;\n        if (isCombined) {\n            var combinedModel = model;\n            var firstResult = this.individualConditionPasses(params, combinedModel.condition1);\n            var secondResult = this.individualConditionPasses(params, combinedModel.condition2);\n            if (combinedModel.operator === 'AND') {\n                return firstResult && secondResult;\n            }\n            else {\n                return firstResult || secondResult;\n            }\n        }\n        else {\n            var simpleModel = model;\n            var result = this.individualConditionPasses(params, simpleModel);\n            return result;\n        }\n    };\n    SimpleFilter.prototype.setParams = function (params) {\n        _super.prototype.setParams.call(this, params);\n        this.simpleFilterParams = params;\n        this.optionsFactory = new optionsFactory_1.OptionsFactory();\n        this.optionsFactory.init(params, this.getDefaultFilterOptions());\n        this.allowTwoConditions = !params.suppressAndOrCondition;\n        this.putOptionsIntoDropdown();\n        this.addChangedListeners();\n    };\n    SimpleFilter.prototype.putOptionsIntoDropdown = function () {\n        var _this = this;\n        var filterOptions = this.optionsFactory.getFilterOptions();\n        filterOptions.forEach(function (option) {\n            var createOption = function () {\n                var key = (typeof option === 'string') ? option : option.displayKey;\n                var localName = _this.translate(key);\n                var eOption = document.createElement(\"option\");\n                eOption.text = localName;\n                eOption.value = key;\n                return eOption;\n            };\n            _this.eType1.add(createOption());\n            _this.eType2.add(createOption());\n        });\n        var readOnly = filterOptions.length <= 1;\n        this.eType1.disabled = readOnly;\n        this.eType2.disabled = readOnly;\n    };\n    SimpleFilter.prototype.isAllowTwoConditions = function () {\n        return this.allowTwoConditions;\n    };\n    SimpleFilter.prototype.createBodyTemplate = function () {\n        var optionsTemplate1 = \"<select class=\\\"ag-filter-select\\\" ref=\\\"eOptions1\\\"></select>\";\n        var valueTemplate1 = this.createValueTemplate(ConditionPosition.One);\n        var optionsTemplate2 = \"<select class=\\\"ag-filter-select\\\" ref=\\\"eOptions2\\\"></select>\";\n        var valueTemplate2 = this.createValueTemplate(ConditionPosition.Two);\n        var uniqueGroupId = 'ag-simple-filter-and-or-' + this.getCompId();\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        var andOrTemplate = \"<div class=\\\"ag-filter-condition\\\" ref=\\\"eJoinOperatorPanel\\\">\\n                    <label>\\n                        <input ref=\\\"eJoinOperatorAnd\\\" type=\\\"radio\\\" class=\\\"and\\\" name=\\\"\" + uniqueGroupId + \"\\\" value=\\\"AND\\\")} checked=\\\"checked\\\" />\\n                        \" + translate('andCondition', 'AND') + \"\\n                    </label>\\n                    <label>\\n                        <input ref=\\\"eJoinOperatorOr\\\" type=\\\"radio\\\" class=\\\"or\\\" name=\\\"\" + uniqueGroupId + \"\\\" value=\\\"OR\\\" />\\n                        \" + translate('orCondition', 'OR') + \"\\n                    </label>\\n                </div>\";\n        var template = optionsTemplate1 + \"\\n                \" + valueTemplate1 + \"\\n                \" + andOrTemplate + \"\\n                \" + optionsTemplate2 + \"\\n                \" + valueTemplate2;\n        return template;\n    };\n    SimpleFilter.prototype.updateUiVisibility = function () {\n        var firstConditionComplete = this.isConditionUiComplete(ConditionPosition.One);\n        var showSecondFilter = this.allowTwoConditions && firstConditionComplete;\n        utils_1._.setVisible(this.eCondition2Body, showSecondFilter);\n        utils_1._.setVisible(this.eType2, showSecondFilter);\n        utils_1._.setVisible(this.eJoinOperatorPanel, showSecondFilter);\n    };\n    SimpleFilter.prototype.resetUiToDefaults = function () {\n        this.eJoinOperatorAnd.checked = true;\n        var defaultOption = this.optionsFactory.getDefaultOption();\n        this.eType1.value = defaultOption;\n        this.eType2.value = defaultOption;\n    };\n    SimpleFilter.prototype.translate = function (toTranslate) {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        var defaultTranslation = DEFAULT_TRANSLATIONS[toTranslate];\n        if (!defaultTranslation && this.optionsFactory.getCustomOption(toTranslate)) {\n            defaultTranslation = this.optionsFactory.getCustomOption(toTranslate).displayName;\n        }\n        return translate(toTranslate, defaultTranslation);\n    };\n    SimpleFilter.prototype.addChangedListeners = function () {\n        var _this = this;\n        var listener = function () { return _this.onUiChanged(); };\n        this.addDestroyableEventListener(this.eType1, \"change\", listener);\n        this.addDestroyableEventListener(this.eType2, \"change\", listener);\n        this.addDestroyableEventListener(this.eJoinOperatorOr, \"change\", listener);\n        this.addDestroyableEventListener(this.eJoinOperatorAnd, \"change\", listener);\n    };\n    SimpleFilter.prototype.doesFilterHaveHiddenInput = function (filterType) {\n        var customFilterOption = this.optionsFactory.getCustomOption(filterType);\n        return customFilterOption && customFilterOption.hideFilterInput;\n    };\n    SimpleFilter.EMPTY = 'empty';\n    SimpleFilter.EQUALS = 'equals';\n    SimpleFilter.NOT_EQUAL = 'notEqual';\n    SimpleFilter.LESS_THAN = 'lessThan';\n    SimpleFilter.LESS_THAN_OR_EQUAL = 'lessThanOrEqual';\n    SimpleFilter.GREATER_THAN = 'greaterThan';\n    SimpleFilter.GREATER_THAN_OR_EQUAL = 'greaterThanOrEqual';\n    SimpleFilter.IN_RANGE = 'inRange';\n    SimpleFilter.CONTAINS = 'contains';\n    SimpleFilter.NOT_CONTAINS = 'notContains';\n    SimpleFilter.STARTS_WITH = 'startsWith';\n    SimpleFilter.ENDS_WITH = 'endsWith';\n    __decorate([\n        componentAnnotations_1.RefSelector('eOptions1'),\n        __metadata(\"design:type\", HTMLSelectElement)\n    ], SimpleFilter.prototype, \"eType1\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eOptions2'),\n        __metadata(\"design:type\", HTMLSelectElement)\n    ], SimpleFilter.prototype, \"eType2\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eJoinOperatorAnd'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], SimpleFilter.prototype, \"eJoinOperatorAnd\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eJoinOperatorOr'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], SimpleFilter.prototype, \"eJoinOperatorOr\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCondition2Body'),\n        __metadata(\"design:type\", HTMLElement)\n    ], SimpleFilter.prototype, \"eCondition2Body\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eJoinOperatorPanel'),\n        __metadata(\"design:type\", HTMLElement)\n    ], SimpleFilter.prototype, \"eJoinOperatorPanel\", void 0);\n    return SimpleFilter;\n}(providedFilter_1.ProvidedFilter));\nexports.SimpleFilter = SimpleFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalObj = typeof global === 'undefined' ? {} : global;\nglobalObj.HTMLElement = typeof HTMLElement === 'undefined' ? {} : HTMLElement;\nglobalObj.HTMLButtonElement = typeof HTMLButtonElement === 'undefined' ? {} : HTMLButtonElement;\nglobalObj.HTMLSelectElement = typeof HTMLSelectElement === 'undefined' ? {} : HTMLSelectElement;\nglobalObj.HTMLInputElement = typeof HTMLInputElement === 'undefined' ? {} : HTMLInputElement;\nglobalObj.Node = typeof Node === 'undefined' ? {} : Node;\nglobalObj.MouseEvent = typeof MouseEvent === 'undefined' ? {} : MouseEvent;\n// columnController\nvar columnFactory_1 = require(\"./dist/lib/columnController/columnFactory\");\nexports.ColumnFactory = columnFactory_1.ColumnFactory;\nvar columnController_1 = require(\"./dist/lib/columnController/columnController\");\nexports.ColumnController = columnController_1.ColumnController;\nvar columnKeyCreator_1 = require(\"./dist/lib/columnController/columnKeyCreator\");\nexports.ColumnKeyCreator = columnKeyCreator_1.ColumnKeyCreator;\nvar columnUtils_1 = require(\"./dist/lib/columnController/columnUtils\");\nexports.ColumnUtils = columnUtils_1.ColumnUtils;\nvar displayedGroupCreator_1 = require(\"./dist/lib/columnController/displayedGroupCreator\");\nexports.DisplayedGroupCreator = displayedGroupCreator_1.DisplayedGroupCreator;\nvar groupInstanceIdCreator_1 = require(\"./dist/lib/columnController/groupInstanceIdCreator\");\nexports.GroupInstanceIdCreator = groupInstanceIdCreator_1.GroupInstanceIdCreator;\n// components\nvar componentUtil_1 = require(\"./dist/lib/components/componentUtil\");\nexports.ComponentUtil = componentUtil_1.ComponentUtil;\nvar colDefUtil_1 = require(\"./dist/lib/components/colDefUtil\");\nexports.ColDefUtil = colDefUtil_1.ColDefUtil;\nvar userComponentRegistry_1 = require(\"./dist/lib/components/framework/userComponentRegistry\");\nexports.UserComponentRegistry = userComponentRegistry_1.UserComponentRegistry;\nvar userComponentFactory_1 = require(\"./dist/lib/components/framework/userComponentFactory\");\nexports.UserComponentFactory = userComponentFactory_1.UserComponentFactory;\nvar agGridNg1_1 = require(\"./dist/lib/components/agGridNg1\");\nexports.initialiseAgGridWithAngular1 = agGridNg1_1.initialiseAgGridWithAngular1;\nvar agGridWebComponent_1 = require(\"./dist/lib/components/agGridWebComponent\");\nexports.initialiseAgGridWithWebComponents = agGridWebComponent_1.initialiseAgGridWithWebComponents;\n// context\nvar beanStub_1 = require(\"./dist/lib/context/beanStub\");\nexports.BeanStub = beanStub_1.BeanStub;\nvar context_1 = require(\"./dist/lib/context/context\");\nexports.Context = context_1.Context;\nexports.Autowired = context_1.Autowired;\nexports.PostConstruct = context_1.PostConstruct;\nexports.PreConstruct = context_1.PreConstruct;\nexports.Optional = context_1.Optional;\nexports.Bean = context_1.Bean;\nexports.Qualifier = context_1.Qualifier;\nexports.PreDestroy = context_1.PreDestroy;\nvar componentAnnotations_1 = require(\"./dist/lib/widgets/componentAnnotations\");\nexports.QuerySelector = componentAnnotations_1.QuerySelector;\nexports.Listener = componentAnnotations_1.Listener;\nexports.RefSelector = componentAnnotations_1.RefSelector;\n// dragAndDrop\nvar dragAndDropService_1 = require(\"./dist/lib/dragAndDrop/dragAndDropService\");\nexports.DragAndDropService = dragAndDropService_1.DragAndDropService;\nexports.DragSourceType = dragAndDropService_1.DragSourceType;\nexports.HDirection = dragAndDropService_1.HDirection;\nexports.VDirection = dragAndDropService_1.VDirection;\nvar dragService_1 = require(\"./dist/lib/dragAndDrop/dragService\");\nexports.DragService = dragService_1.DragService;\n// entities\nvar column_1 = require(\"./dist/lib/entities/column\");\nexports.Column = column_1.Column;\nvar columnGroup_1 = require(\"./dist/lib/entities/columnGroup\");\nexports.ColumnGroup = columnGroup_1.ColumnGroup;\nvar originalColumnGroup_1 = require(\"./dist/lib/entities/originalColumnGroup\");\nexports.OriginalColumnGroup = originalColumnGroup_1.OriginalColumnGroup;\nvar rowNode_1 = require(\"./dist/lib/entities/rowNode\");\nexports.RowNode = rowNode_1.RowNode;\n// filter\nvar filterManager_1 = require(\"./dist/lib/filter/filterManager\");\nexports.FilterManager = filterManager_1.FilterManager;\nvar providedFilter_1 = require(\"./dist/lib/filter/provided/providedFilter\");\nexports.ProvidedFilter = providedFilter_1.ProvidedFilter;\nvar simpleFilter_1 = require(\"./dist/lib/filter/provided/simpleFilter\");\nexports.SimpleFilter = simpleFilter_1.SimpleFilter;\nvar scalerFilter_1 = require(\"./dist/lib/filter/provided/scalerFilter\");\nexports.ScalerFilter = scalerFilter_1.ScalerFilter;\nvar numberFilter_1 = require(\"./dist/lib/filter/provided/number/numberFilter\");\nexports.NumberFilter = numberFilter_1.NumberFilter;\nvar textFilter_1 = require(\"./dist/lib/filter/provided/text/textFilter\");\nexports.TextFilter = textFilter_1.TextFilter;\nvar dateFilter_1 = require(\"./dist/lib/filter/provided/date/dateFilter\");\nexports.DateFilter = dateFilter_1.DateFilter;\n// gridPanel\nvar gridPanel_1 = require(\"./dist/lib/gridPanel/gridPanel\");\nexports.GridPanel = gridPanel_1.GridPanel;\nvar scrollVisibleService_1 = require(\"./dist/lib/gridPanel/scrollVisibleService\");\nexports.ScrollVisibleService = scrollVisibleService_1.ScrollVisibleService;\nvar mouseEventService_1 = require(\"./dist/lib/gridPanel/mouseEventService\");\nexports.MouseEventService = mouseEventService_1.MouseEventService;\n// headerRendering\nvar bodyDropPivotTarget_1 = require(\"./dist/lib/headerRendering/bodyDropPivotTarget\");\nexports.BodyDropPivotTarget = bodyDropPivotTarget_1.BodyDropPivotTarget;\nvar bodyDropTarget_1 = require(\"./dist/lib/headerRendering/bodyDropTarget\");\nexports.BodyDropTarget = bodyDropTarget_1.BodyDropTarget;\nvar cssClassApplier_1 = require(\"./dist/lib/headerRendering/cssClassApplier\");\nexports.CssClassApplier = cssClassApplier_1.CssClassApplier;\nvar headerContainer_1 = require(\"./dist/lib/headerRendering/headerContainer\");\nexports.HeaderContainer = headerContainer_1.HeaderContainer;\nvar headerRootComp_1 = require(\"./dist/lib/headerRendering/headerRootComp\");\nexports.HeaderRootComp = headerRootComp_1.HeaderRootComp;\nvar headerRowComp_1 = require(\"./dist/lib/headerRendering/headerRowComp\");\nexports.HeaderRowComp = headerRowComp_1.HeaderRowComp;\nvar horizontalResizeService_1 = require(\"./dist/lib/headerRendering/horizontalResizeService\");\nexports.HorizontalResizeService = horizontalResizeService_1.HorizontalResizeService;\nvar moveColumnController_1 = require(\"./dist/lib/headerRendering/moveColumnController\");\nexports.MoveColumnController = moveColumnController_1.MoveColumnController;\nvar standardMenu_1 = require(\"./dist/lib/headerRendering/standardMenu\");\nexports.StandardMenuFactory = standardMenu_1.StandardMenuFactory;\n// layout\nvar tabbedLayout_1 = require(\"./dist/lib/layout/tabbedLayout\");\nexports.TabbedLayout = tabbedLayout_1.TabbedLayout;\nvar verticalStack_1 = require(\"./dist/lib/layout/verticalStack\");\nexports.VerticalStack = verticalStack_1.VerticalStack;\n// misc\nvar simpleHttpRequest_1 = require(\"./dist/lib/misc/simpleHttpRequest\");\nexports.simpleHttpRequest = simpleHttpRequest_1.simpleHttpRequest;\nvar resizeObserverService_1 = require(\"./dist/lib/misc/resizeObserverService\");\nexports.ResizeObserverService = resizeObserverService_1.ResizeObserverService;\nvar largeTextCellEditor_1 = require(\"./dist/lib/rendering/cellEditors/largeTextCellEditor\");\nexports.LargeTextCellEditor = largeTextCellEditor_1.LargeTextCellEditor;\nvar popupEditorWrapper_1 = require(\"./dist/lib/rendering/cellEditors/popupEditorWrapper\");\nexports.PopupEditorWrapper = popupEditorWrapper_1.PopupEditorWrapper;\nvar popupSelectCellEditor_1 = require(\"./dist/lib/rendering/cellEditors/popupSelectCellEditor\");\nexports.PopupSelectCellEditor = popupSelectCellEditor_1.PopupSelectCellEditor;\nvar popupTextCellEditor_1 = require(\"./dist/lib/rendering/cellEditors/popupTextCellEditor\");\nexports.PopupTextCellEditor = popupTextCellEditor_1.PopupTextCellEditor;\nvar selectCellEditor_1 = require(\"./dist/lib/rendering/cellEditors/selectCellEditor\");\nexports.SelectCellEditor = selectCellEditor_1.SelectCellEditor;\nvar textCellEditor_1 = require(\"./dist/lib/rendering/cellEditors/textCellEditor\");\nexports.TextCellEditor = textCellEditor_1.TextCellEditor;\nvar animateShowChangeCellRenderer_1 = require(\"./dist/lib/rendering/cellRenderers/animateShowChangeCellRenderer\");\nexports.AnimateShowChangeCellRenderer = animateShowChangeCellRenderer_1.AnimateShowChangeCellRenderer;\nvar animateSlideCellRenderer_1 = require(\"./dist/lib/rendering/cellRenderers/animateSlideCellRenderer\");\nexports.AnimateSlideCellRenderer = animateSlideCellRenderer_1.AnimateSlideCellRenderer;\nvar groupCellRenderer_1 = require(\"./dist/lib/rendering/cellRenderers/groupCellRenderer\");\nexports.GroupCellRenderer = groupCellRenderer_1.GroupCellRenderer;\n// features\nvar setLeftFeature_1 = require(\"./dist/lib/rendering/features/setLeftFeature\");\nexports.SetLeftFeature = setLeftFeature_1.SetLeftFeature;\n// rendering\nvar autoWidthCalculator_1 = require(\"./dist/lib/rendering/autoWidthCalculator\");\nexports.AutoWidthCalculator = autoWidthCalculator_1.AutoWidthCalculator;\nvar cellRendererFactory_1 = require(\"./dist/lib/rendering/cellRendererFactory\");\nexports.CellRendererFactory = cellRendererFactory_1.CellRendererFactory;\nvar checkboxSelectionComponent_1 = require(\"./dist/lib/rendering/checkboxSelectionComponent\");\nexports.CheckboxSelectionComponent = checkboxSelectionComponent_1.CheckboxSelectionComponent;\nvar cellComp_1 = require(\"./dist/lib/rendering/cellComp\");\nexports.CellComp = cellComp_1.CellComp;\nvar rowComp_1 = require(\"./dist/lib/rendering/rowComp\");\nexports.RowComp = rowComp_1.RowComp;\nvar rowRenderer_1 = require(\"./dist/lib/rendering/rowRenderer\");\nexports.RowRenderer = rowRenderer_1.RowRenderer;\nvar valueFormatterService_1 = require(\"./dist/lib/rendering/valueFormatterService\");\nexports.ValueFormatterService = valueFormatterService_1.ValueFormatterService;\n// rowControllers/inMemory\nvar filterStage_1 = require(\"./dist/lib/rowModels/clientSide/filterStage\");\nexports.FilterStage = filterStage_1.FilterStage;\nvar flattenStage_1 = require(\"./dist/lib/rowModels/clientSide/flattenStage\");\nexports.FlattenStage = flattenStage_1.FlattenStage;\nvar sortStage_1 = require(\"./dist/lib/rowModels/clientSide/sortStage\");\nexports.SortStage = sortStage_1.SortStage;\n// row models\nvar pinnedRowModel_1 = require(\"./dist/lib/rowModels/pinnedRowModel\");\nexports.PinnedRowModel = pinnedRowModel_1.PinnedRowModel;\nvar clientSideRowModel_1 = require(\"./dist/lib/rowModels/clientSide/clientSideRowModel\");\nexports.ClientSideRowModel = clientSideRowModel_1.ClientSideRowModel;\nvar changedPath_1 = require(\"./dist/lib/rowModels/clientSide/changedPath\");\nexports.ChangedPath = changedPath_1.ChangedPath;\nvar clientSideNodeManager_1 = require(\"./dist/lib/rowModels/clientSide/clientSideNodeManager\");\nexports.ClientSideNodeManager = clientSideNodeManager_1.ClientSideNodeManager;\nvar infiniteRowModel_1 = require(\"./dist/lib/rowModels/infinite/infiniteRowModel\");\nexports.InfiniteRowModel = infiniteRowModel_1.InfiniteRowModel;\nvar rowNodeBlock_1 = require(\"./dist/lib/rowModels/cache/rowNodeBlock\");\nexports.RowNodeBlock = rowNodeBlock_1.RowNodeBlock;\nvar rowNodeBlockLoader_1 = require(\"./dist/lib/rowModels/cache/rowNodeBlockLoader\");\nexports.RowNodeBlockLoader = rowNodeBlockLoader_1.RowNodeBlockLoader;\nvar paginationProxy_1 = require(\"./dist/lib/rowModels/paginationProxy\");\nexports.PaginationProxy = paginationProxy_1.PaginationProxy;\nvar rowNodeCache_1 = require(\"./dist/lib/rowModels/cache/rowNodeCache\");\nexports.RowNodeCache = rowNodeCache_1.RowNodeCache;\n//styling\nvar stylingService_1 = require(\"./dist/lib/styling/stylingService\");\nexports.StylingService = stylingService_1.StylingService;\n// widgets\nvar agCheckbox_1 = require(\"./dist/lib/widgets/agCheckbox\");\nexports.AgCheckbox = agCheckbox_1.AgCheckbox;\nvar agRadioButton_1 = require(\"./dist/lib/widgets/agRadioButton\");\nexports.AgRadioButton = agRadioButton_1.AgRadioButton;\nvar agGroupComponent_1 = require(\"./dist/lib/widgets/agGroupComponent\");\nexports.AgGroupComponent = agGroupComponent_1.AgGroupComponent;\nvar dialog_1 = require(\"./dist/lib/widgets/dialog\");\nexports.Dialog = dialog_1.Dialog;\nvar messageBox_1 = require(\"./dist/lib/widgets/messageBox\");\nexports.MessageBox = messageBox_1.MessageBox;\nvar component_1 = require(\"./dist/lib/widgets/component\");\nexports.Component = component_1.Component;\nvar popupComponent_1 = require(\"./dist/lib/widgets/popupComponent\");\nexports.PopupComponent = popupComponent_1.PopupComponent;\nvar popupService_1 = require(\"./dist/lib/widgets/popupService\");\nexports.PopupService = popupService_1.PopupService;\nvar touchListener_1 = require(\"./dist/lib/widgets/touchListener\");\nexports.TouchListener = touchListener_1.TouchListener;\n// range\nvar iRangeController_1 = require(\"./dist/lib/interfaces/iRangeController\");\nexports.CellRangeType = iRangeController_1.CellRangeType;\n// exporter\nvar csvCreator_1 = require(\"./dist/lib/exporter/csvCreator\");\nexports.CsvCreator = csvCreator_1.CsvCreator;\nexports.BaseCreator = csvCreator_1.BaseCreator;\nvar downloader_1 = require(\"./dist/lib/exporter/downloader\");\nexports.Downloader = downloader_1.Downloader;\nvar xmlFactory_1 = require(\"./dist/lib/exporter/xmlFactory\");\nexports.XmlFactory = xmlFactory_1.XmlFactory;\nvar gridSerializer_1 = require(\"./dist/lib/exporter/gridSerializer\");\nexports.BaseGridSerializingSession = gridSerializer_1.BaseGridSerializingSession;\nexports.GridSerializer = gridSerializer_1.GridSerializer;\nvar gridSerializer_2 = require(\"./dist/lib/exporter/gridSerializer\");\nexports.RowType = gridSerializer_2.RowType;\nvar zipContainer_1 = require(\"./dist/lib/exporter/files/zip/zipContainer\");\nexports.ZipContainer = zipContainer_1.ZipContainer;\n// root\nvar vanillaFrameworkOverrides_1 = require(\"./dist/lib/vanillaFrameworkOverrides\");\nexports.VanillaFrameworkOverrides = vanillaFrameworkOverrides_1.VanillaFrameworkOverrides;\nvar cellNavigationService_1 = require(\"./dist/lib/cellNavigationService\");\nexports.CellNavigationService = cellNavigationService_1.CellNavigationService;\nvar alignedGridsService_1 = require(\"./dist/lib/alignedGridsService\");\nexports.AlignedGridsService = alignedGridsService_1.AlignedGridsService;\nvar constants_1 = require(\"./dist/lib/constants\");\nexports.Constants = constants_1.Constants;\nvar grid_1 = require(\"./dist/lib/grid\");\nexports.Grid = grid_1.Grid;\nvar gridApi_1 = require(\"./dist/lib/gridApi\");\nexports.GridApi = gridApi_1.GridApi;\nvar eventKeys_1 = require(\"./dist/lib/eventKeys\");\nexports.Events = eventKeys_1.Events;\nvar focusedCellController_1 = require(\"./dist/lib/focusedCellController\");\nexports.FocusedCellController = focusedCellController_1.FocusedCellController;\nvar functions_1 = require(\"./dist/lib/functions\");\nexports.defaultGroupComparator = functions_1.defaultGroupComparator;\nvar gridOptionsWrapper_1 = require(\"./dist/lib/gridOptionsWrapper\");\nexports.GridOptionsWrapper = gridOptionsWrapper_1.GridOptionsWrapper;\nvar eventService_1 = require(\"./dist/lib/eventService\");\nexports.EventService = eventService_1.EventService;\nvar selectableService_1 = require(\"./dist/lib/rowNodes/selectableService\");\nexports.SelectableService = selectableService_1.SelectableService;\nvar gridCore_1 = require(\"./dist/lib/gridCore\");\nexports.GridCore = gridCore_1.GridCore;\nvar logger_1 = require(\"./dist/lib/logger\");\nexports.Logger = logger_1.Logger;\nvar selectionController_1 = require(\"./dist/lib/selectionController\");\nexports.SelectionController = selectionController_1.SelectionController;\nvar sortController_1 = require(\"./dist/lib/sortController\");\nexports.SortController = sortController_1.SortController;\nvar templateService_1 = require(\"./dist/lib/templateService\");\nexports.TemplateService = templateService_1.TemplateService;\nvar utils_1 = require(\"./dist/lib/utils\");\nexports.Utils = utils_1.Utils;\nexports.NumberSequence = utils_1.NumberSequence;\nexports._ = utils_1._;\nexports.Promise = utils_1.Promise;\nvar valueService_1 = require(\"./dist/lib/valueService/valueService\");\nexports.ValueService = valueService_1.ValueService;\nvar expressionService_1 = require(\"./dist/lib/valueService/expressionService\");\nexports.ExpressionService = expressionService_1.ExpressionService;\nvar logger_2 = require(\"./dist/lib/logger\");\nexports.LoggerFactory = logger_2.LoggerFactory;\nvar cellPosition_1 = require(\"./dist/lib/entities/cellPosition\");\nexports.CellPositionUtils = cellPosition_1.CellPositionUtils;\nvar rowPosition_1 = require(\"./dist/lib/entities/rowPosition\");\nexports.RowPositionUtils = rowPosition_1.RowPositionUtils;\nvar columnApi_1 = require(\"./dist/lib/columnController/columnApi\");\nexports.ColumnApi = columnApi_1.ColumnApi;\nvar frameworkComponentWrapper_1 = require(\"./dist/lib/components/framework/frameworkComponentWrapper\");\nexports.BaseComponentWrapper = frameworkComponentWrapper_1.BaseComponentWrapper;\nvar environment_1 = require(\"./dist/lib/environment\");\nexports.Environment = environment_1.Environment;\nvar tooltipManager_1 = require(\"./dist/lib/widgets/tooltipManager\");\nexports.TooltipManager = tooltipManager_1.TooltipManager;\n// charts\nvar iChartOptions_1 = require(\"./dist/lib/interfaces/iChartOptions\");\nexports.ChartType = iChartOptions_1.ChartType;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Events = /** @class */ (function () {\n    function Events() {\n    }\n    /** Everything has changed with the columns. Either complete new set of columns set, or user called setState()*/\n    Events.EVENT_COLUMN_EVERYTHING_CHANGED = 'columnEverythingChanged';\n    /** User has set in new columns. */\n    Events.EVENT_NEW_COLUMNS_LOADED = 'newColumnsLoaded';\n    /** The pivot mode flag was changed */\n    Events.EVENT_COLUMN_PIVOT_MODE_CHANGED = 'columnPivotModeChanged';\n    /** A row group column was added, removed or order changed. */\n    Events.EVENT_COLUMN_ROW_GROUP_CHANGED = 'columnRowGroupChanged';\n    /** expandAll / collapseAll was called from the api. */\n    Events.EVENT_EXPAND_COLLAPSE_ALL = 'expandOrCollapseAll';\n    /** A pivot column was added, removed or order changed. */\n    Events.EVENT_COLUMN_PIVOT_CHANGED = 'columnPivotChanged';\n    /** The list of grid columns has changed. */\n    Events.EVENT_GRID_COLUMNS_CHANGED = 'gridColumnsChanged';\n    /** A value column was added, removed or agg function was changed. */\n    Events.EVENT_COLUMN_VALUE_CHANGED = 'columnValueChanged';\n    /** A column was moved */\n    Events.EVENT_COLUMN_MOVED = 'columnMoved';\n    /** One or more columns was shown / hidden */\n    Events.EVENT_COLUMN_VISIBLE = 'columnVisible';\n    /** One or more columns was pinned / unpinned*/\n    Events.EVENT_COLUMN_PINNED = 'columnPinned';\n    /** A column group was opened / closed */\n    Events.EVENT_COLUMN_GROUP_OPENED = 'columnGroupOpened';\n    /** One or more columns was resized. If just one, the column in the event is set. */\n    Events.EVENT_COLUMN_RESIZED = 'columnResized';\n    /** The list of displayed columns has changed, can result from columns open / close, column move, pivot, group, etc */\n    Events.EVENT_DISPLAYED_COLUMNS_CHANGED = 'displayedColumnsChanged';\n    /** The list of virtual columns has changed, results from viewport changing */\n    Events.EVENT_VIRTUAL_COLUMNS_CHANGED = 'virtualColumnsChanged';\n    /** A row group was opened / closed */\n    Events.EVENT_ROW_GROUP_OPENED = 'rowGroupOpened';\n    /** The client has set new data into the grid */\n    Events.EVENT_ROW_DATA_CHANGED = 'rowDataChanged';\n    /** The client has updated data for the grid */\n    Events.EVENT_ROW_DATA_UPDATED = 'rowDataUpdated';\n    /** The client has set new floating data into the grid */\n    Events.EVENT_PINNED_ROW_DATA_CHANGED = 'pinnedRowDataChanged';\n    /** Range selection has changed */\n    Events.EVENT_RANGE_SELECTION_CHANGED = 'rangeSelectionChanged';\n    /** Chart Range selection has changed */\n    Events.EVENT_CHART_RANGE_SELECTION_CHANGED = 'chartRangeSelectionChanged';\n    /** For when the tool panel is shown / hidden */\n    Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED = 'toolPanelVisibleChanged';\n    /** Model was updated - grid updates the drawn rows when this happens */\n    Events.EVENT_MODEL_UPDATED = 'modelUpdated';\n    Events.EVENT_PASTE_START = 'pasteStart';\n    Events.EVENT_PASTE_END = 'pasteEnd';\n    Events.EVENT_CELL_CLICKED = 'cellClicked';\n    Events.EVENT_CELL_DOUBLE_CLICKED = 'cellDoubleClicked';\n    Events.EVENT_CELL_MOUSE_DOWN = 'cellMouseDown';\n    Events.EVENT_CELL_CONTEXT_MENU = 'cellContextMenu';\n    Events.EVENT_CELL_VALUE_CHANGED = 'cellValueChanged';\n    Events.EVENT_ROW_VALUE_CHANGED = 'rowValueChanged';\n    Events.EVENT_CELL_FOCUSED = 'cellFocused';\n    Events.EVENT_ROW_SELECTED = 'rowSelected';\n    Events.EVENT_SELECTION_CHANGED = 'selectionChanged';\n    Events.EVENT_CELL_KEY_DOWN = 'cellKeyDown';\n    Events.EVENT_CELL_KEY_PRESS = 'cellKeyPress';\n    Events.EVENT_CELL_MOUSE_OVER = 'cellMouseOver';\n    Events.EVENT_CELL_MOUSE_OUT = 'cellMouseOut';\n    /** 2 events for filtering. The grid LISTENS for filterChanged and afterFilterChanged */\n    Events.EVENT_FILTER_CHANGED = 'filterChanged';\n    /** Filter was change but not applied. Only useful if apply buttons are used in filters. */\n    Events.EVENT_FILTER_MODIFIED = 'filterModified';\n    Events.EVENT_FILTER_OPENED = 'filterOpened';\n    Events.EVENT_SORT_CHANGED = 'sortChanged';\n    /** A row was removed from the dom, for any reason. Use to clean up resources (if any) used by the row. */\n    Events.EVENT_VIRTUAL_ROW_REMOVED = 'virtualRowRemoved';\n    Events.EVENT_ROW_CLICKED = 'rowClicked';\n    Events.EVENT_ROW_DOUBLE_CLICKED = 'rowDoubleClicked';\n    /** Gets called once after the grid has finished initialising. */\n    Events.EVENT_GRID_READY = 'gridReady';\n    /** Width of height of the main grid div has changed. Grid listens for this and does layout of grid if it's\n     * changed, so always filling the space it was given. */\n    Events.EVENT_GRID_SIZE_CHANGED = 'gridSizeChanged';\n    /** The indexes of the rows rendered has changed, eg user has scrolled to a new vertical position. */\n    Events.EVENT_VIEWPORT_CHANGED = 'viewportChanged';\n    /** Rows were rendered for the first time (ie on async data load). */\n    Events.EVENT_FIRST_DATA_RENDERED = 'firstDataRendered';\n    /** A column drag has started, either resizing a column or moving a column. */\n    Events.EVENT_DRAG_STARTED = 'dragStarted';\n    /** A column drag has stopped */\n    Events.EVENT_DRAG_STOPPED = 'dragStopped';\n    Events.EVENT_ROW_EDITING_STARTED = 'rowEditingStarted';\n    Events.EVENT_ROW_EDITING_STOPPED = 'rowEditingStopped';\n    Events.EVENT_CELL_EDITING_STARTED = 'cellEditingStarted';\n    Events.EVENT_CELL_EDITING_STOPPED = 'cellEditingStopped';\n    /** Main body of grid has scrolled, either horizontally or vertically */\n    Events.EVENT_BODY_SCROLL = 'bodyScroll';\n    Events.EVENT_ANIMATION_QUEUE_EMPTY = 'animationQueueEmpty';\n    Events.EVENT_HEIGHT_SCALE_CHANGED = 'heightScaleChanged';\n    /** The displayed page for pagination has changed. For example the data was filtered or sorted,\n     * or the user has moved to a different page. */\n    Events.EVENT_PAGINATION_CHANGED = 'paginationChanged';\n    /** Only used by React, Angular 2+, Web Components, Aurelia and VueJS ag-Grid components\n     * (not used if doing plain JavaScript or Angular 1.x). If the grid receives changes due\n     * to bound properties, this event fires after the grid has finished processing the change. */\n    Events.EVENT_COMPONENT_STATE_CHANGED = 'componentStateChanged';\n    /** All items from here down are used internally by the grid, not intended for external use. */\n    // not documented, either experimental, or we just don't want users using an depending on them\n    Events.EVENT_BODY_HEIGHT_CHANGED = 'bodyHeightChanged';\n    Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED = 'displayedColumnsWidthChanged';\n    Events.EVENT_SCROLL_VISIBILITY_CHANGED = 'scrollVisibilityChanged';\n    Events.EVENT_COLUMN_HOVER_CHANGED = 'columnHoverChanged';\n    Events.EVENT_FLASH_CELLS = 'flashCells';\n    Events.EVENT_ROW_DRAG_ENTER = 'rowDragEnter';\n    Events.EVENT_ROW_DRAG_MOVE = 'rowDragMove';\n    Events.EVENT_ROW_DRAG_LEAVE = 'rowDragLeave';\n    Events.EVENT_ROW_DRAG_END = 'rowDragEnd';\n    // these are used for server side group and agg - only used by CS with Viewport Row Model - intention is\n    // to design these better around server side functions and then release to general public when fully working with\n    // all the row models.\n    Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST = 'columnRowGroupChangeRequest';\n    Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = 'columnPivotChangeRequest';\n    Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST = 'columnValueChangeRequest';\n    Events.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST = 'columnAggFuncChangeRequest';\n    return Events;\n}());\nexports.Events = Events;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar column_1 = require(\"./column\");\nvar eventService_1 = require(\"../eventService\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar utils_1 = require(\"../utils\");\nvar ColumnGroup = /** @class */ (function () {\n    function ColumnGroup(originalColumnGroup, groupId, instanceId, pinned) {\n        // depends on the open/closed state of the group, only displaying columns are stored here\n        this.displayedChildren = [];\n        this.localEventService = new eventService_1.EventService();\n        this.groupId = groupId;\n        this.instanceId = instanceId;\n        this.originalColumnGroup = originalColumnGroup;\n        this.pinned = pinned;\n    }\n    // this is static, a it is used outside of this class\n    ColumnGroup.createUniqueId = function (groupId, instanceId) {\n        return groupId + '_' + instanceId;\n    };\n    // as the user is adding and removing columns, the groups are recalculated.\n    // this reset clears out all children, ready for children to be added again\n    ColumnGroup.prototype.reset = function () {\n        this.parent = null;\n        this.children = null;\n        this.displayedChildren = null;\n    };\n    ColumnGroup.prototype.getParent = function () {\n        return this.parent;\n    };\n    ColumnGroup.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    ColumnGroup.prototype.getUniqueId = function () {\n        return ColumnGroup.createUniqueId(this.groupId, this.instanceId);\n    };\n    ColumnGroup.prototype.isEmptyGroup = function () {\n        return this.displayedChildren.length === 0;\n    };\n    ColumnGroup.prototype.isMoving = function () {\n        var allLeafColumns = this.getOriginalColumnGroup().getLeafColumns();\n        if (!allLeafColumns || allLeafColumns.length === 0) {\n            return false;\n        }\n        var allMoving = true;\n        allLeafColumns.forEach(function (col) {\n            if (!col.isMoving()) {\n                allMoving = false;\n            }\n        });\n        return allMoving;\n    };\n    ColumnGroup.prototype.checkLeft = function () {\n        // first get all children to setLeft, as it impacts our decision below\n        this.displayedChildren.forEach(function (child) {\n            if (child instanceof ColumnGroup) {\n                child.checkLeft();\n            }\n        });\n        // set our left based on first displayed column\n        if (this.displayedChildren.length > 0) {\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                var lastChild = utils_1._.last(this.displayedChildren);\n                var lastChildLeft = lastChild.getLeft();\n                this.setLeft(lastChildLeft);\n            }\n            else {\n                var firstChildLeft = this.displayedChildren[0].getLeft();\n                this.setLeft(firstChildLeft);\n            }\n        }\n        else {\n            // this should never happen, as if we have no displayed columns, then\n            // this groups should not even exist.\n            this.setLeft(null);\n        }\n    };\n    ColumnGroup.prototype.getLeft = function () {\n        return this.left;\n    };\n    ColumnGroup.prototype.getOldLeft = function () {\n        return this.oldLeft;\n    };\n    ColumnGroup.prototype.setLeft = function (left) {\n        this.oldLeft = left;\n        if (this.left !== left) {\n            this.left = left;\n            this.localEventService.dispatchEvent(this.createAgEvent(ColumnGroup.EVENT_LEFT_CHANGED));\n        }\n    };\n    ColumnGroup.prototype.getPinned = function () {\n        return this.pinned;\n    };\n    ColumnGroup.prototype.createAgEvent = function (type) {\n        return {\n            type: type,\n        };\n    };\n    ColumnGroup.prototype.addEventListener = function (eventType, listener) {\n        this.localEventService.addEventListener(eventType, listener);\n    };\n    ColumnGroup.prototype.removeEventListener = function (eventType, listener) {\n        this.localEventService.removeEventListener(eventType, listener);\n    };\n    ColumnGroup.prototype.getGroupId = function () {\n        return this.groupId;\n    };\n    ColumnGroup.prototype.getInstanceId = function () {\n        return this.instanceId;\n    };\n    ColumnGroup.prototype.isChildInThisGroupDeepSearch = function (wantedChild) {\n        var result = false;\n        this.children.forEach(function (foundChild) {\n            if (wantedChild === foundChild) {\n                result = true;\n            }\n            if (foundChild instanceof ColumnGroup) {\n                if (foundChild.isChildInThisGroupDeepSearch(wantedChild)) {\n                    result = true;\n                }\n            }\n        });\n        return result;\n    };\n    ColumnGroup.prototype.getActualWidth = function () {\n        var groupActualWidth = 0;\n        if (this.displayedChildren) {\n            this.displayedChildren.forEach(function (child) {\n                groupActualWidth += child.getActualWidth();\n            });\n        }\n        return groupActualWidth;\n    };\n    ColumnGroup.prototype.isResizable = function () {\n        if (!this.displayedChildren) {\n            return false;\n        }\n        // if at least one child is resizable, then the group is resizable\n        var result = false;\n        this.displayedChildren.forEach(function (child) {\n            if (child.isResizable()) {\n                result = true;\n            }\n        });\n        return result;\n    };\n    ColumnGroup.prototype.getMinWidth = function () {\n        var result = 0;\n        this.displayedChildren.forEach(function (groupChild) {\n            result += groupChild.getMinWidth();\n        });\n        return result;\n    };\n    ColumnGroup.prototype.addChild = function (child) {\n        if (!this.children) {\n            this.children = [];\n        }\n        this.children.push(child);\n    };\n    ColumnGroup.prototype.getDisplayedChildren = function () {\n        return this.displayedChildren;\n    };\n    ColumnGroup.prototype.getLeafColumns = function () {\n        var result = [];\n        this.addLeafColumns(result);\n        return result;\n    };\n    ColumnGroup.prototype.getDisplayedLeafColumns = function () {\n        var result = [];\n        this.addDisplayedLeafColumns(result);\n        return result;\n    };\n    // why two methods here doing the same thing?\n    ColumnGroup.prototype.getDefinition = function () {\n        return this.originalColumnGroup.getColGroupDef();\n    };\n    ColumnGroup.prototype.getColGroupDef = function () {\n        return this.originalColumnGroup.getColGroupDef();\n    };\n    ColumnGroup.prototype.isPadding = function () {\n        return this.originalColumnGroup.isPadding();\n    };\n    ColumnGroup.prototype.isExpandable = function () {\n        return this.originalColumnGroup.isExpandable();\n    };\n    ColumnGroup.prototype.isExpanded = function () {\n        return this.originalColumnGroup.isExpanded();\n    };\n    ColumnGroup.prototype.setExpanded = function (expanded) {\n        this.originalColumnGroup.setExpanded(expanded);\n    };\n    ColumnGroup.prototype.addDisplayedLeafColumns = function (leafColumns) {\n        this.displayedChildren.forEach(function (child) {\n            if (child instanceof column_1.Column) {\n                leafColumns.push(child);\n            }\n            else if (child instanceof ColumnGroup) {\n                child.addDisplayedLeafColumns(leafColumns);\n            }\n        });\n    };\n    ColumnGroup.prototype.addLeafColumns = function (leafColumns) {\n        this.children.forEach(function (child) {\n            if (child instanceof column_1.Column) {\n                leafColumns.push(child);\n            }\n            else if (child instanceof ColumnGroup) {\n                child.addLeafColumns(leafColumns);\n            }\n        });\n    };\n    ColumnGroup.prototype.getChildren = function () {\n        return this.children;\n    };\n    ColumnGroup.prototype.getColumnGroupShow = function () {\n        return this.originalColumnGroup.getColumnGroupShow();\n    };\n    ColumnGroup.prototype.getOriginalColumnGroup = function () {\n        return this.originalColumnGroup;\n    };\n    ColumnGroup.prototype.calculateDisplayedColumns = function () {\n        var _this = this;\n        // clear out last time we calculated\n        this.displayedChildren = [];\n        var topLevelGroup = this;\n        // find the column group that is controlling expandable. this is relevant when we have padding (empty)\n        // groups, where the expandable is actually the first parent that is not a padding group.\n        if (this.isPadding()) {\n            while (topLevelGroup.getParent() && topLevelGroup.isPadding()) {\n                topLevelGroup = topLevelGroup.getParent();\n            }\n        }\n        var isExpandable = topLevelGroup.originalColumnGroup.isExpandable();\n        // it not expandable, everything is visible\n        if (!isExpandable) {\n            this.displayedChildren = this.children;\n        }\n        else {\n            // Add cols based on columnGroupShow\n            // Note - the below also adds padding groups, these are always added because they never have\n            // colDef.columnGroupShow set.\n            this.children.forEach(function (abstractColumn) {\n                var headerGroupShow = abstractColumn.getColumnGroupShow();\n                switch (headerGroupShow) {\n                    case ColumnGroup.HEADER_GROUP_SHOW_OPEN:\n                        // when set to open, only show col if group is open\n                        if (topLevelGroup.originalColumnGroup.isExpanded()) {\n                            _this.displayedChildren.push(abstractColumn);\n                        }\n                        break;\n                    case ColumnGroup.HEADER_GROUP_SHOW_CLOSED:\n                        // when set to open, only show col if group is open\n                        if (!topLevelGroup.originalColumnGroup.isExpanded()) {\n                            _this.displayedChildren.push(abstractColumn);\n                        }\n                        break;\n                    default:\n                        // default is always show the column\n                        _this.displayedChildren.push(abstractColumn);\n                        break;\n                }\n            });\n        }\n        this.localEventService.dispatchEvent(this.createAgEvent(ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED));\n    };\n    ColumnGroup.HEADER_GROUP_SHOW_OPEN = 'open';\n    ColumnGroup.HEADER_GROUP_SHOW_CLOSED = 'closed';\n    ColumnGroup.EVENT_LEFT_CHANGED = 'leftChanged';\n    ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED = 'displayedChildrenChanged';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ColumnGroup.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], ColumnGroup.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], ColumnGroup.prototype, \"gridApi\", void 0);\n    return ColumnGroup;\n}());\nexports.ColumnGroup = ColumnGroup;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"./component\");\nvar utils_1 = require(\"../utils\");\nvar PopupComponent = /** @class */ (function (_super) {\n    __extends(PopupComponent, _super);\n    function PopupComponent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PopupComponent.prototype.isPopup = function () {\n        return true;\n    };\n    PopupComponent.prototype.setParentComponent = function (container) {\n        utils_1._.addCssClass(container.getGui(), 'ag-has-popup');\n        _super.prototype.setParentComponent.call(this, container);\n    };\n    PopupComponent.prototype.destroy = function () {\n        var parentComp = this.parentComponent;\n        var hasParent = parentComp && parentComp.isAlive();\n        if (hasParent) {\n            utils_1._.removeCssClass(parentComp.getGui(), 'ag-has-popup');\n        }\n        _super.prototype.destroy.call(this);\n    };\n    return PopupComponent;\n}(component_1.Component));\nexports.PopupComponent = PopupComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar rowNode_1 = require(\"../entities/rowNode\");\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar constants_1 = require(\"../constants\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar utils_1 = require(\"../utils\");\nvar PinnedRowModel = /** @class */ (function () {\n    function PinnedRowModel() {\n    }\n    PinnedRowModel.prototype.init = function () {\n        this.setPinnedTopRowData(this.gridOptionsWrapper.getPinnedTopRowData());\n        this.setPinnedBottomRowData(this.gridOptionsWrapper.getPinnedBottomRowData());\n    };\n    PinnedRowModel.prototype.isEmpty = function (floating) {\n        var rows = floating === constants_1.Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n        return utils_1._.missingOrEmpty(rows);\n    };\n    PinnedRowModel.prototype.isRowsToRender = function (floating) {\n        return !this.isEmpty(floating);\n    };\n    PinnedRowModel.prototype.getRowAtPixel = function (pixel, floating) {\n        var rows = floating === constants_1.Constants.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;\n        if (utils_1._.missingOrEmpty(rows)) {\n            return 0; // this should never happen, just in case, 0 is graceful failure\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rowNode = rows[i];\n            var rowTopPixel = rowNode.rowTop + rowNode.rowHeight - 1;\n            // only need to range check against the top pixel, as we are going through the list\n            // in order, first row to hit the pixel wins\n            if (rowTopPixel >= pixel) {\n                return i;\n            }\n        }\n        return rows.length - 1;\n    };\n    PinnedRowModel.prototype.setPinnedTopRowData = function (rowData) {\n        this.pinnedTopRows = this.createNodesFromData(rowData, true);\n        var event = {\n            type: events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    PinnedRowModel.prototype.setPinnedBottomRowData = function (rowData) {\n        this.pinnedBottomRows = this.createNodesFromData(rowData, false);\n        var event = {\n            type: events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    PinnedRowModel.prototype.createNodesFromData = function (allData, isTop) {\n        var _this = this;\n        var rowNodes = [];\n        if (allData) {\n            var nextRowTop_1 = 0;\n            allData.forEach(function (dataItem, index) {\n                var rowNode = new rowNode_1.RowNode();\n                _this.context.wireBean(rowNode);\n                rowNode.data = dataItem;\n                rowNode.rowPinned = isTop ? constants_1.Constants.PINNED_TOP : constants_1.Constants.PINNED_BOTTOM;\n                rowNode.setRowTop(nextRowTop_1);\n                rowNode.setRowHeight(_this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n                rowNode.setRowIndex(index);\n                nextRowTop_1 += rowNode.rowHeight;\n                rowNodes.push(rowNode);\n            });\n        }\n        return rowNodes;\n    };\n    PinnedRowModel.prototype.getPinnedTopRowData = function () {\n        return this.pinnedTopRows;\n    };\n    PinnedRowModel.prototype.getPinnedBottomRowData = function () {\n        return this.pinnedBottomRows;\n    };\n    PinnedRowModel.prototype.getPinnedTopTotalHeight = function () {\n        return this.getTotalHeight(this.pinnedTopRows);\n    };\n    PinnedRowModel.prototype.getPinnedTopRowCount = function () {\n        return this.pinnedTopRows ? this.pinnedTopRows.length : 0;\n    };\n    PinnedRowModel.prototype.getPinnedBottomRowCount = function () {\n        return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;\n    };\n    PinnedRowModel.prototype.getPinnedTopRow = function (index) {\n        return this.pinnedTopRows[index];\n    };\n    PinnedRowModel.prototype.getPinnedBottomRow = function (index) {\n        return this.pinnedBottomRows[index];\n    };\n    PinnedRowModel.prototype.forEachPinnedTopRow = function (callback) {\n        if (utils_1._.missingOrEmpty(this.pinnedTopRows)) {\n            return;\n        }\n        this.pinnedTopRows.forEach(callback);\n    };\n    PinnedRowModel.prototype.forEachPinnedBottomRow = function (callback) {\n        if (utils_1._.missingOrEmpty(this.pinnedBottomRows)) {\n            return;\n        }\n        this.pinnedBottomRows.forEach(callback);\n    };\n    PinnedRowModel.prototype.getPinnedBottomTotalHeight = function () {\n        return this.getTotalHeight(this.pinnedBottomRows);\n    };\n    PinnedRowModel.prototype.getTotalHeight = function (rowNodes) {\n        if (!rowNodes || rowNodes.length === 0) {\n            return 0;\n        }\n        else {\n            var lastNode = utils_1._.last(rowNodes);\n            return lastNode.rowTop + lastNode.rowHeight;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], PinnedRowModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], PinnedRowModel.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], PinnedRowModel.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], PinnedRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], PinnedRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PinnedRowModel.prototype, \"init\", null);\n    PinnedRowModel = __decorate([\n        context_1.Bean('pinnedRowModel')\n    ], PinnedRowModel);\n    return PinnedRowModel;\n}());\nexports.PinnedRowModel = PinnedRowModel;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar gridApi_1 = require(\"../gridApi\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar expressionService_1 = require(\"../valueService/expressionService\");\nvar rowRenderer_1 = require(\"./rowRenderer\");\nvar templateService_1 = require(\"../templateService\");\nvar valueService_1 = require(\"../valueService/valueService\");\nvar eventService_1 = require(\"../eventService\");\nvar columnAnimationService_1 = require(\"./columnAnimationService\");\nvar focusedCellController_1 = require(\"../focusedCellController\");\nvar cellRendererFactory_1 = require(\"./cellRendererFactory\");\nvar popupService_1 = require(\"../widgets/popupService\");\nvar valueFormatterService_1 = require(\"./valueFormatterService\");\nvar stylingService_1 = require(\"../styling/stylingService\");\nvar columnHoverService_1 = require(\"./columnHoverService\");\nvar paginationProxy_1 = require(\"../rowModels/paginationProxy\");\nvar animationFrameService_1 = require(\"../misc/animationFrameService\");\nvar userComponentFactory_1 = require(\"../components/framework/userComponentFactory\");\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar sortController_1 = require(\"../sortController\");\nvar filterManager_1 = require(\"../filter/filterManager\");\nvar maxDivHeightScaler_1 = require(\"./maxDivHeightScaler\");\nvar tooltipManager_1 = require(\"../widgets/tooltipManager\");\n/** Using the IoC has a slight performance consideration, which is no problem most of the\n * time, unless we are trashing objects - which is the case when scrolling and rowComp\n * and cellComp. So for performance reasons, RowComp and CellComp do not get autowired\n * with the IoC. Instead they get passed this object which is all the beans the RowComp\n * and CellComp need. Not autowiring all the cells gives performance improvement. */\nvar Beans = /** @class */ (function () {\n    function Beans() {\n    }\n    Beans.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    Beans.prototype.postConstruct = function () {\n        this.doingMasterDetail = this.gridOptionsWrapper.isMasterDetail();\n    };\n    __decorate([\n        context_1.Autowired('paginationProxy'),\n        __metadata(\"design:type\", paginationProxy_1.PaginationProxy)\n    ], Beans.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], Beans.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], Beans.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], Beans.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], Beans.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], Beans.prototype, \"expressionService\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], Beans.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('$compile'),\n        __metadata(\"design:type\", Object)\n    ], Beans.prototype, \"$compile\", void 0);\n    __decorate([\n        context_1.Autowired('templateService'),\n        __metadata(\"design:type\", templateService_1.TemplateService)\n    ], Beans.prototype, \"templateService\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], Beans.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], Beans.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], Beans.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('columnAnimationService'),\n        __metadata(\"design:type\", columnAnimationService_1.ColumnAnimationService)\n    ], Beans.prototype, \"columnAnimationService\", void 0);\n    __decorate([\n        context_1.Optional('rangeController'),\n        __metadata(\"design:type\", Object)\n    ], Beans.prototype, \"rangeController\", void 0);\n    __decorate([\n        context_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], Beans.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Optional('contextMenuFactory'),\n        __metadata(\"design:type\", Object)\n    ], Beans.prototype, \"contextMenuFactory\", void 0);\n    __decorate([\n        context_1.Autowired('cellRendererFactory'),\n        __metadata(\"design:type\", cellRendererFactory_1.CellRendererFactory)\n    ], Beans.prototype, \"cellRendererFactory\", void 0);\n    __decorate([\n        context_1.Autowired('popupService'),\n        __metadata(\"design:type\", popupService_1.PopupService)\n    ], Beans.prototype, \"popupService\", void 0);\n    __decorate([\n        context_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", valueFormatterService_1.ValueFormatterService)\n    ], Beans.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        context_1.Autowired('stylingService'),\n        __metadata(\"design:type\", stylingService_1.StylingService)\n    ], Beans.prototype, \"stylingService\", void 0);\n    __decorate([\n        context_1.Autowired('columnHoverService'),\n        __metadata(\"design:type\", columnHoverService_1.ColumnHoverService)\n    ], Beans.prototype, \"columnHoverService\", void 0);\n    __decorate([\n        context_1.Autowired('enterprise'),\n        __metadata(\"design:type\", Boolean)\n    ], Beans.prototype, \"enterprise\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], Beans.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        context_1.Autowired('animationFrameService'),\n        __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)\n    ], Beans.prototype, \"taskQueue\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], Beans.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('sortController'),\n        __metadata(\"design:type\", sortController_1.SortController)\n    ], Beans.prototype, \"sortController\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], Beans.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('maxDivHeightScaler'),\n        __metadata(\"design:type\", maxDivHeightScaler_1.MaxDivHeightScaler)\n    ], Beans.prototype, \"maxDivHeightScaler\", void 0);\n    __decorate([\n        context_1.Autowired('tooltipManager'),\n        __metadata(\"design:type\", tooltipManager_1.TooltipManager)\n    ], Beans.prototype, \"tooltipManager\", void 0);\n    __decorate([\n        context_1.Autowired('frameworkOverrides'),\n        __metadata(\"design:type\", Object)\n    ], Beans.prototype, \"frameworkOverrides\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Beans.prototype, \"postConstruct\", null);\n    Beans = __decorate([\n        context_1.Bean('beans')\n    ], Beans);\n    return Beans;\n}());\nexports.Beans = Beans;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnGroup_1 = require(\"../entities/columnGroup\");\nvar originalColumnGroup_1 = require(\"../entities/originalColumnGroup\");\nvar context_1 = require(\"../context/context\");\nvar context_2 = require(\"../context/context\");\n// takes in a list of columns, as specified by the column definitions, and returns column groups\nvar ColumnUtils = /** @class */ (function () {\n    function ColumnUtils() {\n    }\n    ColumnUtils.prototype.calculateColInitialWidth = function (colDef) {\n        if (!colDef.width) {\n            // if no width defined in colDef, use default\n            return this.gridOptionsWrapper.getColWidth();\n        }\n        else if (colDef.width < this.gridOptionsWrapper.getMinColWidth()) {\n            // if width in col def to small, set to min width\n            return this.gridOptionsWrapper.getMinColWidth();\n        }\n        else {\n            // otherwise use the provided width\n            return colDef.width;\n        }\n    };\n    ColumnUtils.prototype.getOriginalPathForColumn = function (column, originalBalancedTree) {\n        var result = [];\n        var found = false;\n        recursePath(originalBalancedTree, 0);\n        // we should always find the path, but in case there is a bug somewhere, returning null\n        // will make it fail rather than provide a 'hard to track down' bug\n        if (found) {\n            return result;\n        }\n        else {\n            return null;\n        }\n        function recursePath(balancedColumnTree, dept) {\n            for (var i = 0; i < balancedColumnTree.length; i++) {\n                if (found) {\n                    // quit the search, so 'result' is kept with the found result\n                    return;\n                }\n                var node = balancedColumnTree[i];\n                if (node instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                    var nextNode = node;\n                    recursePath(nextNode.getChildren(), dept + 1);\n                    result[dept] = node;\n                }\n                else {\n                    if (node === column) {\n                        found = true;\n                    }\n                }\n            }\n        }\n    };\n    /*    public getPathForColumn(column: Column, allDisplayedColumnGroups: ColumnGroupChild[]): ColumnGroup[] {\n            let result: ColumnGroup[] = [];\n            let found = false;\n    \n            recursePath(allDisplayedColumnGroups, 0);\n    \n            // we should always find the path, but in case there is a bug somewhere, returning null\n            // will make it fail rather than provide a 'hard to track down' bug\n            if (found) {\n                return result;\n            } else {\n                return null;\n            }\n    \n            function recursePath(balancedColumnTree: ColumnGroupChild[], dept: number): void {\n    \n                for (let i = 0; i<balancedColumnTree.length; i++) {\n                    if (found) {\n                        // quit the search, so 'result' is kept with the found result\n                        return;\n                    }\n                    let node = balancedColumnTree[i];\n                    if (node instanceof ColumnGroup) {\n                        let nextNode = <ColumnGroup> node;\n                        recursePath(nextNode.getChildren(), dept+1);\n                        result[dept] = node;\n                    } else {\n                        if (node === column) {\n                            found = true;\n                        }\n                    }\n                }\n            }\n        }*/\n    ColumnUtils.prototype.depthFirstOriginalTreeSearch = function (parent, tree, callback) {\n        var _this = this;\n        if (!tree) {\n            return;\n        }\n        tree.forEach(function (child) {\n            if (child instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                _this.depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\n            }\n            callback(child, parent);\n        });\n    };\n    ColumnUtils.prototype.depthFirstAllColumnTreeSearch = function (tree, callback) {\n        var _this = this;\n        if (!tree) {\n            return;\n        }\n        tree.forEach(function (child) {\n            if (child instanceof columnGroup_1.ColumnGroup) {\n                _this.depthFirstAllColumnTreeSearch(child.getChildren(), callback);\n            }\n            callback(child);\n        });\n    };\n    ColumnUtils.prototype.depthFirstDisplayedColumnTreeSearch = function (tree, callback) {\n        var _this = this;\n        if (!tree) {\n            return;\n        }\n        tree.forEach(function (child) {\n            if (child instanceof columnGroup_1.ColumnGroup) {\n                _this.depthFirstDisplayedColumnTreeSearch(child.getDisplayedChildren(), callback);\n            }\n            callback(child);\n        });\n    };\n    __decorate([\n        context_2.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ColumnUtils.prototype, \"gridOptionsWrapper\", void 0);\n    ColumnUtils = __decorate([\n        context_1.Bean('columnUtils')\n    ], ColumnUtils);\n    return ColumnUtils;\n}());\nexports.ColumnUtils = ColumnUtils;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar columnGroup_1 = require(\"./columnGroup\");\nvar column_1 = require(\"./column\");\nvar eventService_1 = require(\"../eventService\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar OriginalColumnGroup = /** @class */ (function () {\n    function OriginalColumnGroup(colGroupDef, groupId, padding, level) {\n        this.localEventService = new eventService_1.EventService();\n        this.expandable = false;\n        this.colGroupDef = colGroupDef;\n        this.groupId = groupId;\n        this.expanded = colGroupDef && !!colGroupDef.openByDefault;\n        this.padding = padding;\n        this.level = level;\n    }\n    OriginalColumnGroup.prototype.setOriginalParent = function (originalParent) {\n        this.originalParent = this.originalParent;\n    };\n    OriginalColumnGroup.prototype.getOriginalParent = function () {\n        return this.originalParent;\n    };\n    OriginalColumnGroup.prototype.getLevel = function () {\n        return this.level;\n    };\n    OriginalColumnGroup.prototype.isVisible = function () {\n        // return true if at least one child is visible\n        if (this.children) {\n            return this.children.some(function (child) { return child.isVisible(); });\n        }\n        return false;\n    };\n    OriginalColumnGroup.prototype.isPadding = function () {\n        return this.padding;\n    };\n    OriginalColumnGroup.prototype.setExpanded = function (expanded) {\n        this.expanded = expanded === undefined ? false : expanded;\n        var event = {\n            type: OriginalColumnGroup.EVENT_EXPANDED_CHANGED\n        };\n        this.localEventService.dispatchEvent(event);\n    };\n    OriginalColumnGroup.prototype.isExpandable = function () {\n        return this.expandable;\n    };\n    OriginalColumnGroup.prototype.isExpanded = function () {\n        return this.expanded;\n    };\n    OriginalColumnGroup.prototype.getGroupId = function () {\n        return this.groupId;\n    };\n    OriginalColumnGroup.prototype.getId = function () {\n        return this.getGroupId();\n    };\n    OriginalColumnGroup.prototype.setChildren = function (children) {\n        this.children = children;\n    };\n    OriginalColumnGroup.prototype.getChildren = function () {\n        return this.children;\n    };\n    OriginalColumnGroup.prototype.getColGroupDef = function () {\n        return this.colGroupDef;\n    };\n    OriginalColumnGroup.prototype.getLeafColumns = function () {\n        var result = [];\n        this.addLeafColumns(result);\n        return result;\n    };\n    OriginalColumnGroup.prototype.addLeafColumns = function (leafColumns) {\n        if (!this.children) {\n            return;\n        }\n        this.children.forEach(function (child) {\n            if (child instanceof column_1.Column) {\n                leafColumns.push(child);\n            }\n            else if (child instanceof OriginalColumnGroup) {\n                child.addLeafColumns(leafColumns);\n            }\n        });\n    };\n    OriginalColumnGroup.prototype.getColumnGroupShow = function () {\n        if (!this.padding) {\n            return this.colGroupDef.columnGroupShow;\n        }\n        else {\n            // if this is padding we have exactly only child. we then\n            // take the value from the child and push it up, making\n            // this group 'invisible'.\n            return this.children[0].getColumnGroupShow();\n        }\n    };\n    // need to check that this group has at least one col showing when both expanded and contracted.\n    // if not, then we don't allow expanding and contracting on this group\n    OriginalColumnGroup.prototype.setupExpandable = function () {\n        var _this = this;\n        this.setExpandable();\n        // note - we should be removing this event listener\n        this.getLeafColumns().forEach(function (col) { return col.addEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, _this.onColumnVisibilityChanged.bind(_this)); });\n    };\n    OriginalColumnGroup.prototype.setExpandable = function () {\n        if (this.isPadding()) {\n            return;\n        }\n        // want to make sure the group doesn't disappear when it's open\n        var atLeastOneShowingWhenOpen = false;\n        // want to make sure the group doesn't disappear when it's closed\n        var atLeastOneShowingWhenClosed = false;\n        // want to make sure the group has something to show / hide\n        var atLeastOneChangeable = false;\n        var children = this.findChildren();\n        for (var i = 0, j = children.length; i < j; i++) {\n            var abstractColumn = children[i];\n            if (!abstractColumn.isVisible()) {\n                continue;\n            }\n            // if the abstractColumn is a grid generated group, there will be no colDef\n            var headerGroupShow = abstractColumn.getColumnGroupShow();\n            if (headerGroupShow === columnGroup_1.ColumnGroup.HEADER_GROUP_SHOW_OPEN) {\n                atLeastOneShowingWhenOpen = true;\n                atLeastOneChangeable = true;\n            }\n            else if (headerGroupShow === columnGroup_1.ColumnGroup.HEADER_GROUP_SHOW_CLOSED) {\n                atLeastOneShowingWhenClosed = true;\n                atLeastOneChangeable = true;\n            }\n            else {\n                atLeastOneShowingWhenOpen = true;\n                atLeastOneShowingWhenClosed = true;\n            }\n        }\n        var expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\n        if (this.expandable !== expandable) {\n            this.expandable = expandable;\n            var event_1 = {\n                type: OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED\n            };\n            this.localEventService.dispatchEvent(event_1);\n        }\n    };\n    OriginalColumnGroup.prototype.findChildren = function () {\n        var children = this.children;\n        var firstChild = children[0];\n        if (firstChild && (!firstChild.isPadding || !firstChild.isPadding())) {\n            return children;\n        }\n        while (children.length === 1 && children[0] instanceof OriginalColumnGroup) {\n            children = children[0].children;\n        }\n        return children;\n    };\n    OriginalColumnGroup.prototype.onColumnVisibilityChanged = function () {\n        this.setExpandable();\n    };\n    OriginalColumnGroup.prototype.addEventListener = function (eventType, listener) {\n        this.localEventService.addEventListener(eventType, listener);\n    };\n    OriginalColumnGroup.prototype.removeEventListener = function (eventType, listener) {\n        this.localEventService.removeEventListener(eventType, listener);\n    };\n    OriginalColumnGroup.EVENT_EXPANDED_CHANGED = 'expandedChanged';\n    OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED = 'expandableChanged';\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], OriginalColumnGroup.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], OriginalColumnGroup.prototype, \"gridApi\", void 0);\n    return OriginalColumnGroup;\n}());\nexports.OriginalColumnGroup = OriginalColumnGroup;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar ValueCache = /** @class */ (function () {\n    function ValueCache() {\n        this.cacheVersion = 0;\n    }\n    ValueCache.prototype.init = function () {\n        this.active = this.gridOptionsWrapper.isValueCache();\n        this.neverExpires = this.gridOptionsWrapper.isValueCacheNeverExpires();\n    };\n    ValueCache.prototype.onDataChanged = function () {\n        if (this.neverExpires) {\n            return;\n        }\n        this.expire();\n    };\n    ValueCache.prototype.expire = function () {\n        this.cacheVersion++;\n    };\n    ValueCache.prototype.setValue = function (rowNode, colId, value) {\n        if (this.active) {\n            if (rowNode.__cacheVersion !== this.cacheVersion) {\n                rowNode.__cacheVersion = this.cacheVersion;\n                rowNode.__cacheData = {};\n            }\n            rowNode.__cacheData[colId] = value;\n        }\n    };\n    ValueCache.prototype.getValue = function (rowNode, colId) {\n        var valueInCache = this.active\n            && rowNode.__cacheVersion === this.cacheVersion\n            && rowNode.__cacheData[colId] !== undefined;\n        if (valueInCache) {\n            return rowNode.__cacheData[colId];\n        }\n        else {\n            return undefined;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ValueCache.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ValueCache.prototype, \"init\", null);\n    ValueCache = __decorate([\n        context_1.Bean('valueCache')\n    ], ValueCache);\n    return ValueCache;\n}());\nexports.ValueCache = ValueCache;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar logger_1 = require(\"../logger\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar utils_1 = require(\"../utils\");\n/** Adds drag listening onto an element. In ag-Grid this is used twice, first is resizing columns,\n * second is moving the columns and column groups around (ie the 'drag' part of Drag and Drop. */\nvar DragService = /** @class */ (function () {\n    function DragService() {\n        this.onMouseUpListener = this.onMouseUp.bind(this);\n        this.onMouseMoveListener = this.onMouseMove.bind(this);\n        this.onTouchEndListener = this.onTouchUp.bind(this);\n        this.onTouchMoveListener = this.onTouchMove.bind(this);\n        this.dragEndFunctions = [];\n        this.dragSources = [];\n    }\n    DragService.prototype.init = function () {\n        this.logger = this.loggerFactory.create('DragService');\n    };\n    DragService.prototype.destroy = function () {\n        this.dragSources.forEach(this.removeListener.bind(this));\n        this.dragSources.length = 0;\n    };\n    DragService.prototype.removeListener = function (dragSourceAndListener) {\n        var element = dragSourceAndListener.dragSource.eElement;\n        var mouseDownListener = dragSourceAndListener.mouseDownListener;\n        element.removeEventListener('mousedown', mouseDownListener);\n        // remove touch listener only if it exists\n        if (dragSourceAndListener.touchEnabled) {\n            var touchStartListener = dragSourceAndListener.touchStartListener;\n            element.removeEventListener('touchstart', touchStartListener, { passive: true });\n        }\n    };\n    DragService.prototype.removeDragSource = function (params) {\n        var dragSourceAndListener = utils_1._.find(this.dragSources, function (item) { return item.dragSource === params; });\n        if (!dragSourceAndListener) {\n            return;\n        }\n        this.removeListener(dragSourceAndListener);\n        utils_1._.removeFromArray(this.dragSources, dragSourceAndListener);\n    };\n    DragService.prototype.setNoSelectToBody = function (noSelect) {\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        var eBody = eDocument.querySelector('body');\n        if (utils_1._.exists(eBody)) {\n            // when we drag the mouse in ag-Grid, this class gets added / removed from the body, so that\n            // the mouse isn't selecting text when dragging.\n            utils_1._.addOrRemoveCssClass(eBody, 'ag-unselectable', noSelect);\n        }\n    };\n    DragService.prototype.addDragSource = function (params, includeTouch) {\n        if (includeTouch === void 0) { includeTouch = false; }\n        var mouseListener = this.onMouseDown.bind(this, params);\n        params.eElement.addEventListener('mousedown', mouseListener);\n        var touchListener = null;\n        var suppressTouch = this.gridOptionsWrapper.isSuppressTouch();\n        if (includeTouch && !suppressTouch) {\n            touchListener = this.onTouchStart.bind(this, params);\n            params.eElement.addEventListener('touchstart', touchListener, { passive: false });\n        }\n        this.dragSources.push({\n            dragSource: params,\n            mouseDownListener: mouseListener,\n            touchStartListener: touchListener,\n            touchEnabled: includeTouch\n        });\n    };\n    // gets called whenever mouse down on any drag source\n    DragService.prototype.onTouchStart = function (params, touchEvent) {\n        var _this = this;\n        this.currentDragParams = params;\n        this.dragging = false;\n        var touch = touchEvent.touches[0];\n        this.touchLastTime = touch;\n        this.touchStart = touch;\n        touchEvent.preventDefault();\n        // we temporally add these listeners, for the duration of the drag, they\n        // are removed in touch end handling.\n        params.eElement.addEventListener('touchmove', this.onTouchMoveListener, { passive: true });\n        params.eElement.addEventListener('touchend', this.onTouchEndListener, { passive: true });\n        params.eElement.addEventListener('touchcancel', this.onTouchEndListener, { passive: true });\n        this.dragEndFunctions.push(function () {\n            params.eElement.removeEventListener('touchmove', _this.onTouchMoveListener, { passive: true });\n            params.eElement.removeEventListener('touchend', _this.onTouchEndListener, { passive: true });\n            params.eElement.removeEventListener('touchcancel', _this.onTouchEndListener, { passive: true });\n        });\n        // see if we want to start dragging straight away\n        if (params.dragStartPixels === 0) {\n            this.onCommonMove(touch, this.touchStart);\n        }\n    };\n    // gets called whenever mouse down on any drag source\n    DragService.prototype.onMouseDown = function (params, mouseEvent) {\n        var _this = this;\n        // we ignore when shift key is pressed. this is for the range selection, as when\n        // user shift-clicks a cell, this should not be interpreted as the start of a drag.\n        // if (mouseEvent.shiftKey) { return; }\n        if (params.skipMouseEvent) {\n            if (params.skipMouseEvent(mouseEvent)) {\n                return;\n            }\n        }\n        // if there are two elements with parent / child relationship, and both are draggable,\n        // when we drag the child, we should NOT drag the parent. an example of this is row moving\n        // and range selection - row moving should get preference when use drags the rowDrag component.\n        if (mouseEvent._alreadyProcessedByDragService) {\n            return;\n        }\n        mouseEvent._alreadyProcessedByDragService = true;\n        // only interested in left button clicks\n        if (mouseEvent.button !== 0) {\n            return;\n        }\n        this.currentDragParams = params;\n        this.dragging = false;\n        this.mouseStartEvent = mouseEvent;\n        var eDocument = this.gridOptionsWrapper.getDocument();\n        this.setNoSelectToBody(true);\n        // we temporally add these listeners, for the duration of the drag, they\n        // are removed in mouseup handling.\n        eDocument.addEventListener('mousemove', this.onMouseMoveListener);\n        eDocument.addEventListener('mouseup', this.onMouseUpListener);\n        this.dragEndFunctions.push(function () {\n            eDocument.removeEventListener('mousemove', _this.onMouseMoveListener);\n            eDocument.removeEventListener('mouseup', _this.onMouseUpListener);\n        });\n        //see if we want to start dragging straight away\n        if (params.dragStartPixels === 0) {\n            this.onMouseMove(mouseEvent);\n        }\n    };\n    // returns true if the event is close to the original event by X pixels either vertically or horizontally.\n    // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\n    DragService.prototype.isEventNearStartEvent = function (currentEvent, startEvent) {\n        // by default, we wait 4 pixels before starting the drag\n        var dragStartPixels = this.currentDragParams.dragStartPixels;\n        var requiredPixelDiff = utils_1._.exists(dragStartPixels) ? dragStartPixels : 4;\n        return utils_1._.areEventsNear(currentEvent, startEvent, requiredPixelDiff);\n    };\n    DragService.prototype.getFirstActiveTouch = function (touchList) {\n        for (var i = 0; i < touchList.length; i++) {\n            if (touchList[i].identifier === this.touchStart.identifier) {\n                return touchList[i];\n            }\n        }\n        return null;\n    };\n    DragService.prototype.onCommonMove = function (currentEvent, startEvent) {\n        if (!this.dragging) {\n            // if mouse hasn't travelled from the start position enough, do nothing\n            if (!this.dragging && this.isEventNearStartEvent(currentEvent, startEvent)) {\n                return;\n            }\n            this.dragging = true;\n            var event_1 = {\n                type: events_1.Events.EVENT_DRAG_STARTED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n            this.currentDragParams.onDragStart(startEvent);\n        }\n        this.currentDragParams.onDragging(currentEvent);\n    };\n    DragService.prototype.onTouchMove = function (touchEvent) {\n        var touch = this.getFirstActiveTouch(touchEvent.touches);\n        if (!touch) {\n            return;\n        }\n        // this.___statusPanel.setInfoText(Math.random() + ' onTouchMove preventDefault stopPropagation');\n        // if we don't preview default, then the browser will try and do it's own touch stuff,\n        // like do 'back button' (chrome does this) or scroll the page (eg drag column could  be confused\n        // with scroll page in the app)\n        // touchEvent.preventDefault();\n        this.onCommonMove(touch, this.touchStart);\n    };\n    // only gets called after a mouse down - as this is only added after mouseDown\n    // and is removed when mouseUp happens\n    DragService.prototype.onMouseMove = function (mouseEvent) {\n        this.onCommonMove(mouseEvent, this.mouseStartEvent);\n    };\n    DragService.prototype.onTouchUp = function (touchEvent) {\n        var touch = this.getFirstActiveTouch(touchEvent.changedTouches);\n        // i haven't worked this out yet, but there is no matching touch\n        // when we get the touch up event. to get around this, we swap in\n        // the last touch. this is a hack to 'get it working' while we\n        // figure out what's going on, why we are not getting a touch in\n        // current event.\n        if (!touch) {\n            touch = this.touchLastTime;\n        }\n        // if mouse was left up before we started to move, then this is a tap.\n        // we check this before onUpCommon as onUpCommon resets the dragging\n        // let tap = !this.dragging;\n        // let tapTarget = this.currentDragParams.eElement;\n        this.onUpCommon(touch);\n        // if tap, tell user\n        // console.log(`${Math.random()} tap = ${tap}`);\n        // if (tap) {\n        //     tapTarget.click();\n        // }\n    };\n    DragService.prototype.onMouseUp = function (mouseEvent) {\n        this.onUpCommon(mouseEvent);\n    };\n    DragService.prototype.onUpCommon = function (eventOrTouch) {\n        if (this.dragging) {\n            this.dragging = false;\n            this.currentDragParams.onDragStop(eventOrTouch);\n            var event_2 = {\n                type: events_1.Events.EVENT_DRAG_STOPPED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_2);\n        }\n        this.setNoSelectToBody(false);\n        this.mouseStartEvent = null;\n        this.touchStart = null;\n        this.touchLastTime = null;\n        this.currentDragParams = null;\n        this.dragEndFunctions.forEach(function (func) { return func(); });\n        this.dragEndFunctions.length = 0;\n    };\n    __decorate([\n        context_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", logger_1.LoggerFactory)\n    ], DragService.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], DragService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], DragService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], DragService.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], DragService.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DragService.prototype, \"init\", null);\n    __decorate([\n        context_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], DragService.prototype, \"destroy\", null);\n    DragService = __decorate([\n        context_1.Bean('dragService')\n    ], DragService);\n    return DragService;\n}());\nexports.DragService = DragService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar eventKeys_1 = require(\"../eventKeys\");\nvar eventService_1 = require(\"../eventService\");\nvar AnimationFrameService = /** @class */ (function () {\n    function AnimationFrameService() {\n        // create tasks are to do with row creation. for them we want to execute according to row order, so we use\n        // TaskItem so we know what index the item is for.\n        this.p1Tasks = [];\n        // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\n        // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\n        // important.\n        this.p2Tasks = [];\n        this.ticking = false;\n        // we need to know direction of scroll, to build up rows in the direction of\n        // the scroll. eg if user scrolls down, we extend the rows by building down.\n        this.scrollGoingDown = true;\n        this.lastScrollTop = 0;\n    }\n    AnimationFrameService.prototype.setScrollTop = function (scrollTop) {\n        this.scrollGoingDown = scrollTop > this.lastScrollTop;\n        this.lastScrollTop = scrollTop;\n    };\n    AnimationFrameService.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    AnimationFrameService.prototype.init = function () {\n        this.useAnimationFrame = !this.gridOptionsWrapper.isSuppressAnimationFrame();\n    };\n    // this method is for our ag-Grid sanity only - if animation frames are turned off,\n    // then no place in the code should be looking to add any work to be done in animation\n    // frames. this stops bugs - where some code is asking for a frame to be executed\n    // when it should not.\n    AnimationFrameService.prototype.verifyAnimationFrameOn = function (methodName) {\n        if (this.useAnimationFrame === false) {\n            console.warn(\"ag-Grid: AnimationFrameService.\" + methodName + \" called but animation frames are off\");\n        }\n    };\n    AnimationFrameService.prototype.addP1Task = function (task, index) {\n        this.verifyAnimationFrameOn('addP1Task');\n        var taskItem = { task: task, index: index };\n        this.p1Tasks.push(taskItem);\n        this.schedule();\n    };\n    AnimationFrameService.prototype.addP2Task = function (task) {\n        this.verifyAnimationFrameOn('addP2Task');\n        this.p2Tasks.push(task);\n        this.schedule();\n    };\n    AnimationFrameService.prototype.executeFrame = function (millis) {\n        this.verifyAnimationFrameOn('executeFrame');\n        if (this.scrollGoingDown) {\n            this.p1Tasks.sort(function (a, b) { return b.index - a.index; });\n        }\n        else {\n            this.p1Tasks.sort(function (a, b) { return a.index - b.index; });\n        }\n        var frameStart = new Date().getTime();\n        var duration = (new Date().getTime()) - frameStart;\n        // 16ms is 60 fps\n        var noMaxMillis = millis <= 0;\n        while (noMaxMillis || duration < millis) {\n            var gridPanelUpdated = this.gridPanel.executeFrame();\n            if (!gridPanelUpdated) {\n                if (this.p1Tasks.length > 0) {\n                    var taskItem = this.p1Tasks.pop();\n                    taskItem.task();\n                }\n                else if (this.p2Tasks.length > 0) {\n                    var task = this.p2Tasks.pop();\n                    task();\n                }\n                else {\n                    break;\n                }\n            }\n            duration = (new Date().getTime()) - frameStart;\n        }\n        if (this.p1Tasks.length > 0 || this.p2Tasks.length > 0) {\n            this.requestFrame();\n        }\n        else {\n            this.stopTicking();\n        }\n    };\n    AnimationFrameService.prototype.stopTicking = function () {\n        this.ticking = false;\n        var event = {\n            type: eventKeys_1.Events.EVENT_ANIMATION_QUEUE_EMPTY,\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            api: this.gridOptionsWrapper.getApi()\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    AnimationFrameService.prototype.flushAllFrames = function () {\n        if (!this.useAnimationFrame) {\n            return;\n        }\n        this.executeFrame(-1);\n    };\n    AnimationFrameService.prototype.schedule = function () {\n        if (!this.useAnimationFrame) {\n            return;\n        }\n        if (!this.ticking) {\n            this.ticking = true;\n            this.requestFrame();\n        }\n    };\n    AnimationFrameService.prototype.requestFrame = function () {\n        // check for the existence of requestAnimationFrame, and if\n        // it's missing, then we polyfill it with setTimeout()\n        var callback = this.executeFrame.bind(this, 60);\n        if (window.requestAnimationFrame) {\n            window.requestAnimationFrame(callback);\n        }\n        else if (window.webkitRequestAnimationFrame) {\n            window.webkitRequestAnimationFrame(callback);\n        }\n        else {\n            window.setTimeout(callback, 0);\n        }\n    };\n    AnimationFrameService.prototype.isQueueEmpty = function () {\n        return this.ticking;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], AnimationFrameService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], AnimationFrameService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AnimationFrameService.prototype, \"init\", null);\n    AnimationFrameService = __decorate([\n        context_1.Bean('animationFrameService')\n    ], AnimationFrameService);\n    return AnimationFrameService;\n}());\nexports.AnimationFrameService = AnimationFrameService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar logger_1 = require(\"../logger\");\nvar columnUtils_1 = require(\"./columnUtils\");\nvar columnKeyCreator_1 = require(\"./columnKeyCreator\");\nvar originalColumnGroup_1 = require(\"../entities/originalColumnGroup\");\nvar column_1 = require(\"../entities/column\");\nvar context_1 = require(\"../context/context\");\nvar defaultColumnTypes_1 = require(\"../entities/defaultColumnTypes\");\nvar utils_1 = require(\"../utils\");\n// takes ColDefs and ColGroupDefs and turns them into Columns and OriginalGroups\nvar ColumnFactory = /** @class */ (function () {\n    function ColumnFactory() {\n    }\n    ColumnFactory.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('ColumnFactory');\n    };\n    ColumnFactory.prototype.createColumnTree = function (defs, primaryColumns, existingColumns) {\n        // column key creator dishes out unique column id's in a deterministic way,\n        // so if we have two grids (that could be master/slave) with same column definitions,\n        // then this ensures the two grids use identical id's.\n        var columnKeyCreator = new columnKeyCreator_1.ColumnKeyCreator();\n        if (existingColumns) {\n            var existingKeys = existingColumns.map(function (col) { return col.getId(); });\n            columnKeyCreator.addExistingKeys(existingKeys);\n        }\n        // we take a copy of the columns as we are going to be removing from them\n        var existingColsCopy = existingColumns ? existingColumns.slice() : null;\n        // create am unbalanced tree that maps the provided definitions\n        var unbalancedTree = this.recursivelyCreateColumns(defs, 0, primaryColumns, existingColsCopy, columnKeyCreator, null);\n        var treeDept = this.findMaxDept(unbalancedTree, 0);\n        this.logger.log('Number of levels for grouped columns is ' + treeDept);\n        var res = this.balanceColumnTree(unbalancedTree, 0, treeDept, columnKeyCreator);\n        var deptFirstCallback = function (child, parent) {\n            if (child instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                child.setupExpandable();\n            }\n            // we set the original parents at the end, rather than when we go along, as balancing the tree\n            // adds extra levels into the tree. so we can only set parents when balancing is done.\n            child.setOriginalParent(parent);\n        };\n        this.columnUtils.depthFirstOriginalTreeSearch(null, res, deptFirstCallback);\n        return {\n            columnTree: res,\n            treeDept: treeDept\n        };\n    };\n    ColumnFactory.prototype.createForAutoGroups = function (autoGroupCols, gridBalancedTree) {\n        var _this = this;\n        var autoColBalancedTree = [];\n        autoGroupCols.forEach(function (col) {\n            var fakeTreeItem = _this.createAutoGroupTreeItem(gridBalancedTree, col);\n            autoColBalancedTree.push(fakeTreeItem);\n        });\n        return autoColBalancedTree;\n    };\n    ColumnFactory.prototype.createAutoGroupTreeItem = function (balancedColumnTree, column) {\n        var dept = this.findDepth(balancedColumnTree);\n        // at the end, this will be the top of the tree item.\n        var nextChild = column;\n        for (var i = dept - 1; i >= 0; i--) {\n            var autoGroup = new originalColumnGroup_1.OriginalColumnGroup(null, \"FAKE_PATH_\" + column.getId() + \"}_\" + i, true, i);\n            this.context.wireBean(autoGroup);\n            autoGroup.setChildren([nextChild]);\n            nextChild.setOriginalParent(autoGroup);\n            nextChild = autoGroup;\n        }\n        // at this point, the nextChild is the top most item in the tree\n        return nextChild;\n    };\n    ColumnFactory.prototype.findDepth = function (balancedColumnTree) {\n        var dept = 0;\n        var pointer = balancedColumnTree;\n        while (pointer && pointer[0] && pointer[0] instanceof originalColumnGroup_1.OriginalColumnGroup) {\n            dept++;\n            pointer = pointer[0].getChildren();\n        }\n        return dept;\n    };\n    ColumnFactory.prototype.balanceColumnTree = function (unbalancedTree, currentDept, columnDept, columnKeyCreator) {\n        var result = [];\n        // go through each child, for groups, recurse a level deeper,\n        // for columns we need to pad\n        for (var i = 0; i < unbalancedTree.length; i++) {\n            var child = unbalancedTree[i];\n            if (child instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                // child is a group, all we do is go to the next level of recursion\n                var originalGroup = child;\n                var newChildren = this.balanceColumnTree(originalGroup.getChildren(), currentDept + 1, columnDept, columnKeyCreator);\n                originalGroup.setChildren(newChildren);\n                result.push(originalGroup);\n            }\n            else {\n                // child is a column - so here we add in the padded column groups if needed\n                var firstPaddedGroup = void 0;\n                var currentPaddedGroup = void 0;\n                // this for loop will NOT run any loops if no padded column groups are needed\n                for (var j = columnDept - 1; j >= currentDept; j--) {\n                    var newColId = columnKeyCreator.getUniqueKey(null, null);\n                    var colGroupDefMerged = this.createMergedColGroupDef(null);\n                    var paddedGroup = new originalColumnGroup_1.OriginalColumnGroup(colGroupDefMerged, newColId, true, currentDept);\n                    this.context.wireBean(paddedGroup);\n                    if (currentPaddedGroup) {\n                        currentPaddedGroup.setChildren([paddedGroup]);\n                    }\n                    currentPaddedGroup = paddedGroup;\n                    if (!firstPaddedGroup) {\n                        firstPaddedGroup = currentPaddedGroup;\n                    }\n                }\n                // likewise this if statement will not run if no padded groups\n                if (firstPaddedGroup) {\n                    result.push(firstPaddedGroup);\n                    var hasGroups = unbalancedTree.some(function (child) { return child instanceof originalColumnGroup_1.OriginalColumnGroup; });\n                    if (hasGroups) {\n                        currentPaddedGroup.setChildren([child]);\n                        continue;\n                    }\n                    else {\n                        currentPaddedGroup.setChildren(unbalancedTree);\n                        break;\n                    }\n                }\n                result.push(child);\n            }\n        }\n        return result;\n    };\n    ColumnFactory.prototype.findMaxDept = function (treeChildren, dept) {\n        var maxDeptThisLevel = dept;\n        for (var i = 0; i < treeChildren.length; i++) {\n            var abstractColumn = treeChildren[i];\n            if (abstractColumn instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                var originalGroup = abstractColumn;\n                var newDept = this.findMaxDept(originalGroup.getChildren(), dept + 1);\n                if (maxDeptThisLevel < newDept) {\n                    maxDeptThisLevel = newDept;\n                }\n            }\n        }\n        return maxDeptThisLevel;\n    };\n    ColumnFactory.prototype.recursivelyCreateColumns = function (defs, level, primaryColumns, existingColsCopy, columnKeyCreator, parent) {\n        var _this = this;\n        var result = [];\n        if (!defs) {\n            return result;\n        }\n        defs.forEach(function (def) {\n            var newGroupOrColumn;\n            if (_this.isColumnGroup(def)) {\n                newGroupOrColumn = _this.createColumnGroup(primaryColumns, def, level, existingColsCopy, columnKeyCreator, parent);\n            }\n            else {\n                newGroupOrColumn = _this.createColumn(primaryColumns, def, existingColsCopy, columnKeyCreator, parent);\n            }\n            result.push(newGroupOrColumn);\n        });\n        return result;\n    };\n    ColumnFactory.prototype.createColumnGroup = function (primaryColumns, colGroupDef, level, existingColumns, columnKeyCreator, parent) {\n        var colGroupDefMerged = this.createMergedColGroupDef(colGroupDef);\n        var groupId = columnKeyCreator.getUniqueKey(colGroupDefMerged.groupId, null);\n        var originalGroup = new originalColumnGroup_1.OriginalColumnGroup(colGroupDefMerged, groupId, false, level);\n        this.context.wireBean(originalGroup);\n        var children = this.recursivelyCreateColumns(colGroupDefMerged.children, level + 1, primaryColumns, existingColumns, columnKeyCreator, originalGroup);\n        originalGroup.setChildren(children);\n        return originalGroup;\n    };\n    ColumnFactory.prototype.createMergedColGroupDef = function (colGroupDef) {\n        var colGroupDefMerged = {};\n        utils_1._.assign(colGroupDefMerged, this.gridOptionsWrapper.getDefaultColGroupDef());\n        utils_1._.assign(colGroupDefMerged, colGroupDef);\n        this.checkForDeprecatedItems(colGroupDefMerged);\n        return colGroupDefMerged;\n    };\n    ColumnFactory.prototype.createColumn = function (primaryColumns, colDef, existingColsCopy, columnKeyCreator, parent) {\n        var colDefMerged = this.mergeColDefs(colDef);\n        this.checkForDeprecatedItems(colDefMerged);\n        // see if column already exists\n        var column = this.findExistingColumn(colDef, existingColsCopy);\n        if (!column) {\n            // no existing column, need to create one\n            var colId = columnKeyCreator.getUniqueKey(colDefMerged.colId, colDefMerged.field);\n            column = new column_1.Column(colDefMerged, colDef, colId, primaryColumns);\n            this.context.wireBean(column);\n        }\n        else {\n            column.setColDef(colDefMerged, colDef);\n        }\n        return column;\n    };\n    ColumnFactory.prototype.findExistingColumn = function (colDef, existingColsCopy) {\n        var res = utils_1._.find(existingColsCopy, function (col) {\n            var oldColDef = col.getUserProvidedColDef();\n            if (!oldColDef) {\n                return false;\n            }\n            // first check object references\n            if (oldColDef === colDef) {\n                return true;\n            }\n            // second check id's\n            var oldColHadId = oldColDef.colId !== null && oldColDef.colId !== undefined;\n            if (oldColHadId) {\n                return oldColDef.colId === colDef.colId;\n            }\n            else {\n                return false;\n            }\n        });\n        // make sure we remove, so if user provided duplicate id, then we don't have more than\n        // one column instance for colDef with common id\n        if (res) {\n            utils_1._.removeFromArray(existingColsCopy, res);\n        }\n        return res;\n    };\n    ColumnFactory.prototype.mergeColDefs = function (colDef) {\n        // start with empty merged definition\n        var colDefMerged = {};\n        // merge properties from default column definitions\n        utils_1._.assign(colDefMerged, this.gridOptionsWrapper.getDefaultColDef());\n        // merge properties from column type properties\n        if (colDef.type) {\n            this.assignColumnTypes(colDef, colDefMerged);\n        }\n        // merge properties from column definitions\n        utils_1._.assign(colDefMerged, colDef);\n        return colDefMerged;\n    };\n    ColumnFactory.prototype.assignColumnTypes = function (colDef, colDefMerged) {\n        var typeKeys;\n        if (colDef.type instanceof Array) {\n            var invalidArray = colDef.type.some(function (a) { return typeof a !== 'string'; });\n            if (invalidArray) {\n                console.warn(\"ag-grid: if colDef.type is supplied an array it should be of type 'string[]'\");\n            }\n            else {\n                typeKeys = colDef.type;\n            }\n        }\n        else if (typeof colDef.type === 'string') {\n            typeKeys = colDef.type.split(',');\n        }\n        else {\n            console.warn(\"ag-grid: colDef.type should be of type 'string' | 'string[]'\");\n            return;\n        }\n        // merge user defined with default column types\n        var allColumnTypes = utils_1._.assign({}, this.gridOptionsWrapper.getColumnTypes(), defaultColumnTypes_1.DefaultColumnTypes);\n        typeKeys.forEach(function (t) {\n            var typeColDef = allColumnTypes[t.trim()];\n            if (typeColDef) {\n                utils_1._.assign(colDefMerged, typeColDef);\n            }\n            else {\n                console.warn(\"ag-grid: colDef.type '\" + t + \"' does not correspond to defined gridOptions.columnTypes\");\n            }\n        });\n    };\n    ColumnFactory.prototype.checkForDeprecatedItems = function (colDef) {\n        if (colDef) {\n            var colDefNoType = colDef; // take out the type, so we can access attributes not defined in the type\n            if (colDefNoType.group !== undefined) {\n                console.warn('ag-grid: colDef.group is invalid, please check documentation on how to do grouping as it changed in version 3');\n            }\n            if (colDefNoType.headerGroup !== undefined) {\n                console.warn('ag-grid: colDef.headerGroup is invalid, please check documentation on how to do grouping as it changed in version 3');\n            }\n            if (colDefNoType.headerGroupShow !== undefined) {\n                console.warn('ag-grid: colDef.headerGroupShow is invalid, should be columnGroupShow, please check documentation on how to do grouping as it changed in version 3');\n            }\n            if (colDefNoType.suppressRowGroup !== undefined) {\n                console.warn('ag-grid: colDef.suppressRowGroup is deprecated, please use colDef.type instead');\n            }\n            if (colDefNoType.suppressAggregation !== undefined) {\n                console.warn('ag-grid: colDef.suppressAggregation is deprecated, please use colDef.type instead');\n            }\n            if (colDefNoType.suppressRowGroup || colDefNoType.suppressAggregation) {\n                console.warn('ag-grid: colDef.suppressAggregation and colDef.suppressRowGroup are deprecated, use allowRowGroup, allowPivot and allowValue instead');\n            }\n            if (colDefNoType.displayName) {\n                console.warn(\"ag-grid: Found displayName \" + colDefNoType.displayName + \", please use headerName instead, displayName is deprecated.\");\n                colDefNoType.headerName = colDefNoType.displayName;\n            }\n        }\n    };\n    // if object has children, we assume it's a group\n    ColumnFactory.prototype.isColumnGroup = function (abstractColDef) {\n        return abstractColDef.children !== undefined;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ColumnFactory.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnUtils'),\n        __metadata(\"design:type\", columnUtils_1.ColumnUtils)\n    ], ColumnFactory.prototype, \"columnUtils\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], ColumnFactory.prototype, \"context\", void 0);\n    __decorate([\n        __param(0, context_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], ColumnFactory.prototype, \"setBeans\", null);\n    ColumnFactory = __decorate([\n        context_1.Bean('columnFactory')\n    ], ColumnFactory);\n    return ColumnFactory;\n}());\nexports.ColumnFactory = ColumnFactory;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rowRenderer_1 = require(\"./rowRenderer\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar headerWrapperComp_1 = require(\"../headerRendering/header/headerWrapperComp\");\nvar AutoWidthCalculator = /** @class */ (function () {\n    function AutoWidthCalculator() {\n    }\n    AutoWidthCalculator.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    AutoWidthCalculator.prototype.registerHeaderRootComp = function (headerRootComp) {\n        this.headerRootComp = headerRootComp;\n    };\n    // this is the trick: we create a dummy container and clone all the cells\n    // into the dummy, then check the dummy's width. then destroy the dummy\n    // as we don't need it any more.\n    // drawback: only the cells visible on the screen are considered\n    AutoWidthCalculator.prototype.getPreferredWidthForColumn = function (column) {\n        var eHeaderCell = this.getHeaderCellForColumn(column);\n        // cell isn't visible\n        if (!eHeaderCell) {\n            return -1;\n        }\n        var eDummyContainer = document.createElement('span');\n        // position fixed, so it isn't restricted to the boundaries of the parent\n        eDummyContainer.style.position = 'fixed';\n        // we put the dummy into the body container, so it will inherit all the\n        // css styles that the real cells are inheriting\n        var eBodyContainer = this.gridPanel.getCenterContainer();\n        eBodyContainer.appendChild(eDummyContainer);\n        // get all the cells that are currently displayed (this only brings back\n        // rendered cells, rows not rendered due to row visualisation will not be here)\n        this.putRowCellsIntoDummyContainer(column, eDummyContainer);\n        // also put header cell in\n        // we only consider the lowest level cell, not the group cell. in 99% of the time, this\n        // will be enough. if we consider groups, then it gets to complicated for what it's worth,\n        // as the groups can span columns and this class only considers one column at a time.\n        this.cloneItemIntoDummy(eHeaderCell, eDummyContainer);\n        // at this point, all the clones are lined up vertically with natural widths. the dummy\n        // container will have a width wide enough just to fit the largest.\n        var dummyContainerWidth = eDummyContainer.offsetWidth;\n        // we are finished with the dummy container, so get rid of it\n        eBodyContainer.removeChild(eDummyContainer);\n        // we add padding as I found sometimes the gui still put '...' after some of the texts. so the\n        // user can configure the grid to add a few more pixels after the calculated width\n        var autoSizePadding = this.gridOptionsWrapper.getAutoSizePadding();\n        return dummyContainerWidth + autoSizePadding;\n    };\n    AutoWidthCalculator.prototype.getHeaderCellForColumn = function (column) {\n        var comp = null;\n        // find the rendered header cell\n        this.headerRootComp.forEachHeaderElement(function (headerElement) {\n            if (headerElement instanceof headerWrapperComp_1.HeaderWrapperComp) {\n                var headerWrapperComp = headerElement;\n                if (headerWrapperComp.getColumn() === column) {\n                    comp = headerWrapperComp;\n                }\n            }\n        });\n        return comp ? comp.getGui() : null;\n    };\n    AutoWidthCalculator.prototype.putRowCellsIntoDummyContainer = function (column, eDummyContainer) {\n        var _this = this;\n        var eCells = this.rowRenderer.getAllCellsForColumn(column);\n        eCells.forEach(function (eCell) { return _this.cloneItemIntoDummy(eCell, eDummyContainer); });\n    };\n    AutoWidthCalculator.prototype.cloneItemIntoDummy = function (eCell, eDummyContainer) {\n        // make a deep clone of the cell\n        var eCellClone = eCell.cloneNode(true);\n        // the original has a fixed width, we remove this to allow the natural width based on content\n        eCellClone.style.width = '';\n        // the original has position = absolute, we need to remove this so it's positioned normally\n        eCellClone.style.position = 'static';\n        eCellClone.style.left = '';\n        // we put the cell into a containing div, as otherwise the cells would just line up\n        // on the same line, standard flow layout, by putting them into divs, they are laid\n        // out one per line\n        var eCloneParent = document.createElement('div');\n        // table-row, so that each cell is on a row. i also tried display='block', but this\n        // didn't work in IE\n        eCloneParent.style.display = 'table-row';\n        // the twig on the branch, the branch on the tree, the tree in the hole,\n        // the hole in the bog, the bog in the clone, the clone in the parent,\n        // the parent in the dummy, and the dummy down in the vall-e-ooo, OOOOOOOOO! Oh row the rattling bog....\n        eCloneParent.appendChild(eCellClone);\n        eDummyContainer.appendChild(eCloneParent);\n    };\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], AutoWidthCalculator.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], AutoWidthCalculator.prototype, \"gridOptionsWrapper\", void 0);\n    AutoWidthCalculator = __decorate([\n        context_1.Bean('autoWidthCalculator')\n    ], AutoWidthCalculator);\n    return AutoWidthCalculator;\n}());\nexports.AutoWidthCalculator = AutoWidthCalculator;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar column_1 = require(\"../entities/column\");\nvar constants_1 = require(\"../constants\");\nvar events_1 = require(\"../events\");\nvar component_1 = require(\"../widgets/component\");\nvar checkboxSelectionComponent_1 = require(\"./checkboxSelectionComponent\");\nvar cellPosition_1 = require(\"../entities/cellPosition\");\nvar iRangeController_1 = require(\"../interfaces/iRangeController\");\nvar rowDragComp_1 = require(\"./rowDragComp\");\nvar popupEditorWrapper_1 = require(\"./cellEditors/popupEditorWrapper\");\nvar rowPosition_1 = require(\"../entities/rowPosition\");\nvar utils_1 = require(\"../utils\");\nvar CellComp = /** @class */ (function (_super) {\n    __extends(CellComp, _super);\n    function CellComp(scope, beans, column, rowNode, rowComp, autoHeightCell, printLayout) {\n        var _this = _super.call(this) || this;\n        _this.editingCell = false;\n        _this.suppressRefreshCell = false;\n        _this.scope = null;\n        // every time we go into edit mode, or back again, this gets incremented.\n        // it's the components way of dealing with the async nature of framework components,\n        // so if a framework component takes a while to be created, we know if the object\n        // is still relevant when creating is finished. eg we could click edit / un-edit 20\n        // times before the first React edit component comes back - we should discard\n        // the first 19.\n        _this.cellEditorVersion = 0;\n        _this.cellRendererVersion = 0;\n        _this.scope = scope;\n        _this.beans = beans;\n        _this.column = column;\n        _this.rowNode = rowNode;\n        _this.rowComp = rowComp;\n        _this.autoHeightCell = autoHeightCell;\n        _this.printLayout = printLayout;\n        _this.createGridCellVo();\n        _this.rangeSelectionEnabled = beans.gridOptionsWrapper.isEnableRangeSelection();\n        _this.cellFocused = _this.beans.focusedCellController.isCellFocused(_this.cellPosition);\n        _this.firstRightPinned = _this.column.isFirstRightPinned();\n        _this.lastLeftPinned = _this.column.isLastLeftPinned();\n        if (_this.rangeSelectionEnabled) {\n            var rangeController = _this.beans.rangeController;\n            _this.rangeCount = rangeController.getCellRangeCount(_this.cellPosition);\n            if (_this.rangeCount) {\n                _this.hasChartRange = rangeController.getCellRanges().every(function (range) { return utils_1._.exists(range.type); });\n            }\n        }\n        _this.getValueAndFormat();\n        _this.setUsingWrapper();\n        _this.chooseCellRenderer();\n        _this.setupColSpan();\n        _this.rowSpan = _this.column.getRowSpan(_this.rowNode);\n        return _this;\n    }\n    CellComp.prototype.getCreateTemplate = function () {\n        var unselectable = !this.beans.gridOptionsWrapper.isEnableCellTextSelection() ? 'unselectable=\"on\"' : '';\n        var templateParts = [];\n        var col = this.column;\n        var width = this.getCellWidth();\n        var left = this.modifyLeftForPrintLayout(col.getLeft());\n        var valueToRender = this.getInitialValueToRender();\n        var valueSanitised = utils_1._.get(this.column, 'colDef.template', null) ? valueToRender : utils_1._.escape(valueToRender);\n        this.tooltip = this.getToolTip();\n        var tooltipSanitised = utils_1._.escape(this.tooltip);\n        var colIdSanitised = utils_1._.escape(col.getId());\n        var wrapperStartTemplate = '';\n        var wrapperEndTemplate = '';\n        var stylesFromColDef = this.preProcessStylesFromColDef();\n        var cssClasses = this.getInitialCssClasses();\n        var stylesForRowSpanning = this.getStylesForRowSpanning();\n        if (this.usingWrapper) {\n            wrapperStartTemplate = \"<div ref=\\\"eCellWrapper\\\" class=\\\"ag-cell-wrapper\\\"><span ref=\\\"eCellValue\\\" class=\\\"ag-cell-value\\\" \" + unselectable + \">\";\n            wrapperEndTemplate = '</span></div>';\n        }\n        templateParts.push(\"<div\");\n        templateParts.push(\" tabindex=\\\"-1\\\"\");\n        templateParts.push(\" \" + unselectable); // THIS IS FOR IE ONLY so text selection doesn't bubble outside of the grid\n        templateParts.push(\" role=\\\"gridcell\\\"\");\n        templateParts.push(\" comp-id=\\\"\" + this.getCompId() + \"\\\" \");\n        templateParts.push(\" col-id=\\\"\" + colIdSanitised + \"\\\"\");\n        templateParts.push(\" class=\\\"\" + cssClasses.join(' ') + \"\\\"\");\n        if (this.beans.gridOptionsWrapper.isEnableBrowserTooltips() && utils_1._.exists(tooltipSanitised)) {\n            templateParts.push(\"title=\\\"\" + tooltipSanitised + \"\\\"\");\n        }\n        templateParts.push(\" style=\\\"width: \" + width + \"px; left: \" + left + \"px; \" + stylesFromColDef + \" \" + stylesForRowSpanning + \"\\\" >\");\n        templateParts.push(wrapperStartTemplate);\n        if (utils_1._.exists(valueSanitised, true)) {\n            templateParts.push(valueSanitised);\n        }\n        templateParts.push(wrapperEndTemplate);\n        templateParts.push(\"</div>\");\n        return templateParts.join('');\n    };\n    CellComp.prototype.getStylesForRowSpanning = function () {\n        if (this.rowSpan === 1) {\n            return '';\n        }\n        var singleRowHeight = this.beans.gridOptionsWrapper.getRowHeightAsNumber();\n        var totalRowHeight = singleRowHeight * this.rowSpan;\n        return \"height: \" + totalRowHeight + \"px; z-index: 1;\";\n    };\n    CellComp.prototype.afterAttached = function () {\n        var querySelector = \"[comp-id=\\\"\" + this.getCompId() + \"\\\"]\";\n        var eGui = this.eParentRow.querySelector(querySelector);\n        this.setGui(eGui);\n        // all of these have dependencies on the eGui, so only do them after eGui is set\n        this.addDomData();\n        this.populateTemplate();\n        this.createCellRendererInstance(true);\n        this.angular1Compile();\n        // if not doing enterprise, then range selection service would be missing\n        // so need to check before trying to use it\n        if (this.rangeSelectionEnabled) {\n            if (this.shouldHaveSelectionHandle()) {\n                this.addSelectionHandle();\n            }\n        }\n        if (utils_1._.exists(this.tooltip) && !this.beans.gridOptionsWrapper.isEnableBrowserTooltips()) {\n            this.beans.tooltipManager.registerTooltip(this);\n        }\n    };\n    CellComp.prototype.onColumnHover = function () {\n        var isHovered = this.beans.columnHoverService.isHovered(this.column);\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-column-hover', isHovered);\n    };\n    CellComp.prototype.onCellChanged = function (event) {\n        var eventImpactsThisCell = event.column === this.column;\n        if (eventImpactsThisCell) {\n            this.refreshCell({});\n        }\n    };\n    CellComp.prototype.getCellLeft = function () {\n        var mostLeftCol;\n        if (this.beans.gridOptionsWrapper.isEnableRtl() && this.colsSpanning) {\n            mostLeftCol = utils_1._.last(this.colsSpanning);\n        }\n        else {\n            mostLeftCol = this.column;\n        }\n        return mostLeftCol.getLeft();\n    };\n    CellComp.prototype.getCellWidth = function () {\n        if (!this.colsSpanning) {\n            return this.column.getActualWidth();\n        }\n        var result = 0;\n        this.colsSpanning.forEach(function (col) { return result += col.getActualWidth(); });\n        return result;\n    };\n    CellComp.prototype.onFlashCells = function (event) {\n        var cellId = cellPosition_1.CellPositionUtils.createId(this.cellPosition);\n        var shouldFlash = event.cells[cellId];\n        if (shouldFlash) {\n            this.animateCell('highlight');\n        }\n    };\n    CellComp.prototype.setupColSpan = function () {\n        // if no col span is active, then we don't set it up, as it would be wasteful of CPU\n        if (utils_1._.missing(this.getComponentHolder().colSpan)) {\n            return;\n        }\n        // because we are col spanning, a reorder of the cols can change what cols we are spanning over\n        this.addDestroyableEventListener(this.beans.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayColumnsChanged.bind(this));\n        // because we are spanning over multiple cols, we check for width any time any cols width changes.\n        // this is expensive - really we should be explicitly checking only the cols we are spanning over\n        // instead of every col, however it would be tricky code to track the cols we are spanning over, so\n        // because hardly anyone will be using colSpan, am favouring this easier way for more maintainable code.\n        this.addDestroyableEventListener(this.beans.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onWidthChanged.bind(this));\n        this.colsSpanning = this.getColSpanningList();\n    };\n    CellComp.prototype.getColSpanningList = function () {\n        var colSpan = this.column.getColSpan(this.rowNode);\n        var colsSpanning = [];\n        // if just one col, the col span is just the column we are in\n        if (colSpan === 1) {\n            colsSpanning.push(this.column);\n        }\n        else {\n            var pointer = this.column;\n            var pinned = this.column.getPinned();\n            for (var i = 0; pointer && i < colSpan; i++) {\n                colsSpanning.push(pointer);\n                pointer = this.beans.columnController.getDisplayedColAfter(pointer);\n                if (!pointer || utils_1._.missing(pointer)) {\n                    break;\n                }\n                // we do not allow col spanning to span outside of pinned areas\n                if (pinned !== pointer.getPinned()) {\n                    break;\n                }\n            }\n        }\n        return colsSpanning;\n    };\n    CellComp.prototype.onDisplayColumnsChanged = function () {\n        var colsSpanning = this.getColSpanningList();\n        if (!utils_1._.compareArrays(this.colsSpanning, colsSpanning)) {\n            this.colsSpanning = colsSpanning;\n            this.onWidthChanged();\n            this.onLeftChanged(); // left changes when doing RTL\n        }\n    };\n    CellComp.prototype.getInitialCssClasses = function () {\n        var cssClasses = [\"ag-cell\", \"ag-cell-not-inline-editing\"];\n        // if we are putting the cell into a dummy container, to work out it's height,\n        // then we don't put the height css in, as we want cell to fit height in that case.\n        if (!this.autoHeightCell) {\n            cssClasses.push('ag-cell-with-height');\n        }\n        var doingFocusCss = !this.beans.gridOptionsWrapper.isSuppressCellSelection();\n        if (doingFocusCss && this.cellFocused) {\n            // otherwise the class depends on the focus state\n            cssClasses.push('ag-cell-focus');\n        }\n        if (this.firstRightPinned) {\n            cssClasses.push('ag-cell-first-right-pinned');\n        }\n        if (this.lastLeftPinned) {\n            cssClasses.push('ag-cell-last-left-pinned');\n        }\n        if (this.beans.columnHoverService.isHovered(this.column)) {\n            cssClasses.push('ag-column-hover');\n        }\n        utils_1._.pushAll(cssClasses, this.preProcessClassesFromColDef());\n        utils_1._.pushAll(cssClasses, this.preProcessCellClassRules());\n        utils_1._.pushAll(cssClasses, this.getInitialRangeClasses());\n        // if using the wrapper, this class goes on the wrapper instead\n        if (!this.usingWrapper) {\n            cssClasses.push('ag-cell-value');\n        }\n        return cssClasses;\n    };\n    CellComp.prototype.getInitialValueToRender = function () {\n        // if using a cellRenderer, then render the html from the cell renderer if it exists\n        if (this.usingCellRenderer) {\n            if (typeof this.cellRendererGui === 'string') {\n                return this.cellRendererGui;\n            }\n            else {\n                return '';\n            }\n        }\n        var colDef = this.getComponentHolder();\n        if (colDef.template) {\n            // template is really only used for angular 1 - as people using ng1 are used to providing templates with\n            // bindings in it. in ng2, people will hopefully want to provide components, not templates.\n            return colDef.template;\n        }\n        else if (colDef.templateUrl) {\n            // likewise for templateUrl - it's for ng1 really - when we move away from ng1, we can take these out.\n            // niall was pro angular 1 when writing template and templateUrl, if writing from scratch now, would\n            // not do these, but would follow a pattern that was friendly towards components, not templates.\n            var template = this.beans.templateService.getTemplate(colDef.templateUrl, this.refreshCell.bind(this, true));\n            if (template) {\n                return template;\n            }\n            else {\n                return '';\n            }\n        }\n        else {\n            return this.getValueToUse();\n        }\n    };\n    CellComp.prototype.getRenderedRow = function () {\n        return this.rowComp;\n    };\n    CellComp.prototype.isSuppressNavigable = function () {\n        return this.column.isSuppressNavigable(this.rowNode);\n    };\n    CellComp.prototype.getCellRenderer = function () {\n        return this.cellRenderer;\n    };\n    CellComp.prototype.getCellEditor = function () {\n        return this.cellEditor;\n    };\n    // + stop editing {forceRefresh: true, suppressFlash: true}\n    // + event cellChanged {}\n    // + cellRenderer.params.refresh() {} -> method passes 'as is' to the cellRenderer, so params could be anything\n    // + rowComp: event dataChanged {animate: update, newData: !update}\n    // + rowComp: api refreshCells() {animate: true/false}\n    // + rowRenderer: api softRefreshView() {}\n    CellComp.prototype.refreshCell = function (params) {\n        if (this.editingCell) {\n            return;\n        }\n        // if we are in the middle of 'stopEditing', then we don't refresh here, as refresh gets called explicitly\n        if (this.suppressRefreshCell) {\n            return;\n        }\n        var colDef = this.getComponentHolder();\n        var newData = params && params.newData;\n        var suppressFlash = (params && params.suppressFlash) || colDef.suppressCellFlash;\n        var forceRefresh = params && params.forceRefresh;\n        var oldValue = this.value;\n        this.getValueAndFormat();\n        // for simple values only (not pojo's), see if the value is the same, and if it is, skip the refresh.\n        // when never allow skipping after an edit, as after editing, we need to put the GUI back to the way\n        // if was before the edit.\n        var valuesDifferent = !this.valuesAreEqual(oldValue, this.value);\n        var dataNeedsUpdating = forceRefresh || valuesDifferent;\n        if (dataNeedsUpdating) {\n            // if it's 'new data', then we don't refresh the cellRenderer, even if refresh method is available.\n            // this is because if the whole data is new (ie we are showing stock price 'BBA' now and not 'SSD')\n            // then we are not showing a movement in the stock price, rather we are showing different stock.\n            var cellRendererRefreshed = newData ? false : this.attemptCellRendererRefresh();\n            // we do the replace if not doing refresh, or if refresh was unsuccessful.\n            // the refresh can be unsuccessful if we are using a framework (eg ng2 or react) and the framework\n            // wrapper has the refresh method, but the underlying component doesn't\n            if (!cellRendererRefreshed) {\n                this.replaceContentsAfterRefresh();\n            }\n            // we don't want to flash the cells when processing a filter change, as otherwise the UI would\n            // be to busy. see comment in FilterManager with regards processingFilterChange\n            var processingFilterChange = this.beans.filterManager.isSuppressFlashingCellsBecauseFiltering();\n            var flashCell = !suppressFlash && !processingFilterChange &&\n                (this.beans.gridOptionsWrapper.isEnableCellChangeFlash() || colDef.enableCellChangeFlash);\n            if (flashCell) {\n                this.flashCell();\n            }\n            // need to check rules. note, we ignore colDef classes and styles, these are assumed to be static\n            this.postProcessStylesFromColDef();\n            this.postProcessClassesFromColDef();\n        }\n        // we can't readily determine if the data in an angularjs template has changed, so here we just update\n        // and recompile (if applicable)\n        this.updateAngular1ScopeAndCompile();\n        this.refreshToolTip();\n        // we do cellClassRules even if the value has not changed, so that users who have rules that\n        // look at other parts of the row (where the other part of the row might of changed) will work.\n        this.postProcessCellClassRules();\n    };\n    // user can also call this via API\n    CellComp.prototype.flashCell = function () {\n        this.animateCell('data-changed');\n    };\n    CellComp.prototype.animateCell = function (cssName) {\n        var fullName = 'ag-cell-' + cssName;\n        var animationFullName = 'ag-cell-' + cssName + '-animation';\n        var element = this.getGui();\n        // we want to highlight the cells, without any animation\n        utils_1._.addCssClass(element, fullName);\n        utils_1._.removeCssClass(element, animationFullName);\n        // then once that is applied, we remove the highlight with animation\n        window.setTimeout(function () {\n            utils_1._.removeCssClass(element, fullName);\n            utils_1._.addCssClass(element, animationFullName);\n            window.setTimeout(function () {\n                // and then to leave things as we got them, we remove the animation\n                utils_1._.removeCssClass(element, animationFullName);\n            }, 1000);\n        }, 500);\n    };\n    CellComp.prototype.replaceContentsAfterRefresh = function () {\n        // otherwise we rip out the cell and replace it\n        utils_1._.clearElement(this.eParentOfValue);\n        // remove old renderer component if it exists\n        if (this.cellRenderer && this.cellRenderer.destroy) {\n            this.cellRenderer.destroy();\n        }\n        this.cellRenderer = null;\n        this.cellRendererGui = null;\n        // populate\n        this.putDataIntoCellAfterRefresh();\n        this.updateAngular1ScopeAndCompile();\n    };\n    CellComp.prototype.updateAngular1ScopeAndCompile = function () {\n        if (this.beans.gridOptionsWrapper.isAngularCompileRows() && this.scope) {\n            this.scope.data = __assign({}, this.rowNode.data);\n            this.angular1Compile();\n        }\n    };\n    CellComp.prototype.angular1Compile = function () {\n        // if angular compiling, then need to also compile the cell again (angular compiling sucks, please wait...)\n        if (this.beans.gridOptionsWrapper.isAngularCompileRows()) {\n            var eGui = this.getGui();\n            // only compile the node if it hasn't already been done\n            // this prevents \"orphaned\" node leaks\n            if (!eGui.classList.contains('ng-scope') || eGui.childElementCount === 0) {\n                var compiledElement_1 = this.beans.$compile(eGui)(this.scope);\n                this.addDestroyFunc(function () {\n                    compiledElement_1.remove();\n                });\n            }\n        }\n    };\n    CellComp.prototype.postProcessStylesFromColDef = function () {\n        var stylesToUse = this.processStylesFromColDef();\n        if (stylesToUse) {\n            utils_1._.addStylesToElement(this.getGui(), stylesToUse);\n        }\n    };\n    CellComp.prototype.preProcessStylesFromColDef = function () {\n        var stylesToUse = this.processStylesFromColDef();\n        return utils_1._.cssStyleObjectToMarkup(stylesToUse);\n    };\n    CellComp.prototype.processStylesFromColDef = function () {\n        var colDef = this.getComponentHolder();\n        if (colDef.cellStyle) {\n            var cssToUse = void 0;\n            if (typeof colDef.cellStyle === 'function') {\n                var cellStyleParams = {\n                    value: this.value,\n                    data: this.rowNode.data,\n                    node: this.rowNode,\n                    colDef: colDef,\n                    column: this.column,\n                    $scope: this.scope,\n                    context: this.beans.gridOptionsWrapper.getContext(),\n                    api: this.beans.gridOptionsWrapper.getApi()\n                };\n                var cellStyleFunc = colDef.cellStyle;\n                cssToUse = cellStyleFunc(cellStyleParams);\n            }\n            else {\n                cssToUse = colDef.cellStyle;\n            }\n            return cssToUse;\n        }\n    };\n    CellComp.prototype.postProcessClassesFromColDef = function () {\n        var _this = this;\n        this.processClassesFromColDef(function (className) { return utils_1._.addCssClass(_this.getGui(), className); });\n    };\n    CellComp.prototype.preProcessClassesFromColDef = function () {\n        var res = [];\n        this.processClassesFromColDef(function (className) { return res.push(className); });\n        return res;\n    };\n    CellComp.prototype.processClassesFromColDef = function (onApplicableClass) {\n        var colDef = this.getComponentHolder();\n        this.beans.stylingService.processStaticCellClasses(colDef, {\n            value: this.value,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            colDef: colDef,\n            rowIndex: this.rowNode.rowIndex,\n            $scope: this.scope,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext()\n        }, onApplicableClass);\n    };\n    CellComp.prototype.putDataIntoCellAfterRefresh = function () {\n        // template gets preference, then cellRenderer, then do it ourselves\n        var colDef = this.getComponentHolder();\n        if (colDef.template) {\n            // template is really only used for angular 1 - as people using ng1 are used to providing templates with\n            // bindings in it. in ng2, people will hopefully want to provide components, not templates.\n            this.eParentOfValue.innerHTML = colDef.template;\n        }\n        else if (colDef.templateUrl) {\n            // likewise for templateUrl - it's for ng1 really - when we move away from ng1, we can take these out.\n            // niall was pro angular 1 when writing template and templateUrl, if writing from scratch now, would\n            // not do these, but would follow a pattern that was friendly towards components, not templates.\n            var template = this.beans.templateService.getTemplate(colDef.templateUrl, this.refreshCell.bind(this, true));\n            if (template) {\n                this.eParentOfValue.innerHTML = template;\n            }\n        }\n        else {\n            // we can switch from using a cell renderer back to the default if a user\n            // is using cellRendererSelect\n            this.chooseCellRenderer();\n            if (this.usingCellRenderer) {\n                this.createCellRendererInstance();\n            }\n            else {\n                var valueToUse = this.getValueToUse();\n                if (valueToUse !== null && valueToUse !== undefined) {\n                    this.eParentOfValue.innerHTML = utils_1._.escape(valueToUse);\n                }\n            }\n        }\n    };\n    CellComp.prototype.attemptCellRendererRefresh = function () {\n        if (utils_1._.missing(this.cellRenderer) || !this.cellRenderer || utils_1._.missing(this.cellRenderer.refresh)) {\n            return false;\n        }\n        // if the cell renderer has a refresh method, we call this instead of doing a refresh\n        var params = this.createCellRendererParams();\n        // take any custom params off of the user\n        var finalParams = this.beans.userComponentFactory.createFinalParams(this.getComponentHolder(), this.cellRendererType, params);\n        var result = this.cellRenderer.refresh(finalParams);\n        // NOTE on undefined: previous version of the cellRenderer.refresh() interface\n        // returned nothing, if the method existed, we assumed it refreshed. so for\n        // backwards compatibility, we assume if method exists and returns nothing,\n        // that it was successful.\n        return result === true || result === undefined;\n    };\n    CellComp.prototype.refreshToolTip = function () {\n        var newTooltip = this.getToolTip();\n        if (this.tooltip !== newTooltip) {\n            this.tooltip = newTooltip;\n            if (!this.beans.gridOptionsWrapper.isEnableBrowserTooltips()) {\n                return;\n            }\n            if (utils_1._.exists(newTooltip)) {\n                var tooltipSanitised = utils_1._.escape(this.tooltip);\n                this.eParentOfValue.setAttribute('title', tooltipSanitised);\n            }\n            else {\n                this.eParentOfValue.removeAttribute('title');\n            }\n        }\n    };\n    CellComp.prototype.valuesAreEqual = function (val1, val2) {\n        // if the user provided an equals method, use that, otherwise do simple comparison\n        var colDef = this.getComponentHolder();\n        var equalsMethod = colDef ? colDef.equals : null;\n        if (equalsMethod) {\n            return equalsMethod(val1, val2);\n        }\n        return val1 === val2;\n    };\n    CellComp.prototype.getToolTip = function () {\n        var colDef = this.getComponentHolder();\n        var data = this.rowNode.data;\n        if (colDef.tooltipField && utils_1._.exists(data)) {\n            return utils_1._.getValueUsingField(data, colDef.tooltipField, this.column.isTooltipFieldContainsDots());\n        }\n        var valueGetter = colDef.tooltipValueGetter || colDef.tooltip;\n        if (valueGetter) {\n            return valueGetter({\n                api: this.beans.gridOptionsWrapper.getApi(),\n                columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n                colDef: colDef,\n                column: this.getColumn(),\n                context: this.beans.gridOptionsWrapper.getContext(),\n                value: this.value,\n                valueFormatted: this.valueFormatted,\n                rowIndex: this.cellPosition.rowIndex,\n                node: this.rowNode,\n                data: this.rowNode.data,\n                $scope: this.scope,\n            });\n        }\n        return null;\n    };\n    CellComp.prototype.getTooltipText = function (escape) {\n        if (escape === void 0) { escape = true; }\n        return escape ? utils_1._.escape(this.tooltip) : this.tooltip;\n    };\n    CellComp.prototype.processCellClassRules = function (onApplicableClass, onNotApplicableClass) {\n        var colDef = this.getComponentHolder();\n        this.beans.stylingService.processClassRules(colDef.cellClassRules, {\n            value: this.value,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            colDef: colDef,\n            rowIndex: this.cellPosition.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            $scope: this.scope,\n            context: this.beans.gridOptionsWrapper.getContext()\n        }, onApplicableClass, onNotApplicableClass);\n    };\n    CellComp.prototype.postProcessCellClassRules = function () {\n        var _this = this;\n        this.processCellClassRules(function (className) {\n            utils_1._.addCssClass(_this.getGui(), className);\n        }, function (className) {\n            utils_1._.removeCssClass(_this.getGui(), className);\n        });\n    };\n    CellComp.prototype.preProcessCellClassRules = function () {\n        var res = [];\n        this.processCellClassRules(function (className) {\n            res.push(className);\n        }, function (className) {\n            // not catered for, if creating, no need\n            // to remove class as it was never there\n        });\n        return res;\n    };\n    // a wrapper is used when we are putting a selection checkbox in the cell with the value\n    CellComp.prototype.setUsingWrapper = function () {\n        var colDef = this.getComponentHolder();\n        // never allow selection or dragging on pinned rows\n        if (this.rowNode.rowPinned) {\n            this.usingWrapper = false;\n            this.includeSelectionComponent = false;\n            this.includeRowDraggingComponent = false;\n            return;\n        }\n        var cbSelectionIsFunc = typeof colDef.checkboxSelection === 'function';\n        var rowDraggableIsFunc = typeof colDef.rowDrag === 'function';\n        this.includeSelectionComponent = cbSelectionIsFunc || colDef.checkboxSelection === true;\n        this.includeRowDraggingComponent = rowDraggableIsFunc || colDef.rowDrag === true;\n        this.usingWrapper = this.includeRowDraggingComponent || this.includeSelectionComponent;\n    };\n    CellComp.prototype.chooseCellRenderer = function () {\n        // template gets preference, then cellRenderer, then do it ourselves\n        var colDef = this.getComponentHolder();\n        // templates are for ng1, ideally we wouldn't have these, they are ng1 support\n        // inside the core which is bad\n        if (colDef.template || colDef.templateUrl) {\n            this.usingCellRenderer = false;\n            return;\n        }\n        var params = this.createCellRendererParams();\n        var cellRenderer = this.beans.userComponentFactory.lookupComponentClassDef(colDef, 'cellRenderer', params);\n        var pinnedRowCellRenderer = this.beans.userComponentFactory.lookupComponentClassDef(colDef, 'pinnedRowCellRenderer', params);\n        if (pinnedRowCellRenderer && this.rowNode.rowPinned) {\n            this.cellRendererType = CellComp.CELL_RENDERER_TYPE_PINNED;\n            this.usingCellRenderer = true;\n        }\n        else if (cellRenderer) {\n            this.cellRendererType = CellComp.CELL_RENDERER_TYPE_NORMAL;\n            this.usingCellRenderer = true;\n        }\n        else {\n            this.usingCellRenderer = false;\n        }\n    };\n    CellComp.prototype.createCellRendererInstance = function (useTaskService) {\n        var _this = this;\n        if (useTaskService === void 0) { useTaskService = false; }\n        if (!this.usingCellRenderer) {\n            return;\n        }\n        // never use task service if angularCompileRows=true, as that assume the cell renderers\n        // are finished when the row is created.\n        if (this.beans.gridOptionsWrapper.isAngularCompileRows()) {\n            useTaskService = false;\n        }\n        var params = this.createCellRendererParams();\n        this.cellRendererVersion++;\n        var callback = this.afterCellRendererCreated.bind(this, this.cellRendererVersion);\n        var cellRendererTypeNormal = this.cellRendererType === CellComp.CELL_RENDERER_TYPE_NORMAL;\n        var task = function () {\n            // this can return null in the event that the user has switched from a renderer component to nothing, for example\n            // when using a cellRendererSelect to return a component or null depending on row data etc\n            var componentPromise;\n            if (cellRendererTypeNormal) {\n                componentPromise = _this.beans.userComponentFactory.newCellRenderer(_this.getComponentHolder(), params);\n            }\n            else {\n                componentPromise = _this.beans.userComponentFactory.newPinnedRowCellRenderer(_this.getComponentHolder(), params);\n            }\n            if (componentPromise) {\n                componentPromise.then(callback);\n            }\n        };\n        if (useTaskService) {\n            this.beans.taskQueue.addP2Task(task);\n        }\n        else {\n            task();\n        }\n    };\n    CellComp.prototype.afterCellRendererCreated = function (cellRendererVersion, cellRenderer) {\n        // see if daemon\n        if (!this.isAlive() || (cellRendererVersion !== this.cellRendererVersion)) {\n            if (cellRenderer.destroy) {\n                cellRenderer.destroy();\n            }\n            return;\n        }\n        this.cellRenderer = cellRenderer;\n        this.cellRendererGui = this.cellRenderer.getGui();\n        if (utils_1._.missing(this.cellRendererGui)) {\n            return;\n        }\n        // if async components, then it's possible the user started editing since\n        // this call was made\n        if (!this.editingCell) {\n            this.eParentOfValue.appendChild(this.cellRendererGui);\n        }\n    };\n    CellComp.prototype.createCellRendererParams = function () {\n        var _this = this;\n        var params = {\n            value: this.value,\n            valueFormatted: this.valueFormatted,\n            getValue: this.getValue.bind(this),\n            setValue: function (value) {\n                _this.beans.valueService.setValue(_this.rowNode, _this.column, value);\n            },\n            formatValue: this.formatValue.bind(this),\n            data: this.rowNode.data,\n            node: this.rowNode,\n            colDef: this.getComponentHolder(),\n            column: this.column,\n            $scope: this.scope,\n            rowIndex: this.cellPosition.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            refreshCell: this.refreshCell.bind(this),\n            eGridCell: this.getGui(),\n            eParentOfValue: this.eParentOfValue,\n            // these bits are not documented anywhere, so we could drop them?\n            // it was in the olden days to allow user to register for when rendered\n            // row was removed (the row comp was removed), however now that the user\n            // can provide components for cells, the destroy method gets call when this\n            // happens so no longer need to fire event.\n            addRowCompListener: this.rowComp ? this.rowComp.addEventListener.bind(this.rowComp) : null,\n            addRenderedRowListener: function (eventType, listener) {\n                console.warn('ag-Grid: since ag-Grid .v11, params.addRenderedRowListener() is now params.addRowCompListener()');\n                if (_this.rowComp) {\n                    _this.rowComp.addEventListener(eventType, listener);\n                }\n            }\n        };\n        return params;\n    };\n    CellComp.prototype.formatValue = function (value) {\n        var valueFormatted = this.beans.valueFormatterService.formatValue(this.column, this.rowNode, this.scope, value);\n        var valueFormattedExists = valueFormatted !== null && valueFormatted !== undefined;\n        return valueFormattedExists ? valueFormatted : value;\n    };\n    CellComp.prototype.getValueToUse = function () {\n        var valueFormattedExists = this.valueFormatted !== null && this.valueFormatted !== undefined;\n        return valueFormattedExists ? this.valueFormatted : this.value;\n    };\n    CellComp.prototype.getValueAndFormat = function () {\n        this.value = this.getValue();\n        this.valueFormatted = this.beans.valueFormatterService.formatValue(this.column, this.rowNode, this.scope, this.value);\n    };\n    CellComp.prototype.getValue = function () {\n        // if we don't check this, then the grid will render leaf groups as open even if we are not\n        // allowing the user to open leaf groups. confused? remember for pivot mode we don't allow\n        // opening leaf groups, so we have to force leafGroups to be closed in case the user expanded\n        // them via the API, or user user expanded them in the UI before turning on pivot mode\n        var lockedClosedGroup = this.rowNode.leafGroup && this.beans.columnController.isPivotMode();\n        var isOpenGroup = this.rowNode.group && this.rowNode.expanded && !this.rowNode.footer && !lockedClosedGroup;\n        // are we showing group footers\n        var groupFootersEnabled = this.beans.gridOptionsWrapper.isGroupIncludeFooter();\n        // if doing footers, we normally don't show agg data at group level when group is open\n        var groupAlwaysShowAggData = this.beans.gridOptionsWrapper.isGroupSuppressBlankHeader();\n        // if doing grouping and footers, we don't want to include the agg value\n        // in the header when the group is open\n        var ignoreAggData = (isOpenGroup && groupFootersEnabled) && !groupAlwaysShowAggData;\n        return this.beans.valueService.getValue(this.column, this.rowNode, false, ignoreAggData);\n    };\n    CellComp.prototype.onMouseEvent = function (eventName, mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        switch (eventName) {\n            case 'click':\n                this.onCellClicked(mouseEvent);\n                break;\n            case 'mousedown':\n                this.onMouseDown(mouseEvent);\n                break;\n            case 'dblclick':\n                this.onCellDoubleClicked(mouseEvent);\n                break;\n            case 'mouseout':\n                this.onMouseOut(mouseEvent);\n                break;\n            case 'mouseover':\n                this.onMouseOver(mouseEvent);\n                break;\n        }\n    };\n    CellComp.prototype.dispatchCellContextMenuEvent = function (event) {\n        var colDef = this.getComponentHolder();\n        var cellContextMenuEvent = this.createEvent(event, events_1.Events.EVENT_CELL_CONTEXT_MENU);\n        this.beans.eventService.dispatchEvent(cellContextMenuEvent);\n        if (colDef.onCellContextMenu) {\n            // to make the callback async, do in a timeout\n            window.setTimeout(function () { return colDef.onCellContextMenu(cellContextMenuEvent); }, 0);\n        }\n    };\n    CellComp.prototype.createEvent = function (domEvent, eventType) {\n        var event = {\n            node: this.rowNode,\n            data: this.rowNode.data,\n            value: this.value,\n            column: this.column,\n            colDef: this.getComponentHolder(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            api: this.beans.gridApi,\n            columnApi: this.beans.columnApi,\n            rowPinned: this.rowNode.rowPinned,\n            event: domEvent,\n            type: eventType,\n            rowIndex: this.rowNode.rowIndex\n        };\n        // because we are hacking in $scope for angular 1, we have to de-reference\n        if (this.scope) {\n            event.$scope = this.scope;\n        }\n        return event;\n    };\n    CellComp.prototype.onMouseOut = function (mouseEvent) {\n        var cellMouseOutEvent = this.createEvent(mouseEvent, events_1.Events.EVENT_CELL_MOUSE_OUT);\n        this.beans.eventService.dispatchEvent(cellMouseOutEvent);\n        this.beans.columnHoverService.clearMouseOver();\n    };\n    CellComp.prototype.onMouseOver = function (mouseEvent) {\n        var cellMouseOverEvent = this.createEvent(mouseEvent, events_1.Events.EVENT_CELL_MOUSE_OVER);\n        this.beans.eventService.dispatchEvent(cellMouseOverEvent);\n        this.beans.columnHoverService.setMouseOver([this.column]);\n    };\n    CellComp.prototype.onCellDoubleClicked = function (mouseEvent) {\n        var colDef = this.getComponentHolder();\n        // always dispatch event to eventService\n        var cellDoubleClickedEvent = this.createEvent(mouseEvent, events_1.Events.EVENT_CELL_DOUBLE_CLICKED);\n        this.beans.eventService.dispatchEvent(cellDoubleClickedEvent);\n        // check if colDef also wants to handle event\n        if (typeof colDef.onCellDoubleClicked === 'function') {\n            // to make the callback async, do in a timeout\n            window.setTimeout(function () { return colDef.onCellDoubleClicked(cellDoubleClickedEvent); }, 0);\n        }\n        var editOnDoubleClick = !this.beans.gridOptionsWrapper.isSingleClickEdit()\n            && !this.beans.gridOptionsWrapper.isSuppressClickEdit();\n        if (editOnDoubleClick) {\n            this.startRowOrCellEdit();\n        }\n    };\n    // called by rowRenderer when user navigates via tab key\n    CellComp.prototype.startRowOrCellEdit = function (keyPress, charPress) {\n        if (this.beans.gridOptionsWrapper.isFullRowEdit()) {\n            this.rowComp.startRowEditing(keyPress, charPress, this);\n        }\n        else {\n            this.startEditingIfEnabled(keyPress, charPress, true);\n        }\n    };\n    CellComp.prototype.isCellEditable = function () {\n        return this.column.isCellEditable(this.rowNode);\n    };\n    // either called internally if single cell editing, or called by rowRenderer if row editing\n    CellComp.prototype.startEditingIfEnabled = function (keyPress, charPress, cellStartedEdit) {\n        if (keyPress === void 0) { keyPress = null; }\n        if (charPress === void 0) { charPress = null; }\n        if (cellStartedEdit === void 0) { cellStartedEdit = false; }\n        // don't do it if not editable\n        if (!this.isCellEditable()) {\n            return;\n        }\n        // don't do it if already editing\n        if (this.editingCell) {\n            return;\n        }\n        this.editingCell = true;\n        this.cellEditorVersion++;\n        var callback = this.afterCellEditorCreated.bind(this, this.cellEditorVersion);\n        var params = this.createCellEditorParams(keyPress, charPress, cellStartedEdit);\n        this.createCellEditor(params).then(callback);\n        // if we don't do this, and editor component is async, then there will be a period\n        // when the component isn't present and keyboard navigation won't work - so example\n        // of user hitting tab quickly (more quickly than renderers getting created) won't work\n        var cellEditorAsync = utils_1._.missing(this.cellEditor);\n        if (cellEditorAsync && cellStartedEdit) {\n            this.focusCell(true);\n        }\n    };\n    CellComp.prototype.createCellEditor = function (params) {\n        var _this = this;\n        var cellEditorPromise = this.beans.userComponentFactory.newCellEditor(this.column.getColDef(), params);\n        return cellEditorPromise.map(function (cellEditor) {\n            var isPopup = cellEditor.isPopup && cellEditor.isPopup();\n            if (!isPopup) {\n                return cellEditor;\n            }\n            if (_this.beans.gridOptionsWrapper.isFullRowEdit()) {\n                console.warn('ag-Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both ' +\n                    '- either turn off fullRowEdit, or stop using popup editors.');\n            }\n            // if a popup, then we wrap in a popup editor and return the popup\n            var popupEditorWrapper = new popupEditorWrapper_1.PopupEditorWrapper(cellEditor);\n            _this.beans.context.wireBean(popupEditorWrapper);\n            popupEditorWrapper.init(params);\n            return popupEditorWrapper;\n        });\n    };\n    CellComp.prototype.afterCellEditorCreated = function (cellEditorVersion, cellEditor) {\n        // if editingCell=false, means user cancelled the editor before component was ready.\n        // if versionMismatch, then user cancelled the edit, then started the edit again, and this\n        //   is the first editor which is now stale.\n        var versionMismatch = cellEditorVersion !== this.cellEditorVersion;\n        if (versionMismatch || !this.editingCell) {\n            if (cellEditor.destroy) {\n                cellEditor.destroy();\n            }\n            return;\n        }\n        if (cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart()) {\n            if (cellEditor.destroy) {\n                cellEditor.destroy();\n            }\n            this.editingCell = false;\n            return;\n        }\n        if (!cellEditor.getGui) {\n            console.warn(\"ag-Grid: cellEditor for column \" + this.column.getId() + \" is missing getGui() method\");\n            // no getGui, for React guys, see if they attached a react component directly\n            if (cellEditor.render) {\n                console.warn(\"ag-Grid: we found 'render' on the component, are you trying to set a React renderer but added it as colDef.cellEditor instead of colDef.cellEditorFmk?\");\n            }\n            if (cellEditor.destroy) {\n                cellEditor.destroy();\n            }\n            this.editingCell = false;\n            return;\n        }\n        this.cellEditor = cellEditor;\n        this.cellEditorInPopup = cellEditor.isPopup !== undefined && cellEditor.isPopup();\n        this.setInlineEditingClass();\n        if (this.cellEditorInPopup) {\n            this.addPopupCellEditor();\n        }\n        else {\n            this.addInCellEditor();\n        }\n        if (cellEditor.afterGuiAttached) {\n            cellEditor.afterGuiAttached();\n        }\n        var event = this.createEvent(null, events_1.Events.EVENT_CELL_EDITING_STARTED);\n        this.beans.eventService.dispatchEvent(event);\n    };\n    CellComp.prototype.addInCellEditor = function () {\n        utils_1._.clearElement(this.getGui());\n        if (this.cellEditor) {\n            this.getGui().appendChild(this.cellEditor.getGui());\n        }\n        this.angular1Compile();\n    };\n    CellComp.prototype.addPopupCellEditor = function () {\n        var _this = this;\n        var ePopupGui = this.cellEditor ? this.cellEditor.getGui() : null;\n        this.hideEditorPopup = this.beans.popupService.addAsModalPopup(ePopupGui, true, \n        // callback for when popup disappears\n        function () {\n            _this.onPopupEditorClosed();\n        });\n        this.beans.popupService.positionPopupOverComponent({\n            column: this.column,\n            rowNode: this.rowNode,\n            type: 'popupCellEditor',\n            eventSource: this.getGui(),\n            ePopup: ePopupGui,\n            keepWithinBounds: true\n        });\n        this.angular1Compile();\n    };\n    CellComp.prototype.onPopupEditorClosed = function () {\n        // we only call stopEditing if we are editing, as\n        // it's possible the popup called 'stop editing'\n        // before this, eg if 'enter key' was pressed on\n        // the editor.\n        if (this.editingCell) {\n            // note: this only happens when use clicks outside of the grid. if use clicks on another\n            // cell, then the editing will have already stopped on this cell\n            this.stopRowOrCellEdit();\n            // we only focus cell again if this cell is still focused. it is possible\n            // it is not focused if the user cancelled the edit by clicking on another\n            // cell outside of this one\n            if (this.beans.focusedCellController.isCellFocused(this.cellPosition)) {\n                this.focusCell(true);\n            }\n        }\n    };\n    // if we are editing inline, then we don't have the padding in the cell (set in the themes)\n    // to allow the text editor full access to the entire cell\n    CellComp.prototype.setInlineEditingClass = function () {\n        // ag-cell-inline-editing - appears when user is inline editing\n        // ag-cell-not-inline-editing - appears when user is no inline editing\n        // ag-cell-popup-editing - appears when user is editing cell in popup (appears on the cell, not on the popup)\n        // note: one of {ag-cell-inline-editing, ag-cell-not-inline-editing} is always present, they toggle.\n        //       however {ag-cell-popup-editing} shows when popup, so you have both {ag-cell-popup-editing}\n        //       and {ag-cell-not-inline-editing} showing at the same time.\n        var editingInline = this.editingCell && !this.cellEditorInPopup;\n        var popupEditorShowing = this.editingCell && this.cellEditorInPopup;\n        utils_1._.addOrRemoveCssClass(this.getGui(), \"ag-cell-inline-editing\", editingInline);\n        utils_1._.addOrRemoveCssClass(this.getGui(), \"ag-cell-not-inline-editing\", !editingInline);\n        utils_1._.addOrRemoveCssClass(this.getGui(), \"ag-cell-popup-editing\", popupEditorShowing);\n        utils_1._.addOrRemoveCssClass(this.getGui().parentNode, \"ag-row-inline-editing\", editingInline);\n        utils_1._.addOrRemoveCssClass(this.getGui().parentNode, \"ag-row-not-inline-editing\", !editingInline);\n    };\n    CellComp.prototype.createCellEditorParams = function (keyPress, charPress, cellStartedEdit) {\n        var params = {\n            value: this.getValue(),\n            keyPress: keyPress,\n            charPress: charPress,\n            column: this.column,\n            colDef: this.column.getColDef(),\n            rowIndex: this.cellPosition.rowIndex,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            cellStartedEdit: cellStartedEdit,\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            $scope: this.scope,\n            onKeyDown: this.onKeyDown.bind(this),\n            stopEditing: this.stopEditingAndFocus.bind(this),\n            eGridCell: this.getGui(),\n            parseValue: this.parseValue.bind(this),\n            formatValue: this.formatValue.bind(this)\n        };\n        return params;\n    };\n    // cell editors call this, when they want to stop for reasons other\n    // than what we pick up on. eg selecting from a dropdown ends editing.\n    CellComp.prototype.stopEditingAndFocus = function (suppressNavigateAfterEdit) {\n        if (suppressNavigateAfterEdit === void 0) { suppressNavigateAfterEdit = false; }\n        this.stopRowOrCellEdit();\n        this.focusCell(true);\n        if (!suppressNavigateAfterEdit) {\n            this.navigateAfterEdit();\n        }\n    };\n    CellComp.prototype.parseValue = function (newValue) {\n        var colDef = this.getComponentHolder();\n        var params = {\n            node: this.rowNode,\n            data: this.rowNode.data,\n            oldValue: this.value,\n            newValue: newValue,\n            colDef: colDef,\n            column: this.column,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext()\n        };\n        var valueParser = colDef.valueParser;\n        return utils_1._.exists(valueParser) ? this.beans.expressionService.evaluate(valueParser, params) : newValue;\n    };\n    CellComp.prototype.focusCell = function (forceBrowserFocus) {\n        if (forceBrowserFocus === void 0) { forceBrowserFocus = false; }\n        this.beans.focusedCellController.setFocusedCell(this.cellPosition.rowIndex, this.column, this.rowNode.rowPinned, forceBrowserFocus);\n    };\n    CellComp.prototype.setFocusInOnEditor = function () {\n        if (this.editingCell) {\n            if (this.cellEditor && this.cellEditor.focusIn) {\n                // if the editor is present, then we just focus it\n                this.cellEditor.focusIn();\n            }\n            else {\n                // if the editor is not present, it means async cell editor (eg React fibre)\n                // and we are trying to set focus before the cell editor is present, so we\n                // focus the cell instead\n                this.focusCell(true);\n            }\n        }\n    };\n    CellComp.prototype.isEditing = function () {\n        return this.editingCell;\n    };\n    CellComp.prototype.onKeyDown = function (event) {\n        var key = event.which || event.keyCode;\n        switch (key) {\n            case constants_1.Constants.KEY_ENTER:\n                this.onEnterKeyDown();\n                break;\n            case constants_1.Constants.KEY_F2:\n                this.onF2KeyDown();\n                break;\n            case constants_1.Constants.KEY_ESCAPE:\n                this.onEscapeKeyDown();\n                break;\n            case constants_1.Constants.KEY_TAB:\n                this.onTabKeyDown(event);\n                break;\n            case constants_1.Constants.KEY_BACKSPACE:\n            case constants_1.Constants.KEY_DELETE:\n                this.onBackspaceOrDeleteKeyPressed(key);\n                break;\n            case constants_1.Constants.KEY_DOWN:\n            case constants_1.Constants.KEY_UP:\n            case constants_1.Constants.KEY_RIGHT:\n            case constants_1.Constants.KEY_LEFT:\n                this.onNavigationKeyPressed(event, key);\n                break;\n        }\n    };\n    CellComp.prototype.setFocusOutOnEditor = function () {\n        if (this.editingCell && this.cellEditor && this.cellEditor.focusOut) {\n            this.cellEditor.focusOut();\n        }\n    };\n    CellComp.prototype.onNavigationKeyPressed = function (event, key) {\n        if (this.editingCell) {\n            return;\n        }\n        if (event.shiftKey && this.rangeSelectionEnabled) {\n            this.onShiftRangeSelect(key);\n        }\n        else {\n            this.beans.rowRenderer.navigateToNextCell(event, key, this.cellPosition, true);\n        }\n        // if we don't prevent default, the grid will scroll with the navigation keys\n        event.preventDefault();\n    };\n    CellComp.prototype.onShiftRangeSelect = function (key) {\n        var endCell = this.beans.rangeController.extendLatestRangeInDirection(key);\n        if (endCell) {\n            this.beans.rowRenderer.ensureCellVisible(endCell);\n        }\n    };\n    CellComp.prototype.onTabKeyDown = function (event) {\n        this.beans.rowRenderer.onTabKeyDown(this, event);\n    };\n    CellComp.prototype.onBackspaceOrDeleteKeyPressed = function (key) {\n        if (!this.editingCell) {\n            this.startRowOrCellEdit(key);\n        }\n    };\n    CellComp.prototype.onEnterKeyDown = function () {\n        if (this.editingCell || this.rowComp.isEditing()) {\n            this.stopEditingAndFocus();\n        }\n        else {\n            if (this.beans.gridOptionsWrapper.isEnterMovesDown()) {\n                this.beans.rowRenderer.navigateToNextCell(null, constants_1.Constants.KEY_DOWN, this.cellPosition, false);\n            }\n            else {\n                this.startRowOrCellEdit(constants_1.Constants.KEY_ENTER);\n            }\n        }\n    };\n    CellComp.prototype.navigateAfterEdit = function () {\n        var fullRowEdit = this.beans.gridOptionsWrapper.isFullRowEdit();\n        if (fullRowEdit) {\n            return;\n        }\n        var enterMovesDownAfterEdit = this.beans.gridOptionsWrapper.isEnterMovesDownAfterEdit();\n        if (enterMovesDownAfterEdit) {\n            this.beans.rowRenderer.navigateToNextCell(null, constants_1.Constants.KEY_DOWN, this.cellPosition, false);\n        }\n    };\n    CellComp.prototype.onF2KeyDown = function () {\n        if (!this.editingCell) {\n            this.startRowOrCellEdit(constants_1.Constants.KEY_F2);\n        }\n    };\n    CellComp.prototype.onEscapeKeyDown = function () {\n        if (this.editingCell) {\n            this.stopRowOrCellEdit(true);\n            this.focusCell(true);\n        }\n    };\n    CellComp.prototype.onKeyPress = function (event) {\n        // check this, in case focus is on a (for example) a text field inside the cell,\n        // in which cse we should not be listening for these key pressed\n        var eventTarget = utils_1._.getTarget(event);\n        var eventOnChildComponent = eventTarget !== this.getGui();\n        if (eventOnChildComponent || this.editingCell) {\n            return;\n        }\n        var pressedChar = String.fromCharCode(event.charCode);\n        if (pressedChar === ' ') {\n            this.onSpaceKeyPressed(event);\n        }\n        else {\n            if (utils_1._.isEventFromPrintableCharacter(event)) {\n                this.startRowOrCellEdit(null, pressedChar);\n                // if we don't prevent default, then the keypress also gets applied to the text field\n                // (at least when doing the default editor), but we need to allow the editor to decide\n                // what it wants to do. we only do this IF editing was started - otherwise it messes\n                // up when the use is not doing editing, but using rendering with text fields in cellRenderer\n                // (as it would block the the user from typing into text fields).\n                event.preventDefault();\n            }\n        }\n    };\n    CellComp.prototype.onSpaceKeyPressed = function (event) {\n        if (!this.editingCell && this.beans.gridOptionsWrapper.isRowSelection()) {\n            var selected = this.rowNode.isSelected();\n            this.rowNode.setSelected(!selected);\n        }\n        // prevent default as space key, by default, moves browser scroll down\n        event.preventDefault();\n    };\n    CellComp.prototype.onMouseDown = function (mouseEvent) {\n        // we only need to pass true to focusCell in when the browser is IE\n        // and we are trying to focus a cell (has ag-cell class), otherwise\n        // we pass false, as we don't want the cell to focus also get the browser\n        // focus. if we did, then the cellRenderer could have a text field in it,\n        // for example, and as the user clicks on the text field, the text field,\n        // the focus doesn't get to the text field, instead to goes to the div\n        // behind, making it impossible to select the text field.\n        var forceBrowserFocus = false;\n        var button = mouseEvent.button, ctrlKey = mouseEvent.ctrlKey, metaKey = mouseEvent.metaKey, shiftKey = mouseEvent.shiftKey, target = mouseEvent.target;\n        var _a = this.beans, eventService = _a.eventService, rangeController = _a.rangeController;\n        if (rangeController) {\n            var cellInRange = rangeController.isCellInAnyRange(this.getCellPosition());\n            if (cellInRange && button === 2) {\n                return;\n            }\n        }\n        if (utils_1._.isBrowserIE()) {\n            if (target.classList.contains('ag-cell')) {\n                forceBrowserFocus = true;\n            }\n        }\n        if (!shiftKey || (rangeController && !rangeController.getCellRanges().length)) {\n            this.focusCell(forceBrowserFocus);\n        }\n        else {\n            // if a range is being changed, we need to make sure the focused cell does not change.\n            mouseEvent.preventDefault();\n        }\n        // if we are clicking on a checkbox, we need to make sure the cell wrapping that checkbox\n        // is focused but we don't want to change the range selection, so return here.\n        if (utils_1._.isElementChildOfClass(target, 'ag-selection-checkbox', 3)) {\n            return;\n        }\n        // if it's a right click, then if the cell is already in range,\n        // don't change the range, however if the cell is not in a range,\n        // we set a new range\n        var leftMouseButtonClick = utils_1._.isLeftClick(mouseEvent);\n        if (leftMouseButtonClick && rangeController) {\n            var thisCell = this.cellPosition;\n            if (shiftKey) {\n                rangeController.extendLatestRangeToCell(thisCell);\n            }\n            else {\n                var ctrlKeyPressed = ctrlKey || metaKey;\n                rangeController.setRangeToCell(thisCell, ctrlKeyPressed);\n            }\n        }\n        var cellMouseDownEvent = this.createEvent(mouseEvent, events_1.Events.EVENT_CELL_MOUSE_DOWN);\n        eventService.dispatchEvent(cellMouseDownEvent);\n    };\n    // returns true if on iPad and this is second 'click' event in 200ms\n    CellComp.prototype.isDoubleClickOnIPad = function () {\n        if (!utils_1._.isUserAgentIPad()) {\n            return false;\n        }\n        var nowMillis = new Date().getTime();\n        var res = nowMillis - this.lastIPadMouseClickEvent < 200;\n        this.lastIPadMouseClickEvent = nowMillis;\n        return res;\n    };\n    CellComp.prototype.onCellClicked = function (mouseEvent) {\n        // iPad doesn't have double click - so we need to mimic it do enable editing for\n        // iPad.\n        if (this.isDoubleClickOnIPad()) {\n            this.onCellDoubleClicked(mouseEvent);\n            mouseEvent.preventDefault(); // if we don't do this, then iPad zooms in\n            return;\n        }\n        var cellClickedEvent = this.createEvent(mouseEvent, events_1.Events.EVENT_CELL_CLICKED);\n        this.beans.eventService.dispatchEvent(cellClickedEvent);\n        var colDef = this.getComponentHolder();\n        if (colDef.onCellClicked) {\n            // to make callback async, do in a timeout\n            window.setTimeout(function () { return colDef.onCellClicked(cellClickedEvent); }, 0);\n        }\n        var editOnSingleClick = (this.beans.gridOptionsWrapper.isSingleClickEdit() || colDef.singleClickEdit)\n            && !this.beans.gridOptionsWrapper.isSuppressClickEdit();\n        if (editOnSingleClick) {\n            this.startRowOrCellEdit();\n        }\n        utils_1._.doIeFocusHack(this.getGui());\n    };\n    CellComp.prototype.createGridCellVo = function () {\n        this.cellPosition = {\n            rowIndex: this.rowNode.rowIndex,\n            rowPinned: this.rowNode.rowPinned,\n            column: this.column\n        };\n    };\n    CellComp.prototype.getCellPosition = function () {\n        return this.cellPosition;\n    };\n    CellComp.prototype.getParentRow = function () {\n        return this.eParentRow;\n    };\n    CellComp.prototype.setParentRow = function (eParentRow) {\n        this.eParentRow = eParentRow;\n    };\n    CellComp.prototype.getColumn = function () {\n        return this.column;\n    };\n    CellComp.prototype.getComponentHolder = function () {\n        return this.column.getColDef();\n    };\n    CellComp.prototype.detach = function () {\n        this.eParentRow.removeChild(this.getGui());\n    };\n    // if the row is also getting destroyed, then we don't need to remove from dom,\n    // as the row will also get removed, so no need to take out the cells from the row\n    // if the row is going (removing is an expensive operation, so only need to remove\n    // the top part)\n    CellComp.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.cellEditor && this.cellEditor.destroy) {\n            this.cellEditor.destroy();\n            this.cellEditor = null;\n        }\n        if (this.cellRenderer && this.cellRenderer.destroy) {\n            this.cellRenderer.destroy();\n            this.cellRenderer = null;\n        }\n        if (this.selectionHandle) {\n            this.selectionHandle.destroy();\n        }\n    };\n    CellComp.prototype.onLeftChanged = function () {\n        var left = this.modifyLeftForPrintLayout(this.getCellLeft());\n        this.getGui().style.left = left + 'px';\n    };\n    CellComp.prototype.modifyLeftForPrintLayout = function (leftPosition) {\n        if (!this.printLayout) {\n            return leftPosition;\n        }\n        if (this.column.getPinned() === column_1.Column.PINNED_LEFT) {\n            return leftPosition;\n        }\n        if (this.column.getPinned() === column_1.Column.PINNED_RIGHT) {\n            var leftWidth_1 = this.beans.columnController.getPinnedLeftContainerWidth();\n            var bodyWidth = this.beans.columnController.getBodyContainerWidth();\n            return leftWidth_1 + bodyWidth + leftPosition;\n        }\n        // is in body\n        var leftWidth = this.beans.columnController.getPinnedLeftContainerWidth();\n        return leftWidth + leftPosition;\n    };\n    CellComp.prototype.onWidthChanged = function () {\n        var width = this.getCellWidth();\n        this.getGui().style.width = width + 'px';\n    };\n    CellComp.prototype.getRangeBorders = function () {\n        var _this = this;\n        var isRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n        var top = false;\n        var right = false;\n        var bottom = false;\n        var left = false;\n        var thisCol = this.cellPosition.column;\n        var rangeController = this.beans.rangeController;\n        var leftCol;\n        var rightCol;\n        if (isRtl) {\n            leftCol = this.beans.columnController.getDisplayedColAfter(thisCol);\n            rightCol = this.beans.columnController.getDisplayedColBefore(thisCol);\n        }\n        else {\n            leftCol = this.beans.columnController.getDisplayedColBefore(thisCol);\n            rightCol = this.beans.columnController.getDisplayedColAfter(thisCol);\n        }\n        var ranges = rangeController.getCellRanges().filter(function (range) { return rangeController.isCellInSpecificRange(_this.cellPosition, range); });\n        // this means we are the first column in the grid\n        if (!leftCol) {\n            left = true;\n        }\n        // this means we are the last column in the grid\n        if (!rightCol) {\n            right = true;\n        }\n        for (var i = 0; i < ranges.length; i++) {\n            if (top && right && bottom && left) {\n                break;\n            }\n            var range = ranges[i];\n            var startRow = rangeController.getRangeStartRow(range);\n            var endRow = rangeController.getRangeEndRow(range);\n            if (!top && rowPosition_1.RowPositionUtils.sameRow(startRow, this.cellPosition)) {\n                top = true;\n            }\n            if (!bottom && rowPosition_1.RowPositionUtils.sameRow(endRow, this.cellPosition)) {\n                bottom = true;\n            }\n            if (!left && range.columns.indexOf(leftCol) < 0) {\n                left = true;\n            }\n            if (!right && range.columns.indexOf(rightCol) < 0) {\n                right = true;\n            }\n        }\n        return { top: top, right: right, bottom: bottom, left: left };\n    };\n    CellComp.prototype.getInitialRangeClasses = function () {\n        var res = [];\n        if (!this.rangeSelectionEnabled || !this.rangeCount) {\n            return res;\n        }\n        var beans = this.beans;\n        var rangeController = beans.rangeController;\n        res.push('ag-cell-range-selected');\n        if (this.hasChartRange) {\n            res.push('ag-cell-range-chart');\n        }\n        var count = Math.min(this.rangeCount, 4);\n        res.push(\"ag-cell-range-selected-\" + count);\n        if (this.rangeCount === 1 && !rangeController.isMoreThanOneCell()) {\n            res.push('ag-cell-range-single-cell');\n        }\n        if (this.rangeCount > 0) {\n            var borders = this.getRangeBorders();\n            if (borders.top) {\n                res.push('ag-cell-range-top');\n            }\n            if (borders.right) {\n                res.push('ag-cell-range-right');\n            }\n            if (borders.bottom) {\n                res.push('ag-cell-range-bottom');\n            }\n            if (borders.left) {\n                res.push('ag-cell-range-left');\n            }\n        }\n        if (!!this.selectionHandle) {\n            res.push('ag-cell-range-handle');\n        }\n        return res;\n    };\n    CellComp.prototype.onRowIndexChanged = function () {\n        // when index changes, this influences items that need the index, so we update the\n        // grid cell so they are working off the new index.\n        this.createGridCellVo();\n        // when the index of the row changes, ie means the cell may have lost or gained focus\n        this.onCellFocused();\n        // check range selection\n        this.onRangeSelectionChanged();\n    };\n    CellComp.prototype.onRangeSelectionChanged = function () {\n        if (!this.beans.enterprise) {\n            return;\n        }\n        var _a = this, beans = _a.beans, cellPosition = _a.cellPosition, rangeCount = _a.rangeCount;\n        var rangeController = beans.rangeController;\n        var newRangeCount = rangeController.getCellRangeCount(cellPosition);\n        var element = this.getGui();\n        if (rangeCount !== newRangeCount) {\n            utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-selected', newRangeCount !== 0);\n            utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-selected-1', newRangeCount === 1);\n            utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-selected-2', newRangeCount === 2);\n            utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-selected-3', newRangeCount === 3);\n            utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-selected-4', newRangeCount >= 4);\n            this.rangeCount = newRangeCount;\n        }\n        var hasChartRange = this.rangeCount && rangeController.getCellRanges().every(function (range) { return utils_1._.exists(range.type); });\n        if (this.hasChartRange !== hasChartRange) {\n            utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-chart', hasChartRange);\n            this.hasChartRange = hasChartRange;\n        }\n        this.updateRangeBorders();\n        var isSingleCell = this.rangeCount === 1 && !rangeController.isMoreThanOneCell();\n        utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-single-cell', isSingleCell);\n        this.refreshHandle();\n        utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-handle', !!this.selectionHandle);\n    };\n    CellComp.prototype.shouldHaveSelectionHandle = function () {\n        var _a = this.beans, gridOptionsWrapper = _a.gridOptionsWrapper, rangeController = _a.rangeController;\n        var el = this.getGui();\n        var cellRanges = rangeController.getCellRanges();\n        var rangesLen = cellRanges.length;\n        if (!rangesLen) {\n            return false;\n        }\n        var lastRange = utils_1._.last(cellRanges);\n        var isFirstRangeCategory = cellRanges[0].type === iRangeController_1.CellRangeType.DIMENSION;\n        var handlesAllowed = (gridOptionsWrapper.isEnableFillHandle() ||\n            gridOptionsWrapper.isEnableRangeHandle() ||\n            this.hasChartRange && !isFirstRangeCategory) && rangesLen === 1;\n        if (!handlesAllowed && this.hasChartRange) {\n            var cellPosition = this.getCellPosition();\n            handlesAllowed =\n                isFirstRangeCategory &&\n                    rangesLen === 2 &&\n                    rangeController.isCellInSpecificRange(this.getCellPosition(), lastRange);\n            var isCategory = isFirstRangeCategory &&\n                rangeController.isCellInSpecificRange(cellPosition, cellRanges[0]);\n            utils_1._.addOrRemoveCssClass(el, 'ag-cell-range-chart-category', isCategory);\n        }\n        return this.rangeCount &&\n            handlesAllowed &&\n            this.beans.rangeController.isContiguousRange(lastRange) &&\n            (utils_1._.containsClass(el, 'ag-cell-range-single-cell') ||\n                (utils_1._.containsClass(el, 'ag-cell-range-bottom') && utils_1._.containsClass(el, 'ag-cell-range-right')));\n    };\n    CellComp.prototype.addSelectionHandle = function () {\n        var _a = this.beans, gridOptionsWrapper = _a.gridOptionsWrapper, context = _a.context, rangeController = _a.rangeController;\n        var cellRangeType = utils_1._.last(rangeController.getCellRanges()).type;\n        var type = (gridOptionsWrapper.isEnableFillHandle() && utils_1._.missing(cellRangeType)) ? 'fill' : 'range';\n        if (this.selectionHandle && this.selectionHandle.getType() !== type) {\n            this.selectionHandle.destroy();\n            this.selectionHandle = undefined;\n        }\n        if (!this.selectionHandle) {\n            this.selectionHandle = context.createComponentFromElement(document.createElement(\"ag-\" + type + \"-handle\"));\n        }\n        this.selectionHandle.refresh(this);\n    };\n    CellComp.prototype.updateRangeBordersIfRangeCount = function () {\n        // we only need to update range borders if we are in a range\n        if (this.rangeCount > 0) {\n            this.updateRangeBorders();\n            this.refreshHandle();\n        }\n    };\n    CellComp.prototype.refreshHandle = function () {\n        var shouldHaveSelectionHandle = this.shouldHaveSelectionHandle();\n        if (this.selectionHandle && !shouldHaveSelectionHandle) {\n            this.selectionHandle.destroy();\n            this.selectionHandle = null;\n        }\n        if (shouldHaveSelectionHandle) {\n            this.addSelectionHandle();\n        }\n    };\n    CellComp.prototype.updateRangeBorders = function () {\n        var rangeBorders = this.getRangeBorders();\n        var isSingleCell = this.rangeCount === 1 && !this.beans.rangeController.isMoreThanOneCell();\n        var isTop = !isSingleCell && rangeBorders.top;\n        var isRight = !isSingleCell && rangeBorders.right;\n        var isBottom = !isSingleCell && rangeBorders.bottom;\n        var isLeft = !isSingleCell && rangeBorders.left;\n        var element = this.getGui();\n        utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-top', isTop);\n        utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-right', isRight);\n        utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-bottom', isBottom);\n        utils_1._.addOrRemoveCssClass(element, 'ag-cell-range-left', isLeft);\n    };\n    CellComp.prototype.onFirstRightPinnedChanged = function () {\n        var firstRightPinned = this.column.isFirstRightPinned();\n        if (this.firstRightPinned !== firstRightPinned) {\n            this.firstRightPinned = firstRightPinned;\n            utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-cell-first-right-pinned', firstRightPinned);\n        }\n    };\n    CellComp.prototype.onLastLeftPinnedChanged = function () {\n        var lastLeftPinned = this.column.isLastLeftPinned();\n        if (this.lastLeftPinned !== lastLeftPinned) {\n            this.lastLeftPinned = lastLeftPinned;\n            utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-cell-last-left-pinned', lastLeftPinned);\n        }\n    };\n    CellComp.prototype.populateTemplate = function () {\n        if (this.usingWrapper) {\n            this.eParentOfValue = this.getRefElement('eCellValue');\n            this.eCellWrapper = this.getRefElement('eCellWrapper');\n            if (this.includeRowDraggingComponent) {\n                this.addRowDragging();\n            }\n            if (this.includeSelectionComponent) {\n                this.addSelectionCheckbox();\n            }\n        }\n        else {\n            this.eParentOfValue = this.getGui();\n        }\n    };\n    CellComp.prototype.getFrameworkOverrides = function () {\n        return this.beans.frameworkOverrides;\n    };\n    CellComp.prototype.addRowDragging = function () {\n        // row dragging only available in default row model\n        if (!this.beans.gridOptionsWrapper.isRowModelDefault()) {\n            utils_1._.doOnce(function () { return console.warn('ag-Grid: row dragging is only allowed in the In Memory Row Model'); }, 'CellComp.addRowDragging');\n            return;\n        }\n        if (this.beans.gridOptionsWrapper.isPagination()) {\n            utils_1._.doOnce(function () { return console.warn('ag-Grid: row dragging is not possible when doing pagination'); }, 'CellComp.addRowDragging');\n            return;\n        }\n        var rowDraggingComp = new rowDragComp_1.RowDragComp(this.rowNode, this.column, this.getValueToUse(), this.beans);\n        this.addFeature(this.beans.context, rowDraggingComp);\n        // let visibleFunc = this.getComponentHolder().checkboxSelection;\n        // visibleFunc = typeof visibleFunc === 'function' ? visibleFunc : null;\n        // cbSelectionComponent.init({rowNode: this.rowNode, column: this.column, visibleFunc: visibleFunc});\n        // put the checkbox in before the value\n        this.eCellWrapper.insertBefore(rowDraggingComp.getGui(), this.eParentOfValue);\n    };\n    CellComp.prototype.addSelectionCheckbox = function () {\n        var cbSelectionComponent = new checkboxSelectionComponent_1.CheckboxSelectionComponent();\n        this.beans.context.wireBean(cbSelectionComponent);\n        var visibleFunc = this.getComponentHolder().checkboxSelection;\n        visibleFunc = typeof visibleFunc === 'function' ? visibleFunc : null;\n        cbSelectionComponent.init({ rowNode: this.rowNode, column: this.column, visibleFunc: visibleFunc });\n        this.addDestroyFunc(function () { return cbSelectionComponent.destroy(); });\n        // put the checkbox in before the value\n        this.eCellWrapper.insertBefore(cbSelectionComponent.getGui(), this.eParentOfValue);\n    };\n    CellComp.prototype.addDomData = function () {\n        var _this = this;\n        var element = this.getGui();\n        this.beans.gridOptionsWrapper.setDomData(element, CellComp.DOM_DATA_KEY_CELL_COMP, this);\n        this.addDestroyFunc(function () {\n            return _this.beans.gridOptionsWrapper.setDomData(element, CellComp.DOM_DATA_KEY_CELL_COMP, null);\n        });\n    };\n    CellComp.prototype.onCellFocused = function (event) {\n        var cellFocused = this.beans.focusedCellController.isCellFocused(this.cellPosition);\n        // see if we need to change the classes on this cell\n        if (cellFocused !== this.cellFocused) {\n            // if we are not doing cell selection, then the focus class does not change\n            var doingFocusCss = !this.beans.gridOptionsWrapper.isSuppressCellSelection();\n            if (doingFocusCss) {\n                utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-cell-focus', cellFocused);\n            }\n            this.cellFocused = cellFocused;\n        }\n        // if this cell was just focused, see if we need to force browser focus, his can\n        // happen if focus is programmatically set.\n        if (cellFocused && event && event.forceBrowserFocus) {\n            var eGui = this.getGui();\n            eGui.focus();\n            utils_1._.doIeFocusHack(eGui);\n        }\n        // if another cell was focused, and we are editing, then stop editing\n        var fullRowEdit = this.beans.gridOptionsWrapper.isFullRowEdit();\n        if (!cellFocused && !fullRowEdit && this.editingCell) {\n            this.stopRowOrCellEdit();\n        }\n    };\n    // pass in 'true' to cancel the editing.\n    CellComp.prototype.stopRowOrCellEdit = function (cancel) {\n        if (cancel === void 0) { cancel = false; }\n        if (this.beans.gridOptionsWrapper.isFullRowEdit()) {\n            this.rowComp.stopRowEditing(cancel);\n        }\n        else {\n            this.stopEditing(cancel);\n        }\n    };\n    CellComp.prototype.stopEditing = function (cancel) {\n        if (cancel === void 0) { cancel = false; }\n        if (!this.editingCell) {\n            return;\n        }\n        // if no cell editor, this means due to async, that the cell editor never got initialised,\n        // so we just carry on regardless as if the editing was never started.\n        if (!this.cellEditor) {\n            this.editingCell = false;\n            return;\n        }\n        var newValueExists = false;\n        var newValue;\n        if (!cancel) {\n            // also have another option here to cancel after editing, so for example user could have a popup editor and\n            // it is closed by user clicking outside the editor. then the editor will close automatically (with false\n            // passed above) and we need to see if the editor wants to accept the new value.\n            var userWantsToCancel = this.cellEditor.isCancelAfterEnd && this.cellEditor.isCancelAfterEnd();\n            if (!userWantsToCancel) {\n                newValue = this.cellEditor.getValue();\n                newValueExists = true;\n            }\n        }\n        // it is important we set this after setValue() above, as otherwise the cell will flash\n        // when editing stops. the 'refresh' method checks editing, and doesn't refresh editing cells.\n        // thus it will skip the refresh on this cell until the end of this method where we call\n        // refresh directly and we suppress the flash.\n        this.editingCell = false;\n        if (this.cellEditor.destroy) {\n            this.cellEditor.destroy();\n        }\n        // important to clear this out - as parts of the code will check for\n        // this to see if an async cellEditor has yet to be created\n        this.cellEditor = null;\n        if (this.cellEditorInPopup && this.hideEditorPopup) {\n            this.hideEditorPopup();\n            this.hideEditorPopup = null;\n        }\n        else {\n            utils_1._.clearElement(this.getGui());\n            // put the cell back the way it was before editing\n            if (this.usingWrapper) {\n                // if wrapper, then put the wrapper back\n                this.getGui().appendChild(this.eCellWrapper);\n            }\n            else {\n                // if cellRenderer, then put the gui back in. if the renderer has\n                // a refresh, it will be called. however if it doesn't, then later\n                // the renderer will be destroyed and a new one will be created.\n                if (this.cellRenderer) {\n                    // we know it's a dom element (not a string) because we converted\n                    // it after the gui was attached if it was a string.\n                    var eCell = this.cellRendererGui;\n                    // can be null if cell was previously null / contained empty string,\n                    // this will result in new value not being rendered.\n                    if (eCell) {\n                        this.getGui().appendChild(eCell);\n                    }\n                }\n            }\n        }\n        this.setInlineEditingClass();\n        if (newValueExists) {\n            // we suppressRefreshCell because the call to rowNode.setDataValue() results in change detection\n            // getting triggered, which results in all cells getting refreshed. we do not want this refresh\n            // to happen on this call as we want to call it explicitly below. otherwise refresh gets called twice.\n            // if we only did this refresh (and not the one below) then the cell would flash and not be forced.\n            this.suppressRefreshCell = true;\n            this.rowNode.setDataValue(this.column, newValue);\n            this.suppressRefreshCell = false;\n        }\n        // we suppress the flash, as it is not correct to flash the cell the user has finished editing,\n        // the user doesn't need to flash as they were the one who did the edit, the flash is pointless\n        // (as the flash is meant to draw the user to a change that they didn't manually do themselves).\n        this.refreshCell({ forceRefresh: true, suppressFlash: true });\n        var event = this.createEvent(null, events_1.Events.EVENT_CELL_EDITING_STOPPED);\n        this.beans.eventService.dispatchEvent(event);\n    };\n    CellComp.DOM_DATA_KEY_CELL_COMP = 'cellComp';\n    CellComp.CELL_RENDERER_TYPE_NORMAL = 'cellRenderer';\n    CellComp.CELL_RENDERER_TYPE_PINNED = 'pinnedRowCellRenderer';\n    return CellComp;\n}(component_1.Component));\nexports.CellComp = CellComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar utils_1 = require(\"./utils\");\nvar MAT_GRID_SIZE = 8;\nvar FRESH_GRID_SIZE = 4;\nvar BALHAM_GRID_SIZE = 4;\nvar HARD_CODED_SIZES = {\n    'ag-theme-material': {\n        headerHeight: MAT_GRID_SIZE * 7,\n        virtualItemHeight: MAT_GRID_SIZE * 5,\n        rowHeight: MAT_GRID_SIZE * 6\n    },\n    'ag-theme-classic': {\n        headerHeight: 25,\n        virtualItemHeight: FRESH_GRID_SIZE * 5,\n        rowHeight: 25\n    },\n    'ag-theme-balham': {\n        headerHeight: BALHAM_GRID_SIZE * 8,\n        virtualItemHeight: BALHAM_GRID_SIZE * 7,\n        rowHeight: BALHAM_GRID_SIZE * 7\n    }\n};\nvar Environment = /** @class */ (function () {\n    function Environment() {\n    }\n    Environment.prototype.getSassVariable = function (theme, key) {\n        if (theme == 'ag-theme-material') {\n            return HARD_CODED_SIZES['ag-theme-material'][key];\n        }\n        else if (theme == 'ag-theme-balham' || theme == 'ag-theme-balham-dark') {\n            return HARD_CODED_SIZES['ag-theme-balham'][key];\n        }\n        return HARD_CODED_SIZES['ag-theme-classic'][key];\n    };\n    Environment.prototype.isThemeDark = function () {\n        var theme = this.getTheme();\n        return !!theme && theme.indexOf('dark') >= 0;\n    };\n    Environment.prototype.getTheme = function () {\n        var reg = /\\bag-(fresh|dark|blue|material|bootstrap|(?:theme-([\\w\\-]*)))\\b/;\n        var el = this.eGridDiv;\n        var themeMatch;\n        while (el) {\n            themeMatch = reg.exec(el.className);\n            el = el.parentElement;\n            if (el == null || themeMatch) {\n                break;\n            }\n        }\n        if (!themeMatch) {\n            return;\n        }\n        var theme = themeMatch[0];\n        var usingOldTheme = themeMatch[2] === undefined;\n        if (usingOldTheme) {\n            var newTheme_1 = theme.replace('ag-', 'ag-theme-');\n            utils_1._.doOnce(function () { return console.warn(\"ag-Grid: As of v19 old theme are no longer provided. Please replace \" + theme + \" with \" + newTheme_1 + \".\"); }, 'using-old-theme');\n        }\n        return theme;\n    };\n    __decorate([\n        context_1.Autowired('eGridDiv'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Environment.prototype, \"eGridDiv\", void 0);\n    Environment = __decorate([\n        context_1.Bean('environment')\n    ], Environment);\n    return Environment;\n}());\nexports.Environment = Environment;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar ScrollVisibleService = /** @class */ (function () {\n    function ScrollVisibleService() {\n    }\n    ScrollVisibleService.prototype.setScrollsVisible = function (params) {\n        var atLeastOneDifferent = this.horizontalScrollShowing !== params.horizontalScrollShowing ||\n            this.verticalScrollShowing !== params.verticalScrollShowing;\n        if (atLeastOneDifferent) {\n            this.horizontalScrollShowing = params.horizontalScrollShowing;\n            this.verticalScrollShowing = params.verticalScrollShowing;\n            var event_1 = {\n                type: events_1.Events.EVENT_SCROLL_VISIBILITY_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n    };\n    // used by pagination service - to know page height\n    ScrollVisibleService.prototype.isHorizontalScrollShowing = function () {\n        return this.horizontalScrollShowing;\n    };\n    // used by header container\n    ScrollVisibleService.prototype.isVerticalScrollShowing = function () {\n        return this.verticalScrollShowing;\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ScrollVisibleService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], ScrollVisibleService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], ScrollVisibleService.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], ScrollVisibleService.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ScrollVisibleService.prototype, \"gridOptionsWrapper\", void 0);\n    ScrollVisibleService = __decorate([\n        context_1.Bean('scrollVisibleService')\n    ], ScrollVisibleService);\n    return ScrollVisibleService;\n}());\nexports.ScrollVisibleService = ScrollVisibleService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventService_1 = require(\"../eventService\");\nvar utils_1 = require(\"../utils\");\nvar TouchListener = /** @class */ (function () {\n    function TouchListener(eElement, preventMouseClick) {\n        var _this = this;\n        if (preventMouseClick === void 0) { preventMouseClick = false; }\n        this.destroyFuncs = [];\n        this.touching = false;\n        this.eventService = new eventService_1.EventService();\n        this.eElement = eElement;\n        this.preventMouseClick = preventMouseClick;\n        var startListener = this.onTouchStart.bind(this);\n        var moveListener = this.onTouchMove.bind(this);\n        var endListener = this.onTouchEnd.bind(this);\n        this.eElement.addEventListener(\"touchstart\", startListener, { passive: true });\n        this.eElement.addEventListener(\"touchmove\", moveListener, { passive: true });\n        // we set passive=false, as we want to prevent default on this event\n        this.eElement.addEventListener(\"touchend\", endListener, { passive: false });\n        this.destroyFuncs.push(function () {\n            _this.eElement.removeEventListener(\"touchstart\", startListener, { passive: true });\n            _this.eElement.removeEventListener(\"touchmove\", moveListener, { passive: true });\n            _this.eElement.removeEventListener(\"touchend\", endListener, { passive: false });\n        });\n    }\n    TouchListener.prototype.getActiveTouch = function (touchList) {\n        for (var i = 0; i < touchList.length; i++) {\n            var matches = touchList[i].identifier === this.touchStart.identifier;\n            if (matches) {\n                return touchList[i];\n            }\n        }\n        return null;\n    };\n    TouchListener.prototype.addEventListener = function (eventType, listener) {\n        this.eventService.addEventListener(eventType, listener);\n    };\n    TouchListener.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    TouchListener.prototype.onTouchStart = function (touchEvent) {\n        var _this = this;\n        // only looking at one touch point at any time\n        if (this.touching) {\n            return;\n        }\n        this.touchStart = touchEvent.touches[0];\n        this.touching = true;\n        this.moved = false;\n        var touchStartCopy = this.touchStart;\n        window.setTimeout(function () {\n            var touchesMatch = _this.touchStart === touchStartCopy;\n            if (_this.touching && touchesMatch && !_this.moved) {\n                _this.moved = true;\n                var event_1 = {\n                    type: TouchListener.EVENT_LONG_TAP,\n                    touchStart: _this.touchStart,\n                    touchEvent: touchEvent\n                };\n                _this.eventService.dispatchEvent(event_1);\n            }\n        }, 500);\n    };\n    TouchListener.prototype.onTouchMove = function (touchEvent) {\n        if (!this.touching) {\n            return;\n        }\n        var touch = this.getActiveTouch(touchEvent.touches);\n        if (!touch) {\n            return;\n        }\n        var eventIsFarAway = !utils_1._.areEventsNear(touch, this.touchStart, 4);\n        if (eventIsFarAway) {\n            this.moved = true;\n        }\n    };\n    TouchListener.prototype.onTouchEnd = function (touchEvent) {\n        if (!this.touching) {\n            return;\n        }\n        if (!this.moved) {\n            var event_2 = {\n                type: TouchListener.EVENT_TAP,\n                touchStart: this.touchStart\n            };\n            this.eventService.dispatchEvent(event_2);\n            this.checkForDoubleTap();\n        }\n        // stops the tap from also been processed as a mouse click\n        if (this.preventMouseClick) {\n            touchEvent.preventDefault();\n        }\n        this.touching = false;\n    };\n    TouchListener.prototype.checkForDoubleTap = function () {\n        var now = new Date().getTime();\n        if (this.lastTapTime && this.lastTapTime > 0) {\n            // if previous tap, see if duration is short enough to be considered double tap\n            var interval = now - this.lastTapTime;\n            if (interval > TouchListener.DOUBLE_TAP_MILLIS) {\n                // dispatch double tap event\n                var event_3 = {\n                    type: TouchListener.EVENT_DOUBLE_TAP,\n                    touchStart: this.touchStart\n                };\n                this.eventService.dispatchEvent(event_3);\n                // this stops a tripple tap ending up as two double taps\n                this.lastTapTime = null;\n            }\n            else {\n                this.lastTapTime = now;\n            }\n        }\n        else {\n            this.lastTapTime = now;\n        }\n    };\n    TouchListener.prototype.destroy = function () {\n        this.destroyFuncs.forEach(function (func) { return func(); });\n    };\n    TouchListener.EVENT_TAP = \"tap\";\n    TouchListener.EVENT_DOUBLE_TAP = \"doubleTap\";\n    TouchListener.EVENT_LONG_TAP = \"longTap\";\n    TouchListener.DOUBLE_TAP_MILLIS = 500;\n    return TouchListener;\n}());\nexports.TouchListener = TouchListener;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar expressionService_1 = require(\"../valueService/expressionService\");\nvar ValueFormatterService = /** @class */ (function () {\n    function ValueFormatterService() {\n    }\n    ValueFormatterService.prototype.formatValue = function (column, rowNode, $scope, value) {\n        var formatter;\n        var colDef = column.getColDef();\n        // if floating, give preference to the floating formatter\n        if (rowNode && rowNode.rowPinned) {\n            formatter = colDef.pinnedRowValueFormatter ? colDef.pinnedRowValueFormatter : colDef.valueFormatter;\n        }\n        else {\n            formatter = colDef.valueFormatter;\n        }\n        var result = null;\n        if (formatter) {\n            var params = {\n                value: value,\n                node: rowNode,\n                data: rowNode ? rowNode.data : null,\n                colDef: column.getColDef(),\n                column: column,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext()\n            };\n            // originally we put the angular 1 scope here, but we don't want the scope\n            // in the params interface, as other frameworks will see the interface, and\n            // angular 1 is not cool any more. so we hack the scope in here (we cannot\n            // include it above, as it's not in the interface, so would cause a compile error).\n            // in the future, when we stop supporting angular 1, we can take this out.\n            params.$scope = $scope;\n            result = this.expressionService.evaluate(formatter, params);\n        }\n        else if (colDef.refData) {\n            return colDef.refData[value] || '';\n        }\n        // if we don't do this, then arrays get displayed as 1,2,3, but we want 1, 2, 3 (ie with spaces)\n        if ((result === null || result === undefined) && Array.isArray(value)) {\n            result = value.join(', ');\n        }\n        return result;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ValueFormatterService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], ValueFormatterService.prototype, \"expressionService\", void 0);\n    ValueFormatterService = __decorate([\n        context_1.Bean('valueFormatterService')\n    ], ValueFormatterService);\n    return ValueFormatterService;\n}());\nexports.ValueFormatterService = ValueFormatterService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar context_2 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar MouseEventService = /** @class */ (function () {\n    function MouseEventService() {\n        this.gridInstanceId = MouseEventService_1.gridInstanceSequence.next();\n    }\n    MouseEventService_1 = MouseEventService;\n    MouseEventService.prototype.init = function () {\n        this.stampDomElementWithGridInstance();\n    };\n    // we put the instance id onto the main DOM element. this is used for events, when grids are inside grids,\n    // so the grid can work out if the even came from this grid or a grid inside this one. see the ctrl+v logic\n    // for where this is used.\n    MouseEventService.prototype.stampDomElementWithGridInstance = function () {\n        this.eGridDiv[MouseEventService_1.GRID_DOM_KEY] = this.gridInstanceId;\n    };\n    MouseEventService.prototype.getRenderedCellForEvent = function (event) {\n        return utils_1._.getCellCompForEvent(this.gridOptionsWrapper, event);\n    };\n    // walks the path of the event, and returns true if this grid is the first one that it finds. if doing\n    // master / detail grids, and a child grid is found, then it returns false. this stops things like copy/paste\n    // getting executed on many grids at the same time.\n    MouseEventService.prototype.isEventFromThisGrid = function (event) {\n        var path = utils_1._.getEventPath(event);\n        for (var i = 0; i < path.length; i++) {\n            var element = path[i];\n            var instanceId = element[MouseEventService_1.GRID_DOM_KEY];\n            if (utils_1._.exists(instanceId)) {\n                var eventFromThisGrid = instanceId === this.gridInstanceId;\n                return eventFromThisGrid;\n            }\n        }\n        return false;\n    };\n    MouseEventService.prototype.getCellPositionForEvent = function (event) {\n        var cellComp = this.getRenderedCellForEvent(event);\n        return cellComp ? cellComp.getCellPosition() : null;\n    };\n    var MouseEventService_1;\n    MouseEventService.gridInstanceSequence = new utils_1.NumberSequence();\n    MouseEventService.GRID_DOM_KEY = '__ag_grid_instance';\n    __decorate([\n        context_2.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], MouseEventService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_2.Autowired('eGridDiv'),\n        __metadata(\"design:type\", HTMLElement)\n    ], MouseEventService.prototype, \"eGridDiv\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MouseEventService.prototype, \"init\", null);\n    MouseEventService = MouseEventService_1 = __decorate([\n        context_1.Bean('mouseEventService')\n    ], MouseEventService);\n    return MouseEventService;\n}());\nexports.MouseEventService = MouseEventService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar eventService_1 = require(\"../eventService\");\nvar context_1 = require(\"../context/context\");\nvar events_1 = require(\"../events\");\nvar beanStub_1 = require(\"../context/beanStub\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar ColumnHoverService = /** @class */ (function (_super) {\n    __extends(ColumnHoverService, _super);\n    function ColumnHoverService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnHoverService.prototype.setMouseOver = function (columns) {\n        this.selectedColumns = columns;\n        var event = {\n            type: events_1.Events.EVENT_COLUMN_HOVER_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ColumnHoverService.prototype.clearMouseOver = function () {\n        this.selectedColumns = null;\n        var event = {\n            type: events_1.Events.EVENT_COLUMN_HOVER_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ColumnHoverService.prototype.isHovered = function (column) {\n        return this.selectedColumns && this.selectedColumns.indexOf(column) >= 0;\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ColumnHoverService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], ColumnHoverService.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], ColumnHoverService.prototype, \"gridApi\", void 0);\n    ColumnHoverService = __decorate([\n        context_1.Bean('columnHoverService')\n    ], ColumnHoverService);\n    return ColumnHoverService;\n}(beanStub_1.BeanStub));\nexports.ColumnHoverService = ColumnHoverService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar constants_1 = require(\"../constants\");\nvar selectionController_1 = require(\"../selectionController\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar displayedGroupCreator_1 = require(\"../columnController/displayedGroupCreator\");\nvar columnFactory_1 = require(\"../columnController/columnFactory\");\nvar groupInstanceIdCreator_1 = require(\"../columnController/groupInstanceIdCreator\");\nvar columnGroup_1 = require(\"../entities/columnGroup\");\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\nvar utils_1 = require(\"../utils\");\nvar BaseGridSerializingSession = /** @class */ (function () {\n    function BaseGridSerializingSession(config) {\n        var columnController = config.columnController, valueService = config.valueService, gridOptionsWrapper = config.gridOptionsWrapper, processCellCallback = config.processCellCallback, processHeaderCallback = config.processHeaderCallback, cellAndHeaderEscaper = config.cellAndHeaderEscaper;\n        this.columnController = columnController;\n        this.valueService = valueService;\n        this.gridOptionsWrapper = gridOptionsWrapper;\n        this.processCellCallback = processCellCallback;\n        this.processHeaderCallback = processHeaderCallback;\n        this.cellAndHeaderEscaper = cellAndHeaderEscaper;\n    }\n    BaseGridSerializingSession.prototype.extractHeaderValue = function (column) {\n        var nameForCol = this.getHeaderName(this.processHeaderCallback, column);\n        if (nameForCol === null || nameForCol === undefined) {\n            nameForCol = '';\n        }\n        return this.cellAndHeaderEscaper ? this.cellAndHeaderEscaper(nameForCol) : nameForCol;\n    };\n    BaseGridSerializingSession.prototype.extractRowCellValue = function (column, index, type, node) {\n        var isRowGrouping = this.columnController.getRowGroupColumns().length > 0;\n        var valueForCell;\n        if (node && node.group && isRowGrouping && index === 0) {\n            valueForCell = this.createValueForGroupNode(node);\n        }\n        else {\n            valueForCell = this.valueService.getValue(column, node);\n        }\n        valueForCell = this.processCell(node, column, valueForCell, this.processCellCallback, type);\n        if (valueForCell === null || valueForCell === undefined) {\n            valueForCell = '';\n        }\n        return this.cellAndHeaderEscaper ? this.cellAndHeaderEscaper(valueForCell) : valueForCell;\n    };\n    BaseGridSerializingSession.prototype.getHeaderName = function (callback, column) {\n        if (callback) {\n            return callback({\n                column: column,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext()\n            });\n        }\n        else {\n            return this.columnController.getDisplayNameForColumn(column, 'csv', true);\n        }\n    };\n    BaseGridSerializingSession.prototype.createValueForGroupNode = function (node) {\n        var keys = [node.key];\n        while (node.parent) {\n            node = node.parent;\n            keys.push(node.key);\n        }\n        return keys.reverse().join(' -> ');\n    };\n    BaseGridSerializingSession.prototype.processCell = function (rowNode, column, value, processCellCallback, type) {\n        if (processCellCallback) {\n            return processCellCallback({\n                column: column,\n                node: rowNode,\n                value: value,\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                context: this.gridOptionsWrapper.getContext(),\n                type: type\n            });\n        }\n        else {\n            return value;\n        }\n    };\n    return BaseGridSerializingSession;\n}());\nexports.BaseGridSerializingSession = BaseGridSerializingSession;\nvar GridSerializer = /** @class */ (function () {\n    function GridSerializer() {\n    }\n    GridSerializer.prototype.serialize = function (gridSerializingSession, params) {\n        var dontSkipRows = function () { return false; };\n        var skipGroups = params && params.skipGroups;\n        var skipHeader = params && params.skipHeader;\n        var columnGroups = params && params.columnGroups;\n        var skipFooters = params && params.skipFooters;\n        var skipPinnedTop = params && params.skipPinnedTop;\n        var skipPinnedBottom = params && params.skipPinnedBottom;\n        var includeCustomHeader = params && params.customHeader;\n        var includeCustomFooter = params && params.customFooter;\n        var allColumns = params && params.allColumns;\n        var onlySelected = params && params.onlySelected;\n        var columnKeys = params && params.columnKeys;\n        var onlySelectedAllPages = params && params.onlySelectedAllPages;\n        var rowSkipper = (params && params.shouldRowBeSkipped) || dontSkipRows;\n        var api = this.gridOptionsWrapper.getApi();\n        var skipSingleChildrenGroup = this.gridOptionsWrapper.isGroupRemoveSingleChildren();\n        var skipLowestSingleChildrenGroup = this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren();\n        var context = this.gridOptionsWrapper.getContext();\n        // when in pivot mode, we always render cols on screen, never 'all columns'\n        var isPivotMode = this.columnController.isPivotMode();\n        var rowModelNormal = this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        var onlySelectedNonStandardModel = !rowModelNormal && onlySelected;\n        var columnsToExport = [];\n        if (utils_1._.existsAndNotEmpty(columnKeys)) {\n            columnsToExport = this.columnController.getGridColumns(columnKeys);\n        }\n        else if (allColumns && !isPivotMode) {\n            // add auto group column for tree data\n            columnsToExport = this.gridOptionsWrapper.isTreeData() ?\n                this.columnController.getGridColumns([constants_1.Constants.GROUP_AUTO_COLUMN_ID]) : [];\n            columnsToExport = columnsToExport.concat(this.columnController.getAllPrimaryColumns() || []);\n        }\n        else {\n            columnsToExport = this.columnController.getAllDisplayedColumns();\n        }\n        if (includeCustomHeader) {\n            gridSerializingSession.addCustomHeader(includeCustomHeader);\n        }\n        gridSerializingSession.prepare(columnsToExport);\n        // first pass, put in the header names of the cols\n        if (columnGroups) {\n            var groupInstanceIdCreator = new groupInstanceIdCreator_1.GroupInstanceIdCreator();\n            var displayedGroups = this.displayedGroupCreator.createDisplayedGroups(columnsToExport, this.columnController.getGridBalancedTree(), groupInstanceIdCreator, null);\n            this.recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession);\n        }\n        if (!skipHeader) {\n            var gridRowIterator_1 = gridSerializingSession.onNewHeaderRow();\n            columnsToExport.forEach(function (column, index) {\n                gridRowIterator_1.onColumn(column, index, undefined);\n            });\n        }\n        this.pinnedRowModel.forEachPinnedTopRow(processRow);\n        if (isPivotMode) {\n            if (this.rowModel.forEachPivotNode) {\n                this.rowModel.forEachPivotNode(processRow);\n            }\n            else {\n                //Must be enterprise, so we can just loop through all the nodes\n                this.rowModel.forEachNode(processRow);\n            }\n        }\n        else {\n            // onlySelectedAllPages: user doing pagination and wants selected items from\n            // other pages, so cannot use the standard row model as it won't have rows from\n            // other pages.\n            // onlySelectedNonStandardModel: if user wants selected in non standard row model\n            // (eg viewport) then again rowmodel cannot be used, so need to use selected instead.\n            if (onlySelectedAllPages || onlySelectedNonStandardModel) {\n                var selectedNodes = this.selectionController.getSelectedNodes();\n                selectedNodes.forEach(function (node) {\n                    processRow(node);\n                });\n            }\n            else {\n                // here is everything else - including standard row model and selected. we don't use\n                // the selection model even when just using selected, so that the result is the order\n                // of the rows appearing on the screen.\n                if (rowModelNormal) {\n                    this.rowModel.forEachNodeAfterFilterAndSort(processRow);\n                }\n                else {\n                    this.rowModel.forEachNode(processRow);\n                }\n            }\n        }\n        this.pinnedRowModel.forEachPinnedBottomRow(processRow);\n        if (includeCustomFooter) {\n            gridSerializingSession.addCustomFooter(includeCustomFooter);\n        }\n        function processRow(node) {\n            var shouldSkipLowestGroup = skipLowestSingleChildrenGroup && node.leafGroup;\n            var shouldSkipCurrentGroup = node.allChildrenCount === 1 && (skipSingleChildrenGroup || shouldSkipLowestGroup);\n            if (node.group && (skipGroups || shouldSkipCurrentGroup)) {\n                return;\n            }\n            if (skipFooters && node.footer) {\n                return;\n            }\n            if (onlySelected && !node.isSelected()) {\n                return;\n            }\n            if (skipPinnedTop && node.rowPinned === 'top') {\n                return;\n            }\n            if (skipPinnedBottom && node.rowPinned === 'bottom') {\n                return;\n            }\n            // if we are in pivotMode, then the grid will show the root node only\n            // if it's not a leaf group\n            var nodeIsRootNode = node.level === -1;\n            if (nodeIsRootNode && !node.leafGroup) {\n                return;\n            }\n            var shouldRowBeSkipped = rowSkipper({\n                node: node,\n                api: api,\n                context: context\n            });\n            if (shouldRowBeSkipped) {\n                return;\n            }\n            var rowAccumulator = gridSerializingSession.onNewBodyRow();\n            columnsToExport.forEach(function (column, index) {\n                rowAccumulator.onColumn(column, index, node);\n            });\n        }\n        return gridSerializingSession.parse();\n    };\n    GridSerializer.prototype.recursivelyAddHeaderGroups = function (displayedGroups, gridSerializingSession) {\n        var directChildrenHeaderGroups = [];\n        displayedGroups.forEach(function (columnGroupChild) {\n            var columnGroup = columnGroupChild;\n            if (!columnGroup.getChildren) {\n                return;\n            }\n            columnGroup.getChildren().forEach(function (it) { return directChildrenHeaderGroups.push(it); });\n        });\n        if (displayedGroups.length > 0 && displayedGroups[0] instanceof columnGroup_1.ColumnGroup) {\n            this.doAddHeaderHeader(gridSerializingSession, displayedGroups);\n        }\n        if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\n            this.recursivelyAddHeaderGroups(directChildrenHeaderGroups, gridSerializingSession);\n        }\n    };\n    GridSerializer.prototype.doAddHeaderHeader = function (gridSerializingSession, displayedGroups) {\n        var _this = this;\n        var gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\n        var columnIndex = 0;\n        displayedGroups.forEach(function (columnGroupChild) {\n            var columnGroup = columnGroupChild;\n            var columnName = _this.columnController.getDisplayNameForColumnGroup(columnGroup, 'header');\n            gridRowIterator.onColumn(columnName || '', columnIndex++, columnGroup.getLeafColumns().length - 1);\n        });\n    };\n    __decorate([\n        context_1.Autowired('displayedGroupCreator'),\n        __metadata(\"design:type\", displayedGroupCreator_1.DisplayedGroupCreator)\n    ], GridSerializer.prototype, \"displayedGroupCreator\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GridSerializer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], GridSerializer.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('pinnedRowModel'),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], GridSerializer.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], GridSerializer.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('columnFactory'),\n        __metadata(\"design:type\", columnFactory_1.ColumnFactory)\n    ], GridSerializer.prototype, \"columnFactory\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GridSerializer.prototype, \"gridOptionsWrapper\", void 0);\n    GridSerializer = __decorate([\n        context_1.Bean(\"gridSerializer\")\n    ], GridSerializer);\n    return GridSerializer;\n}());\nexports.GridSerializer = GridSerializer;\nvar RowType;\n(function (RowType) {\n    RowType[RowType[\"HEADER_GROUPING\"] = 0] = \"HEADER_GROUPING\";\n    RowType[RowType[\"HEADER\"] = 1] = \"HEADER\";\n    RowType[RowType[\"BODY\"] = 2] = \"BODY\";\n})(RowType = exports.RowType || (exports.RowType = {}));\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar columnUtils_1 = require(\"./columnUtils\");\nvar columnGroup_1 = require(\"../entities/columnGroup\");\nvar originalColumnGroup_1 = require(\"../entities/originalColumnGroup\");\nvar context_2 = require(\"../context/context\");\nvar utils_1 = require(\"../utils\");\n// takes in a list of columns, as specified by the column definitions, and returns column groups\nvar DisplayedGroupCreator = /** @class */ (function () {\n    function DisplayedGroupCreator() {\n    }\n    DisplayedGroupCreator.prototype.createDisplayedGroups = function (\n    // all displayed columns sorted - this is the columns the grid should show\n    sortedVisibleColumns, \n    // the tree of columns, as provided by the users, used to know what groups columns roll up into\n    balancedColumnTree, \n    // creates unique id's for the group\n    groupInstanceIdCreator, \n    // whether it's left, right or center col\n    pinned, \n    // we try to reuse old groups if we can, to allow gui to do animation\n    oldDisplayedGroups) {\n        var _this = this;\n        var result = [];\n        var previousRealPath;\n        var previousOriginalPath;\n        var oldColumnsMapped = this.mapOldGroupsById(oldDisplayedGroups);\n        // go through each column, then do a bottom up comparison to the previous column, and start\n        // to share groups if they converge at any point.\n        sortedVisibleColumns.forEach(function (currentColumn) {\n            var currentOriginalPath = _this.getOriginalPathForColumn(balancedColumnTree, currentColumn);\n            var currentRealPath = [];\n            var firstColumn = !previousOriginalPath;\n            for (var i = 0; i < currentOriginalPath.length; i++) {\n                if (firstColumn || currentOriginalPath[i] !== previousOriginalPath[i]) {\n                    // new group needed\n                    var newGroup = _this.createColumnGroup(currentOriginalPath[i], groupInstanceIdCreator, oldColumnsMapped, pinned);\n                    currentRealPath[i] = newGroup;\n                    // if top level, add to result, otherwise add to parent\n                    if (i == 0) {\n                        result.push(newGroup);\n                    }\n                    else {\n                        currentRealPath[i - 1].addChild(newGroup);\n                    }\n                }\n                else {\n                    // reuse old group\n                    currentRealPath[i] = previousRealPath[i];\n                }\n            }\n            var noColumnGroups = currentRealPath.length === 0;\n            if (noColumnGroups) {\n                // if we are not grouping, then the result of the above is an empty\n                // path (no groups), and we just add the column to the root list.\n                result.push(currentColumn);\n            }\n            else {\n                var leafGroup = utils_1._.last(currentRealPath);\n                leafGroup.addChild(currentColumn);\n            }\n            previousRealPath = currentRealPath;\n            previousOriginalPath = currentOriginalPath;\n        });\n        this.setupParentsIntoColumns(result, null);\n        return result;\n    };\n    DisplayedGroupCreator.prototype.createColumnGroup = function (originalGroup, groupInstanceIdCreator, oldColumnsMapped, pinned) {\n        var groupId = originalGroup.getGroupId();\n        var instanceId = groupInstanceIdCreator.getInstanceIdForKey(groupId);\n        var uniqueId = columnGroup_1.ColumnGroup.createUniqueId(groupId, instanceId);\n        var columnGroup = oldColumnsMapped[uniqueId];\n        // if the user is setting new colDefs, it is possible that the id's overlap, and we\n        // would have a false match from above. so we double check we are talking about the\n        // same original column group.\n        if (columnGroup && columnGroup.getOriginalColumnGroup() !== originalGroup) {\n            columnGroup = null;\n        }\n        if (utils_1._.exists(columnGroup)) {\n            // clean out the old column group here, as we will be adding children into it again\n            columnGroup.reset();\n        }\n        else {\n            columnGroup = new columnGroup_1.ColumnGroup(originalGroup, groupId, instanceId, pinned);\n            this.context.wireBean(columnGroup);\n        }\n        return columnGroup;\n    };\n    // returns back a 2d map of ColumnGroup as follows: groupId -> instanceId -> ColumnGroup\n    DisplayedGroupCreator.prototype.mapOldGroupsById = function (displayedGroups) {\n        var result = {};\n        var recursive = function (columnsOrGroups) {\n            columnsOrGroups.forEach(function (columnOrGroup) {\n                if (columnOrGroup instanceof columnGroup_1.ColumnGroup) {\n                    var columnGroup = columnOrGroup;\n                    result[columnOrGroup.getUniqueId()] = columnGroup;\n                    recursive(columnGroup.getChildren());\n                }\n            });\n        };\n        if (displayedGroups) {\n            recursive(displayedGroups);\n        }\n        return result;\n    };\n    DisplayedGroupCreator.prototype.setupParentsIntoColumns = function (columnsOrGroups, parent) {\n        var _this = this;\n        columnsOrGroups.forEach(function (columnsOrGroup) {\n            columnsOrGroup.setParent(parent);\n            if (columnsOrGroup instanceof columnGroup_1.ColumnGroup) {\n                var columnGroup = columnsOrGroup;\n                _this.setupParentsIntoColumns(columnGroup.getChildren(), columnGroup);\n            }\n        });\n    };\n    // private createFakePath(balancedColumnTree: OriginalColumnGroupChild[], column: Column): OriginalColumnGroup[] {\n    //     let fakePath: OriginalColumnGroup[] = [];\n    //     let currentChildren = balancedColumnTree;\n    //     // this while loop does search on the balanced tree, so our result is the right length\n    //     let index = 0;\n    //     while (currentChildren && currentChildren[0] && currentChildren[0] instanceof OriginalColumnGroup) {\n    //         // putting in a deterministic fake id, in case the API in the future needs to reference the col\n    //         let fakeGroup = new OriginalColumnGroup(null, 'FAKE_PATH_' + index, true);\n    //         this.context.wireBean(fakeGroup);\n    //\n    //         // fakePath.setChildren(children);\n    //\n    //         fakePath.push(fakeGroup);\n    //         currentChildren = (<OriginalColumnGroup>currentChildren[0]).getChildren();\n    //         index++;\n    //     }\n    //\n    //     fakePath.forEach( (fakePathGroup: OriginalColumnGroup, i: number) => {\n    //         let lastItemInList = i === fakePath.length-1;\n    //         let child = lastItemInList ? column : fakePath[i+1];\n    //         fakePathGroup.setChildren([child]);\n    //     });\n    //\n    //     return fakePath;\n    // }\n    DisplayedGroupCreator.prototype.getOriginalPathForColumn = function (balancedColumnTree, column) {\n        var result = [];\n        var found = false;\n        recursePath(balancedColumnTree, 0);\n        // it's possible we didn't find a path. this happens if the column is generated\n        // by the grid (auto-group), in that the definition didn't come from the client. in this case,\n        // we create a fake original path.\n        if (found) {\n            return result;\n        }\n        else {\n            console.warn('could not get path');\n            return null;\n            // return this.createFakePath(balancedColumnTree, column);\n        }\n        function recursePath(balancedColumnTree, dept) {\n            for (var i = 0; i < balancedColumnTree.length; i++) {\n                if (found) {\n                    // quit the search, so 'result' is kept with the found result\n                    return;\n                }\n                var node = balancedColumnTree[i];\n                if (node instanceof originalColumnGroup_1.OriginalColumnGroup) {\n                    var nextNode = node;\n                    recursePath(nextNode.getChildren(), dept + 1);\n                    result[dept] = node;\n                }\n                else {\n                    if (node === column) {\n                        found = true;\n                    }\n                }\n            }\n        }\n    };\n    __decorate([\n        context_1.Autowired('columnUtils'),\n        __metadata(\"design:type\", columnUtils_1.ColumnUtils)\n    ], DisplayedGroupCreator.prototype, \"columnUtils\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_2.Context)\n    ], DisplayedGroupCreator.prototype, \"context\", void 0);\n    DisplayedGroupCreator = __decorate([\n        context_2.Bean('displayedGroupCreator')\n    ], DisplayedGroupCreator);\n    return DisplayedGroupCreator;\n}());\nexports.DisplayedGroupCreator = DisplayedGroupCreator;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// when doing transactions, or change detection, and grouping is present\n// in the data, there is no need for the ClientSideRowModel to update each\n// group after an update, ony parts that were impacted by the change.\n// this class keeps track of all groups that were impacted by a transaction.\n// the the different CSRM operations (filter, sort etc) use the forEach method\n// to visit each group that was changed.\nvar ChangedPath = /** @class */ (function () {\n    function ChangedPath(keepingColumns, rootNode) {\n        // whether changed path is active of not. it is active when a) doing\n        // a transaction update or b) doing change detection. if we are doing\n        // a CSRM refresh for other reasons (after sort or filter, or user calling\n        // setRowData() without delta mode) then we are not active. we are also\n        // marked as not active if secondary columns change in pivot (as this impacts\n        // aggregations)\n        this.active = true;\n        // for each node in the change path, we also store which columns need\n        // to be re-aggregated.\n        this.nodeIdsToColumns = {};\n        // for quick lookup, all items in the change path are mapped by nodeId\n        this.mapToItems = {};\n        this.keepingColumns = keepingColumns;\n        this.pathRoot = {\n            rowNode: rootNode,\n            children: null\n        };\n        this.mapToItems[rootNode.id] = this.pathRoot;\n    }\n    // can be set inactive by:\n    // a) ClientSideRowModel, if no transactions or\n    // b) PivotService, if secondary columns changed\n    ChangedPath.prototype.setInactive = function () {\n        this.active = false;\n    };\n    ChangedPath.prototype.isActive = function () {\n        return this.active;\n    };\n    ChangedPath.prototype.depthFirstSearchChangedPath = function (pathItem, callback) {\n        if (pathItem.children) {\n            for (var i = 0; i < pathItem.children.length; i++) {\n                this.depthFirstSearchChangedPath(pathItem.children[i], callback);\n            }\n        }\n        callback(pathItem.rowNode);\n    };\n    ChangedPath.prototype.depthFirstSearchEverything = function (rowNode, callback, traverseEverything) {\n        if (rowNode.childrenAfterGroup) {\n            for (var i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n                var childNode = rowNode.childrenAfterGroup[i];\n                if (childNode.childrenAfterGroup) {\n                    this.depthFirstSearchEverything(rowNode.childrenAfterGroup[i], callback, traverseEverything);\n                }\n                else if (traverseEverything) {\n                    callback(childNode);\n                }\n            }\n        }\n        callback(rowNode);\n    };\n    // traverseLeafNodes -> used when NOT doing changed path, ie traversing everything. the callback\n    // will be called for child nodes in addition to parent nodes.\n    ChangedPath.prototype.forEachChangedNodeDepthFirst = function (callback, traverseLeafNodes) {\n        if (traverseLeafNodes === void 0) { traverseLeafNodes = false; }\n        if (this.active) {\n            // if we are active, then use the change path to callback\n            // only for updated groups\n            this.depthFirstSearchChangedPath(this.pathRoot, callback);\n        }\n        else {\n            // we are not active, so callback for everything, walk the entire path\n            this.depthFirstSearchEverything(this.pathRoot.rowNode, callback, traverseLeafNodes);\n        }\n    };\n    ChangedPath.prototype.executeFromRootNode = function (callback) {\n        callback(this.pathRoot.rowNode);\n    };\n    ChangedPath.prototype.createPathItems = function (rowNode) {\n        var pointer = rowNode;\n        var newEntryCount = 0;\n        while (!this.mapToItems[pointer.id]) {\n            var newEntry = {\n                rowNode: pointer,\n                children: null\n            };\n            this.mapToItems[pointer.id] = newEntry;\n            newEntryCount++;\n            pointer = pointer.parent;\n        }\n        return newEntryCount;\n    };\n    ChangedPath.prototype.populateColumnsMap = function (rowNode, columns) {\n        var _this = this;\n        if (!this.keepingColumns || !columns) {\n            return;\n        }\n        var pointer = rowNode;\n        while (pointer) {\n            // if columns, add the columns in all the way to parent, merging\n            // in any other columns that might be there already\n            if (!this.nodeIdsToColumns[pointer.id]) {\n                this.nodeIdsToColumns[pointer.id] = {};\n            }\n            columns.forEach(function (col) { return _this.nodeIdsToColumns[pointer.id][col.getId()] = true; });\n            pointer = pointer.parent;\n        }\n    };\n    ChangedPath.prototype.linkPathItems = function (rowNode, newEntryCount) {\n        var pointer = rowNode;\n        for (var i = 0; i < newEntryCount; i++) {\n            var thisItem = this.mapToItems[pointer.id];\n            var parentItem = this.mapToItems[pointer.parent.id];\n            if (!parentItem.children) {\n                parentItem.children = [];\n            }\n            parentItem.children.push(thisItem);\n            pointer = pointer.parent;\n        }\n    };\n    // called by\n    // 1) change detection (provides cols) and\n    // 2) groupStage if doing transaction update (doesn't provide cols)\n    ChangedPath.prototype.addParentNode = function (rowNode, columns) {\n        // we cannot do  both steps below in the same loop as\n        // the second loop has a dependency on the first loop.\n        // ie the hierarchy cannot be stitched up yet because\n        // we don't have it built yet\n        // create the new PathItem objects.\n        var newEntryCount = this.createPathItems(rowNode);\n        // link in the node items\n        this.linkPathItems(rowNode, newEntryCount);\n        // update columns\n        this.populateColumnsMap(rowNode, columns);\n    };\n    ChangedPath.prototype.canSkip = function (rowNode) {\n        return this.active && !this.mapToItems[rowNode.id];\n    };\n    ChangedPath.prototype.getValueColumnsForNode = function (rowNode, valueColumns) {\n        if (!this.keepingColumns) {\n            return valueColumns;\n        }\n        var colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n        var result = valueColumns.filter(function (col) { return colsForThisNode[col.getId()]; });\n        return result;\n    };\n    ChangedPath.prototype.getNotValueColumnsForNode = function (rowNode, valueColumns) {\n        if (!this.keepingColumns) {\n            return null;\n        }\n        var colsForThisNode = this.nodeIdsToColumns[rowNode.id];\n        var result = valueColumns.filter(function (col) { return !colsForThisNode[col.getId()]; });\n        return result;\n    };\n    return ChangedPath;\n}());\nexports.ChangedPath = ChangedPath;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar ColumnAnimationService = /** @class */ (function () {\n    function ColumnAnimationService() {\n        this.executeNextFuncs = [];\n        this.executeLaterFuncs = [];\n        this.active = false;\n        this.animationThreadCount = 0;\n    }\n    ColumnAnimationService.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    ColumnAnimationService.prototype.isActive = function () {\n        return this.active;\n    };\n    ColumnAnimationService.prototype.start = function () {\n        if (this.active) {\n            return;\n        }\n        if (this.gridOptionsWrapper.isSuppressColumnMoveAnimation()) {\n            return;\n        }\n        // if doing RTL, we don't animate open / close as due to how the pixels are inverted,\n        // the animation moves all the row the the right rather than to the left (ie it's the static\n        // columns that actually get their coordinates updated)\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            return;\n        }\n        this.ensureAnimationCssClassPresent();\n        this.active = true;\n    };\n    ColumnAnimationService.prototype.finish = function () {\n        if (!this.active) {\n            return;\n        }\n        this.flush();\n        this.active = false;\n    };\n    ColumnAnimationService.prototype.executeNextVMTurn = function (func) {\n        if (this.active) {\n            this.executeNextFuncs.push(func);\n        }\n        else {\n            func();\n        }\n    };\n    ColumnAnimationService.prototype.executeLaterVMTurn = function (func) {\n        if (this.active) {\n            this.executeLaterFuncs.push(func);\n        }\n        else {\n            func();\n        }\n    };\n    ColumnAnimationService.prototype.ensureAnimationCssClassPresent = function () {\n        var _this = this;\n        // up the count, so we can tell if someone else has updated the count\n        // by the time the 'wait' func executes\n        this.animationThreadCount++;\n        var animationThreadCountCopy = this.animationThreadCount;\n        this.gridPanel.setColumnMovingCss(true);\n        this.executeLaterFuncs.push(function () {\n            // only remove the class if this thread was the last one to update it\n            if (_this.animationThreadCount === animationThreadCountCopy) {\n                _this.gridPanel.setColumnMovingCss(false);\n            }\n        });\n    };\n    ColumnAnimationService.prototype.flush = function () {\n        var nowFuncs = this.executeNextFuncs;\n        this.executeNextFuncs = [];\n        var waitFuncs = this.executeLaterFuncs;\n        this.executeLaterFuncs = [];\n        if (nowFuncs.length === 0 && waitFuncs.length === 0) {\n            return;\n        }\n        window.setTimeout(function () { return nowFuncs.forEach(function (func) { return func(); }); }, 0);\n        window.setTimeout(function () { return waitFuncs.forEach(function (func) { return func(); }); }, 300);\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ColumnAnimationService.prototype, \"gridOptionsWrapper\", void 0);\n    ColumnAnimationService = __decorate([\n        context_1.Bean('columnAnimationService')\n    ], ColumnAnimationService);\n    return ColumnAnimationService;\n}());\nexports.ColumnAnimationService = ColumnAnimationService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar eventService_1 = require(\"../eventService\");\nvar expressionService_1 = require(\"../valueService/expressionService\");\nvar animateSlideCellRenderer_1 = require(\"./cellRenderers/animateSlideCellRenderer\");\nvar animateShowChangeCellRenderer_1 = require(\"./cellRenderers/animateShowChangeCellRenderer\");\nvar groupCellRenderer_1 = require(\"./cellRenderers/groupCellRenderer\");\nvar utils_1 = require(\"../utils\");\nvar CellRendererFactory = /** @class */ (function () {\n    function CellRendererFactory() {\n        this.cellRendererMap = {};\n    }\n    CellRendererFactory_1 = CellRendererFactory;\n    CellRendererFactory.prototype.init = function () {\n        this.cellRendererMap[CellRendererFactory_1.ANIMATE_SLIDE] = animateSlideCellRenderer_1.AnimateSlideCellRenderer;\n        this.cellRendererMap[CellRendererFactory_1.ANIMATE_SHOW_CHANGE] = animateShowChangeCellRenderer_1.AnimateShowChangeCellRenderer;\n        this.cellRendererMap[CellRendererFactory_1.GROUP] = groupCellRenderer_1.GroupCellRenderer;\n        // this.registerRenderersFromGridOptions();\n    };\n    // private registerRenderersFromGridOptions(): void {\n    //     let userProvidedCellRenderers = this.gridOptionsWrapper.getCellRenderers();\n    //     _.iterateObject(userProvidedCellRenderers, (key: string, cellRenderer: {new(): ICellRenderer} | ICellRendererFunc)=> {\n    //         this.addCellRenderer(key, cellRenderer);\n    //     });\n    // }\n    CellRendererFactory.prototype.addCellRenderer = function (key, cellRenderer) {\n        this.cellRendererMap[key] = cellRenderer;\n    };\n    CellRendererFactory.prototype.getCellRenderer = function (key) {\n        var result = this.cellRendererMap[key];\n        if (utils_1._.missing(result)) {\n            console.warn('ag-Grid: unable to find cellRenderer for key ' + key);\n            return null;\n        }\n        return result;\n    };\n    var CellRendererFactory_1;\n    CellRendererFactory.ANIMATE_SLIDE = 'animateSlide';\n    CellRendererFactory.ANIMATE_SHOW_CHANGE = 'animateShowChange';\n    CellRendererFactory.GROUP = 'group';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], CellRendererFactory.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], CellRendererFactory.prototype, \"expressionService\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], CellRendererFactory.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], CellRendererFactory.prototype, \"init\", null);\n    CellRendererFactory = CellRendererFactory_1 = __decorate([\n        context_1.Bean('cellRendererFactory')\n    ], CellRendererFactory);\n    return CellRendererFactory;\n}());\nexports.CellRendererFactory = CellRendererFactory;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar utils_1 = require(\"../../utils\");\nvar constants_1 = require(\"../../constants\");\n/**\n * Contains common logic to all provided filters (apply button, clear button, etc).\n * All the filters that come with ag-Grid extend this class. User filters do not\n * extend this class.\n */\nvar ProvidedFilter = /** @class */ (function (_super) {\n    __extends(ProvidedFilter, _super);\n    function ProvidedFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** @deprecated */\n    ProvidedFilter.prototype.onFilterChanged = function () {\n        console.warn(\"ag-Grid: you should not call onFilterChanged() directly on the filter, please call\\n        gridApi.onFilterChanged() instead. onFilterChanged is not part of the exposed filter interface (it was\\n        a method that existed on an old version of the filters that was not intended for public use.\");\n        this.providedFilterParams.filterChangedCallback();\n    };\n    ProvidedFilter.prototype.isFilterActive = function () {\n        // filter is active if we have a valid applied model\n        return !!this.appliedModel;\n    };\n    ProvidedFilter.prototype.postConstruct = function () {\n        var templateString = this.createTemplate();\n        this.setTemplate(templateString);\n    };\n    ProvidedFilter.prototype.init = function (params) {\n        this.setParams(params);\n        this.resetUiToDefaults();\n        this.updateUiVisibility();\n        this.setupOnBtApplyDebounce();\n    };\n    ProvidedFilter.prototype.setParams = function (params) {\n        this.providedFilterParams = params;\n        this.clearActive = params.clearButton === true;\n        this.applyActive = ProvidedFilter.isUseApplyButton(params);\n        if (params.newRowsAction === ProvidedFilter.NEW_ROWS_ACTION_KEEP) {\n            this.newRowsActionKeep = true;\n        }\n        else if (params.newRowsAction === ProvidedFilter.NEW_ROWS_ACTION_CLEAR) {\n            this.newRowsActionKeep = false;\n        }\n        else {\n            // the default for SSRM and IRM is 'keep', for CSRM and VRM teh default is 'clear'\n            var rowModelType = this.rowModel.getType();\n            var modelsForKeep = [constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE, constants_1.Constants.ROW_MODEL_TYPE_INFINITE];\n            this.newRowsActionKeep = modelsForKeep.indexOf(rowModelType) >= 0;\n        }\n        utils_1._.setVisible(this.eApplyButton, this.applyActive);\n        this.addDestroyableEventListener(this.eApplyButton, \"click\", this.onBtApply.bind(this));\n        utils_1._.setVisible(this.eClearButton, this.clearActive);\n        this.addDestroyableEventListener(this.eClearButton, \"click\", this.onBtClear.bind(this));\n        var anyButtonVisible = this.applyActive || this.clearActive;\n        utils_1._.setVisible(this.eButtonsPanel, anyButtonVisible);\n    };\n    // subclasses can override this to provide alternative debounce defaults\n    ProvidedFilter.prototype.getDefaultDebounceMs = function () {\n        return 0;\n    };\n    ProvidedFilter.prototype.setupOnBtApplyDebounce = function () {\n        var debounceMs = ProvidedFilter.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());\n        this.onBtApplyDebounce = utils_1._.debounce(this.onBtApply.bind(this), debounceMs);\n    };\n    ProvidedFilter.prototype.getModel = function () {\n        return this.appliedModel;\n    };\n    ProvidedFilter.prototype.setModel = function (model) {\n        if (model) {\n            this.setModelIntoUi(model);\n        }\n        else {\n            this.resetUiToDefaults();\n        }\n        this.updateUiVisibility();\n        // we set the model from the gui, rather than the provided model,\n        // so the model is consistent. eg handling of null/undefined will be the same,\n        // of if model is case insensitive, then casing is removed.\n        this.appliedModel = this.getModelFromUi();\n    };\n    ProvidedFilter.prototype.onBtClear = function () {\n        this.resetUiToDefaults();\n        this.updateUiVisibility();\n        this.onUiChanged();\n    };\n    // returns true if the new model is different to the old model\n    ProvidedFilter.prototype.updateModel = function () {\n        var oldAppliedModel = this.appliedModel;\n        this.appliedModel = this.getModelFromUi();\n        // models can be same if user pasted same content into text field, or maybe just changed the case\n        // and it's a case insensitive filter\n        var newModelDifferent = !this.areModelsEqual(this.appliedModel, oldAppliedModel);\n        return newModelDifferent;\n    };\n    ProvidedFilter.prototype.onBtApply = function (afterFloatingFilter) {\n        if (afterFloatingFilter === void 0) { afterFloatingFilter = false; }\n        var newModelDifferent = this.updateModel();\n        if (newModelDifferent) {\n            // the floating filter uses 'afterFloatingFilter' info, so it doesn't refresh after filter changed if change\n            // came from floating filter\n            this.providedFilterParams.filterChangedCallback({ afterFloatingFilter: afterFloatingFilter });\n        }\n    };\n    ProvidedFilter.prototype.onNewRowsLoaded = function () {\n        if (!this.newRowsActionKeep) {\n            this.resetUiToDefaults();\n            this.appliedModel = null;\n        }\n    };\n    ProvidedFilter.prototype.onUiChanged = function (afterFloatingFilter) {\n        if (afterFloatingFilter === void 0) { afterFloatingFilter = false; }\n        this.updateUiVisibility();\n        this.providedFilterParams.filterModifiedCallback();\n        // applyNow=true for floating filter changes, we always act on these immediately\n        if (afterFloatingFilter) {\n            this.onBtApply(true);\n            // otherwise if no apply button, we apply (but debounce for time delay)\n        }\n        else if (!this.applyActive) {\n            this.onBtApplyDebounce();\n        }\n    };\n    ProvidedFilter.prototype.createTemplate = function () {\n        var body = this.createBodyTemplate();\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        return \"<div>\\n                    <div class='ag-filter-body-wrapper' ref=\\\"eFilterBodyWrapper\\\">\" + body + \"</div>\\n                    <div class=\\\"ag-filter-apply-panel\\\" ref=\\\"eButtonsPanel\\\">\\n                        <button type=\\\"button\\\" ref=\\\"eClearButton\\\">\" + translate('clearFilter', 'Clear Filter') + \"</button>\\n                        <button type=\\\"button\\\" ref=\\\"eApplyButton\\\">\" + translate('applyFilter', 'Apply Filter') + \"</button>\\n                    </div>\\n                </div>\";\n    };\n    // static, as used by floating filter also\n    ProvidedFilter.getDebounceMs = function (params, debounceDefault) {\n        var applyActive = ProvidedFilter.isUseApplyButton(params);\n        if (applyActive) {\n            if (params.debounceMs != null) {\n                console.warn('ag-Grid: debounceMs is ignored when applyButton = true');\n            }\n            return 0;\n        }\n        return params.debounceMs != null ? params.debounceMs : debounceDefault;\n    };\n    // static, as used by floating filter also\n    ProvidedFilter.isUseApplyButton = function (params) {\n        if (params.apply && !params.applyButton) {\n            console.warn('ag-Grid: as of ag-Grid v21, filterParams.apply is now filterParams.applyButton, please change to applyButton');\n            params.applyButton = true;\n        }\n        return params.applyButton === true;\n    };\n    ProvidedFilter.NEW_ROWS_ACTION_KEEP = 'keep';\n    ProvidedFilter.NEW_ROWS_ACTION_CLEAR = 'clear';\n    __decorate([\n        componentAnnotations_1.RefSelector('eButtonsPanel'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ProvidedFilter.prototype, \"eButtonsPanel\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eFilterBodyWrapper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ProvidedFilter.prototype, \"eFilterBodyWrapper\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eApplyButton'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ProvidedFilter.prototype, \"eApplyButton\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eClearButton'),\n        __metadata(\"design:type\", HTMLElement)\n    ], ProvidedFilter.prototype, \"eClearButton\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ProvidedFilter.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], ProvidedFilter.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ProvidedFilter.prototype, \"postConstruct\", null);\n    return ProvidedFilter;\n}(component_1.Component));\nexports.ProvidedFilter = ProvidedFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar beanStub_1 = require(\"../context/beanStub\");\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar eventKeys_1 = require(\"../eventKeys\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\n/**\n * This class solves the 'max height' problem, where the user might want to show more data than\n * the max div height actually allows.\n */\nvar MaxDivHeightScaler = /** @class */ (function (_super) {\n    __extends(MaxDivHeightScaler, _super);\n    function MaxDivHeightScaler() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // the scrollY position\n        _this.scrollY = 0;\n        // how tall the body is\n        _this.uiBodyHeight = 0;\n        return _this;\n    }\n    MaxDivHeightScaler.prototype.postConstruct = function () {\n        this.addDestroyableEventListener(this.eventService, eventKeys_1.Events.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this));\n        this.scrollBarWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        this.maxDivHeight = utils_1._.getMaxDivHeight();\n    };\n    MaxDivHeightScaler.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    MaxDivHeightScaler.prototype.isScaling = function () {\n        return this.scaling;\n    };\n    MaxDivHeightScaler.prototype.getOffset = function () {\n        return this.offset;\n    };\n    MaxDivHeightScaler.prototype.updateOffset = function () {\n        if (!this.scaling) {\n            return;\n        }\n        var newScrollY = this.gridPanel.getVScrollPosition().top;\n        var newBodyHeight = this.getUiBodyHeight();\n        var atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\n        if (atLeastOneChanged) {\n            this.scrollY = newScrollY;\n            this.uiBodyHeight = newBodyHeight;\n            this.calculateOffset();\n        }\n    };\n    MaxDivHeightScaler.prototype.calculateOffset = function () {\n        this.uiContainerHeight = this.maxDivHeight;\n        this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\n        this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\n        var scrollPercent = this.scrollY / this.maxScrollY;\n        this.setOffset(scrollPercent * this.pixelsToShave);\n    };\n    MaxDivHeightScaler.prototype.clearOffset = function () {\n        this.uiContainerHeight = this.modelHeight;\n        this.pixelsToShave = 0;\n        this.setOffset(0);\n    };\n    MaxDivHeightScaler.prototype.setOffset = function (newOffset) {\n        // because we are talking pixels, no point in confusing things with half numbers\n        var newOffsetFloor = typeof newOffset === 'number' ? Math.floor(newOffset) : null;\n        if (this.offset === newOffsetFloor) {\n            return;\n        }\n        this.offset = newOffsetFloor;\n        this.eventService.dispatchEvent({ type: eventKeys_1.Events.EVENT_HEIGHT_SCALE_CHANGED });\n    };\n    MaxDivHeightScaler.prototype.setModelHeight = function (modelHeight) {\n        this.modelHeight = modelHeight;\n        this.scaling = this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\n        if (this.scaling) {\n            this.calculateOffset();\n        }\n        else {\n            this.clearOffset();\n        }\n    };\n    MaxDivHeightScaler.prototype.getUiContainerHeight = function () {\n        return this.uiContainerHeight;\n    };\n    MaxDivHeightScaler.prototype.getRealPixelPosition = function (modelPixel) {\n        return modelPixel - this.offset;\n    };\n    MaxDivHeightScaler.prototype.getUiBodyHeight = function () {\n        var pos = this.gridPanel.getVScrollPosition();\n        return pos.bottom - pos.top;\n    };\n    MaxDivHeightScaler.prototype.getScrollPositionForPixel = function (rowTop) {\n        if (this.pixelsToShave <= 0) {\n            return rowTop;\n        }\n        var modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\n        var scrollPercent = rowTop / modelMaxScroll;\n        var scrollPixel = this.maxScrollY * scrollPercent;\n        return scrollPixel;\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], MaxDivHeightScaler.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], MaxDivHeightScaler.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MaxDivHeightScaler.prototype, \"postConstruct\", null);\n    MaxDivHeightScaler = __decorate([\n        context_1.Bean('maxDivHeightScaler')\n    ], MaxDivHeightScaler);\n    return MaxDivHeightScaler;\n}(beanStub_1.BeanStub));\nexports.MaxDivHeightScaler = MaxDivHeightScaler;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar context_1 = require(\"../context/context\");\nvar dragService_1 = require(\"../dragAndDrop/dragService\");\nvar HorizontalResizeService = /** @class */ (function () {\n    function HorizontalResizeService() {\n    }\n    HorizontalResizeService.prototype.addResizeBar = function (params) {\n        var _this = this;\n        var dragSource = {\n            dragStartPixels: params.dragStartPixels || 0,\n            eElement: params.eResizeBar,\n            onDragStart: this.onDragStart.bind(this, params),\n            onDragStop: this.onDragStop.bind(this, params),\n            onDragging: this.onDragging.bind(this, params)\n        };\n        this.dragService.addDragSource(dragSource, true);\n        // we pass remove func back to the caller, so call can tell us when they\n        // are finished, and then we remove the listener from the drag source\n        var finishedWithResizeFunc = function () { return _this.dragService.removeDragSource(dragSource); };\n        return finishedWithResizeFunc;\n    };\n    HorizontalResizeService.prototype.onDragStart = function (params, mouseEvent) {\n        this.draggingStarted = true;\n        this.dragStartX = mouseEvent.clientX;\n        this.setResizeIcons();\n        var shiftKey = mouseEvent instanceof MouseEvent ? mouseEvent.shiftKey === true : false;\n        params.onResizeStart(shiftKey);\n    };\n    HorizontalResizeService.prototype.setResizeIcons = function () {\n        this.oldBodyCursor = this.eGridDiv.style.cursor;\n        this.oldMsUserSelect = this.eGridDiv.style.msUserSelect;\n        this.oldWebkitUserSelect = this.eGridDiv.style.webkitUserSelect;\n        // change the body cursor, so when drag moves out of the drag bar, the cursor is still 'resize' (or 'move'\n        this.eGridDiv.style.cursor = 'col-resize';\n        // we don't want text selection outside the grid (otherwise it looks weird as text highlights when we move)\n        this.eGridDiv.style.msUserSelect = 'none';\n        this.eGridDiv.style.webkitUserSelect = 'none';\n    };\n    HorizontalResizeService.prototype.onDragStop = function (params, mouseEvent) {\n        params.onResizeEnd(this.resizeAmount);\n        this.resetIcons();\n    };\n    HorizontalResizeService.prototype.resetIcons = function () {\n        // we don't want text selection outside the grid (otherwise it looks weird as text highlights when we move)\n        this.eGridDiv.style.cursor = this.oldBodyCursor;\n        this.eGridDiv.style.msUserSelect = this.oldMsUserSelect;\n        this.eGridDiv.style.webkitUserSelect = this.oldWebkitUserSelect;\n    };\n    HorizontalResizeService.prototype.onDragging = function (params, mouseEvent) {\n        this.resizeAmount = mouseEvent.clientX - this.dragStartX;\n        params.onResizing(this.resizeAmount);\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HorizontalResizeService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('dragService'),\n        __metadata(\"design:type\", dragService_1.DragService)\n    ], HorizontalResizeService.prototype, \"dragService\", void 0);\n    __decorate([\n        context_1.Autowired('eGridDiv'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HorizontalResizeService.prototype, \"eGridDiv\", void 0);\n    HorizontalResizeService = __decorate([\n        context_1.Bean('horizontalResizeService')\n    ], HorizontalResizeService);\n    return HorizontalResizeService;\n}());\nexports.HorizontalResizeService = HorizontalResizeService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar column_1 = require(\"../../entities/column\");\nvar beanStub_1 = require(\"../../context/beanStub\");\nvar constants_1 = require(\"../../constants\");\nvar utils_1 = require(\"../../utils\");\nvar SetLeftFeature = /** @class */ (function (_super) {\n    __extends(SetLeftFeature, _super);\n    function SetLeftFeature(columnOrGroup, eCell, beans, colsSpanning) {\n        var _this = _super.call(this) || this;\n        _this.columnOrGroup = columnOrGroup;\n        _this.eCell = eCell;\n        _this.colsSpanning = colsSpanning;\n        _this.beans = beans;\n        _this.printLayout = beans.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        return _this;\n    }\n    SetLeftFeature.prototype.setColsSpanning = function (colsSpanning) {\n        this.colsSpanning = colsSpanning;\n        this.onLeftChanged();\n    };\n    SetLeftFeature.prototype.getColumnOrGroup = function () {\n        if (this.beans.gridOptionsWrapper.isEnableRtl() && this.colsSpanning) {\n            return utils_1._.last(this.colsSpanning);\n        }\n        else {\n            return this.columnOrGroup;\n        }\n    };\n    SetLeftFeature.prototype.init = function () {\n        this.addDestroyableEventListener(this.columnOrGroup, column_1.Column.EVENT_LEFT_CHANGED, this.onLeftChanged.bind(this));\n        this.setLeftFirstTime();\n    };\n    SetLeftFeature.prototype.setLeftFirstTime = function () {\n        var suppressMoveAnimation = this.beans.gridOptionsWrapper.isSuppressColumnMoveAnimation();\n        var oldLeftExists = utils_1._.exists(this.columnOrGroup.getOldLeft());\n        var animateColumnMove = this.beans.columnAnimationService.isActive() && oldLeftExists && !suppressMoveAnimation;\n        if (animateColumnMove) {\n            this.animateInLeft();\n        }\n        else {\n            this.onLeftChanged();\n        }\n    };\n    SetLeftFeature.prototype.animateInLeft = function () {\n        var _this = this;\n        var left = this.getColumnOrGroup().getLeft();\n        var oldLeft = this.getColumnOrGroup().getOldLeft();\n        this.setLeft(oldLeft);\n        // we must keep track of the left we want to set to, as this would otherwise lead to a race\n        // condition, if the user changed the left value many times in one VM turn, then we want to make\n        // make sure the actualLeft we set in the timeout below (in the next VM turn) is the correct left\n        // position. eg if user changes column position twice, then setLeft() below executes twice in next\n        // VM turn, but only one (the correct one) should get applied.\n        this.actualLeft = left;\n        this.beans.columnAnimationService.executeNextVMTurn(function () {\n            // test this left value is the latest one to be applied, and if not, do nothing\n            if (_this.actualLeft === left) {\n                _this.setLeft(left);\n            }\n        });\n    };\n    SetLeftFeature.prototype.onLeftChanged = function () {\n        var colOrGroup = this.getColumnOrGroup();\n        var left = colOrGroup.getLeft();\n        this.actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\n        this.setLeft(this.actualLeft);\n    };\n    SetLeftFeature.prototype.modifyLeftForPrintLayout = function (colOrGroup, leftPosition) {\n        if (!this.printLayout) {\n            return leftPosition;\n        }\n        if (colOrGroup.getPinned() === column_1.Column.PINNED_LEFT) {\n            return leftPosition;\n        }\n        else if (colOrGroup.getPinned() === column_1.Column.PINNED_RIGHT) {\n            var leftWidth = this.beans.columnController.getPinnedLeftContainerWidth();\n            var bodyWidth = this.beans.columnController.getBodyContainerWidth();\n            return leftWidth + bodyWidth + leftPosition;\n        }\n        else {\n            // is in body\n            var leftWidth = this.beans.columnController.getPinnedLeftContainerWidth();\n            return leftWidth + leftPosition;\n        }\n    };\n    SetLeftFeature.prototype.setLeft = function (value) {\n        // if the value is null, then that means the column is no longer\n        // displayed. there is logic in the rendering to fade these columns\n        // out, so we don't try and change their left positions.\n        if (utils_1._.exists(value)) {\n            this.eCell.style.left = value + \"px\";\n        }\n    };\n    return SetLeftFeature;\n}(beanStub_1.BeanStub));\nexports.SetLeftFeature = SetLeftFeature;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"./component\");\nvar componentAnnotations_1 = require(\"./componentAnnotations\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar AgCheckbox = /** @class */ (function (_super) {\n    __extends(AgCheckbox, _super);\n    function AgCheckbox() {\n        var _this = _super.call(this) || this;\n        _this.selected = false;\n        _this.readOnly = false;\n        _this.passive = false;\n        return _this;\n    }\n    AgCheckbox.prototype.preConstruct = function () {\n        this.setTemplate(AgCheckbox.TEMPLATE);\n    };\n    AgCheckbox.prototype.postConstruct = function () {\n        this.loadIcons();\n        this.updateIcons();\n    };\n    AgCheckbox.prototype.setLabel = function (label) {\n        this.eLabel.innerText = label;\n    };\n    AgCheckbox.prototype.loadIcons = function () {\n        utils_1._.clearElement(this.eChecked);\n        utils_1._.clearElement(this.eUnchecked);\n        utils_1._.clearElement(this.eIndeterminate);\n        if (this.readOnly) {\n            this.eChecked.appendChild(utils_1._.createIconNoSpan('checkboxCheckedReadOnly', this.gridOptionsWrapper, null));\n            this.eUnchecked.appendChild(utils_1._.createIconNoSpan('checkboxUncheckedReadOnly', this.gridOptionsWrapper, null));\n            this.eIndeterminate.appendChild(utils_1._.createIconNoSpan('checkboxIndeterminateReadOnly', this.gridOptionsWrapper, null));\n        }\n        else {\n            this.eChecked.appendChild(utils_1._.createIconNoSpan('checkboxChecked', this.gridOptionsWrapper, null));\n            this.eUnchecked.appendChild(utils_1._.createIconNoSpan('checkboxUnchecked', this.gridOptionsWrapper, null));\n            this.eIndeterminate.appendChild(utils_1._.createIconNoSpan('checkboxIndeterminate', this.gridOptionsWrapper, null));\n        }\n    };\n    AgCheckbox.prototype.onClick = function (event) {\n        // if we don't set the path, then won't work in Edge, as once the <span> is removed from the dom,\n        // it's not possible to calculate the path by following the parent's chain. in other browser (eg\n        // chrome) there is event.path for this purpose, but missing in Edge.\n        utils_1._.addAgGridEventPath(event);\n        if (!this.readOnly) {\n            this.toggle();\n        }\n    };\n    AgCheckbox.prototype.getNextValue = function () {\n        if (this.selected === undefined) {\n            return true;\n        }\n        else {\n            return !this.selected;\n        }\n    };\n    AgCheckbox.prototype.setPassive = function (passive) {\n        this.passive = passive;\n    };\n    AgCheckbox.prototype.setReadOnly = function (readOnly) {\n        this.readOnly = readOnly;\n        this.loadIcons();\n    };\n    AgCheckbox.prototype.isReadOnly = function () {\n        return this.readOnly;\n    };\n    AgCheckbox.prototype.isSelected = function () {\n        return this.selected;\n    };\n    AgCheckbox.prototype.toggle = function () {\n        var nextValue = this.getNextValue();\n        if (this.passive) {\n            var event_1 = {\n                type: AgCheckbox.EVENT_CHANGED,\n                selected: nextValue\n            };\n            this.dispatchEvent(event_1);\n        }\n        else {\n            this.setSelected(nextValue);\n        }\n    };\n    AgCheckbox.prototype.setSelected = function (selected) {\n        if (this.selected === selected) {\n            return;\n        }\n        if (selected === true) {\n            this.selected = true;\n        }\n        else if (selected === false) {\n            this.selected = false;\n        }\n        else {\n            this.selected = undefined;\n        }\n        this.updateIcons();\n        var event = {\n            type: AgCheckbox.EVENT_CHANGED,\n            selected: this.selected\n        };\n        this.dispatchEvent(event);\n    };\n    AgCheckbox.prototype.updateIcons = function () {\n        utils_1._.setVisible(this.eChecked, this.selected === true);\n        utils_1._.setVisible(this.eUnchecked, this.selected === false);\n        utils_1._.setVisible(this.eIndeterminate, this.selected === undefined);\n    };\n    AgCheckbox.EVENT_CHANGED = 'change';\n    AgCheckbox.TEMPLATE = '<div class=\"ag-checkbox\" role=\"presentation\">' +\n        '  <span class=\"ag-checkbox-checked\" role=\"presentation\"></span>' +\n        '  <span class=\"ag-checkbox-unchecked\" role=\"presentation\"></span>' +\n        '  <span class=\"ag-checkbox-indeterminate\" role=\"presentation\"></span>' +\n        '  <span class=\"ag-checkbox-label\" role=\"presentation\"></span>' +\n        '</div>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], AgCheckbox.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        componentAnnotations_1.QuerySelector('.ag-checkbox-checked'),\n        __metadata(\"design:type\", HTMLElement)\n    ], AgCheckbox.prototype, \"eChecked\", void 0);\n    __decorate([\n        componentAnnotations_1.QuerySelector('.ag-checkbox-unchecked'),\n        __metadata(\"design:type\", HTMLElement)\n    ], AgCheckbox.prototype, \"eUnchecked\", void 0);\n    __decorate([\n        componentAnnotations_1.QuerySelector('.ag-checkbox-indeterminate'),\n        __metadata(\"design:type\", HTMLElement)\n    ], AgCheckbox.prototype, \"eIndeterminate\", void 0);\n    __decorate([\n        componentAnnotations_1.QuerySelector('.ag-checkbox-label'),\n        __metadata(\"design:type\", HTMLElement)\n    ], AgCheckbox.prototype, \"eLabel\", void 0);\n    __decorate([\n        context_1.PreConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AgCheckbox.prototype, \"preConstruct\", null);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AgCheckbox.prototype, \"postConstruct\", null);\n    __decorate([\n        componentAnnotations_1.Listener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [MouseEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], AgCheckbox.prototype, \"onClick\", null);\n    return AgCheckbox;\n}(component_1.Component));\nexports.AgCheckbox = AgCheckbox;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar eventService_1 = require(\"./eventService\");\nvar logger_1 = require(\"./logger\");\nvar events_1 = require(\"./events\");\nvar context_1 = require(\"./context/context\");\nvar context_2 = require(\"./context/context\");\nvar context_3 = require(\"./context/context\");\nvar context_4 = require(\"./context/context\");\nvar AlignedGridsService = /** @class */ (function () {\n    function AlignedGridsService() {\n        // flag to mark if we are consuming. to avoid cyclic events (ie other grid firing back to master\n        // while processing a master event) we mark this if consuming an event, and if we are, then\n        // we don't fire back any events.\n        this.consuming = false;\n    }\n    AlignedGridsService.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('AlignedGridsService');\n    };\n    AlignedGridsService.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    AlignedGridsService.prototype.init = function () {\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_MOVED, this.fireColumnEvent.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_VISIBLE, this.fireColumnEvent.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_PINNED, this.fireColumnEvent.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_GROUP_OPENED, this.fireColumnEvent.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_RESIZED, this.fireColumnEvent.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_BODY_SCROLL, this.fireScrollEvent.bind(this));\n    };\n    // common logic across all the fire methods\n    AlignedGridsService.prototype.fireEvent = function (callback) {\n        // if we are already consuming, then we are acting on an event from a master,\n        // so we don't cause a cyclic firing of events\n        if (this.consuming) {\n            return;\n        }\n        // iterate through the aligned grids, and pass each aligned grid service to the callback\n        var otherGrids = this.gridOptionsWrapper.getAlignedGrids();\n        if (otherGrids) {\n            otherGrids.forEach(function (otherGridOptions) {\n                if (otherGridOptions.api) {\n                    var alignedGridService = otherGridOptions.api.__getAlignedGridService();\n                    callback(alignedGridService);\n                }\n            });\n        }\n    };\n    // common logic across all consume methods. very little common logic, however extracting\n    // guarantees consistency across the methods.\n    AlignedGridsService.prototype.onEvent = function (callback) {\n        this.consuming = true;\n        callback();\n        this.consuming = false;\n    };\n    AlignedGridsService.prototype.fireColumnEvent = function (event) {\n        this.fireEvent(function (alignedGridsService) {\n            alignedGridsService.onColumnEvent(event);\n        });\n    };\n    AlignedGridsService.prototype.fireScrollEvent = function (event) {\n        if (event.direction !== 'horizontal') {\n            return;\n        }\n        this.fireEvent(function (alignedGridsService) {\n            alignedGridsService.onScrollEvent(event);\n        });\n    };\n    AlignedGridsService.prototype.onScrollEvent = function (event) {\n        var _this = this;\n        this.onEvent(function () {\n            _this.gridPanel.setHorizontalScrollPosition(event.left);\n        });\n    };\n    AlignedGridsService.prototype.getMasterColumns = function (event) {\n        var result = [];\n        if (event.columns) {\n            event.columns.forEach(function (column) {\n                result.push(column);\n            });\n        }\n        else if (event.column) {\n            result.push(event.column);\n        }\n        return result;\n    };\n    AlignedGridsService.prototype.getColumnIds = function (event) {\n        var result = [];\n        if (event.columns) {\n            event.columns.forEach(function (column) {\n                result.push(column.getColId());\n            });\n        }\n        else if (event.column) {\n            result.push(event.column.getColId());\n        }\n        return result;\n    };\n    AlignedGridsService.prototype.onColumnEvent = function (event) {\n        var _this = this;\n        this.onEvent(function () {\n            switch (event.type) {\n                case events_1.Events.EVENT_COLUMN_MOVED:\n                case events_1.Events.EVENT_COLUMN_VISIBLE:\n                case events_1.Events.EVENT_COLUMN_PINNED:\n                case events_1.Events.EVENT_COLUMN_RESIZED:\n                    var colEvent = event;\n                    _this.processColumnEvent(colEvent);\n                    break;\n                case events_1.Events.EVENT_COLUMN_GROUP_OPENED:\n                    var groupOpenedEvent = event;\n                    _this.processGroupOpenedEvent(groupOpenedEvent);\n                    break;\n                case events_1.Events.EVENT_COLUMN_PIVOT_CHANGED:\n                    // we cannot support pivoting with aligned grids as the columns will be out of sync as the\n                    // grids will have columns created based on the row data of the grid.\n                    console.warn('ag-Grid: pivoting is not supported with aligned grids. ' +\n                        'You can only use one of these features at a time in a grid.');\n                    break;\n            }\n        });\n    };\n    AlignedGridsService.prototype.processGroupOpenedEvent = function (groupOpenedEvent) {\n        // likewise for column group\n        var masterColumnGroup = groupOpenedEvent.columnGroup;\n        var otherColumnGroup;\n        if (masterColumnGroup) {\n            var groupId = masterColumnGroup.getGroupId();\n            otherColumnGroup = this.columnController.getOriginalColumnGroup(groupId);\n        }\n        if (masterColumnGroup && !otherColumnGroup) {\n            return;\n        }\n        this.logger.log('onColumnEvent-> processing ' + groupOpenedEvent + ' expanded = ' + masterColumnGroup.isExpanded());\n        this.columnController.setColumnGroupOpened(otherColumnGroup, masterColumnGroup.isExpanded(), \"alignedGridChanged\");\n    };\n    AlignedGridsService.prototype.processColumnEvent = function (colEvent) {\n        var _this = this;\n        // the column in the event is from the master grid. need to\n        // look up the equivalent from this (other) grid\n        var masterColumn = colEvent.column;\n        var otherColumn;\n        if (masterColumn) {\n            otherColumn = this.columnController.getPrimaryColumn(masterColumn.getColId());\n        }\n        // if event was with respect to a master column, that is not present in this\n        // grid, then we ignore the event\n        if (masterColumn && !otherColumn) {\n            return;\n        }\n        // in time, all the methods below should use the column ids, it's a more generic way\n        // of handling columns, and also allows for single or multi column events\n        var columnIds = this.getColumnIds(colEvent);\n        var masterColumns = this.getMasterColumns(colEvent);\n        switch (colEvent.type) {\n            case events_1.Events.EVENT_COLUMN_MOVED:\n                var movedEvent = colEvent;\n                this.logger.log(\"onColumnEvent-> processing \" + colEvent.type + \" toIndex = \" + movedEvent.toIndex);\n                this.columnController.moveColumns(columnIds, movedEvent.toIndex, \"alignedGridChanged\");\n                break;\n            case events_1.Events.EVENT_COLUMN_VISIBLE:\n                var visibleEvent = colEvent;\n                this.logger.log(\"onColumnEvent-> processing \" + colEvent.type + \" visible = \" + visibleEvent.visible);\n                this.columnController.setColumnsVisible(columnIds, visibleEvent.visible, \"alignedGridChanged\");\n                break;\n            case events_1.Events.EVENT_COLUMN_PINNED:\n                var pinnedEvent = colEvent;\n                this.logger.log(\"onColumnEvent-> processing \" + colEvent.type + \" pinned = \" + pinnedEvent.pinned);\n                this.columnController.setColumnsPinned(columnIds, pinnedEvent.pinned, \"alignedGridChanged\");\n                break;\n            case events_1.Events.EVENT_COLUMN_RESIZED:\n                var resizedEvent_1 = colEvent;\n                masterColumns.forEach(function (column) {\n                    _this.logger.log(\"onColumnEvent-> processing \" + colEvent.type + \" actualWidth = \" + column.getActualWidth());\n                    _this.columnController.setColumnWidth(column.getColId(), column.getActualWidth(), false, resizedEvent_1.finished, \"alignedGridChanged\");\n                });\n                break;\n        }\n        var isVerticalScrollShowing = this.gridPanel.isVerticalScrollShowing();\n        var alignedGrids = this.gridOptionsWrapper.getAlignedGrids();\n        alignedGrids.forEach(function (grid) {\n            grid.api.setAlwaysShowVerticalScroll(isVerticalScrollShowing);\n        });\n    };\n    __decorate([\n        context_3.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], AlignedGridsService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_3.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], AlignedGridsService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_3.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], AlignedGridsService.prototype, \"eventService\", void 0);\n    __decorate([\n        __param(0, context_2.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], AlignedGridsService.prototype, \"setBeans\", null);\n    __decorate([\n        context_4.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AlignedGridsService.prototype, \"init\", null);\n    AlignedGridsService = __decorate([\n        context_1.Bean('alignedGridsService')\n    ], AlignedGridsService);\n    return AlignedGridsService;\n}());\nexports.AlignedGridsService = AlignedGridsService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar ResizeObserverService = /** @class */ (function () {\n    function ResizeObserverService() {\n    }\n    ResizeObserverService.prototype.observeResize = function (element, callback, debounceDelay) {\n        if (debounceDelay === void 0) { debounceDelay = 50; }\n        // put in variable, so available to usePolyfill() function below\n        var frameworkFactory = this.frameworkOverrides;\n        // this gets fired too often and might cause some relayout issues\n        // so we add a debounce to the callback here to avoid the flashing effect.\n        var debouncedCallback = utils_1._.debounce(callback, debounceDelay);\n        var useBrowserResizeObserver = function () {\n            var resizeObserver = new window.ResizeObserver(debouncedCallback);\n            resizeObserver.observe(element);\n            return function () { return resizeObserver.disconnect(); };\n        };\n        var usePolyfill = function () {\n            // initialise to the current width and height, so first call will have no changes\n            var widthLastTime = utils_1._.offsetWidth(element);\n            var heightLastTime = utils_1._.offsetHeight(element);\n            // when finished, this gets turned to false.\n            var running = true;\n            var periodicallyCheckWidthAndHeight = function () {\n                if (running) {\n                    var newWidth = utils_1._.offsetWidth(element);\n                    var newHeight = utils_1._.offsetHeight(element);\n                    var changed = newWidth !== widthLastTime || newHeight !== heightLastTime;\n                    if (changed) {\n                        widthLastTime = newWidth;\n                        heightLastTime = newHeight;\n                        callback();\n                    }\n                    frameworkFactory.setTimeout(periodicallyCheckWidthAndHeight, debounceDelay);\n                }\n            };\n            periodicallyCheckWidthAndHeight();\n            // the callback function we return sets running to false\n            return function () { return running = false; };\n        };\n        var suppressResize = this.gridOptionsWrapper.isSuppressBrowserResizeObserver();\n        var resizeObserverExists = !!window.ResizeObserver;\n        if (resizeObserverExists && !suppressResize) {\n            return useBrowserResizeObserver();\n        }\n        else {\n            return usePolyfill();\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ResizeObserverService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('frameworkOverrides'),\n        __metadata(\"design:type\", Object)\n    ], ResizeObserverService.prototype, \"frameworkOverrides\", void 0);\n    ResizeObserverService = __decorate([\n        context_1.Bean('resizeObserverService')\n    ], ResizeObserverService);\n    return ResizeObserverService;\n}());\nexports.ResizeObserverService = ResizeObserverService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar beanStub_1 = require(\"../../context/beanStub\");\nvar RowNodeBlock = /** @class */ (function (_super) {\n    __extends(RowNodeBlock, _super);\n    function RowNodeBlock(blockNumber, rowNodeCacheParams) {\n        var _this = _super.call(this) || this;\n        _this.version = 0;\n        _this.state = RowNodeBlock.STATE_DIRTY;\n        _this.rowNodeCacheParams = rowNodeCacheParams;\n        _this.blockNumber = blockNumber;\n        // we don't need to calculate these now, as the inputs don't change,\n        // however it makes the code easier to read if we work them out up front\n        _this.startRow = blockNumber * rowNodeCacheParams.blockSize;\n        _this.endRow = _this.startRow + rowNodeCacheParams.blockSize;\n        return _this;\n    }\n    RowNodeBlock.prototype.isAnyNodeOpen = function (rowCount) {\n        var result = false;\n        this.forEachNodeCallback(function (rowNode) {\n            if (rowNode.expanded) {\n                result = true;\n            }\n        }, rowCount);\n        return result;\n    };\n    RowNodeBlock.prototype.forEachNodeCallback = function (callback, rowCount) {\n        for (var rowIndex = this.startRow; rowIndex < this.endRow; rowIndex++) {\n            // we check against rowCount as this page may be the last one, and if it is, then\n            // the last rows are not part of the set\n            if (rowIndex < rowCount) {\n                var rowNode = this.getRowUsingLocalIndex(rowIndex);\n                callback(rowNode, rowIndex);\n            }\n        }\n    };\n    RowNodeBlock.prototype.forEachNode = function (callback, sequence, rowCount, deep) {\n        this.forEachNodeCallback(function (rowNode) {\n            callback(rowNode, sequence.next());\n            // this will only every happen for server side row model, as infinite\n            // row model doesn't have groups\n            if (deep && rowNode.childrenCache) {\n                rowNode.childrenCache.forEachNodeDeep(callback, sequence);\n            }\n        }, rowCount);\n    };\n    RowNodeBlock.prototype.forEachNodeDeep = function (callback, sequence, rowCount) {\n        this.forEachNode(callback, sequence, rowCount, true);\n    };\n    RowNodeBlock.prototype.forEachNodeShallow = function (callback, sequence, rowCount) {\n        this.forEachNode(callback, sequence, rowCount, false);\n    };\n    RowNodeBlock.prototype.getVersion = function () {\n        return this.version;\n    };\n    RowNodeBlock.prototype.getLastAccessed = function () {\n        return this.lastAccessed;\n    };\n    RowNodeBlock.prototype.getRowUsingLocalIndex = function (rowIndex, dontTouchLastAccessed) {\n        if (dontTouchLastAccessed === void 0) { dontTouchLastAccessed = false; }\n        if (!dontTouchLastAccessed) {\n            this.lastAccessed = this.rowNodeCacheParams.lastAccessedSequence.next();\n        }\n        var localIndex = rowIndex - this.startRow;\n        return this.rowNodes[localIndex];\n    };\n    RowNodeBlock.prototype.init = function (beans) {\n        this.beans = beans;\n        this.createRowNodes();\n    };\n    RowNodeBlock.prototype.getStartRow = function () {\n        return this.startRow;\n    };\n    RowNodeBlock.prototype.getEndRow = function () {\n        return this.endRow;\n    };\n    RowNodeBlock.prototype.getBlockNumber = function () {\n        return this.blockNumber;\n    };\n    RowNodeBlock.prototype.setDirty = function () {\n        // in case any current loads in progress, this will have their results ignored\n        this.version++;\n        this.state = RowNodeBlock.STATE_DIRTY;\n    };\n    RowNodeBlock.prototype.setDirtyAndPurge = function () {\n        this.setDirty();\n        this.rowNodes.forEach(function (rowNode) {\n            rowNode.setData(null);\n        });\n    };\n    RowNodeBlock.prototype.getState = function () {\n        return this.state;\n    };\n    RowNodeBlock.prototype.setRowNode = function (rowIndex, rowNode) {\n        var localIndex = rowIndex - this.startRow;\n        this.rowNodes[localIndex] = rowNode;\n    };\n    RowNodeBlock.prototype.setBlankRowNode = function (rowIndex) {\n        var localIndex = rowIndex - this.startRow;\n        var newRowNode = this.createBlankRowNode(rowIndex);\n        this.rowNodes[localIndex] = newRowNode;\n        return newRowNode;\n    };\n    RowNodeBlock.prototype.setNewData = function (rowIndex, dataItem) {\n        var newRowNode = this.setBlankRowNode(rowIndex);\n        this.setDataAndId(newRowNode, dataItem, this.startRow + rowIndex);\n        return newRowNode;\n    };\n    RowNodeBlock.prototype.createBlankRowNode = function (rowIndex) {\n        var rowNode = new rowNode_1.RowNode();\n        this.beans.context.wireBean(rowNode);\n        rowNode.setRowHeight(this.rowNodeCacheParams.rowHeight);\n        return rowNode;\n    };\n    // creates empty row nodes, data is missing as not loaded yet\n    RowNodeBlock.prototype.createRowNodes = function () {\n        this.rowNodes = [];\n        for (var i = 0; i < this.rowNodeCacheParams.blockSize; i++) {\n            var rowIndex = this.startRow + i;\n            var rowNode = this.createBlankRowNode(rowIndex);\n            this.rowNodes.push(rowNode);\n        }\n    };\n    RowNodeBlock.prototype.load = function () {\n        this.state = RowNodeBlock.STATE_LOADING;\n        this.loadFromDatasource();\n    };\n    RowNodeBlock.prototype.pageLoadFailed = function () {\n        this.state = RowNodeBlock.STATE_FAILED;\n        var event = {\n            type: RowNodeBlock.EVENT_LOAD_COMPLETE,\n            success: false,\n            page: this,\n            lastRow: null\n        };\n        this.dispatchEvent(event);\n    };\n    RowNodeBlock.prototype.populateWithRowData = function (rows) {\n        var _this = this;\n        var rowNodesToRefresh = [];\n        this.rowNodes.forEach(function (rowNode, index) {\n            var data = rows[index];\n            if (rowNode.stub) {\n                rowNodesToRefresh.push(rowNode);\n            }\n            _this.setDataAndId(rowNode, data, _this.startRow + index);\n        });\n        if (rowNodesToRefresh.length > 0) {\n            this.beans.rowRenderer.redrawRows(rowNodesToRefresh);\n        }\n    };\n    RowNodeBlock.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.rowNodes.forEach(function (rowNode) {\n            if (rowNode.childrenCache) {\n                rowNode.childrenCache.destroy();\n                rowNode.childrenCache = null;\n            }\n            // this is needed, so row render knows to fade out the row, otherwise it\n            // sees row top is present, and thinks the row should be shown. maybe\n            // rowNode should have a flag on whether it is visible???\n            rowNode.clearRowTop();\n        });\n    };\n    RowNodeBlock.prototype.pageLoaded = function (version, rows, lastRow) {\n        // we need to check the version, in case there was an old request\n        // from the server that was sent before we refreshed the cache,\n        // if the load was done as a result of a cache refresh\n        if (version === this.version) {\n            this.state = RowNodeBlock.STATE_LOADED;\n            this.populateWithRowData(rows);\n        }\n        lastRow = utils_1._.cleanNumber(lastRow);\n        // check here if lastRow should be set\n        var event = {\n            type: RowNodeBlock.EVENT_LOAD_COMPLETE,\n            success: true,\n            page: this,\n            lastRow: lastRow\n        };\n        this.dispatchEvent(event);\n    };\n    RowNodeBlock.EVENT_LOAD_COMPLETE = 'loadComplete';\n    RowNodeBlock.STATE_DIRTY = 'dirty';\n    RowNodeBlock.STATE_LOADING = 'loading';\n    RowNodeBlock.STATE_LOADED = 'loaded';\n    RowNodeBlock.STATE_FAILED = 'failed';\n    return RowNodeBlock;\n}(beanStub_1.BeanStub));\nexports.RowNodeBlock = RowNodeBlock;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar events_1 = require(\"../events\");\nvar propertyKeys_1 = require(\"../propertyKeys\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar ComponentUtil = /** @class */ (function () {\n    function ComponentUtil() {\n    }\n    ComponentUtil.getEventCallbacks = function () {\n        if (!ComponentUtil.EVENT_CALLBACKS) {\n            ComponentUtil.EVENT_CALLBACKS = [];\n            ComponentUtil.EVENT_CALLBACKS_NO_PREFIX = [];\n            ComponentUtil.EVENTS.forEach(function (eventName) {\n                ComponentUtil.EVENT_CALLBACKS.push(ComponentUtil.getCallbackForEvent(eventName));\n                ComponentUtil.EVENT_CALLBACKS_NO_PREFIX.push(eventName);\n            });\n        }\n        return ComponentUtil.EVENT_CALLBACKS;\n    };\n    ComponentUtil.copyAttributesToGridOptions = function (gridOptions, component, skipEventDeprecationCheck) {\n        if (skipEventDeprecationCheck === void 0) { skipEventDeprecationCheck = false; }\n        checkForDeprecated(component);\n        // create empty grid options if none were passed\n        if (typeof gridOptions !== 'object') {\n            gridOptions = {};\n        }\n        // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n        var pGridOptions = gridOptions;\n        // add in all the simple properties\n        ComponentUtil.ARRAY_PROPERTIES\n            .concat(ComponentUtil.STRING_PROPERTIES)\n            .concat(ComponentUtil.OBJECT_PROPERTIES)\n            .concat(ComponentUtil.FUNCTION_PROPERTIES)\n            .forEach(function (key) {\n            if (typeof component[key] !== 'undefined') {\n                pGridOptions[key] = component[key];\n            }\n        });\n        ComponentUtil.BOOLEAN_PROPERTIES.forEach(function (key) {\n            if (typeof component[key] !== 'undefined') {\n                pGridOptions[key] = ComponentUtil.toBoolean(component[key]);\n            }\n        });\n        ComponentUtil.NUMBER_PROPERTIES.forEach(function (key) {\n            if (typeof component[key] !== 'undefined') {\n                pGridOptions[key] = ComponentUtil.toNumber(component[key]);\n            }\n        });\n        ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (typeof component[funcName] !== 'undefined') {\n                pGridOptions[funcName] = component[funcName];\n            }\n        });\n        // purely for event deprecation checks (for frameworks - wouldn't apply for non-fw versions)\n        if (!skipEventDeprecationCheck) {\n            ComponentUtil.EVENT_CALLBACKS_NO_PREFIX.forEach(function (funcName) {\n                // react uses onXXX...not sure why this is diff to the other frameworks\n                var onMethodName = ComponentUtil.getCallbackForEvent(funcName);\n                if (typeof component[funcName] !== 'undefined' ||\n                    typeof component[onMethodName] !== 'undefined') {\n                    gridOptionsWrapper_1.GridOptionsWrapper.checkEventDeprecation(funcName);\n                }\n            });\n        }\n        return gridOptions;\n    };\n    ComponentUtil.getCallbackForEvent = function (eventName) {\n        if (!eventName || eventName.length < 2) {\n            return eventName;\n        }\n        else {\n            return 'on' + eventName[0].toUpperCase() + eventName.substr(1);\n        }\n    };\n    ComponentUtil.processOnChange = function (changes, gridOptions, api, columnApi) {\n        if (!changes) {\n            return;\n        }\n        checkForDeprecated(changes);\n        // to allow array style lookup in TypeScript, take type away from 'this' and 'gridOptions'\n        var pGridOptions = gridOptions;\n        // check if any change for the simple types, and if so, then just copy in the new value\n        ComponentUtil.ARRAY_PROPERTIES\n            .concat(ComponentUtil.OBJECT_PROPERTIES)\n            .concat(ComponentUtil.STRING_PROPERTIES)\n            .forEach(function (key) {\n            if (changes[key]) {\n                pGridOptions[key] = changes[key].currentValue;\n            }\n        });\n        ComponentUtil.BOOLEAN_PROPERTIES.forEach(function (key) {\n            if (changes[key]) {\n                pGridOptions[key] = ComponentUtil.toBoolean(changes[key].currentValue);\n            }\n        });\n        ComponentUtil.NUMBER_PROPERTIES.forEach(function (key) {\n            if (changes[key]) {\n                pGridOptions[key] = ComponentUtil.toNumber(changes[key].currentValue);\n            }\n        });\n        ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (changes[funcName]) {\n                pGridOptions[funcName] = changes[funcName].currentValue;\n            }\n        });\n        if (changes.enableCellTextSelection) {\n            api.setEnableCellTextSelection(ComponentUtil.toBoolean(changes.enableCellTextSelection.currentValue));\n        }\n        if (changes.showToolPanel) {\n            api.showToolPanel(ComponentUtil.toBoolean(changes.showToolPanel.currentValue));\n        }\n        if (changes.quickFilterText) {\n            api.setQuickFilter(changes.quickFilterText.currentValue);\n        }\n        if (changes.rowData) {\n            api.setRowData(changes.rowData.currentValue);\n        }\n        if (changes.pinnedTopRowData) {\n            api.setPinnedTopRowData(changes.pinnedTopRowData.currentValue);\n        }\n        if (changes.pinnedBottomRowData) {\n            api.setPinnedBottomRowData(changes.pinnedBottomRowData.currentValue);\n        }\n        if (changes.columnDefs) {\n            api.setColumnDefs(changes.columnDefs.currentValue, \"gridOptionsChanged\");\n        }\n        if (changes.datasource) {\n            api.setDatasource(changes.datasource.currentValue);\n        }\n        if (changes.headerHeight) {\n            api.setHeaderHeight(ComponentUtil.toNumber(changes.headerHeight.currentValue));\n        }\n        if (changes.paginationPageSize) {\n            api.paginationSetPageSize(ComponentUtil.toNumber(changes.paginationPageSize.currentValue));\n        }\n        if (changes.pivotMode) {\n            columnApi.setPivotMode(ComponentUtil.toBoolean(changes.pivotMode.currentValue));\n        }\n        if (changes.groupRemoveSingleChildren) {\n            api.setGroupRemoveSingleChildren(ComponentUtil.toBoolean(changes.groupRemoveSingleChildren.currentValue));\n        }\n        if (changes.suppressRowDrag) {\n            api.setSuppressRowDrag(ComponentUtil.toBoolean(changes.suppressRowDrag.currentValue));\n        }\n        if (changes.gridAutoHeight) {\n            api.setGridAutoHeight(ComponentUtil.toBoolean(changes.gridAutoHeight.currentValue));\n        }\n        if (changes.suppressClipboardPaste) {\n            api.setSuppressClipboardPaste(ComponentUtil.toBoolean(changes.suppressClipboardPaste.currentValue));\n        }\n        if (changes.sideBar) {\n            api.setSideBar(changes.sideBar.currentValue);\n        }\n        if (changes.datasource) {\n            api.setDatasource(changes.datasource.currentValue);\n        }\n        // copy changes into an event for dispatch\n        var event = {\n            type: events_1.Events.EVENT_COMPONENT_STATE_CHANGED,\n            api: gridOptions.api,\n            columnApi: gridOptions.columnApi\n        };\n        utils_1._.iterateObject(changes, function (key, value) {\n            event[key] = value;\n        });\n        api.dispatchEvent(event);\n    };\n    ComponentUtil.toBoolean = function (value) {\n        if (typeof value === 'boolean') {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // for boolean, compare to empty String to allow attributes appearing with\n            // not value to be treated as 'true'\n            return value.toUpperCase() === 'TRUE' || value == '';\n        }\n        else {\n            return false;\n        }\n    };\n    ComponentUtil.toNumber = function (value) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            return Number(value);\n        }\n        else {\n            return undefined;\n        }\n    };\n    // all the events are populated in here AFTER this class (at the bottom of the file).\n    ComponentUtil.EVENTS = [];\n    ComponentUtil.STRING_PROPERTIES = propertyKeys_1.PropertyKeys.STRING_PROPERTIES;\n    ComponentUtil.OBJECT_PROPERTIES = propertyKeys_1.PropertyKeys.OBJECT_PROPERTIES;\n    ComponentUtil.ARRAY_PROPERTIES = propertyKeys_1.PropertyKeys.ARRAY_PROPERTIES;\n    ComponentUtil.NUMBER_PROPERTIES = propertyKeys_1.PropertyKeys.NUMBER_PROPERTIES;\n    ComponentUtil.BOOLEAN_PROPERTIES = propertyKeys_1.PropertyKeys.BOOLEAN_PROPERTIES;\n    ComponentUtil.FUNCTION_PROPERTIES = propertyKeys_1.PropertyKeys.FUNCTION_PROPERTIES;\n    ComponentUtil.ALL_PROPERTIES = propertyKeys_1.PropertyKeys.ALL_PROPERTIES;\n    return ComponentUtil;\n}());\nexports.ComponentUtil = ComponentUtil;\nutils_1._.iterateObject(events_1.Events, function (key, value) {\n    ComponentUtil.EVENTS.push(value);\n});\nfunction checkForDeprecated(changes) {\n    if (changes.rowDeselected || changes.onRowDeselected) {\n        console.warn('ag-grid: as of v3.4 rowDeselected no longer exists. Please check the docs.');\n    }\n}\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridSerializer_1 = require(\"./gridSerializer\");\nvar downloader_1 = require(\"./downloader\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar valueService_1 = require(\"../valueService/valueService\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar constants_1 = require(\"../constants\");\nvar utils_1 = require(\"../utils\");\nvar LINE_SEPARATOR = '\\r\\n';\nvar CsvSerializingSession = /** @class */ (function (_super) {\n    __extends(CsvSerializingSession, _super);\n    function CsvSerializingSession(config) {\n        var _this = _super.call(this, {\n            columnController: config.columnController,\n            valueService: config.valueService,\n            gridOptionsWrapper: config.gridOptionsWrapper,\n            processCellCallback: config.processCellCallback,\n            processHeaderCallback: config.processHeaderCallback\n        }) || this;\n        _this.result = '';\n        _this.lineOpened = false;\n        var suppressQuotes = config.suppressQuotes, columnSeparator = config.columnSeparator;\n        _this.suppressQuotes = suppressQuotes;\n        _this.columnSeparator = columnSeparator;\n        return _this;\n    }\n    CsvSerializingSession.prototype.prepare = function (columnsToExport) {\n    };\n    CsvSerializingSession.prototype.addCustomHeader = function (customHeader) {\n        if (!customHeader) {\n            return;\n        }\n        this.result += customHeader + LINE_SEPARATOR;\n    };\n    CsvSerializingSession.prototype.addCustomFooter = function (customFooter) {\n        if (!customFooter) {\n            return;\n        }\n        this.result += customFooter + LINE_SEPARATOR;\n    };\n    CsvSerializingSession.prototype.onNewHeaderGroupingRow = function () {\n        if (this.lineOpened) {\n            this.result += LINE_SEPARATOR;\n        }\n        return {\n            onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\n        };\n    };\n    CsvSerializingSession.prototype.onNewHeaderGroupingRowColumn = function (header, index, span) {\n        if (index != 0) {\n            this.result += this.columnSeparator;\n        }\n        this.result += this.putInQuotes(header, this.suppressQuotes);\n        for (var i = 1; i <= span; i++) {\n            this.result += this.columnSeparator + this.putInQuotes(\"\", this.suppressQuotes);\n        }\n        this.lineOpened = true;\n    };\n    CsvSerializingSession.prototype.onNewHeaderRow = function () {\n        if (this.lineOpened) {\n            this.result += LINE_SEPARATOR;\n        }\n        return {\n            onColumn: this.onNewHeaderRowColumn.bind(this)\n        };\n    };\n    CsvSerializingSession.prototype.onNewHeaderRowColumn = function (column, index, node) {\n        if (index != 0) {\n            this.result += this.columnSeparator;\n        }\n        this.result += this.putInQuotes(this.extractHeaderValue(column), this.suppressQuotes);\n        this.lineOpened = true;\n    };\n    CsvSerializingSession.prototype.onNewBodyRow = function () {\n        if (this.lineOpened) {\n            this.result += LINE_SEPARATOR;\n        }\n        return {\n            onColumn: this.onNewBodyRowColumn.bind(this)\n        };\n    };\n    CsvSerializingSession.prototype.onNewBodyRowColumn = function (column, index, node) {\n        if (index != 0) {\n            this.result += this.columnSeparator;\n        }\n        this.result += this.putInQuotes(this.extractRowCellValue(column, index, constants_1.Constants.EXPORT_TYPE_CSV, node), this.suppressQuotes);\n        this.lineOpened = true;\n    };\n    CsvSerializingSession.prototype.putInQuotes = function (value, suppressQuotes) {\n        if (suppressQuotes) {\n            return value;\n        }\n        if (value === null || value === undefined) {\n            return '\"\"';\n        }\n        var stringValue;\n        if (typeof value === 'string') {\n            stringValue = value;\n        }\n        else if (typeof value.toString === 'function') {\n            stringValue = value.toString();\n        }\n        else {\n            console.warn('unknown value type during csv conversion');\n            stringValue = '';\n        }\n        // replace each \" with \"\" (ie two sets of double quotes is how to do double quotes in csv)\n        var valueEscaped = stringValue.replace(/\"/g, \"\\\"\\\"\");\n        return '\"' + valueEscaped + '\"';\n    };\n    CsvSerializingSession.prototype.parse = function () {\n        return this.result;\n    };\n    return CsvSerializingSession;\n}(gridSerializer_1.BaseGridSerializingSession));\nexports.CsvSerializingSession = CsvSerializingSession;\nvar BaseCreator = /** @class */ (function () {\n    function BaseCreator() {\n    }\n    BaseCreator.prototype.setBeans = function (beans) {\n        this.beans = beans;\n    };\n    BaseCreator.prototype.export = function (userParams) {\n        if (this.isExportSuppressed()) {\n            console.warn(\"ag-grid: Export cancelled. Export is not allowed as per your configuration.\");\n            return '';\n        }\n        var _a = this.getMergedParamsAndData(userParams), mergedParams = _a.mergedParams, data = _a.data;\n        var fileNamePresent = mergedParams && mergedParams.fileName && mergedParams.fileName.length !== 0;\n        var fileName = fileNamePresent ? mergedParams.fileName : this.getDefaultFileName();\n        if (fileName.indexOf(\".\") === -1) {\n            fileName = fileName + \".\" + this.getDefaultFileExtension();\n        }\n        this.beans.downloader.download(fileName, this.packageFile(data));\n        return data;\n    };\n    BaseCreator.prototype.getData = function (params) {\n        return this.getMergedParamsAndData(params).data;\n    };\n    BaseCreator.prototype.getMergedParamsAndData = function (userParams) {\n        var mergedParams = this.mergeDefaultParams(userParams);\n        var data = this.beans.gridSerializer.serialize(this.createSerializingSession(mergedParams), mergedParams);\n        return { mergedParams: mergedParams, data: data };\n    };\n    BaseCreator.prototype.mergeDefaultParams = function (userParams) {\n        var baseParams = this.beans.gridOptionsWrapper.getDefaultExportParams();\n        var params = {};\n        utils_1._.assign(params, baseParams);\n        utils_1._.assign(params, userParams);\n        return params;\n    };\n    BaseCreator.prototype.packageFile = function (data) {\n        return new Blob([\"\\ufeff\", data], {\n            type: window.navigator.msSaveOrOpenBlob ? this.getMimeType() : 'octet/stream'\n        });\n    };\n    return BaseCreator;\n}());\nexports.BaseCreator = BaseCreator;\nvar CsvCreator = /** @class */ (function (_super) {\n    __extends(CsvCreator, _super);\n    function CsvCreator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CsvCreator.prototype.postConstruct = function () {\n        this.setBeans({\n            downloader: this.downloader,\n            gridSerializer: this.gridSerializer,\n            gridOptionsWrapper: this.gridOptionsWrapper\n        });\n    };\n    CsvCreator.prototype.exportDataAsCsv = function (params) {\n        return this.export(params);\n    };\n    CsvCreator.prototype.getDataAsCsv = function (params) {\n        return this.getData(params);\n    };\n    CsvCreator.prototype.getMimeType = function () {\n        return 'text/csv;charset=utf-8;';\n    };\n    CsvCreator.prototype.getDefaultFileName = function () {\n        return 'export.csv';\n    };\n    CsvCreator.prototype.getDefaultFileExtension = function () {\n        return 'csv';\n    };\n    CsvCreator.prototype.createSerializingSession = function (params) {\n        var _a = this, columnController = _a.columnController, valueService = _a.valueService, gridOptionsWrapper = _a.gridOptionsWrapper;\n        var _b = params, processCellCallback = _b.processCellCallback, processHeaderCallback = _b.processHeaderCallback, suppressQuotes = _b.suppressQuotes, columnSeparator = _b.columnSeparator;\n        return new CsvSerializingSession({\n            columnController: columnController,\n            valueService: valueService,\n            gridOptionsWrapper: gridOptionsWrapper,\n            processCellCallback: processCellCallback || undefined,\n            processHeaderCallback: processHeaderCallback || undefined,\n            suppressQuotes: suppressQuotes || false,\n            columnSeparator: columnSeparator || ','\n        });\n    };\n    CsvCreator.prototype.isExportSuppressed = function () {\n        return this.gridOptionsWrapper.isSuppressCsvExport();\n    };\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], CsvCreator.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], CsvCreator.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('downloader'),\n        __metadata(\"design:type\", downloader_1.Downloader)\n    ], CsvCreator.prototype, \"downloader\", void 0);\n    __decorate([\n        context_1.Autowired('gridSerializer'),\n        __metadata(\"design:type\", gridSerializer_1.GridSerializer)\n    ], CsvCreator.prototype, \"gridSerializer\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], CsvCreator.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], CsvCreator.prototype, \"postConstruct\", null);\n    CsvCreator = __decorate([\n        context_1.Bean('csvCreator')\n    ], CsvCreator);\n    return CsvCreator;\n}(BaseCreator));\nexports.CsvCreator = CsvCreator;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cellComp_1 = require(\"./cellComp\");\nvar rowNode_1 = require(\"../entities/rowNode\");\nvar column_1 = require(\"../entities/column\");\nvar events_1 = require(\"../events\");\nvar component_1 = require(\"../widgets/component\");\nvar utils_1 = require(\"../utils\");\nvar RowComp = /** @class */ (function (_super) {\n    __extends(RowComp, _super);\n    function RowComp(parentScope, bodyContainerComp, pinnedLeftContainerComp, pinnedRightContainerComp, fullWidthContainerComp, rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout, embedFullWidth) {\n        var _this = _super.call(this) || this;\n        _this.eAllRowContainers = [];\n        _this.active = true;\n        _this.rowContainerReadyCount = 0;\n        _this.refreshNeeded = false;\n        _this.columnRefreshPending = false;\n        _this.cellComps = {};\n        // for animations, there are bits we want done in the next VM turn, to all DOM to update first.\n        // instead of each row doing a setTimeout(func,0), we put the functions here and the rowRenderer\n        // executes them all in one timeout\n        _this.createSecondPassFuncs = [];\n        // these get called before the row is destroyed - they set up the DOM for the remove animation (ie they\n        // set the DOM up for the animation), then the delayedDestroyFunctions get called when the animation is\n        // complete (ie removes from the dom).\n        _this.removeFirstPassFuncs = [];\n        // for animations, these functions get called 400ms after the row is cleared, called by the rowRenderer\n        // so each row isn't setting up it's own timeout\n        _this.removeSecondPassFuncs = [];\n        _this.initialised = false;\n        _this.parentScope = parentScope;\n        _this.beans = beans;\n        _this.bodyContainerComp = bodyContainerComp;\n        _this.pinnedLeftContainerComp = pinnedLeftContainerComp;\n        _this.pinnedRightContainerComp = pinnedRightContainerComp;\n        _this.fullWidthContainerComp = fullWidthContainerComp;\n        _this.rowNode = rowNode;\n        _this.rowIsEven = _this.rowNode.rowIndex % 2 === 0;\n        _this.paginationPage = _this.beans.paginationProxy.getCurrentPage();\n        _this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n        _this.printLayout = printLayout;\n        _this.embedFullWidth = embedFullWidth;\n        _this.setAnimateFlags(animateIn);\n        return _this;\n    }\n    RowComp.prototype.init = function () {\n        var _this = this;\n        this.rowFocused = this.beans.focusedCellController.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n        this.scope = this.createChildScopeOrNull(this.rowNode.data);\n        this.setupRowContainers();\n        this.addListeners();\n        if (this.slideRowIn) {\n            this.createSecondPassFuncs.push(function () {\n                _this.onTopChanged();\n            });\n        }\n        if (this.fadeRowIn) {\n            this.createSecondPassFuncs.push(function () {\n                _this.eAllRowContainers.forEach(function (eRow) { return utils_1._.removeCssClass(eRow, 'ag-opacity-zero'); });\n            });\n        }\n    };\n    RowComp.prototype.createTemplate = function (contents, extraCssClass) {\n        if (extraCssClass === void 0) { extraCssClass = null; }\n        var templateParts = [];\n        var rowHeight = this.rowNode.rowHeight;\n        var rowClasses = this.getInitialRowClasses(extraCssClass).join(' ');\n        var rowIdSanitised = utils_1._.escape(this.rowNode.id);\n        var userRowStyles = this.preProcessStylesFromGridOptions();\n        var businessKey = this.getRowBusinessKey();\n        var businessKeySanitised = utils_1._.escape(businessKey);\n        var rowTopStyle = this.getInitialRowTopStyle();\n        templateParts.push(\"<div\");\n        templateParts.push(\" role=\\\"row\\\"\");\n        templateParts.push(\" row-index=\\\"\" + this.rowNode.getRowIndexString() + \"\\\"\");\n        templateParts.push(rowIdSanitised ? \" row-id=\\\"\" + rowIdSanitised + \"\\\"\" : \"\");\n        templateParts.push(businessKey ? \" row-business-key=\\\"\" + businessKeySanitised + \"\\\"\" : \"\");\n        templateParts.push(\" comp-id=\\\"\" + this.getCompId() + \"\\\"\");\n        templateParts.push(\" class=\\\"\" + rowClasses + \"\\\"\");\n        templateParts.push(\" style=\\\"height: \" + rowHeight + \"px; \" + rowTopStyle + \" \" + userRowStyles + \"\\\">\");\n        // add in the template for the cells\n        templateParts.push(contents);\n        templateParts.push(\"</div>\");\n        return templateParts.join('');\n    };\n    RowComp.prototype.getCellForCol = function (column) {\n        var cellComp = this.cellComps[column.getColId()];\n        return cellComp ? cellComp.getGui() : null;\n    };\n    RowComp.prototype.afterFlush = function () {\n        if (this.initialised) {\n            return;\n        }\n        this.initialised = true;\n        this.executeProcessRowPostCreateFunc();\n    };\n    RowComp.prototype.executeProcessRowPostCreateFunc = function () {\n        var func = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();\n        if (!func) {\n            return;\n        }\n        var params = {\n            eRow: this.eBodyRow,\n            ePinnedLeftRow: this.ePinnedLeftRow,\n            ePinnedRightRow: this.ePinnedRightRow,\n            node: this.rowNode,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            rowIndex: this.rowNode.rowIndex,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext()\n        };\n        func(params);\n    };\n    RowComp.prototype.getInitialRowTopStyle = function () {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) {\n            return '';\n        }\n        // if sliding in, we take the old row top. otherwise we just set the current row top.\n        var pixels = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop;\n        var afterPaginationPixels = this.applyPaginationOffset(pixels);\n        var afterScalingPixels = this.beans.maxDivHeightScaler.getRealPixelPosition(afterPaginationPixels);\n        var isSuppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n        return isSuppressRowTransform ? \"top: \" + afterScalingPixels + \"px; \" : \"transform: translateY(\" + afterScalingPixels + \"px);\";\n    };\n    RowComp.prototype.getRowBusinessKey = function () {\n        var businessKeyForNodeFunc = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();\n        if (typeof businessKeyForNodeFunc !== 'function') {\n            return;\n        }\n        return businessKeyForNodeFunc(this.rowNode);\n    };\n    RowComp.prototype.areAllContainersReady = function () {\n        return this.rowContainerReadyCount === 3;\n    };\n    RowComp.prototype.lazyCreateCells = function (cols, eRow) {\n        if (!this.active) {\n            return;\n        }\n        var cellTemplatesAndComps = this.createCells(cols);\n        eRow.innerHTML = cellTemplatesAndComps.template;\n        this.callAfterRowAttachedOnCells(cellTemplatesAndComps.cellComps, eRow);\n        this.rowContainerReadyCount++;\n        if (this.areAllContainersReady() && this.refreshNeeded) {\n            this.refreshCells();\n        }\n    };\n    RowComp.prototype.createRowContainer = function (rowContainerComp, cols, callback) {\n        var _this = this;\n        var useAnimationsFrameForCreate = this.useAnimationFrameForCreate;\n        var cellTemplatesAndComps = useAnimationsFrameForCreate ? { cellComps: [], template: '' } : this.createCells(cols);\n        var rowTemplate = this.createTemplate(cellTemplatesAndComps.template);\n        // the RowRenderer is probably inserting many rows. rather than inserting each template one\n        // at a time, the grid inserts all rows together - so the callback here is called by the\n        // rowRenderer when all RowComps are created, then all the HTML is inserted in one go,\n        // and then all the callbacks are called. this is NOT done in an animation frame.\n        rowContainerComp.appendRowTemplate(rowTemplate, function () {\n            var eRow = rowContainerComp.getRowElement(_this.getCompId());\n            _this.afterRowAttached(rowContainerComp, eRow);\n            callback(eRow);\n            if (useAnimationsFrameForCreate) {\n                _this.beans.taskQueue.addP1Task(_this.lazyCreateCells.bind(_this, cols, eRow), _this.rowNode.rowIndex);\n            }\n            else {\n                _this.callAfterRowAttachedOnCells(cellTemplatesAndComps.cellComps, eRow);\n                _this.rowContainerReadyCount = 3;\n            }\n        });\n    };\n    RowComp.prototype.createChildScopeOrNull = function (data) {\n        var isAngularCompileRows = this.beans.gridOptionsWrapper.isAngularCompileRows();\n        if (!isAngularCompileRows) {\n            return null;\n        }\n        var newChildScope = this.parentScope.$new();\n        newChildScope.data = __assign({}, data);\n        newChildScope.rowNode = this.rowNode;\n        newChildScope.context = this.beans.gridOptionsWrapper.getContext();\n        this.addDestroyFunc(function () {\n            newChildScope.$destroy();\n            newChildScope.data = null;\n            newChildScope.rowNode = null;\n            newChildScope.context = null;\n        });\n        return newChildScope;\n    };\n    RowComp.prototype.setupRowContainers = function () {\n        var isFullWidthCellFunc = this.beans.gridOptionsWrapper.getIsFullWidthCellFunc();\n        var isFullWidthCell = isFullWidthCellFunc ? isFullWidthCellFunc(this.rowNode) : false;\n        var isDetailCell = this.beans.doingMasterDetail && this.rowNode.detail;\n        var pivotMode = this.beans.columnController.isPivotMode();\n        // we only use full width for groups, not footers. it wouldn't make sense to include footers if not looking\n        // for totals. if users complain about this, then we should introduce a new property 'footerUseEntireRow'\n        // so each can be set independently (as a customer complained about footers getting full width, hence\n        // introducing this logic)\n        var isGroupRow = this.rowNode.group && !this.rowNode.footer;\n        var isFullWidthGroup = isGroupRow && this.beans.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n        if (this.rowNode.stub) {\n            this.createFullWidthRows(RowComp.LOADING_CELL_RENDERER, RowComp.LOADING_CELL_RENDERER_COMP_NAME);\n        }\n        else if (isDetailCell) {\n            this.createFullWidthRows(RowComp.DETAIL_CELL_RENDERER, RowComp.DETAIL_CELL_RENDERER_COMP_NAME);\n        }\n        else if (isFullWidthCell) {\n            this.createFullWidthRows(RowComp.FULL_WIDTH_CELL_RENDERER, null);\n        }\n        else if (isFullWidthGroup) {\n            this.createFullWidthRows(RowComp.GROUP_ROW_RENDERER, RowComp.GROUP_ROW_RENDERER_COMP_NAME);\n        }\n        else {\n            this.setupNormalRowContainers();\n        }\n    };\n    RowComp.prototype.setupNormalRowContainers = function () {\n        var _this = this;\n        var centerCols;\n        var leftCols;\n        var rightCols;\n        if (this.printLayout) {\n            centerCols = this.beans.columnController.getAllDisplayedColumns();\n            leftCols = [];\n            rightCols = [];\n        }\n        else {\n            centerCols = this.beans.columnController.getAllDisplayedCenterVirtualColumnsForRow(this.rowNode);\n            leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n            rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n        }\n        this.createRowContainer(this.bodyContainerComp, centerCols, function (eRow) { return _this.eBodyRow = eRow; });\n        this.createRowContainer(this.pinnedRightContainerComp, rightCols, function (eRow) { return _this.ePinnedRightRow = eRow; });\n        this.createRowContainer(this.pinnedLeftContainerComp, leftCols, function (eRow) { return _this.ePinnedLeftRow = eRow; });\n    };\n    RowComp.prototype.createFullWidthRows = function (type, name) {\n        var _this = this;\n        this.fullWidthRow = true;\n        if (this.embedFullWidth) {\n            this.createFullWidthRowContainer(this.bodyContainerComp, null, null, type, name, function (eRow) {\n                _this.eFullWidthRowBody = eRow;\n            }, function (cellRenderer) {\n                _this.fullWidthRowComponentBody = cellRenderer;\n            });\n            // printLayout doesn't put components into the pinned sections\n            if (!this.printLayout) {\n                this.createFullWidthRowContainer(this.pinnedLeftContainerComp, column_1.Column.PINNED_LEFT, 'ag-cell-last-left-pinned', type, name, function (eRow) {\n                    _this.eFullWidthRowLeft = eRow;\n                }, function (cellRenderer) {\n                    _this.fullWidthRowComponentLeft = cellRenderer;\n                });\n                this.createFullWidthRowContainer(this.pinnedRightContainerComp, column_1.Column.PINNED_RIGHT, 'ag-cell-first-right-pinned', type, name, function (eRow) {\n                    _this.eFullWidthRowRight = eRow;\n                }, function (cellRenderer) {\n                    _this.fullWidthRowComponentRight = cellRenderer;\n                });\n            }\n        }\n        else {\n            // otherwise we add to the fullWidth container as normal\n            // let previousFullWidth = ensureDomOrder ? this.lastPlacedElements.eFullWidth : null;\n            this.createFullWidthRowContainer(this.fullWidthContainerComp, null, null, type, name, function (eRow) {\n                _this.eFullWidthRow = eRow;\n            }, function (cellRenderer) {\n                _this.fullWidthRowComponent = cellRenderer;\n            });\n        }\n    };\n    RowComp.prototype.setAnimateFlags = function (animateIn) {\n        if (animateIn) {\n            var oldRowTopExists = utils_1._.exists(this.rowNode.oldRowTop);\n            // if the row had a previous position, we slide it in (animate row top)\n            this.slideRowIn = oldRowTopExists;\n            // if the row had no previous position, we fade it in (animate\n            this.fadeRowIn = !oldRowTopExists;\n        }\n        else {\n            this.slideRowIn = false;\n            this.fadeRowIn = false;\n        }\n    };\n    RowComp.prototype.isEditing = function () {\n        return this.editingRow;\n    };\n    RowComp.prototype.stopRowEditing = function (cancel) {\n        this.stopEditing(cancel);\n    };\n    RowComp.prototype.isFullWidth = function () {\n        return this.fullWidthRow;\n    };\n    RowComp.prototype.refreshFullWidth = function () {\n        var _this = this;\n        // returns 'true' if refresh succeeded\n        var tryRefresh = function (eRow, eCellComp, pinned) {\n            if (!eRow || !eCellComp) {\n                // no refresh needed\n                return true;\n            }\n            if (!eCellComp.refresh) {\n                // no refresh method present, so can't refresh, hard refresh needed\n                return false;\n            }\n            var params = _this.createFullWidthParams(eRow, pinned);\n            var refreshSucceeded = eCellComp.refresh(params);\n            return refreshSucceeded;\n        };\n        var normalSuccess = tryRefresh(this.eFullWidthRow, this.fullWidthRowComponent, null);\n        var bodySuccess = tryRefresh(this.eFullWidthRowBody, this.fullWidthRowComponentBody, null);\n        var leftSuccess = tryRefresh(this.eFullWidthRowLeft, this.fullWidthRowComponentLeft, column_1.Column.PINNED_LEFT);\n        var rightSuccess = tryRefresh(this.eFullWidthRowRight, this.fullWidthRowComponentRight, column_1.Column.PINNED_RIGHT);\n        var allFullWidthRowsRefreshed = normalSuccess && bodySuccess && leftSuccess && rightSuccess;\n        return allFullWidthRowsRefreshed;\n    };\n    RowComp.prototype.addListeners = function () {\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_EXPANDED_CHANGED, this.onExpandedChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this));\n        var eventService = this.beans.eventService;\n        this.addDestroyableEventListener(eventService, events_1.Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n        this.addDestroyableEventListener(eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addDestroyableEventListener(eventService, events_1.Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addDestroyableEventListener(eventService, events_1.Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        this.addDestroyableEventListener(eventService, events_1.Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n        this.addDestroyableEventListener(eventService, events_1.Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n        this.addDestroyableEventListener(eventService, events_1.Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n        this.addDestroyableEventListener(eventService, events_1.Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n        this.addListenersForCellComps();\n    };\n    RowComp.prototype.addListenersForCellComps = function () {\n        var _this = this;\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_ROW_INDEX_CHANGED, function () {\n            _this.forEachCellComp(function (cellComp) { return cellComp.onRowIndexChanged(); });\n        });\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_CELL_CHANGED, function (event) {\n            _this.forEachCellComp(function (cellComp) { return cellComp.onCellChanged(event); });\n        });\n    };\n    // when grid columns change, then all cells should be cleaned out,\n    // as the new columns could have same id as the previous columns and may conflict\n    RowComp.prototype.onGridColumnsChanged = function () {\n        this.removeRenderedCells(Object.keys(this.cellComps));\n    };\n    RowComp.prototype.onRowNodeDataChanged = function (event) {\n        // if this is an update, we want to refresh, as this will allow the user to put in a transition\n        // into the cellRenderer refresh method. otherwise this might be completely new data, in which case\n        // we will want to completely replace the cells\n        this.forEachCellComp(function (cellComp) {\n            return cellComp.refreshCell({\n                suppressFlash: !event.update,\n                newData: !event.update\n            });\n        });\n        // check for selected also, as this could be after lazy loading of the row data, in which case\n        // the id might of just gotten set inside the row and the row selected state may of changed\n        // as a result. this is what happens when selected rows are loaded in virtual pagination.\n        // - niall note - since moving to the stub component, this may no longer be true, as replacing\n        // the stub component now replaces the entire row\n        this.onRowSelected();\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    };\n    RowComp.prototype.onRowNodeCellChanged = function (event) {\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    };\n    RowComp.prototype.postProcessCss = function () {\n        this.postProcessStylesFromGridOptions();\n        this.postProcessClassesFromGridOptions();\n        this.postProcessRowClassRules();\n        this.postProcessRowDragging();\n    };\n    RowComp.prototype.onRowNodeDraggingChanged = function () {\n        this.postProcessRowDragging();\n    };\n    RowComp.prototype.postProcessRowDragging = function () {\n        var dragging = this.rowNode.dragging;\n        this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-dragging', dragging); });\n    };\n    RowComp.prototype.onExpandedChanged = function () {\n        var rowNode = this.rowNode;\n        this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-group-expanded', rowNode.expanded); });\n        this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-group-contracted', !rowNode.expanded); });\n    };\n    RowComp.prototype.onDisplayedColumnsChanged = function () {\n        if (this.fullWidthRow) {\n            return;\n        }\n        this.refreshCells();\n    };\n    RowComp.prototype.destroyFullWidthComponents = function () {\n        if (this.fullWidthRowComponent) {\n            if (this.fullWidthRowComponent.destroy) {\n                this.fullWidthRowComponent.destroy();\n            }\n            this.fullWidthRowComponent = null;\n        }\n        if (this.fullWidthRowComponentBody) {\n            if (this.fullWidthRowComponentBody.destroy) {\n                this.fullWidthRowComponentBody.destroy();\n            }\n            this.fullWidthRowComponent = null;\n        }\n        if (this.fullWidthRowComponentLeft) {\n            if (this.fullWidthRowComponentLeft.destroy) {\n                this.fullWidthRowComponentLeft.destroy();\n            }\n            this.fullWidthRowComponentLeft = null;\n        }\n        if (this.fullWidthRowComponentRight) {\n            if (this.fullWidthRowComponentRight.destroy) {\n                this.fullWidthRowComponentRight.destroy();\n            }\n            this.fullWidthRowComponent = null;\n        }\n    };\n    RowComp.prototype.getContainerForCell = function (pinnedType) {\n        switch (pinnedType) {\n            case column_1.Column.PINNED_LEFT: return this.ePinnedLeftRow;\n            case column_1.Column.PINNED_RIGHT: return this.ePinnedRightRow;\n            default: return this.eBodyRow;\n        }\n    };\n    RowComp.prototype.onVirtualColumnsChanged = function () {\n        if (this.fullWidthRow) {\n            return;\n        }\n        this.refreshCells();\n    };\n    RowComp.prototype.onColumnResized = function () {\n        if (this.fullWidthRow) {\n            return;\n        }\n        this.refreshCells();\n    };\n    RowComp.prototype.refreshCells = function () {\n        if (!this.areAllContainersReady()) {\n            this.refreshNeeded = true;\n            return;\n        }\n        var suppressAnimationFrame = this.beans.gridOptionsWrapper.isSuppressAnimationFrame();\n        var skipAnimationFrame = suppressAnimationFrame || this.printLayout;\n        if (skipAnimationFrame) {\n            this.refreshCellsInAnimationFrame();\n        }\n        else {\n            if (this.columnRefreshPending) {\n                return;\n            }\n            this.beans.taskQueue.addP1Task(this.refreshCellsInAnimationFrame.bind(this), this.rowNode.rowIndex);\n        }\n    };\n    RowComp.prototype.refreshCellsInAnimationFrame = function () {\n        if (!this.active) {\n            return;\n        }\n        this.columnRefreshPending = false;\n        var centerCols;\n        var leftCols;\n        var rightCols;\n        if (this.printLayout) {\n            centerCols = this.beans.columnController.getAllDisplayedColumns();\n            leftCols = [];\n            rightCols = [];\n        }\n        else {\n            centerCols = this.beans.columnController.getAllDisplayedCenterVirtualColumnsForRow(this.rowNode);\n            leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n            rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n        }\n        this.insertCellsIntoContainer(this.eBodyRow, centerCols);\n        this.insertCellsIntoContainer(this.ePinnedLeftRow, leftCols);\n        this.insertCellsIntoContainer(this.ePinnedRightRow, rightCols);\n        var colIdsToRemove = Object.keys(this.cellComps);\n        centerCols.forEach(function (col) { return utils_1._.removeFromArray(colIdsToRemove, col.getId()); });\n        leftCols.forEach(function (col) { return utils_1._.removeFromArray(colIdsToRemove, col.getId()); });\n        rightCols.forEach(function (col) { return utils_1._.removeFromArray(colIdsToRemove, col.getId()); });\n        // we never remove editing cells, as this would cause the cells to loose their values while editing\n        // as the grid is scrolling horizontally.\n        var eligibleToBeRemoved = utils_1._.filter(colIdsToRemove, this.isCellEligibleToBeRemoved.bind(this));\n        // remove old cells from gui, but we don't destroy them, we might use them again\n        this.removeRenderedCells(eligibleToBeRemoved);\n    };\n    RowComp.prototype.removeRenderedCells = function (colIds) {\n        var _this = this;\n        colIds.forEach(function (key) {\n            var cellComp = _this.cellComps[key];\n            // could be old reference, ie removed cell\n            if (utils_1._.missing(cellComp)) {\n                return;\n            }\n            cellComp.detach();\n            cellComp.destroy();\n            _this.cellComps[key] = null;\n        });\n    };\n    RowComp.prototype.isCellEligibleToBeRemoved = function (indexStr) {\n        var displayedColumns = this.beans.columnController.getAllDisplayedColumns();\n        var REMOVE_CELL = true;\n        var KEEP_CELL = false;\n        var renderedCell = this.cellComps[indexStr];\n        if (!renderedCell) {\n            return REMOVE_CELL;\n        }\n        // always remove the cell if it's in the wrong pinned location\n        if (this.isCellInWrongRow(renderedCell)) {\n            return REMOVE_CELL;\n        }\n        // we want to try and keep editing and focused cells\n        var editing = renderedCell.isEditing();\n        var focused = this.beans.focusedCellController.isCellFocused(renderedCell.getCellPosition());\n        var mightWantToKeepCell = editing || focused;\n        if (mightWantToKeepCell) {\n            var column = renderedCell.getColumn();\n            var cellStillDisplayed = displayedColumns.indexOf(column) >= 0;\n            return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\n        }\n        return REMOVE_CELL;\n    };\n    RowComp.prototype.ensureCellInCorrectContainer = function (cellComp) {\n        // for print layout, we always put cells into centre, otherwise we put in correct pinned section\n        if (this.printLayout) {\n            return;\n        }\n        var element = cellComp.getGui();\n        var column = cellComp.getColumn();\n        var pinnedType = column.getPinned();\n        var eContainer = this.getContainerForCell(pinnedType);\n        // if in wrong container, remove it\n        var eOldContainer = cellComp.getParentRow();\n        var inWrongRow = eOldContainer !== eContainer;\n        if (inWrongRow) {\n            // take out from old row\n            if (eOldContainer) {\n                eOldContainer.removeChild(element);\n            }\n            eContainer.appendChild(element);\n            cellComp.setParentRow(eContainer);\n        }\n    };\n    RowComp.prototype.isCellInWrongRow = function (cellComp) {\n        var column = cellComp.getColumn();\n        var rowWeWant = this.getContainerForCell(column.getPinned());\n        // if in wrong container, remove it\n        var oldRow = cellComp.getParentRow();\n        return oldRow !== rowWeWant;\n    };\n    RowComp.prototype.insertCellsIntoContainer = function (eRow, cols) {\n        var _this = this;\n        if (!eRow) {\n            return;\n        }\n        var cellTemplates = [];\n        var newCellComps = [];\n        cols.forEach(function (col) {\n            var colId = col.getId();\n            var existingCell = _this.cellComps[colId];\n            if (existingCell) {\n                _this.ensureCellInCorrectContainer(existingCell);\n            }\n            else {\n                _this.createNewCell(col, eRow, cellTemplates, newCellComps);\n            }\n        });\n        if (cellTemplates.length > 0) {\n            utils_1._.appendHtml(eRow, cellTemplates.join(''));\n            this.callAfterRowAttachedOnCells(newCellComps, eRow);\n        }\n    };\n    RowComp.prototype.addDomData = function (eRowContainer) {\n        var gow = this.beans.gridOptionsWrapper;\n        gow.setDomData(eRowContainer, RowComp.DOM_DATA_KEY_RENDERED_ROW, this);\n        this.addDestroyFunc(function () {\n            gow.setDomData(eRowContainer, RowComp.DOM_DATA_KEY_RENDERED_ROW, null);\n        });\n    };\n    RowComp.prototype.createNewCell = function (col, eContainer, cellTemplates, newCellComps) {\n        var newCellComp = new cellComp_1.CellComp(this.scope, this.beans, col, this.rowNode, this, false, this.printLayout);\n        var cellTemplate = newCellComp.getCreateTemplate();\n        cellTemplates.push(cellTemplate);\n        newCellComps.push(newCellComp);\n        this.cellComps[col.getId()] = newCellComp;\n        newCellComp.setParentRow(eContainer);\n    };\n    RowComp.prototype.onMouseEvent = function (eventName, mouseEvent) {\n        switch (eventName) {\n            case 'dblclick':\n                this.onRowDblClick(mouseEvent);\n                break;\n            case 'click':\n                this.onRowClick(mouseEvent);\n                break;\n        }\n    };\n    RowComp.prototype.createRowEvent = function (type, domEvent) {\n        return {\n            type: type,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            rowIndex: this.rowNode.rowIndex,\n            rowPinned: this.rowNode.rowPinned,\n            context: this.beans.gridOptionsWrapper.getContext(),\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            event: domEvent\n        };\n    };\n    RowComp.prototype.createRowEventWithSource = function (type, domEvent) {\n        var event = this.createRowEvent(type, domEvent);\n        // when first developing this, we included the rowComp in the event.\n        // this seems very weird. so when introducing the event types, i left the 'source'\n        // out of the type, and just include the source in the two places where this event\n        // was fired (rowClicked and rowDoubleClicked). it doesn't make sense for any\n        // users to be using this, as the rowComp isn't an object we expose, so would be\n        // very surprising if a user was using it.\n        event.source = this;\n        return event;\n    };\n    RowComp.prototype.onRowDblClick = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        var agEvent = this.createRowEventWithSource(events_1.Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n        this.beans.eventService.dispatchEvent(agEvent);\n    };\n    RowComp.prototype.onRowClick = function (mouseEvent) {\n        var stop = utils_1._.isStopPropagationForAgGrid(mouseEvent);\n        if (stop) {\n            return;\n        }\n        var agEvent = this.createRowEventWithSource(events_1.Events.EVENT_ROW_CLICKED, mouseEvent);\n        this.beans.eventService.dispatchEvent(agEvent);\n        // ctrlKey for windows, metaKey for Apple\n        var multiSelectKeyPressed = mouseEvent.ctrlKey || mouseEvent.metaKey;\n        var shiftKeyPressed = mouseEvent.shiftKey;\n        if (\n        // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n        // so return if it's a group row\n        this.rowNode.group ||\n            // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,\n            // and we click it, the selection should not change (ie any currently selected row should stay selected)\n            !this.rowNode.selectable ||\n            // we also don't allow selection of pinned rows\n            this.rowNode.rowPinned ||\n            // if no selection method enabled, do nothing\n            !this.beans.gridOptionsWrapper.isRowSelection() ||\n            // if click selection suppressed, do nothing\n            this.beans.gridOptionsWrapper.isSuppressRowClickSelection()) {\n            return;\n        }\n        var multiSelectOnClick = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick();\n        var rowDeselectionWithCtrl = this.beans.gridOptionsWrapper.isRowDeselection();\n        if (this.rowNode.isSelected()) {\n            if (multiSelectOnClick) {\n                this.rowNode.setSelectedParams({ newValue: false });\n            }\n            else if (multiSelectKeyPressed) {\n                if (rowDeselectionWithCtrl) {\n                    this.rowNode.setSelectedParams({ newValue: false });\n                }\n            }\n            else {\n                // selected with no multi key, must make sure anything else is unselected\n                this.rowNode.setSelectedParams({ newValue: true, clearSelection: true });\n            }\n        }\n        else {\n            var clearSelection = multiSelectOnClick ? false : !multiSelectKeyPressed;\n            this.rowNode.setSelectedParams({ newValue: true, clearSelection: clearSelection, rangeSelect: shiftKeyPressed });\n        }\n    };\n    RowComp.prototype.createFullWidthRowContainer = function (rowContainerComp, pinned, extraCssClass, cellRendererType, cellRendererName, eRowCallback, cellRendererCallback) {\n        var _this = this;\n        var rowTemplate = this.createTemplate('', extraCssClass);\n        rowContainerComp.appendRowTemplate(rowTemplate, function () {\n            var eRow = rowContainerComp.getRowElement(_this.getCompId());\n            var params = _this.createFullWidthParams(eRow, pinned);\n            var callback = function (cellRenderer) {\n                if (_this.isAlive()) {\n                    var gui = cellRenderer.getGui();\n                    eRow.appendChild(gui);\n                    cellRendererCallback(cellRenderer);\n                }\n                else {\n                    if (cellRenderer.destroy) {\n                        cellRenderer.destroy();\n                    }\n                }\n            };\n            var res = _this.beans.userComponentFactory.newFullWidthCellRenderer(params, cellRendererType, cellRendererName);\n            if (!res) {\n                console.error('ag-Grid: fullWidthCellRenderer not defined');\n                return;\n            }\n            res.then(callback);\n            _this.afterRowAttached(rowContainerComp, eRow);\n            eRowCallback(eRow);\n            _this.angular1Compile(eRow);\n        });\n    };\n    RowComp.prototype.angular1Compile = function (element) {\n        if (!this.scope) {\n            return;\n        }\n        this.beans.$compile(element)(this.scope);\n    };\n    RowComp.prototype.createFullWidthParams = function (eRow, pinned) {\n        var params = {\n            fullWidth: true,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            value: this.rowNode.key,\n            $scope: this.scope ? this.scope : this.parentScope,\n            $compile: this.beans.$compile,\n            rowIndex: this.rowNode.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            context: this.beans.gridOptionsWrapper.getContext(),\n            // these need to be taken out, as part of 'afterAttached' now\n            eGridCell: eRow,\n            eParentOfValue: eRow,\n            pinned: pinned,\n            addRenderedRowListener: this.addEventListener.bind(this)\n        };\n        return params;\n    };\n    RowComp.prototype.getInitialRowClasses = function (extraCssClass) {\n        var classes = [];\n        var isTreeData = this.beans.gridOptionsWrapper.isTreeData();\n        var rowNode = this.rowNode;\n        if (utils_1._.exists(extraCssClass)) {\n            classes.push(extraCssClass);\n        }\n        classes.push('ag-row');\n        classes.push(this.rowFocused ? 'ag-row-focus' : 'ag-row-no-focus');\n        if (this.fadeRowIn) {\n            classes.push('ag-opacity-zero');\n        }\n        classes.push(this.rowIsEven ? 'ag-row-even' : 'ag-row-odd');\n        if (rowNode.isSelected()) {\n            classes.push('ag-row-selected');\n        }\n        if (rowNode.group) {\n            classes.push('ag-row-group');\n            // if a group, put the level of the group in\n            classes.push('ag-row-level-' + rowNode.level);\n            if (rowNode.footer) {\n                classes.push('ag-row-footer');\n            }\n        }\n        else {\n            // if a leaf, and a parent exists, put a level of the parent, else put level of 0 for top level item\n            classes.push('ag-row-level-' + (rowNode.parent ? (rowNode.parent.level + 1) : '0'));\n        }\n        if (rowNode.stub) {\n            classes.push('ag-row-stub');\n        }\n        if (this.fullWidthRow) {\n            classes.push('ag-full-width-row');\n        }\n        var addExpandedClass = isTreeData ?\n            // if doing tree data, we add the expanded classes if any children, as any node can be a parent\n            rowNode.allChildrenCount :\n            // if normal row grouping, we add expanded classes to groups only\n            rowNode.group && !rowNode.footer;\n        if (addExpandedClass) {\n            classes.push(rowNode.expanded ? 'ag-row-group-expanded' : 'ag-row-group-contracted');\n        }\n        if (rowNode.dragging) {\n            classes.push('ag-row-dragging');\n        }\n        utils_1._.pushAll(classes, this.processClassesFromGridOptions());\n        utils_1._.pushAll(classes, this.preProcessRowClassRules());\n        // we use absolute position unless we are doing print layout\n        classes.push(this.printLayout ? 'ag-row-position-relative' : 'ag-row-position-absolute');\n        this.firstRowOnPage = this.isFirstRowOnPage();\n        this.lastRowOnPage = this.isLastRowOnPage();\n        if (this.firstRowOnPage) {\n            classes.push('ag-row-first');\n        }\n        if (this.lastRowOnPage) {\n            classes.push('ag-row-last');\n        }\n        return classes;\n    };\n    RowComp.prototype.isFirstRowOnPage = function () {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n    };\n    RowComp.prototype.isLastRowOnPage = function () {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n    };\n    RowComp.prototype.onModelUpdated = function () {\n        var newFirst = this.isFirstRowOnPage();\n        var newLast = this.isLastRowOnPage();\n        if (this.firstRowOnPage !== newFirst) {\n            this.firstRowOnPage = newFirst;\n            this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-first', newFirst); });\n        }\n        if (this.lastRowOnPage !== newLast) {\n            this.lastRowOnPage = newLast;\n            this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-last', newLast); });\n        }\n    };\n    RowComp.prototype.preProcessRowClassRules = function () {\n        var res = [];\n        this.processRowClassRules(function (className) {\n            res.push(className);\n        }, function (className) {\n            // not catered for, if creating, no need\n            // to remove class as it was never there\n        });\n        return res;\n    };\n    RowComp.prototype.processRowClassRules = function (onApplicableClass, onNotApplicableClass) {\n        this.beans.stylingService.processClassRules(this.beans.gridOptionsWrapper.rowClassRules(), {\n            value: undefined,\n            colDef: undefined,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            rowIndex: this.rowNode.rowIndex,\n            api: this.beans.gridOptionsWrapper.getApi(),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi(),\n            $scope: this.scope,\n            context: this.beans.gridOptionsWrapper.getContext()\n        }, onApplicableClass, onNotApplicableClass);\n    };\n    RowComp.prototype.stopEditing = function (cancel) {\n        if (cancel === void 0) { cancel = false; }\n        this.forEachCellComp(function (renderedCell) {\n            renderedCell.stopEditing(cancel);\n        });\n        if (!this.editingRow) {\n            return;\n        }\n        if (!cancel) {\n            var event_1 = this.createRowEvent(events_1.Events.EVENT_ROW_VALUE_CHANGED);\n            this.beans.eventService.dispatchEvent(event_1);\n        }\n        this.setEditingRow(false);\n    };\n    RowComp.prototype.setEditingRow = function (value) {\n        this.editingRow = value;\n        this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-editing', value); });\n        var event = value ?\n            this.createRowEvent(events_1.Events.EVENT_ROW_EDITING_STARTED)\n            : this.createRowEvent(events_1.Events.EVENT_ROW_EDITING_STOPPED);\n        this.beans.eventService.dispatchEvent(event);\n    };\n    RowComp.prototype.startRowEditing = function (keyPress, charPress, sourceRenderedCell) {\n        if (keyPress === void 0) { keyPress = null; }\n        if (charPress === void 0) { charPress = null; }\n        if (sourceRenderedCell === void 0) { sourceRenderedCell = null; }\n        // don't do it if already editing\n        if (this.editingRow) {\n            return;\n        }\n        this.forEachCellComp(function (renderedCell) {\n            var cellStartedEdit = renderedCell === sourceRenderedCell;\n            if (cellStartedEdit) {\n                renderedCell.startEditingIfEnabled(keyPress, charPress, cellStartedEdit);\n            }\n            else {\n                renderedCell.startEditingIfEnabled(null, null, cellStartedEdit);\n            }\n        });\n        this.setEditingRow(true);\n    };\n    RowComp.prototype.forEachCellComp = function (callback) {\n        utils_1._.iterateObject(this.cellComps, function (key, cellComp) {\n            if (!cellComp) {\n                return;\n            }\n            callback(cellComp);\n        });\n    };\n    RowComp.prototype.postProcessClassesFromGridOptions = function () {\n        var _this = this;\n        var cssClasses = this.processClassesFromGridOptions();\n        if (!cssClasses || !cssClasses.length) {\n            return;\n        }\n        cssClasses.forEach(function (classStr) {\n            _this.eAllRowContainers.forEach(function (row) { return utils_1._.addCssClass(row, classStr); });\n        });\n    };\n    RowComp.prototype.postProcessRowClassRules = function () {\n        var _this = this;\n        this.processRowClassRules(function (className) {\n            _this.eAllRowContainers.forEach(function (row) { return utils_1._.addCssClass(row, className); });\n        }, function (className) {\n            _this.eAllRowContainers.forEach(function (row) { return utils_1._.removeCssClass(row, className); });\n        });\n    };\n    RowComp.prototype.processClassesFromGridOptions = function () {\n        var res = [];\n        var process = function (rowCls) {\n            if (typeof rowCls === 'string') {\n                res.push(rowCls);\n            }\n            else if (Array.isArray(rowCls)) {\n                rowCls.forEach(function (e) { return res.push(e); });\n            }\n        };\n        // part 1 - rowClass\n        var rowClass = this.beans.gridOptionsWrapper.getRowClass();\n        if (rowClass) {\n            if (typeof rowClass === 'function') {\n                console.warn('ag-Grid: rowClass should not be a function, please use getRowClass instead');\n                return;\n            }\n            process(rowClass);\n        }\n        // part 2 - rowClassFunc\n        var rowClassFunc = this.beans.gridOptionsWrapper.getRowClassFunc();\n        if (rowClassFunc) {\n            var params = {\n                node: this.rowNode,\n                data: this.rowNode.data,\n                rowIndex: this.rowNode.rowIndex,\n                context: this.beans.gridOptionsWrapper.getContext(),\n                api: this.beans.gridOptionsWrapper.getApi()\n            };\n            var rowClassFuncResult = rowClassFunc(params);\n            process(rowClassFuncResult);\n        }\n        return res;\n    };\n    RowComp.prototype.preProcessStylesFromGridOptions = function () {\n        var rowStyles = this.processStylesFromGridOptions();\n        return utils_1._.cssStyleObjectToMarkup(rowStyles);\n    };\n    RowComp.prototype.postProcessStylesFromGridOptions = function () {\n        var rowStyles = this.processStylesFromGridOptions();\n        this.eAllRowContainers.forEach(function (row) { return utils_1._.addStylesToElement(row, rowStyles); });\n    };\n    RowComp.prototype.processStylesFromGridOptions = function () {\n        // part 1 - rowStyle\n        var rowStyle = this.beans.gridOptionsWrapper.getRowStyle();\n        if (rowStyle && typeof rowStyle === 'function') {\n            console.warn('ag-Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead');\n            return;\n        }\n        // part 1 - rowStyleFunc\n        var rowStyleFunc = this.beans.gridOptionsWrapper.getRowStyleFunc();\n        var rowStyleFuncResult;\n        if (rowStyleFunc) {\n            var params = {\n                data: this.rowNode.data,\n                node: this.rowNode,\n                api: this.beans.gridOptionsWrapper.getApi(),\n                context: this.beans.gridOptionsWrapper.getContext(),\n                $scope: this.scope\n            };\n            rowStyleFuncResult = rowStyleFunc(params);\n        }\n        return utils_1._.assign({}, rowStyle, rowStyleFuncResult);\n    };\n    RowComp.prototype.createCells = function (cols) {\n        var _this = this;\n        var templateParts = [];\n        var newCellComps = [];\n        cols.forEach(function (col) {\n            var newCellComp = new cellComp_1.CellComp(_this.scope, _this.beans, col, _this.rowNode, _this, false, _this.printLayout);\n            var cellTemplate = newCellComp.getCreateTemplate();\n            templateParts.push(cellTemplate);\n            newCellComps.push(newCellComp);\n            _this.cellComps[col.getId()] = newCellComp;\n        });\n        var templateAndComps = {\n            template: templateParts.join(''),\n            cellComps: newCellComps\n        };\n        return templateAndComps;\n    };\n    RowComp.prototype.onRowSelected = function () {\n        var selected = this.rowNode.isSelected();\n        this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-selected', selected); });\n    };\n    // called:\n    // + after row created for first time\n    // + after horizontal scroll, so new cells due to column virtualisation\n    RowComp.prototype.callAfterRowAttachedOnCells = function (newCellComps, eRow) {\n        var _this = this;\n        newCellComps.forEach(function (cellComp) {\n            cellComp.setParentRow(eRow);\n            cellComp.afterAttached();\n            // if we are editing the row, then the cell needs to turn\n            // into edit mode\n            if (_this.editingRow) {\n                cellComp.startEditingIfEnabled();\n            }\n        });\n    };\n    RowComp.prototype.afterRowAttached = function (rowContainerComp, eRow) {\n        var _this = this;\n        this.addDomData(eRow);\n        this.removeSecondPassFuncs.push(function () {\n            rowContainerComp.removeRowElement(eRow);\n        });\n        this.removeFirstPassFuncs.push(function () {\n            if (utils_1._.exists(_this.rowNode.rowTop)) {\n                // the row top is updated anyway, however we set it here again\n                // to something more reasonable for the animation - ie if the\n                // row top is 10000px away, the row will flash out, so this\n                // gives it a rounded value, so row animates out more slowly\n                var rowTop = _this.roundRowTopToBounds(_this.rowNode.rowTop);\n                _this.setRowTop(rowTop);\n            }\n            else {\n                utils_1._.addCssClass(eRow, 'ag-opacity-zero');\n            }\n        });\n        this.eAllRowContainers.push(eRow);\n        // adding hover functionality adds listener to this row, so we\n        // do it lazily in an animation frame\n        if (this.useAnimationFrameForCreate) {\n            this.beans.taskQueue.addP2Task(this.addHoverFunctionality.bind(this, eRow));\n        }\n        else {\n            this.addHoverFunctionality(eRow);\n        }\n    };\n    RowComp.prototype.addHoverFunctionality = function (eRow) {\n        var _this = this;\n        // because we use animation frames to do this, it's possible the row no longer exists\n        // by the time we get to add it\n        if (!this.active) {\n            return;\n        }\n        // because mouseenter and mouseleave do not propagate, we cannot listen on the gridPanel\n        // like we do for all the other mouse events.\n        // because of the pinning, we cannot simply add / remove the class based on the eRow. we\n        // have to check all eRow's (body & pinned). so the trick is if any of the rows gets a\n        // mouse hover, it sets such in the rowNode, and then all three reflect the change as\n        // all are listening for event on the row node.\n        // step 1 - add listener, to set flag on row node\n        this.addDestroyableEventListener(eRow, 'mouseenter', function () { return _this.rowNode.onMouseEnter(); });\n        this.addDestroyableEventListener(eRow, 'mouseleave', function () { return _this.rowNode.onMouseLeave(); });\n        // step 2 - listen for changes on row node (which any eRow can trigger)\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_MOUSE_ENTER, function () {\n            // if hover turned off, we don't add the class. we do this here so that if the application\n            // toggles this property mid way, we remove the hover form the last row, but we stop\n            // adding hovers from that point onwards.\n            if (!_this.beans.gridOptionsWrapper.isSuppressRowHoverHighlight()) {\n                utils_1._.addCssClass(eRow, 'ag-row-hover');\n            }\n        });\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_MOUSE_LEAVE, function () {\n            utils_1._.removeCssClass(eRow, 'ag-row-hover');\n        });\n    };\n    // for animation, we don't want to animate entry or exit to a very far away pixel,\n    // otherwise the row would move so fast, it would appear to disappear. so this method\n    // moves the row closer to the viewport if it is far away, so the row slide in / out\n    // at a speed the user can see.\n    RowComp.prototype.roundRowTopToBounds = function (rowTop) {\n        var range = this.beans.gridPanel.getVScrollPosition();\n        var minPixel = this.applyPaginationOffset(range.top, true) - 100;\n        var maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n        return Math.min(Math.max(minPixel, rowTop), maxPixel);\n    };\n    RowComp.prototype.getFrameworkOverrides = function () {\n        return this.beans.frameworkOverrides;\n    };\n    RowComp.prototype.onRowHeightChanged = function () {\n        // check for exists first - if the user is resetting the row height, then\n        // it will be null (or undefined) momentarily until the next time the flatten\n        // stage is called where the row will then update again with a new height\n        if (utils_1._.exists(this.rowNode.rowHeight)) {\n            var heightPx_1 = this.rowNode.rowHeight + \"px\";\n            this.eAllRowContainers.forEach(function (row) { return row.style.height = heightPx_1; });\n        }\n    };\n    RowComp.prototype.addEventListener = function (eventType, listener) {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = events_1.Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('ag-Grid: Since version 11, event renderedRowRemoved is now called ' + events_1.Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        _super.prototype.addEventListener.call(this, eventType, listener);\n    };\n    RowComp.prototype.removeEventListener = function (eventType, listener) {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = events_1.Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('ag-Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called ' + events_1.Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        _super.prototype.removeEventListener.call(this, eventType, listener);\n    };\n    RowComp.prototype.destroy = function (animate) {\n        if (animate === void 0) { animate = false; }\n        _super.prototype.destroy.call(this);\n        this.active = false;\n        // why do we have this method? shouldn't everything below be added as a destroy func beside\n        // the corresponding create logic?\n        this.destroyFullWidthComponents();\n        if (animate) {\n            this.removeFirstPassFuncs.forEach(function (func) { return func(); });\n            this.removeSecondPassFuncs.push(this.destroyContainingCells.bind(this));\n        }\n        else {\n            this.destroyContainingCells();\n            // we are not animating, so execute the second stage of removal now.\n            // we call getAndClear, so that they are only called once\n            var delayedDestroyFunctions = this.getAndClearDelayedDestroyFunctions();\n            delayedDestroyFunctions.forEach(function (func) { return func(); });\n        }\n        var event = this.createRowEvent(events_1.Events.EVENT_VIRTUAL_ROW_REMOVED);\n        this.dispatchEvent(event);\n        this.beans.eventService.dispatchEvent(event);\n    };\n    RowComp.prototype.destroyContainingCells = function () {\n        this.forEachCellComp(function (renderedCell) { return renderedCell.destroy(); });\n        this.destroyFullWidthComponents();\n    };\n    // we clear so that the functions are never executed twice\n    RowComp.prototype.getAndClearDelayedDestroyFunctions = function () {\n        var result = this.removeSecondPassFuncs;\n        this.removeSecondPassFuncs = [];\n        return result;\n    };\n    RowComp.prototype.onCellFocusChanged = function () {\n        var rowFocused = this.beans.focusedCellController.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\n        if (rowFocused !== this.rowFocused) {\n            this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-focus', rowFocused); });\n            this.eAllRowContainers.forEach(function (row) { return utils_1._.addOrRemoveCssClass(row, 'ag-row-no-focus', !rowFocused); });\n            this.rowFocused = rowFocused;\n        }\n        // if we are editing, then moving the focus out of a row will stop editing\n        if (!rowFocused && this.editingRow) {\n            this.stopEditing(false);\n        }\n    };\n    RowComp.prototype.onPaginationChanged = function () {\n        var currentPage = this.beans.paginationProxy.getCurrentPage();\n        // it is possible this row is in the new page, but the page number has changed, which means\n        // it needs to reposition itself relative to the new page\n        if (this.paginationPage !== currentPage) {\n            this.paginationPage = currentPage;\n            this.onTopChanged();\n        }\n    };\n    RowComp.prototype.onTopChanged = function () {\n        this.setRowTop(this.rowNode.rowTop);\n    };\n    // applies pagination offset, eg if on second page, and page height is 500px, then removes\n    // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n    // reverse will take the offset away rather than add.\n    RowComp.prototype.applyPaginationOffset = function (topPx, reverse) {\n        if (reverse === void 0) { reverse = false; }\n        if (this.rowNode.isRowPinned()) {\n            return topPx;\n        }\n        var pixelOffset = this.beans.paginationProxy.getPixelOffset();\n        var multiplier = reverse ? 1 : -1;\n        return topPx + (pixelOffset * multiplier);\n    };\n    RowComp.prototype.setRowTop = function (pixels) {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) {\n            return;\n        }\n        // need to make sure rowTop is not null, as this can happen if the node was once\n        // visible (ie parent group was expanded) but is now not visible\n        if (utils_1._.exists(pixels)) {\n            var afterPaginationPixels = this.applyPaginationOffset(pixels);\n            var afterScalingPixels = this.beans.maxDivHeightScaler.getRealPixelPosition(afterPaginationPixels);\n            var topPx_1 = afterScalingPixels + \"px\";\n            if (this.beans.gridOptionsWrapper.isSuppressRowTransform()) {\n                this.eAllRowContainers.forEach(function (row) { return row.style.top = topPx_1; });\n            }\n            else {\n                this.eAllRowContainers.forEach(function (row) { return row.style.transform = \"translateY(\" + topPx_1 + \")\"; });\n            }\n        }\n    };\n    // we clear so that the functions are never executed twice\n    RowComp.prototype.getAndClearNextVMTurnFunctions = function () {\n        var result = this.createSecondPassFuncs;\n        this.createSecondPassFuncs = [];\n        return result;\n    };\n    RowComp.prototype.getRowNode = function () {\n        return this.rowNode;\n    };\n    RowComp.prototype.getRenderedCellForColumn = function (column) {\n        var _this = this;\n        var cellComp = this.cellComps[column.getColId()];\n        if (cellComp) {\n            return cellComp;\n        }\n        var spanList = Object.keys(this.cellComps)\n            .map(function (name) { return _this.cellComps[name]; })\n            .filter(function (cmp) { return cmp && cmp.getColSpanningList().indexOf(column) !== -1; });\n        return spanList.length ? spanList[0] : undefined;\n    };\n    RowComp.prototype.onRowIndexChanged = function () {\n        this.onCellFocusChanged();\n        this.updateRowIndexes();\n    };\n    RowComp.prototype.updateRowIndexes = function () {\n        var rowIndexStr = this.rowNode.getRowIndexString();\n        var rowIsEven = this.rowNode.rowIndex % 2 === 0;\n        var rowIsEvenChanged = this.rowIsEven !== rowIsEven;\n        if (rowIsEvenChanged) {\n            this.rowIsEven = rowIsEven;\n        }\n        this.eAllRowContainers.forEach(function (eRow) {\n            eRow.setAttribute('row-index', rowIndexStr);\n            if (!rowIsEvenChanged) {\n                return;\n            }\n            utils_1._.addOrRemoveCssClass(eRow, 'ag-row-even', rowIsEven);\n            utils_1._.addOrRemoveCssClass(eRow, 'ag-row-odd', !rowIsEven);\n        });\n    };\n    RowComp.prototype.ensureDomOrder = function () {\n        var sides = [\n            {\n                el: this.getBodyRowElement(),\n                ct: this.bodyContainerComp\n            },\n            {\n                el: this.getPinnedLeftRowElement(),\n                ct: this.pinnedLeftContainerComp\n            }, {\n                el: this.getPinnedRightRowElement(),\n                ct: this.pinnedRightContainerComp\n            }, {\n                el: this.getFullWidthRowElement(),\n                ct: this.fullWidthContainerComp\n            }\n        ];\n        sides.forEach(function (side) {\n            if (!side.el) {\n                return;\n            }\n            side.ct.ensureDomOrder(side.el);\n        });\n    };\n    // returns the pinned left container, either the normal one, or the embedded full with one if exists\n    RowComp.prototype.getPinnedLeftRowElement = function () {\n        return this.ePinnedLeftRow ? this.ePinnedLeftRow : this.eFullWidthRowLeft;\n    };\n    // returns the pinned right container, either the normal one, or the embedded full with one if exists\n    RowComp.prototype.getPinnedRightRowElement = function () {\n        return this.ePinnedRightRow ? this.ePinnedRightRow : this.eFullWidthRowRight;\n    };\n    // returns the body container, either the normal one, or the embedded full with one if exists\n    RowComp.prototype.getBodyRowElement = function () {\n        return this.eBodyRow ? this.eBodyRow : this.eFullWidthRowBody;\n    };\n    // returns the full width container\n    RowComp.prototype.getFullWidthRowElement = function () {\n        return this.eFullWidthRow;\n    };\n    RowComp.DOM_DATA_KEY_RENDERED_ROW = 'renderedRow';\n    RowComp.FULL_WIDTH_CELL_RENDERER = 'fullWidthCellRenderer';\n    RowComp.GROUP_ROW_RENDERER = 'groupRowRenderer';\n    RowComp.GROUP_ROW_RENDERER_COMP_NAME = 'agGroupRowRenderer';\n    RowComp.LOADING_CELL_RENDERER = 'loadingCellRenderer';\n    RowComp.LOADING_CELL_RENDERER_COMP_NAME = 'agLoadingCellRenderer';\n    RowComp.DETAIL_CELL_RENDERER = 'detailCellRenderer';\n    RowComp.DETAIL_CELL_RENDERER_COMP_NAME = 'agDetailCellRenderer';\n    return RowComp;\n}(component_1.Component));\nexports.RowComp = RowComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../widgets/component\");\nvar rowNode_1 = require(\"../entities/rowNode\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar events_1 = require(\"../events\");\nvar eventService_1 = require(\"../eventService\");\nvar gridApi_1 = require(\"../gridApi\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar utils_1 = require(\"../utils\");\nvar CheckboxSelectionComponent = /** @class */ (function (_super) {\n    __extends(CheckboxSelectionComponent, _super);\n    function CheckboxSelectionComponent() {\n        return _super.call(this, \"<span class=\\\"ag-selection-checkbox\\\" unselectable=\\\"on\\\"/>\") || this;\n    }\n    CheckboxSelectionComponent.prototype.createAndAddIcons = function () {\n        this.eCheckedIcon = utils_1._.createIconNoSpan('checkboxChecked', this.gridOptionsWrapper, this.column);\n        this.eUncheckedIcon = utils_1._.createIconNoSpan('checkboxUnchecked', this.gridOptionsWrapper, this.column);\n        this.eIndeterminateIcon = utils_1._.createIconNoSpan('checkboxIndeterminate', this.gridOptionsWrapper, this.column);\n        var element = this.getGui();\n        element.appendChild(this.eCheckedIcon);\n        element.appendChild(this.eUncheckedIcon);\n        element.appendChild(this.eIndeterminateIcon);\n    };\n    CheckboxSelectionComponent.prototype.onDataChanged = function () {\n        // when rows are loaded for the second time, this can impact the selection, as a row\n        // could be loaded as already selected (if user scrolls down, and then up again).\n        this.onSelectionChanged();\n    };\n    CheckboxSelectionComponent.prototype.onSelectableChanged = function () {\n        this.showOrHideSelect();\n    };\n    CheckboxSelectionComponent.prototype.onSelectionChanged = function () {\n        var state = this.rowNode.isSelected();\n        utils_1._.setVisible(this.eCheckedIcon, state === true);\n        utils_1._.setVisible(this.eUncheckedIcon, state === false);\n        utils_1._.setVisible(this.eIndeterminateIcon, typeof state !== 'boolean');\n    };\n    CheckboxSelectionComponent.prototype.onCheckedClicked = function () {\n        var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n        var updatedCount = this.rowNode.setSelectedParams({ newValue: false, groupSelectsFiltered: groupSelectsFiltered });\n        return updatedCount;\n    };\n    CheckboxSelectionComponent.prototype.onUncheckedClicked = function (event) {\n        var groupSelectsFiltered = this.gridOptionsWrapper.isGroupSelectsFiltered();\n        var updatedCount = this.rowNode.setSelectedParams({ newValue: true, rangeSelect: event.shiftKey, groupSelectsFiltered: groupSelectsFiltered });\n        return updatedCount;\n    };\n    CheckboxSelectionComponent.prototype.onIndeterminateClicked = function (event) {\n        var result = this.onUncheckedClicked(event);\n        if (result === 0) {\n            this.onCheckedClicked();\n        }\n    };\n    CheckboxSelectionComponent.prototype.init = function (params) {\n        this.rowNode = params.rowNode;\n        this.column = params.column;\n        this.createAndAddIcons();\n        this.onSelectionChanged();\n        // we don't want the row clicked event to fire when selecting the checkbox, otherwise the row\n        // would possibly get selected twice\n        this.addGuiEventListener('click', function (event) { return utils_1._.stopPropagationForAgGrid(event); });\n        // likewise we don't want double click on this icon to open a group\n        this.addGuiEventListener('dblclick', function (event) { return utils_1._.stopPropagationForAgGrid(event); });\n        this.addDestroyableEventListener(this.eCheckedIcon, 'click', this.onCheckedClicked.bind(this));\n        this.addDestroyableEventListener(this.eUncheckedIcon, 'click', this.onUncheckedClicked.bind(this));\n        this.addDestroyableEventListener(this.eIndeterminateIcon, 'click', this.onIndeterminateClicked.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DATA_CHANGED, this.onDataChanged.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));\n        this.isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();\n        var checkboxVisibleIsDynamic = this.isRowSelectableFunc || this.checkboxCallbackExists();\n        if (checkboxVisibleIsDynamic) {\n            this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelect.bind(this));\n            this.showOrHideSelect();\n        }\n    };\n    CheckboxSelectionComponent.prototype.showOrHideSelect = function () {\n        // if the isRowSelectable() is not provided the row node is selectable by default\n        var selectable = this.rowNode.selectable;\n        // checkboxSelection callback is deemed a legacy solution however we will still consider it's result.\n        // If selectable, then also check the colDef callback. if not selectable, this it short circuits - no need\n        // to call the colDef callback.\n        if (selectable && this.checkboxCallbackExists()) {\n            selectable = this.column.isCellCheckboxSelection(this.rowNode);\n        }\n        // show checkbox if both conditions are true\n        this.setVisible(selectable);\n    };\n    CheckboxSelectionComponent.prototype.checkboxCallbackExists = function () {\n        // column will be missing if groupUseEntireRow=true\n        var colDef = this.column ? this.column.getColDef() : null;\n        return colDef && typeof colDef.checkboxSelection === 'function';\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], CheckboxSelectionComponent.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], CheckboxSelectionComponent.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], CheckboxSelectionComponent.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], CheckboxSelectionComponent.prototype, \"columnApi\", void 0);\n    return CheckboxSelectionComponent;\n}(component_1.Component));\nexports.CheckboxSelectionComponent = CheckboxSelectionComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar popupComponent_1 = require(\"../../widgets/popupComponent\");\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar utils_1 = require(\"../../utils\");\nvar PopupEditorWrapper = /** @class */ (function (_super) {\n    __extends(PopupEditorWrapper, _super);\n    function PopupEditorWrapper(cellEditor) {\n        var _this = _super.call(this, \"<div class=\\\"ag-popup-editor\\\" tabindex=\\\"-1\\\"/>\") || this;\n        _this.getGuiCalledOnChild = false;\n        _this.cellEditor = cellEditor;\n        return _this;\n    }\n    PopupEditorWrapper.prototype.onKeyDown = function (event) {\n        if (!utils_1._.isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, event, this.params.node, this.params.column, true)) {\n            this.params.onKeyDown(event);\n        }\n    };\n    PopupEditorWrapper.prototype.getGui = function () {\n        // we call getGui() on child here (rather than in the constructor)\n        // as we should wait for 'init' to be called on child first.\n        if (!this.getGuiCalledOnChild) {\n            this.appendChild(this.cellEditor.getGui());\n            this.getGuiCalledOnChild = true;\n        }\n        return _super.prototype.getGui.call(this);\n    };\n    PopupEditorWrapper.prototype.init = function (params) {\n        var _this = this;\n        this.params = params;\n        this.gridOptionsWrapper.setDomData(this.getGui(), PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER, true);\n        this.addDestroyFunc(function () {\n            if (_this.cellEditor.destroy) {\n                _this.cellEditor.destroy();\n            }\n        });\n        this.addDestroyableEventListener(\n        // this needs to be 'super' and not 'this' as if we call 'this',\n        // it ends up called 'getGui()' on the child before 'init' was called,\n        // which is not good\n        _super.prototype.getGui.call(this), 'keydown', this.onKeyDown.bind(this));\n    };\n    PopupEditorWrapper.prototype.afterGuiAttached = function () {\n        if (this.cellEditor.afterGuiAttached) {\n            this.cellEditor.afterGuiAttached();\n        }\n    };\n    PopupEditorWrapper.prototype.getValue = function () {\n        return this.cellEditor.getValue();\n    };\n    PopupEditorWrapper.prototype.isCancelBeforeStart = function () {\n        if (this.cellEditor.isCancelBeforeStart) {\n            return this.cellEditor.isCancelBeforeStart();\n        }\n    };\n    PopupEditorWrapper.prototype.isCancelAfterEnd = function () {\n        if (this.cellEditor.isCancelAfterEnd) {\n            return this.cellEditor.isCancelAfterEnd();\n        }\n    };\n    PopupEditorWrapper.prototype.focusIn = function () {\n        if (this.cellEditor.focusIn) {\n            this.cellEditor.focusIn();\n        }\n    };\n    PopupEditorWrapper.prototype.focusOut = function () {\n        if (this.cellEditor.focusOut) {\n            this.cellEditor.focusOut();\n        }\n    };\n    PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER = 'popupEditorWrapper';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], PopupEditorWrapper.prototype, \"gridOptionsWrapper\", void 0);\n    return PopupEditorWrapper;\n}(popupComponent_1.PopupComponent));\nexports.PopupEditorWrapper = PopupEditorWrapper;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar constants_1 = require(\"./constants\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar pinnedRowModel_1 = require(\"./rowModels/pinnedRowModel\");\nvar utils_1 = require(\"./utils\");\nvar CellNavigationService = /** @class */ (function () {\n    function CellNavigationService() {\n    }\n    // returns null if no cell to focus on, ie at the end of the grid\n    CellNavigationService.prototype.getNextCellToFocus = function (key, lastCellToFocus) {\n        // starting with the provided cell, we keep moving until we find a cell we can\n        // focus on.\n        var pointer = lastCellToFocus;\n        var finished = false;\n        // finished will be true when either:\n        // a) cell found that we can focus on\n        // b) run out of cells (ie the method returns null)\n        while (!finished) {\n            switch (key) {\n                case constants_1.Constants.KEY_UP:\n                    pointer = this.getCellAbove(pointer);\n                    break;\n                case constants_1.Constants.KEY_DOWN:\n                    pointer = this.getCellBelow(pointer);\n                    break;\n                case constants_1.Constants.KEY_RIGHT:\n                    if (this.gridOptionsWrapper.isEnableRtl()) {\n                        pointer = this.getCellToLeft(pointer);\n                    }\n                    else {\n                        pointer = this.getCellToRight(pointer);\n                    }\n                    break;\n                case constants_1.Constants.KEY_LEFT:\n                    if (this.gridOptionsWrapper.isEnableRtl()) {\n                        pointer = this.getCellToRight(pointer);\n                    }\n                    else {\n                        pointer = this.getCellToLeft(pointer);\n                    }\n                    break;\n                default:\n                    pointer = null;\n                    console.warn('ag-Grid: unknown key for navigation ' + key);\n                    break;\n            }\n            if (pointer) {\n                finished = this.isCellGoodToFocusOn(pointer);\n            }\n            else {\n                finished = true;\n            }\n        }\n        return pointer;\n    };\n    CellNavigationService.prototype.isCellGoodToFocusOn = function (gridCell) {\n        var column = gridCell.column;\n        var rowNode;\n        switch (gridCell.rowPinned) {\n            case constants_1.Constants.PINNED_TOP:\n                rowNode = this.pinnedRowModel.getPinnedTopRow(gridCell.rowIndex);\n                break;\n            case constants_1.Constants.PINNED_BOTTOM:\n                rowNode = this.pinnedRowModel.getPinnedBottomRow(gridCell.rowIndex);\n                break;\n            default:\n                rowNode = this.rowModel.getRow(gridCell.rowIndex);\n                break;\n        }\n        var suppressNavigable = column.isSuppressNavigable(rowNode);\n        return !suppressNavigable;\n    };\n    CellNavigationService.prototype.getCellToLeft = function (lastCell) {\n        if (!lastCell) {\n            return null;\n        }\n        var colToLeft = this.columnController.getDisplayedColBefore(lastCell.column);\n        if (!colToLeft) {\n            return null;\n        }\n        return {\n            rowIndex: lastCell.rowIndex,\n            column: colToLeft,\n            rowPinned: lastCell.rowPinned\n        };\n    };\n    CellNavigationService.prototype.getCellToRight = function (lastCell) {\n        if (!lastCell) {\n            return null;\n        }\n        var colToRight = this.columnController.getDisplayedColAfter(lastCell.column);\n        // if already on right, do nothing\n        if (!colToRight) {\n            return null;\n        }\n        return {\n            rowIndex: lastCell.rowIndex,\n            column: colToRight,\n            rowPinned: lastCell.rowPinned\n        };\n    };\n    CellNavigationService.prototype.getRowBelow = function (rowPosition) {\n        // if already on top row, do nothing\n        var index = rowPosition.rowIndex;\n        var pinned = rowPosition.rowPinned;\n        if (this.isLastRowInContainer(rowPosition)) {\n            switch (pinned) {\n                case constants_1.Constants.PINNED_BOTTOM:\n                    // never any rows after pinned bottom\n                    return null;\n                case constants_1.Constants.PINNED_TOP:\n                    // if on last row of pinned top, then next row is main body (if rows exist),\n                    // otherwise it's the pinned bottom\n                    if (this.rowModel.isRowsToRender()) {\n                        return { rowIndex: 0, rowPinned: null };\n                    }\n                    else if (this.pinnedRowModel.isRowsToRender(constants_1.Constants.PINNED_BOTTOM)) {\n                        return { rowIndex: 0, rowPinned: constants_1.Constants.PINNED_BOTTOM };\n                    }\n                    return null;\n                default:\n                    // if in the main body, then try pinned bottom, otherwise return nothing\n                    if (this.pinnedRowModel.isRowsToRender(constants_1.Constants.PINNED_BOTTOM)) {\n                        return { rowIndex: 0, rowPinned: constants_1.Constants.PINNED_BOTTOM };\n                    }\n                    return null;\n            }\n        }\n        return { rowIndex: index + 1, rowPinned: pinned };\n    };\n    CellNavigationService.prototype.getCellBelow = function (lastCell) {\n        if (!lastCell) {\n            return null;\n        }\n        var rowBelow = this.getRowBelow(lastCell);\n        if (rowBelow) {\n            return {\n                rowIndex: rowBelow.rowIndex,\n                column: lastCell.column,\n                rowPinned: rowBelow.rowPinned\n            };\n        }\n        return null;\n    };\n    CellNavigationService.prototype.isLastRowInContainer = function (rowPosition) {\n        var pinned = rowPosition.rowPinned;\n        var index = rowPosition.rowIndex;\n        if (pinned === constants_1.Constants.PINNED_TOP) {\n            var lastTopIndex = this.pinnedRowModel.getPinnedTopRowData().length - 1;\n            return lastTopIndex <= index;\n        }\n        else if (pinned === constants_1.Constants.PINNED_BOTTOM) {\n            var lastBottomIndex = this.pinnedRowModel.getPinnedBottomRowData().length - 1;\n            return lastBottomIndex <= index;\n        }\n        var lastBodyIndex = this.rowModel.getPageLastRow();\n        return lastBodyIndex <= index;\n    };\n    CellNavigationService.prototype.getRowAbove = function (rowIndex, pinned) {\n        // if already on top row, do nothing\n        if (rowIndex === 0) {\n            if (pinned === constants_1.Constants.PINNED_TOP) {\n                return null;\n            }\n            else if (!pinned) {\n                if (this.pinnedRowModel.isRowsToRender(constants_1.Constants.PINNED_TOP)) {\n                    return this.getLastFloatingTopRow();\n                }\n                return null;\n            }\n            else {\n                // last floating bottom\n                if (this.rowModel.isRowsToRender()) {\n                    return this.getLastBodyCell();\n                }\n                else if (this.pinnedRowModel.isRowsToRender(constants_1.Constants.PINNED_TOP)) {\n                    return this.getLastFloatingTopRow();\n                }\n                return null;\n            }\n        }\n        return { rowIndex: rowIndex - 1, rowPinned: pinned };\n    };\n    CellNavigationService.prototype.getCellAbove = function (lastCell) {\n        if (!lastCell) {\n            return null;\n        }\n        var rowAbove = this.getRowAbove(lastCell.rowIndex, lastCell.rowPinned);\n        if (rowAbove) {\n            return {\n                rowIndex: rowAbove.rowIndex,\n                column: lastCell.column,\n                rowPinned: rowAbove.rowPinned\n            };\n        }\n        return null;\n    };\n    CellNavigationService.prototype.getLastBodyCell = function () {\n        var lastBodyRow = this.rowModel.getPageLastRow();\n        return { rowIndex: lastBodyRow, rowPinned: null };\n    };\n    CellNavigationService.prototype.getLastFloatingTopRow = function () {\n        var lastFloatingRow = this.pinnedRowModel.getPinnedTopRowData().length - 1;\n        return { rowIndex: lastFloatingRow, rowPinned: constants_1.Constants.PINNED_TOP };\n    };\n    CellNavigationService.prototype.getNextTabbedCell = function (gridCell, backwards) {\n        if (backwards) {\n            return this.getNextTabbedCellBackwards(gridCell);\n        }\n        return this.getNextTabbedCellForwards(gridCell);\n    };\n    CellNavigationService.prototype.getNextTabbedCellForwards = function (gridCell) {\n        var displayedColumns = this.columnController.getAllDisplayedColumns();\n        var newRowIndex = gridCell.rowIndex;\n        var newFloating = gridCell.rowPinned;\n        // move along to the next cell\n        var newColumn = this.columnController.getDisplayedColAfter(gridCell.column);\n        // check if end of the row, and if so, go forward a row\n        if (!newColumn) {\n            newColumn = displayedColumns[0];\n            var rowBelow = this.getRowBelow(gridCell);\n            if (utils_1._.missing(rowBelow)) {\n                return null;\n            }\n            newRowIndex = rowBelow ? rowBelow.rowIndex : null;\n            newFloating = rowBelow ? rowBelow.rowPinned : null;\n        }\n        return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\n    };\n    CellNavigationService.prototype.getNextTabbedCellBackwards = function (gridCell) {\n        var displayedColumns = this.columnController.getAllDisplayedColumns();\n        var newRowIndex = gridCell.rowIndex;\n        var newFloating = gridCell.rowPinned;\n        // move along to the next cell\n        var newColumn = this.columnController.getDisplayedColBefore(gridCell.column);\n        // check if end of the row, and if so, go forward a row\n        if (!newColumn) {\n            newColumn = utils_1._.last(displayedColumns);\n            var rowAbove = this.getRowAbove(gridCell.rowIndex, gridCell.rowPinned);\n            if (utils_1._.missing(rowAbove)) {\n                return null;\n            }\n            newRowIndex = rowAbove ? rowAbove.rowIndex : null;\n            newFloating = rowAbove ? rowAbove.rowPinned : null;\n        }\n        return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\n    };\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], CellNavigationService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], CellNavigationService.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('pinnedRowModel'),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], CellNavigationService.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], CellNavigationService.prototype, \"gridOptionsWrapper\", void 0);\n    CellNavigationService = __decorate([\n        context_1.Bean('cellNavigationService')\n    ], CellNavigationService);\n    return CellNavigationService;\n}());\nexports.CellNavigationService = CellNavigationService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"./context/context\");\nvar context_2 = require(\"./context/context\");\nvar TemplateService = /** @class */ (function () {\n    function TemplateService() {\n        this.templateCache = {};\n        this.waitingCallbacks = {};\n    }\n    // returns the template if it is loaded, or null if it is not loaded\n    // but will call the callback when it is loaded\n    TemplateService.prototype.getTemplate = function (url, callback) {\n        var templateFromCache = this.templateCache[url];\n        if (templateFromCache) {\n            return templateFromCache;\n        }\n        var callbackList = this.waitingCallbacks[url];\n        var that = this;\n        if (!callbackList) {\n            // first time this was called, so need a new list for callbacks\n            callbackList = [];\n            this.waitingCallbacks[url] = callbackList;\n            // and also need to do the http request\n            var client = new XMLHttpRequest();\n            client.onload = function () {\n                that.handleHttpResult(this, url);\n            };\n            client.open(\"GET\", url);\n            client.send();\n        }\n        // add this callback\n        if (callback) {\n            callbackList.push(callback);\n        }\n        // caller needs to wait for template to load, so return null\n        return null;\n    };\n    TemplateService.prototype.handleHttpResult = function (httpResult, url) {\n        if (httpResult.status !== 200 || httpResult.response === null) {\n            console.warn(\"Unable to get template error \" + httpResult.status + \" - \" + url);\n            return;\n        }\n        // response success, so process it\n        // in IE9 the response is in - responseText\n        this.templateCache[url] = httpResult.response || httpResult.responseText;\n        // inform all listeners that this is now in the cache\n        var callbacks = this.waitingCallbacks[url];\n        for (var i = 0; i < callbacks.length; i++) {\n            var callback = callbacks[i];\n            // we could pass the callback the response, however we know the client of this code\n            // is the cell renderer, and it passes the 'cellRefresh' method in as the callback\n            // which doesn't take any parameters.\n            callback();\n        }\n        if (this.$scope) {\n            var that_1 = this;\n            window.setTimeout(function () {\n                that_1.$scope.$apply();\n            }, 0);\n        }\n    };\n    __decorate([\n        context_2.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], TemplateService.prototype, \"$scope\", void 0);\n    TemplateService = __decorate([\n        context_1.Bean('templateService')\n    ], TemplateService);\n    return TemplateService;\n}());\nexports.TemplateService = TemplateService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar utils_1 = require(\"../../utils\");\nvar context_1 = require(\"../../context/context\");\nvar filterManager_1 = require(\"../../filter/filterManager\");\nvar AnimateSlideCellRenderer = /** @class */ (function (_super) {\n    __extends(AnimateSlideCellRenderer, _super);\n    function AnimateSlideCellRenderer() {\n        var _this = _super.call(this, AnimateSlideCellRenderer.TEMPLATE) || this;\n        _this.refreshCount = 0;\n        _this.eCurrent = _this.queryForHtmlElement('.ag-value-slide-current');\n        return _this;\n    }\n    AnimateSlideCellRenderer.prototype.init = function (params) {\n        this.params = params;\n        this.refresh(params);\n    };\n    AnimateSlideCellRenderer.prototype.addSlideAnimation = function () {\n        var _this = this;\n        this.refreshCount++;\n        // below we keep checking this, and stop working on the animation\n        // if it no longer matches - this means another animation has started\n        // and this one is stale.\n        var refreshCountCopy = this.refreshCount;\n        // if old animation, remove it\n        if (this.ePrevious) {\n            this.getGui().removeChild(this.ePrevious);\n        }\n        this.ePrevious = utils_1._.loadTemplate('<span class=\"ag-value-slide-previous ag-value-slide-out\"></span>');\n        this.ePrevious.innerHTML = this.eCurrent.innerHTML;\n        this.getGui().insertBefore(this.ePrevious, this.eCurrent);\n        // having timeout of 0 allows use to skip to the next css turn,\n        // so we know the previous css classes have been applied. so the\n        // complex set of setTimeout below creates the animation\n        window.setTimeout(function () {\n            if (refreshCountCopy !== _this.refreshCount) {\n                return;\n            }\n            utils_1._.addCssClass(_this.ePrevious, 'ag-value-slide-out-end');\n        }, 50);\n        window.setTimeout(function () {\n            if (refreshCountCopy !== _this.refreshCount) {\n                return;\n            }\n            _this.getGui().removeChild(_this.ePrevious);\n            _this.ePrevious = null;\n        }, 3000);\n    };\n    AnimateSlideCellRenderer.prototype.refresh = function (params) {\n        var value = params.value;\n        if (utils_1._.missing(value)) {\n            value = '';\n        }\n        if (value === this.lastValue) {\n            return;\n        }\n        // we don't show the delta if we are in the middle of a filter. see comment on FilterManager\n        // with regards processingFilterChange\n        if (this.filterManager.isSuppressFlashingCellsBecauseFiltering()) {\n            return;\n        }\n        this.addSlideAnimation();\n        this.lastValue = value;\n        if (utils_1._.exists(params.valueFormatted)) {\n            this.eCurrent.innerHTML = params.valueFormatted;\n        }\n        else if (utils_1._.exists(params.value)) {\n            this.eCurrent.innerHTML = value;\n        }\n        else {\n            utils_1._.clearElement(this.eCurrent);\n        }\n        return true;\n    };\n    AnimateSlideCellRenderer.TEMPLATE = '<span>' +\n        '<span class=\"ag-value-slide-current\"></span>' +\n        '</span>';\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], AnimateSlideCellRenderer.prototype, \"filterManager\", void 0);\n    return AnimateSlideCellRenderer;\n}(component_1.Component));\nexports.AnimateSlideCellRenderer = AnimateSlideCellRenderer;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar textCellEditor_1 = require(\"../../rendering/cellEditors/textCellEditor\");\nvar context_1 = require(\"../../context/context\");\nvar dateFilter_1 = require(\"../../filter/provided/date/dateFilter\");\nvar headerComp_1 = require(\"../../headerRendering/header/headerComp\");\nvar headerGroupComp_1 = require(\"../../headerRendering/headerGroup/headerGroupComp\");\nvar groupCellRenderer_1 = require(\"../../rendering/cellRenderers/groupCellRenderer\");\nvar animateShowChangeCellRenderer_1 = require(\"../../rendering/cellRenderers/animateShowChangeCellRenderer\");\nvar animateSlideCellRenderer_1 = require(\"../../rendering/cellRenderers/animateSlideCellRenderer\");\nvar loadingCellRenderer_1 = require(\"../../rendering/cellRenderers/loadingCellRenderer\");\nvar selectCellEditor_1 = require(\"../../rendering/cellEditors/selectCellEditor\");\nvar popupTextCellEditor_1 = require(\"../../rendering/cellEditors/popupTextCellEditor\");\nvar popupSelectCellEditor_1 = require(\"../../rendering/cellEditors/popupSelectCellEditor\");\nvar largeTextCellEditor_1 = require(\"../../rendering/cellEditors/largeTextCellEditor\");\nvar numberFilter_1 = require(\"../../filter/provided/number/numberFilter\");\nvar loadingOverlayComponent_1 = require(\"../../rendering/overlays/loadingOverlayComponent\");\nvar noRowsOverlayComponent_1 = require(\"../../rendering/overlays/noRowsOverlayComponent\");\nvar tooltipComponent_1 = require(\"../../rendering/tooltipComponent\");\nvar utils_1 = require(\"../../utils\");\nvar defaultDateComponent_1 = require(\"../../filter/provided/date/defaultDateComponent\");\nvar dateFloatingFilter_1 = require(\"../../filter/provided/date/dateFloatingFilter\");\nvar textFilter_1 = require(\"../../filter/provided/text/textFilter\");\nvar numberFloatingFilter_1 = require(\"../../filter/provided/number/numberFloatingFilter\");\nvar textFloatingFilter_1 = require(\"../../filter/provided/text/textFloatingFilter\");\nvar RegisteredComponentSource;\n(function (RegisteredComponentSource) {\n    RegisteredComponentSource[RegisteredComponentSource[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    RegisteredComponentSource[RegisteredComponentSource[\"REGISTERED\"] = 1] = \"REGISTERED\";\n})(RegisteredComponentSource = exports.RegisteredComponentSource || (exports.RegisteredComponentSource = {}));\nvar UserComponentRegistry = /** @class */ (function () {\n    function UserComponentRegistry() {\n        this.agGridDefaults = {\n            //date\n            agDateInput: defaultDateComponent_1.DefaultDateComponent,\n            //header\n            agColumnHeader: headerComp_1.HeaderComp,\n            agColumnGroupHeader: headerGroupComp_1.HeaderGroupComp,\n            //floating filters\n            agTextColumnFloatingFilter: textFloatingFilter_1.TextFloatingFilter,\n            agNumberColumnFloatingFilter: numberFloatingFilter_1.NumberFloatingFilter,\n            agDateColumnFloatingFilter: dateFloatingFilter_1.DateFloatingFilter,\n            // renderers\n            agAnimateShowChangeCellRenderer: animateShowChangeCellRenderer_1.AnimateShowChangeCellRenderer,\n            agAnimateSlideCellRenderer: animateSlideCellRenderer_1.AnimateSlideCellRenderer,\n            agGroupCellRenderer: groupCellRenderer_1.GroupCellRenderer,\n            agGroupRowRenderer: groupCellRenderer_1.GroupCellRenderer,\n            agLoadingCellRenderer: loadingCellRenderer_1.LoadingCellRenderer,\n            //editors\n            agCellEditor: textCellEditor_1.TextCellEditor,\n            agTextCellEditor: textCellEditor_1.TextCellEditor,\n            agSelectCellEditor: selectCellEditor_1.SelectCellEditor,\n            agPopupTextCellEditor: popupTextCellEditor_1.PopupTextCellEditor,\n            agPopupSelectCellEditor: popupSelectCellEditor_1.PopupSelectCellEditor,\n            agLargeTextCellEditor: largeTextCellEditor_1.LargeTextCellEditor,\n            //filter\n            agTextColumnFilter: textFilter_1.TextFilter,\n            agNumberColumnFilter: numberFilter_1.NumberFilter,\n            agDateColumnFilter: dateFilter_1.DateFilter,\n            //overlays\n            agLoadingOverlay: loadingOverlayComponent_1.LoadingOverlayComponent,\n            agNoRowsOverlay: noRowsOverlayComponent_1.NoRowsOverlayComponent,\n            // tooltips\n            agTooltipComponent: tooltipComponent_1.TooltipComponent\n        };\n        this.agDeprecatedNames = {\n            set: {\n                newComponentName: 'agSetColumnFilter',\n                propertyHolder: 'filter'\n            },\n            text: {\n                newComponentName: 'agTextColumnFilter',\n                propertyHolder: 'filter'\n            },\n            number: {\n                newComponentName: 'agNumberColumnFilter',\n                propertyHolder: 'filter'\n            },\n            date: {\n                newComponentName: 'agDateColumnFilter',\n                propertyHolder: 'filter'\n            },\n            group: {\n                newComponentName: 'agGroupCellRenderer',\n                propertyHolder: 'cellRenderer'\n            },\n            animateShowChange: {\n                newComponentName: 'agAnimateShowChangeCellRenderer',\n                propertyHolder: 'cellRenderer'\n            },\n            animateSlide: {\n                newComponentName: 'agAnimateSlideCellRenderer',\n                propertyHolder: 'cellRenderer'\n            },\n            select: {\n                newComponentName: 'agSelectCellEditor',\n                propertyHolder: 'cellEditor'\n            },\n            largeText: {\n                newComponentName: 'agLargeTextCellEditor',\n                propertyHolder: 'cellEditor'\n            },\n            popupSelect: {\n                newComponentName: 'agPopupSelectCellEditor',\n                propertyHolder: 'cellEditor'\n            },\n            popupText: {\n                newComponentName: 'agPopupTextCellEditor',\n                propertyHolder: 'cellEditor'\n            },\n            richSelect: {\n                newComponentName: 'agRichSelectCellEditor',\n                propertyHolder: 'cellEditor'\n            },\n            headerComponent: {\n                newComponentName: 'agColumnHeader',\n                propertyHolder: 'headerComponent'\n            }\n        };\n        this.jsComponents = {};\n        this.frameworkComponents = {};\n    }\n    UserComponentRegistry.prototype.init = function () {\n        var _this = this;\n        var enterpriseDefaultComponents = this.context.getEnterpriseDefaultComponents();\n        if (enterpriseDefaultComponents) {\n            utils_1._.forEach(enterpriseDefaultComponents, function (config) {\n                _this.registerDefaultComponent(config.componentName, config.theClass);\n            });\n        }\n        if (this.gridOptions.components != null) {\n            Object.keys(this.gridOptions.components).forEach(function (it) {\n                _this.registerComponent(it, _this.gridOptions.components[it]);\n            });\n        }\n        if (this.gridOptions.frameworkComponents != null) {\n            Object.keys(this.gridOptions.frameworkComponents).forEach(function (it) {\n                _this.registerFwComponent(it, _this.gridOptions.frameworkComponents[it]);\n            });\n        }\n    };\n    UserComponentRegistry.prototype.registerDefaultComponent = function (rawName, component) {\n        var name = this.translateIfDeprecated(rawName);\n        if (this.agGridDefaults[name]) {\n            console.error(\"Trying to overwrite a default component. You should call registerComponent\");\n            return;\n        }\n        this.agGridDefaults[name] = component;\n    };\n    UserComponentRegistry.prototype.registerComponent = function (rawName, component) {\n        var name = this.translateIfDeprecated(rawName);\n        if (this.frameworkComponents[name]) {\n            console.error(\"Trying to register a component that you have already registered for frameworks: \" + name);\n            return;\n        }\n        this.jsComponents[name] = component;\n    };\n    /**\n     * B the business interface (ie IHeader)\n     * A the agGridComponent interface (ie IHeaderComp). The final object acceptable by ag-grid\n     */\n    UserComponentRegistry.prototype.registerFwComponent = function (rawName, component) {\n        var name = this.translateIfDeprecated(rawName);\n        if (this.jsComponents[name]) {\n            console.error(\"Trying to register a component that you have already registered for plain javascript: \" + name);\n            return;\n        }\n        this.frameworkComponents[name] = component;\n    };\n    /**\n     * B the business interface (ie IHeader)\n     * A the agGridComponent interface (ie IHeaderComp). The final object acceptable by ag-grid\n     */\n    UserComponentRegistry.prototype.retrieve = function (rawName) {\n        var name = this.translateIfDeprecated(rawName);\n        if (this.frameworkComponents[name]) {\n            return {\n                componentFromFramework: true,\n                component: this.frameworkComponents[name],\n                source: RegisteredComponentSource.REGISTERED\n            };\n        }\n        if (this.jsComponents[name]) {\n            return {\n                componentFromFramework: false,\n                component: this.jsComponents[name],\n                source: RegisteredComponentSource.REGISTERED\n            };\n        }\n        if (this.agGridDefaults[name]) {\n            return this.agGridDefaults[name] ?\n                {\n                    componentFromFramework: false,\n                    component: this.agGridDefaults[name],\n                    source: RegisteredComponentSource.DEFAULT\n                } :\n                null;\n        }\n        if (Object.keys(this.agGridDefaults).indexOf(name) < 0) {\n            console.warn(\"ag-Grid: Looking for component [\" + name + \"] but it wasn't found.\");\n        }\n        return null;\n    };\n    UserComponentRegistry.prototype.translateIfDeprecated = function (raw) {\n        var deprecatedInfo = this.agDeprecatedNames[raw];\n        if (deprecatedInfo != null) {\n            utils_1._.doOnce(function () {\n                console.warn(\"ag-grid. Since v15.0 component names have been renamed to be namespaced. You should rename \" + deprecatedInfo.propertyHolder + \":\" + raw + \" to \" + deprecatedInfo.propertyHolder + \":\" + deprecatedInfo.newComponentName);\n            }, 'DEPRECATE_COMPONENT_' + raw);\n            return deprecatedInfo.newComponentName;\n        }\n        return raw;\n    };\n    __decorate([\n        context_1.Autowired('gridOptions'),\n        __metadata(\"design:type\", Object)\n    ], UserComponentRegistry.prototype, \"gridOptions\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], UserComponentRegistry.prototype, \"context\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], UserComponentRegistry.prototype, \"init\", null);\n    UserComponentRegistry = __decorate([\n        context_1.Bean('userComponentRegistry')\n    ], UserComponentRegistry);\n    return UserComponentRegistry;\n}());\nexports.UserComponentRegistry = UserComponentRegistry;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../../constants\");\nvar popupComponent_1 = require(\"../../widgets/popupComponent\");\nvar utils_1 = require(\"../../utils\");\nvar TextCellEditor = /** @class */ (function (_super) {\n    __extends(TextCellEditor, _super);\n    function TextCellEditor() {\n        var _this = _super.call(this, TextCellEditor.TEMPLATE) || this;\n        _this.eInput = _this.getGui().querySelector('input');\n        return _this;\n    }\n    TextCellEditor.prototype.init = function (params) {\n        this.params = params;\n        var eInput = this.eInput;\n        var startValue;\n        // cellStartedEdit is only false if we are doing fullRow editing\n        if (params.cellStartedEdit) {\n            this.focusAfterAttached = true;\n            var keyPressBackspaceOrDelete = params.keyPress === constants_1.Constants.KEY_BACKSPACE\n                || params.keyPress === constants_1.Constants.KEY_DELETE;\n            if (keyPressBackspaceOrDelete) {\n                startValue = '';\n            }\n            else if (params.charPress) {\n                startValue = params.charPress;\n            }\n            else {\n                startValue = this.getStartValue(params);\n                if (params.keyPress !== constants_1.Constants.KEY_F2) {\n                    this.highlightAllOnFocus = true;\n                }\n            }\n        }\n        else {\n            this.focusAfterAttached = false;\n            startValue = this.getStartValue(params);\n        }\n        if (utils_1._.exists(startValue)) {\n            eInput.value = startValue;\n        }\n        this.addDestroyableEventListener(eInput, 'keydown', function (event) {\n            var isNavigationKey = event.keyCode === constants_1.Constants.KEY_LEFT\n                || event.keyCode === constants_1.Constants.KEY_RIGHT\n                || event.keyCode === constants_1.Constants.KEY_UP\n                || event.keyCode === constants_1.Constants.KEY_DOWN\n                || event.keyCode === constants_1.Constants.KEY_PAGE_DOWN\n                || event.keyCode === constants_1.Constants.KEY_PAGE_UP\n                || event.keyCode === constants_1.Constants.KEY_PAGE_HOME\n                || event.keyCode === constants_1.Constants.KEY_PAGE_END;\n            if (isNavigationKey) {\n                // this stops the grid from executing keyboard navigation\n                event.stopPropagation();\n                // this stops the browser from scrolling up / down\n                var pageUp = event.keyCode === constants_1.Constants.KEY_PAGE_UP;\n                var pageDown = event.keyCode === constants_1.Constants.KEY_PAGE_DOWN;\n                if (pageUp || pageDown) {\n                    event.preventDefault();\n                }\n            }\n        });\n    };\n    TextCellEditor.prototype.afterGuiAttached = function () {\n        if (!this.focusAfterAttached) {\n            return;\n        }\n        var eInput = this.eInput;\n        eInput.focus();\n        if (this.highlightAllOnFocus) {\n            eInput.select();\n        }\n        else {\n            // when we started editing, we want the caret at the end, not the start.\n            // this comes into play in two scenarios: a) when user hits F2 and b)\n            // when user hits a printable character, then on IE (and only IE) the caret\n            // was placed after the first character, thus 'apply' would end up as 'pplea'\n            var length_1 = eInput.value ? eInput.value.length : 0;\n            if (length_1 > 0) {\n                eInput.setSelectionRange(length_1, length_1);\n            }\n        }\n    };\n    // gets called when tabbing trough cells and in full row edit mode\n    TextCellEditor.prototype.focusIn = function () {\n        var eInput = this.eInput;\n        eInput.focus();\n        eInput.select();\n    };\n    TextCellEditor.prototype.getValue = function () {\n        var eInput = this.eInput;\n        return this.params.parseValue(eInput.value);\n    };\n    TextCellEditor.prototype.getStartValue = function (params) {\n        var formatValue = params.useFormatter || params.column.getColDef().refData;\n        return formatValue ? params.formatValue(params.value) : params.value;\n    };\n    TextCellEditor.prototype.isPopup = function () {\n        return false;\n    };\n    TextCellEditor.TEMPLATE = '<div class=\"ag-input-text-wrapper\"><input class=\"ag-cell-edit-input\" type=\"text\"/></div>';\n    return TextCellEditor;\n}(popupComponent_1.PopupComponent));\nexports.TextCellEditor = TextCellEditor;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar componentAnnotations_1 = require(\"../../../widgets/componentAnnotations\");\nvar context_1 = require(\"../../../context/context\");\nvar userComponentFactory_1 = require(\"../../../components/framework/userComponentFactory\");\nvar utils_1 = require(\"../../../utils\");\nvar dateCompWrapper_1 = require(\"./dateCompWrapper\");\nvar simpleFilter_1 = require(\"../simpleFilter\");\nvar scalerFilter_1 = require(\"../scalerFilter\");\nvar DateFilter = /** @class */ (function (_super) {\n    __extends(DateFilter, _super);\n    function DateFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateFilter.prototype.mapRangeFromModel = function (filterModel) {\n        // unlike the other filters, we do two things here:\n        // 1) allow for different attribute names (same as done for other filters) (eg the 'from' and 'to'\n        //    are in different locations in Date and Number filter models)\n        // 2) convert the type (cos Date filter uses Dates, however model is 'string')\n        //\n        // NOTE: The conversion of string to date also removes the timezone - ie when user picks\n        //       a date form the UI, it will have timezone info in it. This is lost when creating\n        //       the model. Then when we recreate the date again here, it's without timezone.\n        return {\n            from: utils_1._.parseYyyyMmDdToDate(filterModel.dateFrom, \"-\"),\n            to: utils_1._.parseYyyyMmDdToDate(filterModel.dateTo, \"-\")\n        };\n    };\n    DateFilter.prototype.setValueFromFloatingFilter = function (value) {\n        if (value != null) {\n            var dateFrom = utils_1._.parseYyyyMmDdToDate(value, \"-\");\n            this.dateCompFrom1.setDate(dateFrom);\n        }\n        else {\n            this.dateCompFrom1.setDate(null);\n        }\n        this.dateCompTo1.setDate(null);\n        this.dateCompFrom2.setDate(null);\n        this.dateCompTo2.setDate(null);\n    };\n    DateFilter.prototype.setConditionIntoUi = function (model, position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var dateFromString = model ? model.dateFrom : null;\n        var dateToString = model ? model.dateTo : null;\n        var dateFrom = utils_1._.parseYyyyMmDdToDate(dateFromString, \"-\");\n        var dateTo = utils_1._.parseYyyyMmDdToDate(dateToString, \"-\");\n        var compFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n        var compTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n        compFrom.setDate(dateFrom);\n        compTo.setDate(dateTo);\n    };\n    DateFilter.prototype.resetUiToDefaults = function () {\n        _super.prototype.resetUiToDefaults.call(this);\n        this.dateCompTo1.setDate(null);\n        this.dateCompTo2.setDate(null);\n        this.dateCompFrom1.setDate(null);\n        this.dateCompFrom2.setDate(null);\n    };\n    DateFilter.prototype.comparator = function () {\n        return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);\n    };\n    DateFilter.prototype.defaultComparator = function (filterDate, cellValue) {\n        //The default comparator assumes that the cellValue is a date\n        var cellAsDate = cellValue;\n        if (cellAsDate < filterDate) {\n            return -1;\n        }\n        if (cellAsDate > filterDate) {\n            return 1;\n        }\n        return cellValue != null ? 0 : -1;\n    };\n    DateFilter.prototype.setParams = function (params) {\n        _super.prototype.setParams.call(this, params);\n        this.dateFilterParams = params;\n        this.createDateComponents();\n    };\n    DateFilter.prototype.createDateComponents = function () {\n        var _this = this;\n        // params to pass to all four date comps\n        var dateComponentParams = {\n            onDateChanged: function () { return _this.onUiChanged(); },\n            filterParams: this.dateFilterParams\n        };\n        this.dateCompFrom1 = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelFrom1);\n        this.dateCompFrom2 = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelFrom2);\n        this.dateCompTo1 = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelTo1);\n        this.dateCompTo2 = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.ePanelTo2);\n        this.addDestroyFunc(function () {\n            _this.dateCompFrom1.destroy();\n            _this.dateCompFrom2.destroy();\n            _this.dateCompTo1.destroy();\n            _this.dateCompTo2.destroy();\n        });\n    };\n    DateFilter.prototype.getDefaultFilterOptions = function () {\n        return DateFilter.DEFAULT_FILTER_OPTIONS;\n    };\n    DateFilter.prototype.createValueTemplate = function (position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var pos = positionOne ? '1' : '2';\n        return \"<div class=\\\"ag-filter-body\\\" ref=\\\"eCondition\" + pos + \"Body\\\">\\n                    <div class=\\\"ag-filter-date-from\\\" ref=\\\"ePanelFrom\" + pos + \"\\\">\\n                    </div>\\n                    <div class=\\\"ag-filter-date-to\\\" ref=\\\"ePanelTo\" + pos + \"\\\"\\\">\\n                    </div>\\n                </div>\";\n    };\n    DateFilter.prototype.isConditionUiComplete = function (position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        var compFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n        var compTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n        var valueFrom = compFrom.getDate();\n        var valueTo = compTo.getDate();\n        if (option === simpleFilter_1.SimpleFilter.EMPTY) {\n            return false;\n        }\n        if (this.doesFilterHaveHiddenInput(option)) {\n            return true;\n        }\n        if (option === simpleFilter_1.SimpleFilter.IN_RANGE) {\n            return valueFrom != null && valueTo != null;\n        }\n        else {\n            return valueFrom != null;\n        }\n    };\n    DateFilter.prototype.areSimpleModelsEqual = function (aSimple, bSimple) {\n        return aSimple.dateFrom === bSimple.dateFrom\n            && aSimple.dateTo === bSimple.dateTo\n            && aSimple.type === bSimple.type;\n    };\n    // needed for creating filter model\n    DateFilter.prototype.getFilterType = function () {\n        return DateFilter.FILTER_TYPE;\n    };\n    DateFilter.prototype.createCondition = function (position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        var dateCompTo = positionOne ? this.dateCompTo1 : this.dateCompTo2;\n        var dateCompFrom = positionOne ? this.dateCompFrom1 : this.dateCompFrom2;\n        return {\n            dateTo: utils_1._.serializeDateToYyyyMmDd(dateCompTo.getDate(), \"-\"),\n            dateFrom: utils_1._.serializeDateToYyyyMmDd(dateCompFrom.getDate(), \"-\"),\n            type: type,\n            filterType: DateFilter.FILTER_TYPE\n        };\n    };\n    DateFilter.prototype.updateUiVisibility = function () {\n        _super.prototype.updateUiVisibility.call(this);\n        var showFrom1 = this.showValueFrom(this.getCondition1Type());\n        utils_1._.setVisible(this.ePanelFrom1, showFrom1);\n        var showTo1 = this.showValueTo(this.getCondition1Type());\n        utils_1._.setVisible(this.ePanelTo1, showTo1);\n        var showFrom2 = this.showValueFrom(this.getCondition2Type());\n        utils_1._.setVisible(this.ePanelFrom2, showFrom2);\n        var showTo2 = this.showValueTo(this.getCondition2Type());\n        utils_1._.setVisible(this.ePanelTo2, showTo2);\n    };\n    DateFilter.FILTER_TYPE = 'date';\n    DateFilter.DEFAULT_FILTER_OPTIONS = [scalerFilter_1.ScalerFilter.EQUALS, scalerFilter_1.ScalerFilter.GREATER_THAN,\n        scalerFilter_1.ScalerFilter.LESS_THAN, scalerFilter_1.ScalerFilter.NOT_EQUAL, scalerFilter_1.ScalerFilter.IN_RANGE];\n    __decorate([\n        componentAnnotations_1.RefSelector('ePanelFrom1'),\n        __metadata(\"design:type\", HTMLElement)\n    ], DateFilter.prototype, \"ePanelFrom1\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('ePanelFrom2'),\n        __metadata(\"design:type\", HTMLElement)\n    ], DateFilter.prototype, \"ePanelFrom2\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('ePanelTo1'),\n        __metadata(\"design:type\", HTMLElement)\n    ], DateFilter.prototype, \"ePanelTo1\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('ePanelTo2'),\n        __metadata(\"design:type\", HTMLElement)\n    ], DateFilter.prototype, \"ePanelTo2\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], DateFilter.prototype, \"userComponentFactory\", void 0);\n    return DateFilter;\n}(scalerFilter_1.ScalerFilter));\nexports.DateFilter = DateFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar simpleFilter_1 = require(\"./simpleFilter\");\nvar ScalerFilter = /** @class */ (function (_super) {\n    __extends(ScalerFilter, _super);\n    function ScalerFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScalerFilter.prototype.setParams = function (params) {\n        _super.prototype.setParams.call(this, params);\n        this.scalarFilterParams = params;\n        this.checkDeprecatedParams();\n    };\n    ScalerFilter.prototype.checkDeprecatedParams = function () {\n        if (this.scalarFilterParams.nullComparator) {\n            console.warn('ag-Grid: Since v21.0, the property filterParams.nullComparator is deprecated. ' +\n                'Please use filterParams.includeBlanksInEquals, filterParams.includeBlanksInLessThan and ' +\n                'filterParams.includeBlanksInGreaterThan instead.');\n            this.scalarFilterParams.includeBlanksInEquals = this.scalarFilterParams.nullComparator.equals;\n            this.scalarFilterParams.includeBlanksInLessThan = this.scalarFilterParams.nullComparator.lessThan;\n            this.scalarFilterParams.includeBlanksInGreaterThan = this.scalarFilterParams.nullComparator.greaterThan;\n        }\n    };\n    ScalerFilter.prototype.nullComparator = function (selectedOption, filterValue, gridValue) {\n        if (gridValue == null) {\n            var nullValue = this.canNullsPassFilter(selectedOption);\n            if (selectedOption === ScalerFilter.EMPTY) {\n                return 0;\n            }\n            if (selectedOption === ScalerFilter.EQUALS) {\n                return nullValue ? 0 : 1;\n            }\n            if (selectedOption === ScalerFilter.GREATER_THAN) {\n                return nullValue ? 1 : -1;\n            }\n            if (selectedOption === ScalerFilter.GREATER_THAN_OR_EQUAL) {\n                return nullValue ? 1 : -1;\n            }\n            if (selectedOption === ScalerFilter.LESS_THAN_OR_EQUAL) {\n                return nullValue ? -1 : 1;\n            }\n            if (selectedOption === ScalerFilter.LESS_THAN) {\n                return nullValue ? -1 : 1;\n            }\n            if (selectedOption === ScalerFilter.NOT_EQUAL) {\n                return nullValue ? 1 : 0;\n            }\n        }\n        var actualComparator = this.comparator();\n        return actualComparator(filterValue, gridValue);\n    };\n    ScalerFilter.prototype.canNullsPassFilter = function (type) {\n        switch (type) {\n            case simpleFilter_1.SimpleFilter.GREATER_THAN:\n            case simpleFilter_1.SimpleFilter.GREATER_THAN_OR_EQUAL:\n                return this.scalarFilterParams.includeBlanksInGreaterThan;\n            case simpleFilter_1.SimpleFilter.LESS_THAN:\n            case simpleFilter_1.SimpleFilter.LESS_THAN_OR_EQUAL:\n                return this.scalarFilterParams.includeBlanksInLessThan;\n            case simpleFilter_1.SimpleFilter.EQUALS:\n                return this.scalarFilterParams.includeBlanksInEquals;\n        }\n    };\n    ScalerFilter.prototype.individualConditionPasses = function (params, filterModel) {\n        var cellValue = this.scalarFilterParams.valueGetter(params.node);\n        var range = this.mapRangeFromModel(filterModel);\n        var filterValue = range.from;\n        var filterValueTo = range.to;\n        var filterType = filterModel.type;\n        var customFilterOption = this.optionsFactory.getCustomOption(filterType);\n        if (customFilterOption) {\n            // only execute the custom filter if a value exists or a value isn't required, i.e. input is hidden\n            if (filterValue != null || customFilterOption.hideFilterInput) {\n                return customFilterOption.test(filterValue, cellValue);\n            }\n        }\n        // why this? looks like logic that should be in parent class????\n        // if (filterValue == null) {\n        //     return type === FilterConditionType.MAIN ? true : this.conditionValue === 'AND';\n        // }\n        var compareResult = this.nullComparator(filterType, filterValue, cellValue);\n        if (filterType === ScalerFilter.EQUALS) {\n            return compareResult === 0;\n        }\n        if (filterType === ScalerFilter.GREATER_THAN) {\n            return compareResult > 0;\n        }\n        if (filterType === ScalerFilter.GREATER_THAN_OR_EQUAL) {\n            return compareResult >= 0;\n        }\n        if (filterType === ScalerFilter.LESS_THAN_OR_EQUAL) {\n            return compareResult <= 0;\n        }\n        if (filterType === ScalerFilter.LESS_THAN) {\n            return compareResult < 0;\n        }\n        if (filterType === ScalerFilter.NOT_EQUAL) {\n            return compareResult != 0;\n        }\n        // From now on the type is a range and rawFilterValues must be an array!\n        var compareToResult = this.nullComparator(filterType, filterValueTo, cellValue);\n        if (filterType === ScalerFilter.IN_RANGE) {\n            if (!this.scalarFilterParams.inRangeInclusive) {\n                return compareResult > 0 && compareToResult < 0;\n            }\n            else {\n                return compareResult >= 0 && compareToResult <= 0;\n            }\n        }\n        throw new Error('Unexpected type of filter: ' + filterType);\n    };\n    ScalerFilter.DEFAULT_NULL_COMPARATOR = {\n        equals: false,\n        lessThan: false,\n        greaterThan: false\n    };\n    return ScalerFilter;\n}(simpleFilter_1.SimpleFilter));\nexports.ScalerFilter = ScalerFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar expressionService_1 = require(\"../../valueService/expressionService\");\nvar eventService_1 = require(\"../../eventService\");\nvar constants_1 = require(\"../../constants\");\nvar context_1 = require(\"../../context/context\");\nvar component_1 = require(\"../../widgets/component\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar valueFormatterService_1 = require(\"../valueFormatterService\");\nvar checkboxSelectionComponent_1 = require(\"../checkboxSelectionComponent\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar column_1 = require(\"../../entities/column\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar mouseEventService_1 = require(\"../../gridPanel/mouseEventService\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar utils_1 = require(\"../../utils\");\nvar GroupCellRenderer = /** @class */ (function (_super) {\n    __extends(GroupCellRenderer, _super);\n    function GroupCellRenderer() {\n        return _super.call(this, GroupCellRenderer.TEMPLATE) || this;\n    }\n    GroupCellRenderer.prototype.init = function (params) {\n        this.params = params;\n        if (this.gridOptionsWrapper.isGroupIncludeTotalFooter()) {\n            this.assignBlankValueToGroupFooterCell(params);\n        }\n        var embeddedRowMismatch = this.isEmbeddedRowMismatch();\n        // This allows for empty strings to appear as groups since\n        // it will only return for null or undefined.\n        var cellIsEmpty = params.value == null;\n        this.cellIsBlank = embeddedRowMismatch || cellIsEmpty;\n        if (this.cellIsBlank) {\n            return;\n        }\n        this.setupDragOpenParents();\n        this.addExpandAndContract();\n        this.addCheckboxIfNeeded();\n        this.addValueElement();\n        this.setupIndent();\n    };\n    GroupCellRenderer.prototype.assignBlankValueToGroupFooterCell = function (params) {\n        // this is not ideal, but it was the only way we could get footer working for the root node\n        if (!params.value && params.node.level == -1) {\n            params.value = '';\n        }\n    };\n    // if we are doing embedded full width rows, we only show the renderer when\n    // in the body, or if pinning in the pinned section, or if pinning and RTL,\n    // in the right section. otherwise we would have the cell repeated in each section.\n    GroupCellRenderer.prototype.isEmbeddedRowMismatch = function () {\n        if (this.params.fullWidth && this.gridOptionsWrapper.isEmbedFullWidthRows()) {\n            var pinnedLeftCell = this.params.pinned === column_1.Column.PINNED_LEFT;\n            var pinnedRightCell = this.params.pinned === column_1.Column.PINNED_RIGHT;\n            var bodyCell = !pinnedLeftCell && !pinnedRightCell;\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                if (this.columnController.isPinningLeft()) {\n                    return !pinnedRightCell;\n                }\n                else {\n                    return !bodyCell;\n                }\n            }\n            else {\n                if (this.columnController.isPinningLeft()) {\n                    return !pinnedLeftCell;\n                }\n                else {\n                    return !bodyCell;\n                }\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    GroupCellRenderer.prototype.setIndent = function () {\n        if (this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            return;\n        }\n        var params = this.params;\n        var rowNode = params.node;\n        var paddingCount = rowNode.uiLevel;\n        var userProvidedPaddingPixelsTheDeprecatedWay = params.padding >= 0;\n        if (userProvidedPaddingPixelsTheDeprecatedWay) {\n            this.setPaddingDeprecatedWay(paddingCount, params.padding);\n            return;\n        }\n        if (this.indentClass) {\n            this.removeCssClass(this.indentClass);\n        }\n        this.indentClass = 'ag-row-group-indent-' + paddingCount;\n        this.addCssClass(this.indentClass);\n    };\n    GroupCellRenderer.prototype.setPaddingDeprecatedWay = function (paddingCount, padding) {\n        utils_1._.doOnce(function () { return console.warn('ag-Grid: since v14.2, configuring padding for groupCellRenderer should be done with Sass variables and themes. Please see the ag-Grid documentation page for Themes, in particular the property $row-group-indent-size.'); }, 'groupCellRenderer->doDeprecatedWay');\n        var paddingPx = paddingCount * padding;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // if doing rtl, padding is on the right\n            this.getGui().style.paddingRight = paddingPx + 'px';\n        }\n        else {\n            // otherwise it is on the left\n            this.getGui().style.paddingLeft = paddingPx + 'px';\n        }\n    };\n    GroupCellRenderer.prototype.setupIndent = function () {\n        // only do this if an indent - as this overwrites the padding that\n        // the theme set, which will make things look 'not aligned' for the\n        // first group level.\n        var node = this.params.node;\n        var suppressPadding = this.params.suppressPadding;\n        if (!suppressPadding) {\n            this.addDestroyableEventListener(node, rowNode_1.RowNode.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this));\n            this.setIndent();\n        }\n    };\n    GroupCellRenderer.prototype.addValueElement = function () {\n        var params = this.params;\n        var rowNode = this.displayedGroup;\n        if (rowNode.footer) {\n            this.createFooterCell();\n        }\n        else if (rowNode.hasChildren() ||\n            utils_1._.get(params.colDef, 'cellRendererParams.innerRenderer', null) ||\n            utils_1._.get(params.colDef, 'cellRendererParams.innerRendererFramework', null)) {\n            this.createGroupCell();\n            if (rowNode.hasChildren()) {\n                this.addChildCount();\n            }\n        }\n        else {\n            this.createLeafCell();\n        }\n    };\n    GroupCellRenderer.prototype.createFooterCell = function () {\n        var footerValue;\n        var footerValueGetter = this.params.footerValueGetter;\n        if (footerValueGetter) {\n            // params is same as we were given, except we set the value as the item to display\n            var paramsClone = utils_1._.cloneObject(this.params);\n            paramsClone.value = this.params.value;\n            if (typeof footerValueGetter === 'function') {\n                footerValue = footerValueGetter(paramsClone);\n            }\n            else if (typeof footerValueGetter === 'string') {\n                footerValue = this.expressionService.evaluate(footerValueGetter, paramsClone);\n            }\n            else {\n                console.warn('ag-Grid: footerValueGetter should be either a function or a string (expression)');\n            }\n        }\n        else {\n            footerValue = 'Total ' + this.params.value;\n        }\n        this.eValue.innerHTML = footerValue;\n    };\n    GroupCellRenderer.prototype.createGroupCell = function () {\n        var _this = this;\n        var params = this.params;\n        var rowGroupColumn = this.displayedGroup.rowGroupColumn;\n        // we try and use the cellRenderer of the column used for the grouping if we can\n        var columnToUse = rowGroupColumn ? rowGroupColumn : params.column;\n        var groupName = this.params.value;\n        var valueFormatted = columnToUse ?\n            this.valueFormatterService.formatValue(columnToUse, params.node, params.scope, groupName) : null;\n        params.valueFormatted = valueFormatted;\n        var rendererPromise;\n        if (params.fullWidth == true) {\n            rendererPromise = this.useFullWidth(params);\n        }\n        else {\n            rendererPromise = this.useInnerRenderer(this.params.colDef.cellRendererParams, columnToUse.getColDef(), params);\n        }\n        // retain a reference to the created renderer - we'll use this later for cleanup (in destroy)\n        if (rendererPromise) {\n            rendererPromise.then(function (value) {\n                _this.innerCellRenderer = value;\n            });\n        }\n    };\n    GroupCellRenderer.prototype.useInnerRenderer = function (groupCellRendererParams, groupedColumnDef, // the column this group row is for, eg 'Country'\n    params) {\n        // when grouping, the normal case is we use the cell renderer of the grouped column. eg if grouping by country\n        // and then rating, we will use the country cell renderer for each country group row and likewise the rating\n        // cell renderer for each rating group row.\n        //\n        // however if the user has innerCellRenderer defined, this gets preference and we don't use cell renderers\n        // of the grouped columns.\n        //\n        // so we check and use in the following order:\n        //\n        // 1) thisColDef.cellRendererParams.innerRenderer of the column showing the groups (eg auto group column)\n        // 2) groupedColDef.cellRenderer of the grouped column\n        // 3) groupedColDef.cellRendererParams.innerRenderer\n        var _this = this;\n        var cellRendererPromise = null;\n        // we check if cell renderer provided for the group cell renderer, eg colDef.cellRendererParams.innerRenderer\n        var groupInnerRendererClass = this.userComponentFactory\n            .lookupComponentClassDef(groupCellRendererParams, \"innerRenderer\");\n        if (groupInnerRendererClass && groupInnerRendererClass.component != null\n            && groupInnerRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n            // use the renderer defined in cellRendererParams.innerRenderer\n            cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupCellRendererParams, params);\n        }\n        else {\n            // otherwise see if we can use the cellRenderer of the column we are grouping by\n            var groupColumnRendererClass = this.userComponentFactory\n                .lookupComponentClassDef(groupedColumnDef, \"cellRenderer\");\n            if (groupColumnRendererClass && groupColumnRendererClass.source != userComponentFactory_1.ComponentSource.DEFAULT) {\n                // Only if the original column is using a specific renderer, it it is a using a DEFAULT one ignore it\n                cellRendererPromise = this.userComponentFactory.newCellRenderer(groupedColumnDef, params);\n            }\n            else if (groupColumnRendererClass && groupColumnRendererClass.source == userComponentFactory_1.ComponentSource.DEFAULT\n                && (utils_1._.get(groupedColumnDef, 'cellRendererParams.innerRenderer', null))) {\n                // EDGE CASE - THIS COMES FROM A COLUMN WHICH HAS BEEN GROUPED DYNAMICALLY, THAT HAS AS RENDERER 'group'\n                // AND HAS A INNER CELL RENDERER\n                cellRendererPromise = this.userComponentFactory.newInnerCellRenderer(groupedColumnDef.cellRendererParams, params);\n            }\n            else {\n                // This forces the retrieval of the default plain cellRenderer that just renders the values.\n                cellRendererPromise = this.userComponentFactory.newCellRenderer({}, params);\n            }\n        }\n        if (cellRendererPromise != null) {\n            cellRendererPromise.then(function (rendererToUse) {\n                if (rendererToUse == null) {\n                    _this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n                    return;\n                }\n                utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, _this.eValue);\n            });\n        }\n        else {\n            this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        return cellRendererPromise;\n    };\n    GroupCellRenderer.prototype.useFullWidth = function (params) {\n        var cellRendererPromise = this.userComponentFactory.newFullWidthGroupRowInnerCellRenderer(params);\n        if (cellRendererPromise != null) {\n            utils_1._.bindCellRendererToHtmlElement(cellRendererPromise, this.eValue);\n        }\n        else {\n            this.eValue.innerText = params.valueFormatted != null ? params.valueFormatted : params.value;\n        }\n        return cellRendererPromise;\n    };\n    GroupCellRenderer.prototype.addChildCount = function () {\n        // only include the child count if it's included, eg if user doing custom aggregation,\n        // then this could be left out, or set to -1, ie no child count\n        if (this.params.suppressCount) {\n            return;\n        }\n        this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this));\n        // filtering changes the child count, so need to cater for it\n        this.updateChildCount();\n    };\n    GroupCellRenderer.prototype.updateChildCount = function () {\n        var allChildrenCount = this.displayedGroup.allChildrenCount;\n        this.eChildCount.innerHTML = allChildrenCount >= 0 ? \"(\" + allChildrenCount + \")\" : \"\";\n    };\n    GroupCellRenderer.prototype.createLeafCell = function () {\n        if (utils_1._.exists(this.params.value)) {\n            this.eValue.innerHTML = this.params.valueFormatted ? this.params.valueFormatted : this.params.value;\n        }\n    };\n    GroupCellRenderer.prototype.isUserWantsSelected = function () {\n        var paramsCheckbox = this.params.checkbox;\n        if (typeof paramsCheckbox === 'function') {\n            return paramsCheckbox(this.params);\n        }\n        else {\n            return paramsCheckbox === true;\n        }\n    };\n    GroupCellRenderer.prototype.addCheckboxIfNeeded = function () {\n        var rowNode = this.displayedGroup;\n        var checkboxNeeded = this.isUserWantsSelected()\n            // footers cannot be selected\n            && !rowNode.footer\n            // pinned rows cannot be selected\n            && !rowNode.rowPinned\n            // details cannot be selected\n            && !rowNode.detail;\n        if (checkboxNeeded) {\n            var cbSelectionComponent_1 = new checkboxSelectionComponent_1.CheckboxSelectionComponent();\n            this.getContext().wireBean(cbSelectionComponent_1);\n            cbSelectionComponent_1.init({ rowNode: rowNode, column: this.params.column });\n            this.eCheckbox.appendChild(cbSelectionComponent_1.getGui());\n            this.addDestroyFunc(function () { return cbSelectionComponent_1.destroy(); });\n        }\n        utils_1._.addOrRemoveCssClass(this.eCheckbox, 'ag-invisible', !checkboxNeeded);\n    };\n    GroupCellRenderer.prototype.addExpandAndContract = function () {\n        var params = this.params;\n        var eGroupCell = params.eGridCell;\n        var eExpandedIcon = utils_1._.createIconNoSpan('groupExpanded', this.gridOptionsWrapper, null);\n        var eContractedIcon = utils_1._.createIconNoSpan('groupContracted', this.gridOptionsWrapper, null);\n        this.eExpanded.appendChild(eExpandedIcon);\n        this.eContracted.appendChild(eContractedIcon);\n        this.addDestroyableEventListener(this.eExpanded, 'click', this.onExpandClicked.bind(this));\n        this.addDestroyableEventListener(this.eContracted, 'click', this.onExpandClicked.bind(this));\n        // expand / contract as the user hits enter\n        this.addDestroyableEventListener(eGroupCell, 'keydown', this.onKeyDown.bind(this));\n        this.addDestroyableEventListener(params.node, rowNode_1.RowNode.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this));\n        this.showExpandAndContractIcons();\n        // because we don't show the expand / contract when there are no children, we need to check every time\n        // the number of children change.\n        this.addDestroyableEventListener(this.displayedGroup, rowNode_1.RowNode.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.onAllChildrenCountChanged.bind(this));\n        // if editing groups, then double click is to start editing\n        if (!this.gridOptionsWrapper.isEnableGroupEdit() && this.isExpandable() && !params.suppressDoubleClickExpand) {\n            this.addDestroyableEventListener(eGroupCell, 'dblclick', this.onCellDblClicked.bind(this));\n        }\n    };\n    GroupCellRenderer.prototype.onAllChildrenCountChanged = function () {\n        // maybe if no children now, we should hide the expand / contract icons\n        this.showExpandAndContractIcons();\n        // if we have no children, this impacts the indent\n        this.setIndent();\n    };\n    GroupCellRenderer.prototype.onKeyDown = function (event) {\n        var enterKeyPressed = utils_1._.isKeyPressed(event, constants_1.Constants.KEY_ENTER);\n        if (enterKeyPressed) {\n            if (this.params.suppressEnterExpand) {\n                return;\n            }\n            var cellEditable = this.params.column.isCellEditable(this.params.node);\n            if (cellEditable) {\n                return;\n            }\n            event.preventDefault();\n            this.onExpandOrContract();\n        }\n    };\n    GroupCellRenderer.prototype.setupDragOpenParents = function () {\n        var column = this.params.column;\n        var rowNode = this.params.node;\n        if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            this.draggedFromHideOpenParents = false;\n        }\n        else if (!rowNode.hasChildren()) {\n            // if we are here, and we are not a group, then we must of been dragged down,\n            // as otherwise the cell would be blank, and if cell is blank, this method is never called.\n            this.draggedFromHideOpenParents = true;\n        }\n        else {\n            var rowGroupColumn = rowNode.rowGroupColumn;\n            if (rowGroupColumn) {\n                // if the displayGroup column for this col matches the rowGroupColumn we grouped by for this node,\n                // then nothing was dragged down\n                this.draggedFromHideOpenParents = !column.isRowGroupDisplayed(rowGroupColumn.getId());\n            }\n            else {\n                // the only way we can end up here (no column, but a group) is if we are at the root node,\n                // which only happens when 'groupIncludeTotalFooter' is true. here, we are never dragging\n                this.draggedFromHideOpenParents = false;\n            }\n        }\n        if (this.draggedFromHideOpenParents) {\n            var pointer = rowNode.parent;\n            while (true) {\n                if (utils_1._.missing(pointer)) {\n                    break;\n                }\n                if (pointer.rowGroupColumn && column.isRowGroupDisplayed(pointer.rowGroupColumn.getId())) {\n                    this.displayedGroup = pointer;\n                    break;\n                }\n                pointer = pointer.parent;\n            }\n        }\n        // if we didn't find a displayed group, set it to the row node\n        if (utils_1._.missing(this.displayedGroup)) {\n            this.displayedGroup = rowNode;\n        }\n    };\n    GroupCellRenderer.prototype.onExpandClicked = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        // so if we expand a node, it does not also get selected.\n        utils_1._.stopPropagationForAgGrid(mouseEvent);\n        this.onExpandOrContract();\n    };\n    GroupCellRenderer.prototype.onCellDblClicked = function (mouseEvent) {\n        if (utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        // we want to avoid acting on double click events on the expand / contract icon,\n        // as that icons already has expand / collapse functionality on it. otherwise if\n        // the icon was double clicked, we would get 'click', 'click', 'dblclick' which\n        // is open->close->open, however double click should be open->close only.\n        var targetIsExpandIcon = utils_1._.isElementInEventPath(this.eExpanded, mouseEvent)\n            || utils_1._.isElementInEventPath(this.eContracted, mouseEvent);\n        if (!targetIsExpandIcon) {\n            this.onExpandOrContract();\n        }\n    };\n    GroupCellRenderer.prototype.onExpandOrContract = function () {\n        // must use the displayedGroup, so if data was dragged down, we expand the parent, not this row\n        var rowNode = this.displayedGroup;\n        rowNode.setExpanded(!rowNode.expanded);\n    };\n    GroupCellRenderer.prototype.isExpandable = function () {\n        var rowNode = this.params.node;\n        var reducedLeafNode = this.columnController.isPivotMode() && rowNode.leafGroup;\n        return this.draggedFromHideOpenParents ||\n            (rowNode.isExpandable() && !rowNode.footer && !reducedLeafNode);\n    };\n    GroupCellRenderer.prototype.showExpandAndContractIcons = function () {\n        var rowNode = this.params.node;\n        if (this.isExpandable()) {\n            // if expandable, show one based on expand state.\n            // if we were dragged down, means our parent is always expanded\n            var expanded = this.draggedFromHideOpenParents ? true : rowNode.expanded;\n            utils_1._.setVisible(this.eContracted, !expanded);\n            utils_1._.setVisible(this.eExpanded, expanded);\n        }\n        else {\n            // it not expandable, show neither\n            utils_1._.setVisible(this.eExpanded, false);\n            utils_1._.setVisible(this.eContracted, false);\n        }\n        var displayedGroup = this.displayedGroup;\n        // compensation padding for leaf nodes, so there is blank space instead of the expand icon\n        var pivotModeAndLeafGroup = this.columnController.isPivotMode() && displayedGroup.leafGroup;\n        var notExpandable = !displayedGroup.isExpandable();\n        var addLeafIndentClass = displayedGroup.footer || notExpandable || pivotModeAndLeafGroup;\n        this.addOrRemoveCssClass('ag-row-group', !addLeafIndentClass);\n        this.addOrRemoveCssClass('ag-row-group-leaf-indent', addLeafIndentClass);\n    };\n    GroupCellRenderer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.innerCellRenderer && this.innerCellRenderer.destroy) {\n            this.innerCellRenderer.destroy();\n        }\n    };\n    GroupCellRenderer.prototype.refresh = function () {\n        return false;\n    };\n    GroupCellRenderer.TEMPLATE = '<span class=\"ag-cell-wrapper\">' +\n        '<span class=\"ag-group-expanded\" ref=\"eExpanded\"></span>' +\n        '<span class=\"ag-group-contracted\" ref=\"eContracted\"></span>' +\n        '<span class=\"ag-group-checkbox ag-invisible\" ref=\"eCheckbox\"></span>' +\n        '<span class=\"ag-group-value\" ref=\"eValue\"></span>' +\n        '<span class=\"ag-group-child-count\" ref=\"eChildCount\"></span>' +\n        '</span>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GroupCellRenderer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], GroupCellRenderer.prototype, \"expressionService\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GroupCellRenderer.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", valueFormatterService_1.ValueFormatterService)\n    ], GroupCellRenderer.prototype, \"valueFormatterService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GroupCellRenderer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", mouseEventService_1.MouseEventService)\n    ], GroupCellRenderer.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], GroupCellRenderer.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eExpanded'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eExpanded\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eContracted'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eContracted\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCheckbox'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eCheckbox\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eValue'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eValue\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eChildCount'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GroupCellRenderer.prototype, \"eChildCount\", void 0);\n    return GroupCellRenderer;\n}(component_1.Component));\nexports.GroupCellRenderer = GroupCellRenderer;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar utils_1 = require(\"../../utils\");\nvar filterManager_1 = require(\"../../filter/filterManager\");\nvar context_1 = require(\"../../context/context\");\nvar ARROW_UP = '\\u2191';\nvar ARROW_DOWN = '\\u2193';\nvar AnimateShowChangeCellRenderer = /** @class */ (function (_super) {\n    __extends(AnimateShowChangeCellRenderer, _super);\n    function AnimateShowChangeCellRenderer() {\n        var _this = _super.call(this, AnimateShowChangeCellRenderer.TEMPLATE) || this;\n        _this.refreshCount = 0;\n        return _this;\n    }\n    AnimateShowChangeCellRenderer.prototype.init = function (params) {\n        // this.params = params;\n        this.eValue = this.queryForHtmlElement('.ag-value-change-value');\n        this.eDelta = this.queryForHtmlElement('.ag-value-change-delta');\n        this.refresh(params);\n    };\n    AnimateShowChangeCellRenderer.prototype.showDelta = function (params, delta) {\n        var absDelta = Math.abs(delta);\n        var valueFormatted = params.formatValue(absDelta);\n        var valueToUse = utils_1._.exists(valueFormatted) ? valueFormatted : absDelta;\n        var deltaUp = (delta >= 0);\n        if (deltaUp) {\n            this.eDelta.innerHTML = ARROW_UP + valueToUse;\n        }\n        else {\n            // because negative, use ABS to remove sign\n            this.eDelta.innerHTML = ARROW_DOWN + valueToUse;\n        }\n        // class makes it green (in ag-fresh)\n        utils_1._.addOrRemoveCssClass(this.eDelta, 'ag-value-change-delta-up', deltaUp);\n        // class makes it red (in ag-fresh)\n        utils_1._.addOrRemoveCssClass(this.eDelta, 'ag-value-change-delta-down', !deltaUp);\n    };\n    AnimateShowChangeCellRenderer.prototype.setTimerToRemoveDelta = function () {\n        var _this = this;\n        // the refreshCount makes sure that if the value updates again while\n        // the below timer is waiting, then the below timer will realise it\n        // is not the most recent and will not try to remove the delta value.\n        this.refreshCount++;\n        var refreshCountCopy = this.refreshCount;\n        window.setTimeout(function () {\n            if (refreshCountCopy === _this.refreshCount) {\n                _this.hideDeltaValue();\n            }\n        }, 2000);\n    };\n    AnimateShowChangeCellRenderer.prototype.hideDeltaValue = function () {\n        utils_1._.removeCssClass(this.eValue, 'ag-value-change-value-highlight');\n        utils_1._.clearElement(this.eDelta);\n    };\n    AnimateShowChangeCellRenderer.prototype.refresh = function (params) {\n        var value = params.value;\n        if (value === this.lastValue) {\n            return;\n        }\n        if (utils_1._.exists(params.valueFormatted)) {\n            this.eValue.innerHTML = params.valueFormatted;\n        }\n        else if (utils_1._.exists(params.value)) {\n            this.eValue.innerHTML = value;\n        }\n        else {\n            utils_1._.clearElement(this.eValue);\n        }\n        // we don't show the delta if we are in the middle of a filter. see comment on FilterManager\n        // with regards processingFilterChange\n        if (this.filterManager.isSuppressFlashingCellsBecauseFiltering()) {\n            return;\n        }\n        if (typeof value === 'number' && typeof this.lastValue === 'number') {\n            var delta = value - this.lastValue;\n            this.showDelta(params, delta);\n        }\n        // highlight the current value, but only if it's not new, otherwise it\n        // would get highlighted first time the value is shown\n        if (this.lastValue) {\n            utils_1._.addCssClass(this.eValue, 'ag-value-change-value-highlight');\n        }\n        this.setTimerToRemoveDelta();\n        this.lastValue = value;\n        return true;\n    };\n    AnimateShowChangeCellRenderer.TEMPLATE = '<span>' +\n        '<span class=\"ag-value-change-delta\"></span>' +\n        '<span class=\"ag-value-change-value\"></span>' +\n        '</span>';\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], AnimateShowChangeCellRenderer.prototype, \"filterManager\", void 0);\n    return AnimateShowChangeCellRenderer;\n}(component_1.Component));\nexports.AnimateShowChangeCellRenderer = AnimateShowChangeCellRenderer;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar popupComponent_1 = require(\"../../widgets/popupComponent\");\nvar constants_1 = require(\"../../constants\");\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar valueFormatterService_1 = require(\"../valueFormatterService\");\nvar utils_1 = require(\"../../utils\");\nvar SelectCellEditor = /** @class */ (function (_super) {\n    __extends(SelectCellEditor, _super);\n    function SelectCellEditor() {\n        var _this = _super.call(this, '<div class=\"ag-cell-edit-input\"><select class=\"ag-cell-edit-input\"/></div>') || this;\n        _this.eSelect = _this.getGui().querySelector('select');\n        return _this;\n    }\n    SelectCellEditor.prototype.init = function (params) {\n        var _this = this;\n        this.focusAfterAttached = params.cellStartedEdit;\n        if (utils_1._.missing(params.values)) {\n            console.warn('ag-Grid: no values found for select cellEditor');\n            return;\n        }\n        params.values.forEach(function (value) {\n            var option = document.createElement('option');\n            option.value = value;\n            var valueFormatted = _this.valueFormatterService.formatValue(params.column, null, null, value);\n            var valueFormattedExits = valueFormatted !== null && valueFormatted !== undefined;\n            option.text = valueFormattedExits ? valueFormatted : value;\n            if (params.value === value) {\n                option.selected = true;\n            }\n            _this.eSelect.appendChild(option);\n        });\n        // we don't want to add this if full row editing, otherwise selecting will stop the\n        // full row editing.\n        if (!this.gridOptionsWrapper.isFullRowEdit()) {\n            this.addDestroyableEventListener(this.eSelect, 'change', function () { return params.stopEditing(); });\n        }\n        this.addDestroyableEventListener(this.eSelect, 'keydown', function (event) {\n            var isNavigationKey = event.keyCode === constants_1.Constants.KEY_UP || event.keyCode === constants_1.Constants.KEY_DOWN;\n            if (isNavigationKey) {\n                event.stopPropagation();\n            }\n        });\n        this.addDestroyableEventListener(this.eSelect, 'mousedown', function (event) {\n            event.stopPropagation();\n        });\n    };\n    SelectCellEditor.prototype.afterGuiAttached = function () {\n        if (this.focusAfterAttached) {\n            this.eSelect.focus();\n        }\n    };\n    SelectCellEditor.prototype.focusIn = function () {\n        this.eSelect.focus();\n    };\n    SelectCellEditor.prototype.getValue = function () {\n        return this.eSelect.value;\n    };\n    SelectCellEditor.prototype.isPopup = function () {\n        return false;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SelectCellEditor.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('valueFormatterService'),\n        __metadata(\"design:type\", valueFormatterService_1.ValueFormatterService)\n    ], SelectCellEditor.prototype, \"valueFormatterService\", void 0);\n    return SelectCellEditor;\n}(popupComponent_1.PopupComponent));\nexports.SelectCellEditor = SelectCellEditor;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar componentAnnotations_1 = require(\"../../../widgets/componentAnnotations\");\nvar utils_1 = require(\"../../../utils\");\nvar simpleFilter_1 = require(\"../simpleFilter\");\nvar scalerFilter_1 = require(\"../scalerFilter\");\nvar NumberFilter = /** @class */ (function (_super) {\n    __extends(NumberFilter, _super);\n    function NumberFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberFilter.prototype.mapRangeFromModel = function (filterModel) {\n        return {\n            from: filterModel.filter,\n            to: filterModel.filterTo\n        };\n    };\n    NumberFilter.prototype.getDefaultDebounceMs = function () {\n        return 500;\n    };\n    NumberFilter.prototype.resetUiToDefaults = function () {\n        _super.prototype.resetUiToDefaults.call(this);\n        this.eValueFrom1.value = null;\n        this.eValueFrom2.value = null;\n        this.eValueTo1.value = null;\n        this.eValueTo2.value = null;\n    };\n    NumberFilter.prototype.setConditionIntoUi = function (model, position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var eValueFrom = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        var eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n        eValueFrom.value = model ? ('' + model.filter) : null;\n        eValueTo.value = model ? ('' + model.filterTo) : null;\n    };\n    NumberFilter.prototype.setValueFromFloatingFilter = function (value) {\n        this.eValueFrom1.value = value;\n        this.eValueFrom2.value = null;\n        this.eValueTo1.value = null;\n        this.eValueTo2.value = null;\n    };\n    NumberFilter.prototype.comparator = function () {\n        return function (left, right) {\n            if (left === right) {\n                return 0;\n            }\n            if (left < right) {\n                return 1;\n            }\n            if (left > right) {\n                return -1;\n            }\n        };\n    };\n    NumberFilter.prototype.setParams = function (params) {\n        _super.prototype.setParams.call(this, params);\n        this.addValueChangedListeners();\n    };\n    NumberFilter.prototype.addValueChangedListeners = function () {\n        var _this = this;\n        var listener = function () { return _this.onUiChanged(); };\n        this.addDestroyableEventListener(this.eValueFrom1, 'input', listener);\n        this.addDestroyableEventListener(this.eValueFrom2, 'input', listener);\n        this.addDestroyableEventListener(this.eValueTo1, 'input', listener);\n        this.addDestroyableEventListener(this.eValueTo2, 'input', listener);\n    };\n    NumberFilter.prototype.afterGuiAttached = function () {\n        this.eValueFrom1.focus();\n    };\n    NumberFilter.prototype.getDefaultFilterOptions = function () {\n        return NumberFilter.DEFAULT_FILTER_OPTIONS;\n    };\n    NumberFilter.prototype.createValueTemplate = function (position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var pos = positionOne ? '1' : '2';\n        var translate = this.translate.bind(this);\n        return \"<div class=\\\"ag-filter-body\\\" ref=\\\"eCondition\" + pos + \"Body\\\">\\n            <div class=\\\"ag-input-text-wrapper\\\">\\n                <input class=\\\"ag-filter-filter\\\" ref=\\\"eValueFrom\" + pos + \"\\\" type=\\\"text\\\" placeholder=\\\"\" + translate('filterOoo') + \"\\\"/>\\n            </div>\\n             <div class=\\\"ag-input-text-wrapper ag-filter-number-to\\\" ref=\\\"ePanel\" + pos + \"\\\">\\n                <input class=\\\"ag-filter-filter\\\" ref=\\\"eValueTo\" + pos + \"\\\" type=\\\"text\\\" placeholder=\\\"\" + translate('filterOoo') + \"\\\"/>\\n            </div>\\n        </div>\";\n    };\n    NumberFilter.prototype.isConditionUiComplete = function (position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        var eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        var eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n        var value = this.stringToFloat(eValue.value);\n        var valueTo = this.stringToFloat(eValueTo.value);\n        if (option === simpleFilter_1.SimpleFilter.EMPTY) {\n            return false;\n        }\n        if (this.doesFilterHaveHiddenInput(option)) {\n            return true;\n        }\n        if (option === simpleFilter_1.SimpleFilter.IN_RANGE) {\n            return value != null && valueTo != null;\n        }\n        else {\n            return value != null;\n        }\n    };\n    NumberFilter.prototype.areSimpleModelsEqual = function (aSimple, bSimple) {\n        return aSimple.filter === bSimple.filter\n            && aSimple.filterTo === bSimple.filterTo\n            && aSimple.type === bSimple.type;\n    };\n    // needed for creating filter model\n    NumberFilter.prototype.getFilterType = function () {\n        return NumberFilter.FILTER_TYPE;\n    };\n    NumberFilter.prototype.stringToFloat = function (value) {\n        var filterText = utils_1._.makeNull(value);\n        if (filterText && filterText.trim() === '') {\n            filterText = null;\n        }\n        var newFilter;\n        if (filterText !== null && filterText !== undefined) {\n            newFilter = parseFloat(filterText);\n        }\n        else {\n            newFilter = null;\n        }\n        return newFilter;\n    };\n    NumberFilter.prototype.createCondition = function (position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        var eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        var value = this.stringToFloat(eValue.value);\n        var eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n        var valueTo = this.stringToFloat(eValueTo.value);\n        var model = {\n            filterType: NumberFilter.FILTER_TYPE,\n            type: type\n        };\n        if (!this.doesFilterHaveHiddenInput(type)) {\n            model.filter = value;\n            model.filterTo = valueTo; // FIX - should only populate this when filter choice has 'to' option\n        }\n        return model;\n    };\n    NumberFilter.prototype.updateUiVisibility = function () {\n        _super.prototype.updateUiVisibility.call(this);\n        var showFrom1 = this.showValueFrom(this.getCondition1Type());\n        utils_1._.setVisible(this.eValueFrom1, showFrom1);\n        var showTo1 = this.showValueTo(this.getCondition1Type());\n        utils_1._.setVisible(this.eValueTo1, showTo1);\n        var showFrom2 = this.showValueFrom(this.getCondition2Type());\n        utils_1._.setVisible(this.eValueFrom2, showFrom2);\n        var showTo2 = this.showValueTo(this.getCondition2Type());\n        utils_1._.setVisible(this.eValueTo2, showTo2);\n    };\n    NumberFilter.FILTER_TYPE = 'number';\n    NumberFilter.DEFAULT_FILTER_OPTIONS = [scalerFilter_1.ScalerFilter.EQUALS, scalerFilter_1.ScalerFilter.NOT_EQUAL,\n        scalerFilter_1.ScalerFilter.LESS_THAN, scalerFilter_1.ScalerFilter.LESS_THAN_OR_EQUAL,\n        scalerFilter_1.ScalerFilter.GREATER_THAN, scalerFilter_1.ScalerFilter.GREATER_THAN_OR_EQUAL,\n        scalerFilter_1.ScalerFilter.IN_RANGE];\n    __decorate([\n        componentAnnotations_1.RefSelector('eValueFrom1'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], NumberFilter.prototype, \"eValueFrom1\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eValueFrom2'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], NumberFilter.prototype, \"eValueFrom2\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eValueTo1'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], NumberFilter.prototype, \"eValueTo1\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eValueTo2'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], NumberFilter.prototype, \"eValueTo2\", void 0);\n    return NumberFilter;\n}(scalerFilter_1.ScalerFilter));\nexports.NumberFilter = NumberFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar componentAnnotations_1 = require(\"../../../widgets/componentAnnotations\");\nvar utils_1 = require(\"../../../utils\");\nvar simpleFilter_1 = require(\"../simpleFilter\");\nvar TextFilter = /** @class */ (function (_super) {\n    __extends(TextFilter, _super);\n    function TextFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TextFilter.prototype.getDefaultDebounceMs = function () {\n        return 500;\n    };\n    TextFilter.prototype.getValue = function (element) {\n        var val = element.value;\n        val = utils_1._.makeNull(val);\n        if (val && val.trim() === '') {\n            val = null;\n        }\n        return val;\n    };\n    TextFilter.prototype.addValueChangedListeners = function () {\n        var _this = this;\n        var listener = function () { return _this.onUiChanged(); };\n        this.addDestroyableEventListener(this.eValue1, 'input', listener);\n        this.addDestroyableEventListener(this.eValue2, 'input', listener);\n    };\n    TextFilter.prototype.setParams = function (params) {\n        _super.prototype.setParams.call(this, params);\n        this.textFilterParams = params;\n        this.comparator = this.textFilterParams.textCustomComparator ? this.textFilterParams.textCustomComparator : TextFilter.DEFAULT_COMPARATOR;\n        this.formatter =\n            this.textFilterParams.textFormatter ? this.textFilterParams.textFormatter :\n                this.textFilterParams.caseSensitive == true ? TextFilter.DEFAULT_FORMATTER :\n                    TextFilter.DEFAULT_LOWERCASE_FORMATTER;\n        this.addValueChangedListeners();\n    };\n    TextFilter.prototype.setConditionIntoUi = function (model, position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var eValue = positionOne ? this.eValue1 : this.eValue2;\n        eValue.value = model ? model.filter : null;\n    };\n    TextFilter.prototype.createCondition = function (position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        var eValue = positionOne ? this.eValue1 : this.eValue2;\n        var value = this.getValue(eValue);\n        var model = {\n            filterType: TextFilter.FILTER_TYPE,\n            type: type\n        };\n        if (!this.doesFilterHaveHiddenInput(type)) {\n            model.filter = value;\n        }\n        return model;\n    };\n    TextFilter.prototype.getFilterType = function () {\n        return TextFilter.FILTER_TYPE;\n    };\n    TextFilter.prototype.areSimpleModelsEqual = function (aSimple, bSimple) {\n        return aSimple.filter === bSimple.filter && aSimple.type === bSimple.type;\n    };\n    TextFilter.prototype.resetUiToDefaults = function () {\n        _super.prototype.resetUiToDefaults.call(this);\n        this.eValue1.value = null;\n        this.eValue2.value = null;\n    };\n    TextFilter.prototype.setValueFromFloatingFilter = function (value) {\n        this.eValue1.value = value;\n        this.eValue2.value = null;\n    };\n    TextFilter.prototype.getDefaultFilterOptions = function () {\n        return TextFilter.DEFAULT_FILTER_OPTIONS;\n    };\n    TextFilter.prototype.createValueTemplate = function (position) {\n        var pos = position === simpleFilter_1.ConditionPosition.One ? '1' : '2';\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        return \"<div class=\\\"ag-filter-body\\\" ref=\\\"eCondition\" + pos + \"Body\\\">\\n            <div class=\\\"ag-input-text-wrapper\\\" ref=\\\"eInputWrapper\" + pos + \"\\\">\\n                <input class=\\\"ag-filter-filter\\\" ref=\\\"eValue\" + pos + \"\\\" type=\\\"text\\\" placeholder=\\\"\" + translate('filterOoo', 'Filter...') + \"\\\"/>\\n            </div>\\n        </div>\";\n    };\n    TextFilter.prototype.updateUiVisibility = function () {\n        _super.prototype.updateUiVisibility.call(this);\n        var showValue1 = this.showValueFrom(this.getCondition1Type());\n        utils_1._.setVisible(this.eInputWrapper1, showValue1);\n        var showValue2 = this.showValueFrom(this.getCondition2Type());\n        utils_1._.setVisible(this.eInputWrapper2, showValue2);\n    };\n    TextFilter.prototype.afterGuiAttached = function () {\n        this.eValue1.focus();\n    };\n    TextFilter.prototype.isConditionUiComplete = function (position) {\n        var positionOne = position === simpleFilter_1.ConditionPosition.One;\n        var option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        var eFilterValue = positionOne ? this.eValue1 : this.eValue2;\n        if (option === simpleFilter_1.SimpleFilter.EMPTY) {\n            return false;\n        }\n        var value = this.getValue(eFilterValue);\n        if (this.doesFilterHaveHiddenInput(option)) {\n            return true;\n        }\n        return value != null;\n    };\n    TextFilter.prototype.individualConditionPasses = function (params, filterModel) {\n        var filterText = filterModel.filter;\n        var filterOption = filterModel.type;\n        var cellValue = this.textFilterParams.valueGetter(params.node);\n        var cellValueFormatted = this.formatter(cellValue);\n        var customFilterOption = this.optionsFactory.getCustomOption(filterOption);\n        if (customFilterOption) {\n            // only execute the custom filter if a value exists or a value isn't required, i.e. input is hidden\n            if (filterText != null || customFilterOption.hideFilterInput) {\n                return customFilterOption.test(filterText, cellValueFormatted);\n            }\n        }\n        if (cellValue == null) {\n            return filterOption === simpleFilter_1.SimpleFilter.NOT_EQUAL || filterOption === simpleFilter_1.SimpleFilter.NOT_CONTAINS;\n        }\n        var filterTextFormatted = this.formatter(filterText);\n        return this.comparator(filterOption, cellValueFormatted, filterTextFormatted);\n    };\n    TextFilter.FILTER_TYPE = 'text';\n    TextFilter.DEFAULT_FILTER_OPTIONS = [simpleFilter_1.SimpleFilter.CONTAINS, simpleFilter_1.SimpleFilter.NOT_CONTAINS,\n        simpleFilter_1.SimpleFilter.EQUALS, simpleFilter_1.SimpleFilter.NOT_EQUAL,\n        simpleFilter_1.SimpleFilter.STARTS_WITH, simpleFilter_1.SimpleFilter.ENDS_WITH];\n    TextFilter.DEFAULT_FORMATTER = function (from) {\n        return from;\n    };\n    TextFilter.DEFAULT_LOWERCASE_FORMATTER = function (from) {\n        if (from == null) {\n            return null;\n        }\n        return from.toString().toLowerCase();\n    };\n    TextFilter.DEFAULT_COMPARATOR = function (filter, value, filterText) {\n        switch (filter) {\n            case TextFilter.CONTAINS:\n                return value.indexOf(filterText) >= 0;\n            case TextFilter.NOT_CONTAINS:\n                return value.indexOf(filterText) === -1;\n            case TextFilter.EQUALS:\n                return value === filterText;\n            case TextFilter.NOT_EQUAL:\n                return value != filterText;\n            case TextFilter.STARTS_WITH:\n                return value.indexOf(filterText) === 0;\n            case TextFilter.ENDS_WITH:\n                var index = value.lastIndexOf(filterText);\n                return index >= 0 && index === (value.length - filterText.length);\n            default:\n                // should never happen\n                console.warn('invalid filter type ' + filter);\n                return false;\n        }\n    };\n    __decorate([\n        componentAnnotations_1.RefSelector('eValue1'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], TextFilter.prototype, \"eValue1\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eValue2'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], TextFilter.prototype, \"eValue2\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eInputWrapper1'),\n        __metadata(\"design:type\", HTMLElement)\n    ], TextFilter.prototype, \"eInputWrapper1\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eInputWrapper2'),\n        __metadata(\"design:type\", HTMLElement)\n    ], TextFilter.prototype, \"eInputWrapper2\", void 0);\n    return TextFilter;\n}(simpleFilter_1.SimpleFilter));\nexports.TextFilter = TextFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar componentMetadataProvider_1 = require(\"./componentMetadataProvider\");\nvar utils_1 = require(\"../../utils\");\nvar AgComponentUtils = /** @class */ (function () {\n    function AgComponentUtils() {\n    }\n    AgComponentUtils.prototype.adaptFunction = function (propertyName, hardcodedJsFunction, componentFromFramework, source) {\n        if (hardcodedJsFunction == null) {\n            return {\n                component: null,\n                componentFromFramework: componentFromFramework,\n                source: source,\n                paramsFromSelector: null\n            };\n        }\n        var metadata = this.componentMetadataProvider.retrieve(propertyName);\n        if (metadata && metadata.functionAdapter) {\n            return {\n                componentFromFramework: componentFromFramework,\n                component: metadata.functionAdapter(hardcodedJsFunction),\n                source: source,\n                paramsFromSelector: null\n            };\n        }\n        return null;\n    };\n    AgComponentUtils.prototype.adaptCellRendererFunction = function (callback) {\n        var Adapter = /** @class */ (function () {\n            function Adapter() {\n            }\n            Adapter.prototype.refresh = function (params) {\n                return false;\n            };\n            Adapter.prototype.getGui = function () {\n                var callbackResult = callback(this.params);\n                var type = typeof callbackResult;\n                if (type === 'string' || type === 'number' || type === 'boolean') {\n                    return utils_1._.loadTemplate('<span>' + callbackResult + '</span>');\n                }\n                else {\n                    return callbackResult;\n                }\n            };\n            Adapter.prototype.init = function (params) {\n                this.params = params;\n            };\n            return Adapter;\n        }());\n        return Adapter;\n    };\n    AgComponentUtils.prototype.doesImplementIComponent = function (candidate) {\n        if (!candidate) {\n            return false;\n        }\n        return candidate.prototype && 'getGui' in candidate.prototype;\n    };\n    __decorate([\n        context_1.Autowired(\"componentMetadataProvider\"),\n        __metadata(\"design:type\", componentMetadataProvider_1.ComponentMetadataProvider)\n    ], AgComponentUtils.prototype, \"componentMetadataProvider\", void 0);\n    AgComponentUtils = __decorate([\n        context_1.Bean(\"agComponentUtils\")\n    ], AgComponentUtils);\n    return AgComponentUtils;\n}());\nexports.AgComponentUtils = AgComponentUtils;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar agComponentUtils_1 = require(\"./agComponentUtils\");\nvar ComponentMetadataProvider = /** @class */ (function () {\n    function ComponentMetadataProvider() {\n    }\n    ComponentMetadataProvider.prototype.postConstruct = function () {\n        this.componentMetaData = {\n            dateComponent: {\n                mandatoryMethodList: ['getDate', 'setDate'],\n                optionalMethodList: ['afterGuiAttached']\n            },\n            detailCellRenderer: {\n                mandatoryMethodList: [],\n                optionalMethodList: []\n            },\n            headerComponent: {\n                mandatoryMethodList: [],\n                optionalMethodList: []\n            },\n            headerGroupComponent: {\n                mandatoryMethodList: [],\n                optionalMethodList: []\n            },\n            loadingCellRenderer: {\n                mandatoryMethodList: [],\n                optionalMethodList: []\n            },\n            loadingOverlayComponent: {\n                mandatoryMethodList: [],\n                optionalMethodList: []\n            },\n            noRowsOverlayComponent: {\n                mandatoryMethodList: [],\n                optionalMethodList: []\n            },\n            floatingFilterComponent: {\n                mandatoryMethodList: ['onParentModelChanged'],\n                optionalMethodList: ['afterGuiAttached']\n            },\n            floatingFilterWrapperComponent: {\n                mandatoryMethodList: [],\n                optionalMethodList: []\n            },\n            cellRenderer: {\n                mandatoryMethodList: [],\n                optionalMethodList: ['refresh', 'afterGuiAttached'],\n                functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n            },\n            cellEditor: {\n                mandatoryMethodList: ['getValue'],\n                optionalMethodList: ['isPopup', 'isCancelBeforeStart', 'isCancelAfterEnd', 'focusIn', 'focusOut', 'afterGuiAttached']\n            },\n            innerRenderer: {\n                mandatoryMethodList: [],\n                optionalMethodList: ['afterGuiAttached'],\n                functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n            },\n            fullWidthCellRenderer: {\n                mandatoryMethodList: [],\n                optionalMethodList: ['afterGuiAttached'],\n                functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n            },\n            pinnedRowCellRenderer: {\n                mandatoryMethodList: [],\n                optionalMethodList: ['refresh', 'afterGuiAttached'],\n                functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n            },\n            groupRowInnerRenderer: {\n                mandatoryMethodList: [],\n                optionalMethodList: ['afterGuiAttached'],\n                functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n            },\n            groupRowRenderer: {\n                mandatoryMethodList: [],\n                optionalMethodList: ['afterGuiAttached'],\n                functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)\n            },\n            filter: {\n                mandatoryMethodList: ['isFilterActive', 'doesFilterPass', 'getModel', 'setModel'],\n                optionalMethodList: ['afterGuiAttached', 'onNewRowsLoaded', 'getModelAsString', 'onFloatingFilterChanged']\n            },\n            filterComponent: {\n                mandatoryMethodList: ['isFilterActive', 'doesFilterPass', 'getModel', 'setModel'],\n                optionalMethodList: ['afterGuiAttached', 'onNewRowsLoaded', 'getModelAsString', 'onFloatingFilterChanged']\n            },\n            statusPanel: {\n                mandatoryMethodList: [],\n                optionalMethodList: ['afterGuiAttached'],\n            },\n            toolPanel: {\n                mandatoryMethodList: [],\n                optionalMethodList: ['refresh', 'afterGuiAttached']\n            },\n            tooltipComponent: {\n                mandatoryMethodList: [],\n                optionalMethodList: []\n            }\n        };\n    };\n    ComponentMetadataProvider.prototype.retrieve = function (name) {\n        return this.componentMetaData[name];\n    };\n    __decorate([\n        context_1.Autowired(\"agComponentUtils\"),\n        __metadata(\"design:type\", agComponentUtils_1.AgComponentUtils)\n    ], ComponentMetadataProvider.prototype, \"agComponentUtils\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ComponentMetadataProvider.prototype, \"postConstruct\", null);\n    ComponentMetadataProvider = __decorate([\n        context_1.Bean(\"componentMetadataProvider\")\n    ], ComponentMetadataProvider);\n    return ComponentMetadataProvider;\n}());\nexports.ComponentMetadataProvider = ComponentMetadataProvider;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar expressionService_1 = require(\"../valueService/expressionService\");\nvar StylingService = /** @class */ (function () {\n    function StylingService() {\n    }\n    StylingService.prototype.processAllCellClasses = function (colDef, params, onApplicableClass, onNotApplicableClass) {\n        this.processClassRules(colDef.cellClassRules, params, onApplicableClass, onNotApplicableClass);\n        this.processStaticCellClasses(colDef, params, onApplicableClass);\n    };\n    StylingService.prototype.processClassRules = function (classRules, params, onApplicableClass, onNotApplicableClass) {\n        if (typeof classRules === 'object' && classRules !== null) {\n            var classNames = Object.keys(classRules);\n            for (var i = 0; i < classNames.length; i++) {\n                var className = classNames[i];\n                var rule = classRules[className];\n                var resultOfRule = void 0;\n                if (typeof rule === 'string') {\n                    resultOfRule = this.expressionService.evaluate(rule, params);\n                }\n                else if (typeof rule === 'function') {\n                    resultOfRule = rule(params);\n                }\n                if (resultOfRule) {\n                    onApplicableClass(className);\n                }\n                else if (onNotApplicableClass) {\n                    onNotApplicableClass(className);\n                }\n            }\n        }\n    };\n    StylingService.prototype.processStaticCellClasses = function (colDef, params, onApplicableClass) {\n        var cellClass = colDef.cellClass;\n        if (cellClass) {\n            var classOrClasses = void 0;\n            if (typeof colDef.cellClass === 'function') {\n                var cellClassFunc = colDef.cellClass;\n                classOrClasses = cellClassFunc(params);\n            }\n            else {\n                classOrClasses = colDef.cellClass;\n            }\n            if (typeof classOrClasses === 'string') {\n                onApplicableClass(classOrClasses);\n            }\n            else if (Array.isArray(classOrClasses)) {\n                classOrClasses.forEach(function (cssClassItem) {\n                    onApplicableClass(cssClassItem);\n                });\n            }\n        }\n    };\n    __decorate([\n        context_1.Autowired('expressionService'),\n        __metadata(\"design:type\", expressionService_1.ExpressionService)\n    ], StylingService.prototype, \"expressionService\", void 0);\n    StylingService = __decorate([\n        context_1.Bean('stylingService')\n    ], StylingService);\n    return StylingService;\n}());\nexports.StylingService = StylingService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar popupService_1 = require(\"./popupService\");\nvar userComponentFactory_1 = require(\"../components/framework/userComponentFactory\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar gridApi_1 = require(\"../gridApi\");\nvar utils_1 = require(\"../utils\");\nvar TooltipManager = /** @class */ (function () {\n    function TooltipManager() {\n        this.DEFAULT_HIDE_TOOLTIP_TIMEOUT = 10000;\n        this.MOUSEOUT_HIDE_TOOLTIP_TIMEOUT = 1000;\n        this.MOUSEOVER_SHOW_TOOLTIP_TIMEOUT = 2000;\n        this.HIDE_SHOW_ONLY = true;\n        this.showTimeoutId = 0;\n        this.hideTimeoutId = 0;\n        // map of compId to [tooltip component, close function]\n        this.registeredComponents = {};\n    }\n    TooltipManager.prototype.registerTooltip = function (targetCmp) {\n        var _this = this;\n        var el = targetCmp.getGui();\n        var id = targetCmp.getCompId();\n        targetCmp.addDestroyableEventListener(el, 'mouseover', function (e) { return _this.processMouseOver(e, targetCmp); });\n        targetCmp.addDestroyableEventListener(el, 'mousemove', function (e) { return _this.processMouseMove(e); });\n        targetCmp.addDestroyableEventListener(el, 'mousedown', this.hideTooltip.bind(this));\n        targetCmp.addDestroyableEventListener(el, 'mouseout', this.processMouseOut.bind(this));\n        this.registeredComponents[id] = { tooltipComp: undefined, destroyFunc: undefined };\n        targetCmp.addDestroyFunc(function () { return _this.unregisterTooltip(targetCmp); });\n    };\n    TooltipManager.prototype.unregisterTooltip = function (targetCmp) {\n        var id = targetCmp.getCompId();\n        // hide the tooltip if it's being displayed while unregistering the component\n        if (this.activeComponent === targetCmp) {\n            this.hideTooltip();\n        }\n        delete this.registeredComponents[id];\n    };\n    TooltipManager.prototype.processMouseOver = function (e, targetCmp) {\n        var delay = this.MOUSEOVER_SHOW_TOOLTIP_TIMEOUT;\n        if (this.activeComponent) {\n            // lastHoveredComponent will be the activeComponent when we are hovering\n            // a component with many child elements like the grid header\n            if (this.lastHoveredComponent === this.activeComponent) {\n                return;\n            }\n            delay = 200;\n        }\n        else if (this.showTimeoutId && this.lastHoveredComponent === targetCmp) {\n            return;\n        }\n        this.clearTimers(this.HIDE_SHOW_ONLY);\n        // lastHoveredComponent will be the targetCmp when a click hid the tooltip\n        // and the lastHoveredComponent has many child elements\n        if (this.lastHoveredComponent === targetCmp) {\n            return;\n        }\n        this.lastHoveredComponent = targetCmp;\n        this.lastMouseEvent = e;\n        this.showTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay, e);\n    };\n    TooltipManager.prototype.processMouseOut = function (e) {\n        var activeComponent = this.activeComponent;\n        var relatedTarget = e.relatedTarget;\n        if (!activeComponent) {\n            if (this.lastHoveredComponent) {\n                var containsElement = this.lastHoveredComponent.getGui().contains(relatedTarget);\n                if (this.showTimeoutId && containsElement) {\n                    // if we are hovering within a component with multiple child elements before\n                    // the tooltip has been displayed, we should cancel this event\n                    return;\n                }\n                else if (!containsElement) {\n                    // when a click hides the tooltip we need to reset the lastHoveredComponent\n                    // otherwise the tooltip won't appear until another registered component is hovered.\n                    this.lastHoveredComponent = undefined;\n                }\n            }\n            this.clearTimers();\n            return;\n        }\n        // the mouseout was called from within the activeComponent so we do nothing\n        if (activeComponent.getGui().contains(relatedTarget)) {\n            return;\n        }\n        var registeredComponent = this.registeredComponents[activeComponent.getCompId()];\n        utils_1._.addCssClass(registeredComponent.tooltipComp.getGui(), 'ag-tooltip-hiding');\n        this.lastHoveredComponent = undefined;\n        this.clearTimers();\n        this.hideTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.MOUSEOUT_HIDE_TOOLTIP_TIMEOUT);\n    };\n    TooltipManager.prototype.processMouseMove = function (e) {\n        // there is a delay from the time we mouseOver a component and the time the\n        // tooltip is displayed, so we need to track mousemove to be able to correctly\n        // position the tooltip when showTooltip is called.\n        this.lastMouseEvent = e;\n    };\n    TooltipManager.prototype.showTooltip = function (e) {\n        var targetCmp = this.lastHoveredComponent;\n        var cellComp = targetCmp;\n        var registeredComponent = this.registeredComponents[targetCmp.getCompId()];\n        this.hideTooltip();\n        var params = {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            colDef: targetCmp.getComponentHolder(),\n            column: cellComp.getColumn && cellComp.getColumn(),\n            context: this.gridOptionsWrapper.getContext(),\n            rowIndex: cellComp.getCellPosition && cellComp.getCellPosition().rowIndex,\n            value: targetCmp.getTooltipText()\n        };\n        this.createTooltipComponent(params, registeredComponent, e);\n    };\n    TooltipManager.prototype.createTooltipComponent = function (params, cmp, e) {\n        var _this = this;\n        this.userComponentFactory.newTooltipComponent(params).then(function (tooltipComp) {\n            // if the component was unregistered while creating\n            // the tooltip (async) we should return undefined here.\n            if (!cmp) {\n                return;\n            }\n            cmp.tooltipComp = tooltipComp;\n            var eGui = tooltipComp.getGui();\n            var closeFnc = _this.popupService.addPopup(false, eGui, false);\n            cmp.destroyFunc = function () {\n                closeFnc();\n                if (tooltipComp.destroy) {\n                    tooltipComp.destroy();\n                }\n            };\n            _this.popupService.positionPopupUnderMouseEvent({\n                type: 'tooltip',\n                mouseEvent: _this.lastMouseEvent,\n                ePopup: eGui,\n                nudgeY: 18\n            });\n            _this.activeComponent = _this.lastHoveredComponent;\n            _this.hideTimeoutId = window.setTimeout(_this.hideTooltip.bind(_this), _this.DEFAULT_HIDE_TOOLTIP_TIMEOUT);\n        });\n    };\n    TooltipManager.prototype.hideTooltip = function () {\n        var activeComponent = this.activeComponent;\n        this.clearTimers();\n        if (!activeComponent) {\n            return;\n        }\n        var id = activeComponent.getCompId();\n        var registeredComponent = this.registeredComponents[id];\n        this.activeComponent = undefined;\n        if (!registeredComponent) {\n            return;\n        }\n        if (registeredComponent.destroyFunc) {\n            registeredComponent.destroyFunc();\n        }\n        this.clearRegisteredComponent(registeredComponent);\n    };\n    TooltipManager.prototype.clearRegisteredComponent = function (registeredComponent) {\n        delete registeredComponent.destroyFunc;\n        delete registeredComponent.tooltipComp;\n    };\n    TooltipManager.prototype.clearTimers = function (showOnly) {\n        if (showOnly === void 0) { showOnly = false; }\n        if (this.hideTimeoutId && !showOnly) {\n            window.clearTimeout(this.hideTimeoutId);\n            this.hideTimeoutId = 0;\n        }\n        if (this.showTimeoutId) {\n            window.clearTimeout(this.showTimeoutId);\n            this.showTimeoutId = 0;\n        }\n    };\n    __decorate([\n        context_1.Autowired('popupService'),\n        __metadata(\"design:type\", popupService_1.PopupService)\n    ], TooltipManager.prototype, \"popupService\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], TooltipManager.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], TooltipManager.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], TooltipManager.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], TooltipManager.prototype, \"gridOptionsWrapper\", void 0);\n    TooltipManager = __decorate([\n        context_1.Bean('tooltipManager')\n    ], TooltipManager);\n    return TooltipManager;\n}());\nexports.TooltipManager = TooltipManager;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar CssClassApplier = /** @class */ (function () {\n    function CssClassApplier() {\n    }\n    CssClassApplier.addHeaderClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (utils_1._.missing(abstractColDef)) {\n            return;\n        }\n        this.addColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n    };\n    CssClassApplier.addToolPanelClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (utils_1._.missing(abstractColDef)) {\n            return;\n        }\n        this.addColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n    };\n    CssClassApplier.addColumnClassesFromCollDef = function (classesOrFunc, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (utils_1._.missing(classesOrFunc)) {\n            return;\n        }\n        var classToUse;\n        if (typeof classesOrFunc === 'function') {\n            var params = {\n                // bad naming, as colDef here can be a group or a column,\n                // however most people won't appreciate the difference,\n                // so keeping it as colDef to avoid confusion.\n                colDef: abstractColDef,\n                column: column,\n                columnGroup: columnGroup,\n                context: gridOptionsWrapper.getContext(),\n                api: gridOptionsWrapper.getApi()\n            };\n            var headerClassFunc = classesOrFunc;\n            classToUse = headerClassFunc(params);\n        }\n        else {\n            classToUse = classesOrFunc;\n        }\n        if (typeof classToUse === 'string') {\n            utils_1._.addCssClass(eHeaderCell, classToUse);\n        }\n        else if (Array.isArray(classToUse)) {\n            classToUse.forEach(function (cssClassItem) {\n                utils_1._.addCssClass(eHeaderCell, cssClassItem);\n            });\n        }\n    };\n    return CssClassApplier;\n}());\nexports.CssClassApplier = CssClassApplier;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar beanStub_1 = require(\"../context/beanStub\");\nvar context_1 = require(\"../context/context\");\nvar columnHoverService_1 = require(\"../rendering/columnHoverService\");\nvar HoverFeature = /** @class */ (function (_super) {\n    __extends(HoverFeature, _super);\n    function HoverFeature(columns, element) {\n        var _this = _super.call(this) || this;\n        _this.columns = columns;\n        _this.element = element;\n        return _this;\n    }\n    HoverFeature.prototype.postConstruct = function () {\n        this.addMouseHoverListeners();\n    };\n    HoverFeature.prototype.addMouseHoverListeners = function () {\n        this.addDestroyableEventListener(this.element, 'mouseout', this.onMouseOut.bind(this));\n        this.addDestroyableEventListener(this.element, 'mouseover', this.onMouseOver.bind(this));\n    };\n    HoverFeature.prototype.onMouseOut = function () {\n        this.columnHoverService.clearMouseOver();\n    };\n    HoverFeature.prototype.onMouseOver = function () {\n        this.columnHoverService.setMouseOver(this.columns);\n    };\n    __decorate([\n        context_1.Autowired('columnHoverService'),\n        __metadata(\"design:type\", columnHoverService_1.ColumnHoverService)\n    ], HoverFeature.prototype, \"columnHoverService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HoverFeature.prototype, \"postConstruct\", null);\n    return HoverFeature;\n}(beanStub_1.BeanStub));\nexports.HoverFeature = HoverFeature;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// class returns unique instance id's for columns.\n// eg, the following calls (in this order) will result in:\n//\n// getInstanceIdForKey('country') => 0\n// getInstanceIdForKey('country') => 1\n// getInstanceIdForKey('country') => 2\n// getInstanceIdForKey('country') => 3\n// getInstanceIdForKey('age') => 0\n// getInstanceIdForKey('age') => 1\n// getInstanceIdForKey('country') => 4\nvar GroupInstanceIdCreator = /** @class */ (function () {\n    function GroupInstanceIdCreator() {\n        // this map contains keys to numbers, so we remember what the last call was\n        this.existingIds = {};\n    }\n    GroupInstanceIdCreator.prototype.getInstanceIdForKey = function (key) {\n        var lastResult = this.existingIds[key];\n        var result;\n        if (typeof lastResult !== 'number') {\n            // first time this key\n            result = 0;\n        }\n        else {\n            result = lastResult + 1;\n        }\n        this.existingIds[key] = result;\n        return result;\n    };\n    return GroupInstanceIdCreator;\n}());\nexports.GroupInstanceIdCreator = GroupInstanceIdCreator;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar Downloader = /** @class */ (function () {\n    function Downloader() {\n    }\n    Downloader.prototype.download = function (fileName, content) {\n        // Internet Explorer\n        if (window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveOrOpenBlob(content, fileName);\n        }\n        else {\n            // Other Browsers\n            var element = document.createElement(\"a\");\n            var url_1 = window.URL.createObjectURL(content);\n            element.setAttribute(\"href\", url_1);\n            element.setAttribute(\"download\", fileName);\n            element.style.display = \"none\";\n            document.body.appendChild(element);\n            element.dispatchEvent(new MouseEvent('click', {\n                bubbles: false,\n                cancelable: true,\n                view: window\n            }));\n            document.body.removeChild(element);\n            window.setTimeout(function () {\n                window.URL.revokeObjectURL(url_1);\n            }, 0);\n        }\n    };\n    Downloader = __decorate([\n        context_1.Bean(\"downloader\")\n    ], Downloader);\n    return Downloader;\n}());\nexports.Downloader = Downloader;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar beans_1 = require(\"./beans\");\nvar cellComp_1 = require(\"./cellComp\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar utils_1 = require(\"../utils\");\nvar AutoHeightCalculator = /** @class */ (function () {\n    function AutoHeightCalculator() {\n    }\n    AutoHeightCalculator.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    AutoHeightCalculator.prototype.getPreferredHeightForRow = function (rowNode) {\n        var _this = this;\n        if (!this.eDummyContainer) {\n            this.eDummyContainer = document.createElement('div');\n            // so any styles on row also get applied in dummy, otherwise\n            // the content in dummy may differ to the real\n            utils_1._.addCssClass(this.eDummyContainer, 'ag-row ag-row-no-focus');\n        }\n        // we put the dummy into the body container, so it will inherit all the\n        // css styles that the real cells are inheriting\n        var eBodyContainer = this.gridPanel.getCenterContainer();\n        eBodyContainer.appendChild(this.eDummyContainer);\n        var cellComps = [];\n        var autoRowHeightCols = this.columnController.getAllAutoRowHeightCols();\n        var visibleAutoRowHeightCols = autoRowHeightCols.filter(function (col) { return col.isVisible(); });\n        visibleAutoRowHeightCols.forEach(function (col) {\n            var cellComp = new cellComp_1.CellComp(_this.$scope, _this.beans, col, rowNode, null, true, false);\n            cellComp.setParentRow(_this.eDummyContainer);\n            cellComps.push(cellComp);\n        });\n        var template = cellComps.map(function (cellComp) { return cellComp.getCreateTemplate(); }).join(' ');\n        this.eDummyContainer.innerHTML = template;\n        // this gets any cellComps that are using components to put the components in\n        cellComps.forEach(function (cellComp) { return cellComp.afterAttached(); });\n        // we should be able to just take the height of the row at this point, however\n        // the row isn't expanding to cover the cell heights, i don't know why, i couldn't\n        // figure it out so instead looking at the individual cells instead\n        var maxCellHeight = 0;\n        for (var i = 0; i < this.eDummyContainer.children.length; i++) {\n            var child = this.eDummyContainer.children[i];\n            if (child.offsetHeight > maxCellHeight) {\n                maxCellHeight = child.offsetHeight;\n            }\n        }\n        // we are finished with the dummy container, so get rid of it\n        eBodyContainer.removeChild(this.eDummyContainer);\n        cellComps.forEach(function (cellComp) {\n            // dunno why we need to detach first, doing it here to be consistent with code in RowComp\n            cellComp.detach();\n            cellComp.destroy();\n        });\n        // in case anything left over from last time\n        utils_1._.clearElement(this.eDummyContainer);\n        return maxCellHeight;\n    };\n    __decorate([\n        context_1.Autowired('beans'),\n        __metadata(\"design:type\", beans_1.Beans)\n    ], AutoHeightCalculator.prototype, \"beans\", void 0);\n    __decorate([\n        context_1.Autowired(\"$scope\"),\n        __metadata(\"design:type\", Object)\n    ], AutoHeightCalculator.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired(\"columnController\"),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], AutoHeightCalculator.prototype, \"columnController\", void 0);\n    AutoHeightCalculator = __decorate([\n        context_1.Bean('autoHeightCalculator')\n    ], AutoHeightCalculator);\n    return AutoHeightCalculator;\n}());\nexports.AutoHeightCalculator = AutoHeightCalculator;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar selectionController_1 = require(\"./selectionController\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar rowRenderer_1 = require(\"./rendering/rowRenderer\");\nvar headerRootComp_1 = require(\"./headerRendering/headerRootComp\");\nvar filterManager_1 = require(\"./filter/filterManager\");\nvar valueService_1 = require(\"./valueService/valueService\");\nvar eventService_1 = require(\"./eventService\");\nvar gridPanel_1 = require(\"./gridPanel/gridPanel\");\nvar gridApi_1 = require(\"./gridApi\");\nvar columnFactory_1 = require(\"./columnController/columnFactory\");\nvar displayedGroupCreator_1 = require(\"./columnController/displayedGroupCreator\");\nvar expressionService_1 = require(\"./valueService/expressionService\");\nvar templateService_1 = require(\"./templateService\");\nvar popupService_1 = require(\"./widgets/popupService\");\nvar logger_1 = require(\"./logger\");\nvar columnUtils_1 = require(\"./columnController/columnUtils\");\nvar autoWidthCalculator_1 = require(\"./rendering/autoWidthCalculator\");\nvar horizontalResizeService_1 = require(\"./headerRendering/horizontalResizeService\");\nvar context_1 = require(\"./context/context\");\nvar csvCreator_1 = require(\"./exporter/csvCreator\");\nvar gridCore_1 = require(\"./gridCore\");\nvar standardMenu_1 = require(\"./headerRendering/standardMenu\");\nvar dragAndDropService_1 = require(\"./dragAndDrop/dragAndDropService\");\nvar dragService_1 = require(\"./dragAndDrop/dragService\");\nvar sortController_1 = require(\"./sortController\");\nvar focusedCellController_1 = require(\"./focusedCellController\");\nvar mouseEventService_1 = require(\"./gridPanel/mouseEventService\");\nvar cellNavigationService_1 = require(\"./cellNavigationService\");\nvar filterStage_1 = require(\"./rowModels/clientSide/filterStage\");\nvar sortStage_1 = require(\"./rowModels/clientSide/sortStage\");\nvar flattenStage_1 = require(\"./rowModels/clientSide/flattenStage\");\nvar events_1 = require(\"./events\");\nvar infiniteRowModel_1 = require(\"./rowModels/infinite/infiniteRowModel\");\nvar clientSideRowModel_1 = require(\"./rowModels/clientSide/clientSideRowModel\");\nvar cellRendererFactory_1 = require(\"./rendering/cellRendererFactory\");\nvar valueFormatterService_1 = require(\"./rendering/valueFormatterService\");\nvar agCheckbox_1 = require(\"./widgets/agCheckbox\");\nvar agRadioButton_1 = require(\"./widgets/agRadioButton\");\nvar vanillaFrameworkOverrides_1 = require(\"./vanillaFrameworkOverrides\");\nvar scrollVisibleService_1 = require(\"./gridPanel/scrollVisibleService\");\nvar downloader_1 = require(\"./exporter/downloader\");\nvar xmlFactory_1 = require(\"./exporter/xmlFactory\");\nvar gridSerializer_1 = require(\"./exporter/gridSerializer\");\nvar stylingService_1 = require(\"./styling/stylingService\");\nvar columnHoverService_1 = require(\"./rendering/columnHoverService\");\nvar columnAnimationService_1 = require(\"./rendering/columnAnimationService\");\nvar sortService_1 = require(\"./rowNodes/sortService\");\nvar filterService_1 = require(\"./rowNodes/filterService\");\nvar autoGroupColService_1 = require(\"./columnController/autoGroupColService\");\nvar paginationProxy_1 = require(\"./rowModels/paginationProxy\");\nvar immutableService_1 = require(\"./rowModels/clientSide/immutableService\");\nvar constants_1 = require(\"./constants\");\nvar valueCache_1 = require(\"./valueService/valueCache\");\nvar changeDetectionService_1 = require(\"./valueService/changeDetectionService\");\nvar alignedGridsService_1 = require(\"./alignedGridsService\");\nvar pinnedRowModel_1 = require(\"./rowModels/pinnedRowModel\");\nvar userComponentFactory_1 = require(\"./components/framework/userComponentFactory\");\nvar userComponentRegistry_1 = require(\"./components/framework/userComponentRegistry\");\nvar agComponentUtils_1 = require(\"./components/framework/agComponentUtils\");\nvar componentMetadataProvider_1 = require(\"./components/framework/componentMetadataProvider\");\nvar beans_1 = require(\"./rendering/beans\");\nvar environment_1 = require(\"./environment\");\nvar animationFrameService_1 = require(\"./misc/animationFrameService\");\nvar navigationService_1 = require(\"./gridPanel/navigationService\");\nvar maxDivHeightScaler_1 = require(\"./rendering/maxDivHeightScaler\");\nvar selectableService_1 = require(\"./rowNodes/selectableService\");\nvar autoHeightCalculator_1 = require(\"./rendering/autoHeightCalculator\");\nvar paginationComp_1 = require(\"./rowModels/pagination/paginationComp\");\nvar resizeObserverService_1 = require(\"./misc/resizeObserverService\");\nvar zipContainer_1 = require(\"./exporter/files/zip/zipContainer\");\nvar utils_1 = require(\"./utils\");\nvar tooltipManager_1 = require(\"./widgets/tooltipManager\");\nvar overlayWrapperComponent_1 = require(\"./rendering/overlays/overlayWrapperComponent\");\nvar Grid = /** @class */ (function () {\n    function Grid(eGridDiv, gridOptions, params) {\n        if (!eGridDiv) {\n            console.error('ag-Grid: no div element provided to the grid');\n        }\n        if (!gridOptions) {\n            console.error('ag-Grid: no gridOptions provided to the grid');\n        }\n        this.gridOptions = gridOptions;\n        var rowModelClass = this.getRowModelClass(gridOptions);\n        var enterprise = !utils_1._.missingOrEmpty(Grid.enterpriseBeans);\n        var moduleBeans = this.extractModuleEntity(Grid.modulesToInclude, function (module) { return module.beans ? module.beans : []; });\n        var moduleEnterpriseBeans = this.extractModuleEntity(Grid.modulesToInclude, function (module) { return module.enterpriseBeans ? module.enterpriseBeans : []; });\n        var moduleEnterpriseComponents = this.extractModuleEntity(Grid.modulesToInclude, function (module) { return module.enterpriseComponents ? module.enterpriseComponents : []; });\n        var modulesEnterpriseDefaultComponents = this.extractModuleEntity(Grid.modulesToInclude, function (module) { return module.enterpriseDefaultComponents ? module.enterpriseDefaultComponents : []; });\n        var frameworkOverrides = params ? params.frameworkOverrides : null;\n        if (utils_1._.missing(frameworkOverrides)) {\n            frameworkOverrides = new vanillaFrameworkOverrides_1.VanillaFrameworkOverrides();\n        }\n        var overrideBeans = [];\n        if (Grid.enterpriseBeans) {\n            overrideBeans = overrideBeans.concat(Grid.enterpriseBeans)\n                .concat(moduleEnterpriseBeans);\n        }\n        if (Grid.frameworkBeans) {\n            overrideBeans = overrideBeans.concat(Grid.frameworkBeans);\n        }\n        var seed = {\n            enterprise: enterprise,\n            gridOptions: gridOptions,\n            eGridDiv: eGridDiv,\n            $scope: params ? params.$scope : null,\n            $compile: params ? params.$compile : null,\n            quickFilterOnScope: params ? params.quickFilterOnScope : null,\n            globalEventListener: params ? params.globalEventListener : null,\n            frameworkOverrides: frameworkOverrides\n        };\n        if (params && params.seedBeanInstances) {\n            utils_1._.assign(seed, params.seedBeanInstances);\n        }\n        var components = [\n            { componentName: 'AgCheckbox', theClass: agCheckbox_1.AgCheckbox },\n            { componentName: 'AgRadioButton', theClass: agRadioButton_1.AgRadioButton },\n            { componentName: 'AgGridComp', theClass: gridPanel_1.GridPanel },\n            { componentName: 'AgHeaderRoot', theClass: headerRootComp_1.HeaderRootComp },\n            { componentName: 'AgPagination', theClass: paginationComp_1.PaginationComp },\n            { componentName: 'AgOverlayWrapper', theClass: overlayWrapperComponent_1.OverlayWrapperComponent }\n        ];\n        if (Grid.enterpriseComponents) {\n            components = components.concat(Grid.enterpriseComponents)\n                .concat(moduleEnterpriseComponents);\n        }\n        var contextParams = {\n            overrideBeans: overrideBeans,\n            seed: seed,\n            //Careful with the order of the beans here, there are dependencies between them that need to be kept\n            beans: [\n                // this should only contain SERVICES, it should NEVER contain COMPONENTS\n                rowModelClass, beans_1.Beans, paginationProxy_1.PaginationAutoPageSizeService, gridApi_1.GridApi, userComponentRegistry_1.UserComponentRegistry, agComponentUtils_1.AgComponentUtils,\n                componentMetadataProvider_1.ComponentMetadataProvider, resizeObserverService_1.ResizeObserverService, userComponentRegistry_1.UserComponentRegistry, userComponentFactory_1.UserComponentFactory,\n                maxDivHeightScaler_1.MaxDivHeightScaler, autoHeightCalculator_1.AutoHeightCalculator, cellRendererFactory_1.CellRendererFactory, horizontalResizeService_1.HorizontalResizeService,\n                pinnedRowModel_1.PinnedRowModel, dragService_1.DragService, displayedGroupCreator_1.DisplayedGroupCreator, eventService_1.EventService, gridOptionsWrapper_1.GridOptionsWrapper, popupService_1.PopupService,\n                selectionController_1.SelectionController, filterManager_1.FilterManager, columnController_1.ColumnController, paginationProxy_1.PaginationProxy, rowRenderer_1.RowRenderer, expressionService_1.ExpressionService,\n                columnFactory_1.ColumnFactory, csvCreator_1.CsvCreator, downloader_1.Downloader, xmlFactory_1.XmlFactory, gridSerializer_1.GridSerializer, templateService_1.TemplateService, alignedGridsService_1.AlignedGridsService,\n                navigationService_1.NavigationService, popupService_1.PopupService, valueCache_1.ValueCache, valueService_1.ValueService, logger_1.LoggerFactory, columnUtils_1.ColumnUtils, autoWidthCalculator_1.AutoWidthCalculator,\n                standardMenu_1.StandardMenuFactory, dragAndDropService_1.DragAndDropService, columnApi_1.ColumnApi, focusedCellController_1.FocusedCellController, mouseEventService_1.MouseEventService, environment_1.Environment,\n                cellNavigationService_1.CellNavigationService, filterStage_1.FilterStage, sortStage_1.SortStage, flattenStage_1.FlattenStage, filterService_1.FilterService,\n                valueFormatterService_1.ValueFormatterService, stylingService_1.StylingService, scrollVisibleService_1.ScrollVisibleService, sortController_1.SortController,\n                columnHoverService_1.ColumnHoverService, columnAnimationService_1.ColumnAnimationService, sortService_1.SortService, selectableService_1.SelectableService, autoGroupColService_1.AutoGroupColService,\n                immutableService_1.ImmutableService, changeDetectionService_1.ChangeDetectionService, animationFrameService_1.AnimationFrameService, tooltipManager_1.TooltipManager, zipContainer_1.ZipContainer\n            ].concat(moduleBeans),\n            components: components,\n            enterpriseDefaultComponents: Grid.enterpriseDefaultComponents.concat(modulesEnterpriseDefaultComponents),\n            registeredModules: Grid.modulesToInclude.map(function (module) { return module.moduleName; }),\n            debug: !!gridOptions.debug\n        };\n        this.logger = new logger_1.Logger('ag-Grid', function () { return gridOptions.debug; });\n        var contextLogger = new logger_1.Logger('Context', function () { return contextParams.debug; });\n        this.context = new context_1.Context(contextParams, contextLogger);\n        var gridCore = new gridCore_1.GridCore();\n        this.context.wireBean(gridCore);\n        this.setColumnsAndData();\n        this.dispatchGridReadyEvent(gridOptions);\n        this.logger.log(\"initialised successfully, enterprise = \" + enterprise);\n    }\n    Grid.setEnterpriseBeans = function (enterpriseBeans, rowModelClasses) {\n        Grid.enterpriseBeans = enterpriseBeans;\n        // the enterprise can inject additional row models. this is how it injects the viewportRowModel\n        utils_1._.iterateObject(rowModelClasses, function (key, value) { return Grid.RowModelClasses[key] = value; });\n    };\n    Grid.setEnterpriseComponents = function (components) {\n        Grid.enterpriseComponents = components;\n    };\n    Grid.setFrameworkBeans = function (frameworkBeans) {\n        Grid.frameworkBeans = frameworkBeans;\n    };\n    Grid.setEnterpriseDefaultComponents = function (enterpriseDefaultComponents) {\n        Grid.enterpriseDefaultComponents = enterpriseDefaultComponents;\n    };\n    Grid.addModule = function (modulesToInclude) {\n        var _a;\n        // de-duping would need to be done here (while ensuring order etc)\n        (_a = Grid.modulesToInclude).push.apply(_a, modulesToInclude);\n    };\n    Grid.prototype.extractModuleEntity = function (moduleEntities, extractor) {\n        return [].concat.apply([], moduleEntities.map(extractor));\n    };\n    Grid.prototype.setColumnsAndData = function () {\n        var gridOptionsWrapper = this.context.getBean('gridOptionsWrapper');\n        var columnController = this.context.getBean('columnController');\n        var rowModel = this.context.getBean('rowModel');\n        var columnDefs = gridOptionsWrapper.getColumnDefs();\n        var rowData = gridOptionsWrapper.getRowData();\n        var nothingToSet = utils_1._.missing(columnDefs) && utils_1._.missing(rowData);\n        if (nothingToSet) {\n            return;\n        }\n        if (utils_1._.exists(columnDefs)) {\n            columnController.setColumnDefs(columnDefs, \"gridInitializing\");\n        }\n        if (utils_1._.exists(rowData) && rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            var clientSideRowModel = rowModel;\n            clientSideRowModel.setRowData(rowData);\n        }\n    };\n    Grid.prototype.dispatchGridReadyEvent = function (gridOptions) {\n        var eventService = this.context.getBean('eventService');\n        var readyEvent = {\n            type: events_1.Events.EVENT_GRID_READY,\n            api: gridOptions.api,\n            columnApi: gridOptions.columnApi\n        };\n        eventService.dispatchEvent(readyEvent);\n    };\n    Grid.prototype.getRowModelClass = function (gridOptions) {\n        var rowModelType = gridOptions.rowModelType;\n        //TODO: temporary measure before 'enterprise' is completely removed (similar handling in gridOptionsWrapper is also required)\n        rowModelType = rowModelType === 'enterprise' ? constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE : rowModelType;\n        if (utils_1._.exists(rowModelType)) {\n            var rowModelClass = Grid.RowModelClasses[rowModelType];\n            if (utils_1._.exists(rowModelClass)) {\n                return rowModelClass;\n            }\n            else {\n                if (rowModelType === 'normal') {\n                    console.warn(\"ag-Grid: normal rowModel deprecated. Should now be called client side row model instead.\");\n                    return clientSideRowModel_1.ClientSideRowModel;\n                }\n                console.error('ag-Grid: could not find matching row model for rowModelType ' + rowModelType);\n                if (rowModelType === constants_1.Constants.ROW_MODEL_TYPE_VIEWPORT) {\n                    console.error('ag-Grid: rowModelType viewport is only available in ag-Grid Enterprise');\n                }\n                if (rowModelType === constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE) {\n                    console.error('ag-Grid: rowModelType server side is only available in ag-Grid Enterprise');\n                }\n            }\n        }\n        return clientSideRowModel_1.ClientSideRowModel;\n    };\n    Grid.prototype.destroy = function () {\n        this.gridOptions.api.destroy();\n    };\n    Grid.enterpriseBeans = [];\n    Grid.enterpriseComponents = [];\n    Grid.enterpriseDefaultComponents = [];\n    Grid.modulesToInclude = [];\n    // the default is ClientSideRowModel, which is also used for pagination.\n    // the enterprise adds viewport to this list.\n    Grid.RowModelClasses = {\n        infinite: infiniteRowModel_1.InfiniteRowModel,\n        clientSide: clientSideRowModel_1.ClientSideRowModel\n    };\n    return Grid;\n}());\nexports.Grid = Grid;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar column_1 = require(\"../entities/column\");\nvar context_1 = require(\"../context/context\");\nvar headerContainer_1 = require(\"./headerContainer\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar component_1 = require(\"../widgets/component\");\nvar componentAnnotations_1 = require(\"../widgets/componentAnnotations\");\nvar gridApi_1 = require(\"../gridApi\");\nvar autoWidthCalculator_1 = require(\"../rendering/autoWidthCalculator\");\nvar constants_1 = require(\"../constants\");\nvar utils_1 = require(\"../utils\");\nvar HeaderRootComp = /** @class */ (function (_super) {\n    __extends(HeaderRootComp, _super);\n    function HeaderRootComp() {\n        return _super.call(this, HeaderRootComp.TEMPLATE) || this;\n    }\n    HeaderRootComp.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n        this.childContainers.forEach(function (c) { return c.registerGridComp(gridPanel); });\n    };\n    HeaderRootComp.prototype.postConstruct = function () {\n        var _this = this;\n        this.printLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        this.gridApi.registerHeaderRootComp(this);\n        this.autoWidthCalculator.registerHeaderRootComp(this);\n        var centerContainer = new headerContainer_1.HeaderContainer(this.eHeaderContainer, this.eHeaderViewport, null);\n        var pinnedLeftContainer = new headerContainer_1.HeaderContainer(this.ePinnedLeftHeader, null, column_1.Column.PINNED_LEFT);\n        var pinnedRightContainer = new headerContainer_1.HeaderContainer(this.ePinnedRightHeader, null, column_1.Column.PINNED_RIGHT);\n        this.childContainers = [centerContainer, pinnedLeftContainer, pinnedRightContainer];\n        this.childContainers.forEach(function (container) { return _this.getContext().wireBean(container); });\n        // shotgun way to get labels to change, eg from sum(amount) to avg(amount)\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.refreshHeader.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n        // for setting ag-pivot-on / ag-pivot-off CSS classes\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this));\n        this.onPivotModeChanged();\n        this.addPreventHeaderScroll();\n        if (this.columnController.isReady()) {\n            this.refreshHeader();\n        }\n    };\n    HeaderRootComp.prototype.onDomLayoutChanged = function () {\n        var newValue = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        if (this.printLayout !== newValue) {\n            this.printLayout = newValue;\n            this.refreshHeader();\n        }\n    };\n    HeaderRootComp.prototype.setHorizontalScroll = function (offset) {\n        this.eHeaderContainer.style.transform = \"translateX(\" + offset + \"px)\";\n    };\n    HeaderRootComp.prototype.forEachHeaderElement = function (callback) {\n        this.childContainers.forEach(function (childContainer) { return childContainer.forEachHeaderElement(callback); });\n    };\n    HeaderRootComp.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.childContainers.forEach(function (container) { return container.destroy(); });\n    };\n    HeaderRootComp.prototype.refreshHeader = function () {\n        this.childContainers.forEach(function (container) { return container.refresh(); });\n    };\n    HeaderRootComp.prototype.onPivotModeChanged = function () {\n        var pivotMode = this.columnController.isPivotMode();\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-pivot-on', pivotMode);\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-pivot-off', !pivotMode);\n    };\n    HeaderRootComp.prototype.setHeight = function (height) {\n        var px = height + \"px\";\n        this.getGui().style.height = px;\n        this.getGui().style.minHeight = px;\n    };\n    // if the user is in floating filter and hits tab a few times, the header can\n    // end up scrolling to show items off the screen, leaving the grid and header\n    // and the grid columns no longer in sync.\n    HeaderRootComp.prototype.addPreventHeaderScroll = function () {\n        var _this = this;\n        this.addDestroyableEventListener(this.eHeaderViewport, 'scroll', function () {\n            // if the header scrolls, the header will be out of sync. so we reset the\n            // header scroll, and then scroll the body, which will in turn set the offset\n            // on the header, giving the impression that the header scrolled as expected.\n            var scrollLeft = _this.eHeaderViewport.scrollLeft;\n            if (scrollLeft !== 0) {\n                _this.gridPanel.scrollHorizontally(scrollLeft);\n                _this.eHeaderViewport.scrollLeft = 0;\n            }\n        });\n    };\n    HeaderRootComp.prototype.setHeaderContainerWidth = function (width) {\n        this.eHeaderContainer.style.width = width + \"px\";\n    };\n    HeaderRootComp.prototype.setLeftVisible = function (visible) {\n        utils_1._.setVisible(this.ePinnedLeftHeader, visible);\n    };\n    HeaderRootComp.prototype.setRightVisible = function (visible) {\n        utils_1._.setVisible(this.ePinnedRightHeader, visible);\n    };\n    HeaderRootComp.TEMPLATE = \"<div class=\\\"ag-header\\\" role=\\\"row\\\">\\n            <div class=\\\"ag-pinned-left-header\\\" ref=\\\"ePinnedLeftHeader\\\" role=\\\"presentation\\\"></div>\\n            <div class=\\\"ag-header-viewport\\\" ref=\\\"eHeaderViewport\\\" role=\\\"presentation\\\">\\n                <div class=\\\"ag-header-container\\\" ref=\\\"eHeaderContainer\\\" role=\\\"presentation\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-header\\\" ref=\\\"ePinnedRightHeader\\\" role=\\\"presentation\\\"></div>\\n        </div>\";\n    __decorate([\n        componentAnnotations_1.RefSelector('ePinnedLeftHeader'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderRootComp.prototype, \"ePinnedLeftHeader\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('ePinnedRightHeader'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderRootComp.prototype, \"ePinnedRightHeader\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eHeaderContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderRootComp.prototype, \"eHeaderContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eHeaderViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderRootComp.prototype, \"eHeaderViewport\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderRootComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], HeaderRootComp.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], HeaderRootComp.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], HeaderRootComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('autoWidthCalculator'),\n        __metadata(\"design:type\", autoWidthCalculator_1.AutoWidthCalculator)\n    ], HeaderRootComp.prototype, \"autoWidthCalculator\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeaderRootComp.prototype, \"postConstruct\", null);\n    return HeaderRootComp;\n}(component_1.Component));\nexports.HeaderRootComp = HeaderRootComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar columnApi_1 = require(\"../columnController/columnApi\");\nvar rowRenderer_1 = require(\"../rendering/rowRenderer\");\nvar context_1 = require(\"../context/context\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar dragService_1 = require(\"../dragAndDrop/dragService\");\nvar constants_1 = require(\"../constants\");\nvar mouseEventService_1 = require(\"./mouseEventService\");\nvar focusedCellController_1 = require(\"../focusedCellController\");\nvar scrollVisibleService_1 = require(\"./scrollVisibleService\");\nvar rowContainerComponent_1 = require(\"../rendering/rowContainerComponent\");\nvar paginationProxy_1 = require(\"../rowModels/paginationProxy\");\nvar popupEditorWrapper_1 = require(\"../rendering/cellEditors/popupEditorWrapper\");\nvar alignedGridsService_1 = require(\"../alignedGridsService\");\nvar pinnedRowModel_1 = require(\"../rowModels/pinnedRowModel\");\nvar gridApi_1 = require(\"../gridApi\");\nvar animationFrameService_1 = require(\"../misc/animationFrameService\");\nvar rowComp_1 = require(\"../rendering/rowComp\");\nvar navigationService_1 = require(\"./navigationService\");\nvar valueService_1 = require(\"../valueService/valueService\");\nvar touchListener_1 = require(\"../widgets/touchListener\");\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar rowDragFeature_1 = require(\"./rowDragFeature\");\nvar maxDivHeightScaler_1 = require(\"../rendering/maxDivHeightScaler\");\nvar overlayWrapperComponent_1 = require(\"../rendering/overlays/overlayWrapperComponent\");\nvar component_1 = require(\"../widgets/component\");\nvar autoHeightCalculator_1 = require(\"../rendering/autoHeightCalculator\");\nvar columnAnimationService_1 = require(\"../rendering/columnAnimationService\");\nvar autoWidthCalculator_1 = require(\"../rendering/autoWidthCalculator\");\nvar beans_1 = require(\"../rendering/beans\");\nvar componentAnnotations_1 = require(\"../widgets/componentAnnotations\");\nvar headerRootComp_1 = require(\"../headerRendering/headerRootComp\");\nvar resizeObserverService_1 = require(\"../misc/resizeObserverService\");\nvar utils_1 = require(\"../utils\");\n// in the html below, it is important that there are no white space between some of the divs, as if there is white space,\n// it won't render correctly in safari, as safari renders white space as a gap\nvar GRID_PANEL_NORMAL_TEMPLATE = \"<div class=\\\"ag-root ag-unselectable\\\" role=\\\"grid\\\" unselectable=\\\"on\\\">\\n        <ag-header-root ref=\\\"headerRoot\\\" unselectable=\\\"on\\\"></ag-header-root>\\n        <div class=\\\"ag-floating-top\\\" ref=\\\"eTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-top\\\" ref=\\\"eLeftTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-viewport\\\" ref=\\\"eTopViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-top-container\\\" ref=\\\"eTopContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-top\\\" ref=\\\"eRightTop\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-top-full-width-container\\\" ref=\\\"eTopFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-viewport\\\" ref=\\\"eBodyViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-cols-container\\\" ref=\\\"eLeftContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-center-cols-clipper\\\" ref=\\\"eCenterColsClipper\\\">\\n                <div class=\\\"ag-center-cols-viewport\\\" ref=\\\"eCenterViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                    <div class=\\\"ag-center-cols-container\\\" ref=\\\"eCenterContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-cols-container\\\" ref=\\\"eRightContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-full-width-container\\\" ref=\\\"eFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-floating-bottom\\\" ref=\\\"eBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n            <div class=\\\"ag-pinned-left-floating-bottom\\\" ref=\\\"eLeftBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-viewport\\\" ref=\\\"eBottomViewport\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\">\\n                <div class=\\\"ag-floating-bottom-container\\\" ref=\\\"eBottomContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            </div>\\n            <div class=\\\"ag-pinned-right-floating-bottom\\\" ref=\\\"eRightBottom\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n            <div class=\\\"ag-floating-bottom-full-width-container\\\" ref=\\\"eBottomFullWidthContainer\\\" role=\\\"presentation\\\" unselectable=\\\"on\\\"></div>\\n        </div>\\n        <div class=\\\"ag-body-horizontal-scroll\\\" ref=\\\"eHorizontalScrollBody\\\">\\n            <div class=\\\"ag-horizontal-left-spacer\\\" ref=\\\"eHorizontalLeftSpacer\\\"></div>\\n            <div class=\\\"ag-body-horizontal-scroll-viewport\\\" ref=\\\"eBodyHorizontalScrollViewport\\\">\\n                <div class=\\\"ag-body-horizontal-scroll-container\\\" ref=\\\"eBodyHorizontalScrollContainer\\\"></div>\\n            </div>\\n            <div class=\\\"ag-horizontal-right-spacer\\\" ref=\\\"eHorizontalRightSpacer\\\"></div>\\n        </div>\\n        <ag-overlay-wrapper ref=\\\"overlayWrapper\\\"></ag-overlay-wrapper>\\n    </div>\";\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super.call(this, GRID_PANEL_NORMAL_TEMPLATE) || this;\n        _this.scrollLeft = -1;\n        _this.scrollTop = -1;\n        _this.nextScrollTop = -1;\n        _this.resetLastHorizontalScrollElementDebounce = utils_1._.debounce(_this.resetLastHorizontalScrollElement.bind(_this), 500);\n        return _this;\n    }\n    GridPanel.prototype.getVScrollPosition = function () {\n        var result = {\n            top: this.eBodyViewport.scrollTop,\n            bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight\n        };\n        return result;\n    };\n    GridPanel.prototype.getHScrollPosition = function () {\n        var result = {\n            left: this.eCenterViewport.scrollLeft,\n            right: this.eCenterViewport.scrollLeft + this.eCenterViewport.offsetWidth\n        };\n        return result;\n    };\n    GridPanel.prototype.onRowDataChanged = function () {\n        this.showOrHideOverlay();\n    };\n    GridPanel.prototype.showOrHideOverlay = function () {\n        var isEmpty = this.paginationProxy.isEmpty();\n        var isSuppressNoRowsOverlay = this.gridOptionsWrapper.isSuppressNoRowsOverlay();\n        var method = isEmpty && !isSuppressNoRowsOverlay ? 'showNoRowsOverlay' : 'hideOverlay';\n        this[method]();\n    };\n    GridPanel.prototype.onNewColumnsLoaded = function () {\n        // hide overlay if columns and rows exist, this can happen if columns are loaded after data.\n        // this problem exists before of the race condition between the services (column controller in this case)\n        // and the view (grid panel). if the model beans were all initialised first, and then the view beans second,\n        // this race condition would not happen.\n        if (this.columnController.isReady() && !this.paginationProxy.isEmpty()) {\n            this.hideOverlay();\n        }\n    };\n    GridPanel.prototype.init = function () {\n        var _this = this;\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        this.enableRtl = this.gridOptionsWrapper.isEnableRtl();\n        this.printLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        // these elements have different CSS when layout changes\n        this.gridOptionsWrapper.addLayoutElement(this.getGui());\n        this.gridOptionsWrapper.addLayoutElement(this.eBodyViewport);\n        this.suppressScrollOnFloatingRow();\n        this.setupRowAnimationCssClass();\n        this.buildRowContainerComponents();\n        this.addEventListeners();\n        this.addDragListeners();\n        this.addScrollListener();\n        if (this.gridOptionsWrapper.isRowModelDefault() && !this.gridOptionsWrapper.getRowData()) {\n            this.showLoadingOverlay();\n        }\n        this.setCellTextSelection(this.gridOptionsWrapper.isEnableCellTextSelect());\n        this.setPinnedContainerSize();\n        this.setHeaderAndFloatingHeights();\n        this.disableBrowserDragging();\n        this.addMouseListeners();\n        this.addKeyboardEvents();\n        this.addBodyViewportListener();\n        this.addStopEditingWhenGridLosesFocus();\n        this.mockContextMenuForIPad();\n        this.addRowDragListener();\n        if (this.$scope) {\n            this.addAngularApplyCheck();\n        }\n        this.onDisplayedColumnsWidthChanged();\n        this.gridApi.registerGridComp(this);\n        this.alignedGridsService.registerGridComp(this);\n        this.headerRootComp.registerGridComp(this);\n        this.navigationService.registerGridComp(this);\n        this.heightScaler.registerGridComp(this);\n        this.autoHeightCalculator.registerGridComp(this);\n        this.columnAnimationService.registerGridComp(this);\n        this.autoWidthCalculator.registerGridComp(this);\n        this.paginationAutoPageSizeService.registerGridComp(this);\n        this.beans.registerGridComp(this);\n        this.rowRenderer.registerGridComp(this);\n        this.animationFrameService.registerGridComp(this);\n        if (this.rangeController) {\n            this.rangeController.registerGridComp(this);\n        }\n        [this.eCenterViewport, this.eBodyViewport].forEach(function (viewport) {\n            var unsubscribeFromResize = _this.resizeObserverService.observeResize(viewport, _this.onCenterViewportResized.bind(_this));\n            _this.addDestroyFunc(function () { return unsubscribeFromResize(); });\n        });\n    };\n    GridPanel.prototype.onDomLayoutChanged = function () {\n        var newPrintLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        if (this.printLayout !== newPrintLayout) {\n            this.printLayout = newPrintLayout;\n            this.setWidthsOfContainers();\n            // pinned containers are always hidden for print layout\n            this.setPinnedContainerSize();\n        }\n    };\n    GridPanel.prototype.onCenterViewportResized = function () {\n        if (utils_1._.isVisible(this.eCenterViewport)) {\n            this.checkViewportAndScrolls();\n        }\n    };\n    // used by ColumnAnimationService\n    GridPanel.prototype.setColumnMovingCss = function (moving) {\n        this.addOrRemoveCssClass('ag-column-moving', moving);\n    };\n    GridPanel.prototype.setCellTextSelection = function (selectable) {\n        if (selectable === void 0) { selectable = false; }\n        [this.eTop, this.eCenterContainer, this.eBottom]\n            .forEach(function (ct) { return utils_1._.addOrRemoveCssClass(ct, 'ag-selectable', selectable); });\n    };\n    GridPanel.prototype.addRowDragListener = function () {\n        var rowDragFeature = new rowDragFeature_1.RowDragFeature(this.eBodyViewport, this);\n        this.getContext().wireBean(rowDragFeature);\n        this.dragAndDropService.addDropTarget(rowDragFeature);\n    };\n    GridPanel.prototype.addStopEditingWhenGridLosesFocus = function () {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isStopEditingWhenGridLosesFocus()) {\n            return;\n        }\n        var focusOutListener = function (event) {\n            // this is the element the focus is moving to\n            var elementWithFocus = event.relatedTarget;\n            // see if the element the focus is going to is part of the grid\n            var clickInsideGrid = false;\n            var pointer = elementWithFocus;\n            while (utils_1._.exists(pointer) && !clickInsideGrid) {\n                var isPopup = !!_this.gridOptionsWrapper.getDomData(pointer, popupEditorWrapper_1.PopupEditorWrapper.DOM_KEY_POPUP_EDITOR_WRAPPER);\n                var isBody = _this.eBodyViewport === pointer || _this.eBottom === pointer || _this.eTop === pointer;\n                clickInsideGrid = isPopup || isBody;\n                pointer = pointer.parentNode;\n            }\n            if (!clickInsideGrid) {\n                _this.rowRenderer.stopEditing();\n            }\n        };\n        this.addDestroyableEventListener(this.eBodyViewport, 'focusout', focusOutListener);\n        this.addDestroyableEventListener(this.eTop, 'focusout', focusOutListener);\n        this.addDestroyableEventListener(this.eBottom, 'focusout', focusOutListener);\n    };\n    GridPanel.prototype.addAngularApplyCheck = function () {\n        var _this = this;\n        // this makes sure if we queue up requests, we only execute oe\n        var applyTriggered = false;\n        var listener = function () {\n            // only need to do one apply at a time\n            if (applyTriggered) {\n                return;\n            }\n            applyTriggered = true; // mark 'need apply' to true\n            window.setTimeout(function () {\n                applyTriggered = false;\n                _this.$scope.$apply();\n            }, 0);\n        };\n        // these are the events we need to do an apply after - these are the ones that can end up\n        // with columns added or removed\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_VIRTUAL_COLUMNS_CHANGED, listener);\n    };\n    // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\n    // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\n    GridPanel.prototype.disableBrowserDragging = function () {\n        this.addGuiEventListener('dragstart', function (event) {\n            if (event.target instanceof HTMLImageElement) {\n                event.preventDefault();\n                return false;\n            }\n        });\n    };\n    GridPanel.prototype.addEventListeners = function () {\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_PINNED_ROW_DATA_CHANGED, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_ROW_DATA_CHANGED, this.onRowDataChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_ROW_DATA_UPDATED, this.onRowDataChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.setHeaderAndFloatingHeights.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this));\n    };\n    GridPanel.prototype.addDragListeners = function () {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isEnableRangeSelection() || // no range selection if no property\n            utils_1._.missing(this.rangeController) // no range selection if not enterprise version\n        ) {\n            return;\n        }\n        var containers = [\n            this.eLeftContainer,\n            this.eRightContainer,\n            this.eCenterContainer,\n            this.eTop,\n            this.eBottom\n        ];\n        containers.forEach(function (container) {\n            var params = {\n                eElement: container,\n                onDragStart: _this.rangeController.onDragStart.bind(_this.rangeController),\n                onDragStop: _this.rangeController.onDragStop.bind(_this.rangeController),\n                onDragging: _this.rangeController.onDragging.bind(_this.rangeController)\n            };\n            _this.dragService.addDragSource(params);\n            _this.addDestroyFunc(function () { return _this.dragService.removeDragSource(params); });\n        });\n    };\n    GridPanel.prototype.addMouseListeners = function () {\n        var _this = this;\n        var eventNames = ['click', 'mousedown', 'dblclick', 'contextmenu', 'mouseover', 'mouseout'];\n        eventNames.forEach(function (eventName) {\n            var listener = _this.processMouseEvent.bind(_this, eventName);\n            _this.eAllCellContainers.forEach(function (container) {\n                return _this.addDestroyableEventListener(container, eventName, listener);\n            });\n        });\n    };\n    GridPanel.prototype.addKeyboardEvents = function () {\n        var _this = this;\n        var eventNames = ['keydown', 'keypress'];\n        eventNames.forEach(function (eventName) {\n            var listener = _this.processKeyboardEvent.bind(_this, eventName);\n            _this.eAllCellContainers.forEach(function (container) {\n                _this.addDestroyableEventListener(container, eventName, listener);\n            });\n        });\n    };\n    GridPanel.prototype.addBodyViewportListener = function () {\n        var _this = this;\n        // we want to listen for clicks directly on the eBodyViewport, so the user has a way of showing\n        // the context menu if no rows or columns are displayed, or user simply clicks outside of a cell\n        var listener = function (mouseEvent) {\n            var target = utils_1._.getTarget(mouseEvent);\n            if (target === _this.eBodyViewport || target === _this.eCenterViewport) {\n                // show it\n                _this.onContextMenu(mouseEvent, null, null, null, null);\n                _this.preventDefaultOnContextMenu(mouseEvent);\n            }\n        };\n        //For some reason listening only to this.eBody doesn't work... Maybe because the event is consumed somewhere else?\n        //In any case, not expending much time on this, if anyone comes across this and knows how to make this work with\n        //one listener please go ahead and change it...\n        this.addDestroyableEventListener(this.eBodyViewport, 'contextmenu', listener);\n    };\n    // + rangeController - used to know when to scroll when user is dragging outside the\n    // main viewport while doing a range selection\n    GridPanel.prototype.getBodyClientRect = function () {\n        if (!this.eBodyViewport) {\n            return;\n        }\n        return this.eBodyViewport.getBoundingClientRect();\n    };\n    GridPanel.prototype.getRowForEvent = function (event) {\n        var sourceElement = utils_1._.getTarget(event);\n        while (sourceElement) {\n            var renderedRow = this.gridOptionsWrapper.getDomData(sourceElement, rowComp_1.RowComp.DOM_DATA_KEY_RENDERED_ROW);\n            if (renderedRow) {\n                return renderedRow;\n            }\n            sourceElement = sourceElement.parentElement;\n        }\n        return null;\n    };\n    GridPanel.prototype.processKeyboardEvent = function (eventName, keyboardEvent) {\n        var cellComp = utils_1._.getCellCompForEvent(this.gridOptionsWrapper, keyboardEvent);\n        if (!cellComp) {\n            return;\n        }\n        var rowNode = cellComp.getRenderedRow().getRowNode();\n        var column = cellComp.getColumn();\n        var editing = cellComp.isEditing();\n        var gridProcessingAllowed = !utils_1._.isUserSuppressingKeyboardEvent(this.gridOptionsWrapper, keyboardEvent, rowNode, column, editing);\n        if (gridProcessingAllowed) {\n            switch (eventName) {\n                case 'keydown':\n                    // first see if it's a scroll key, page up / down, home / end etc\n                    var wasScrollKey = !editing && this.navigationService.handlePageScrollingKey(keyboardEvent);\n                    // if not a scroll key, then we pass onto cell\n                    if (!wasScrollKey) {\n                        cellComp.onKeyDown(keyboardEvent);\n                    }\n                    this.doClipboardOperations(keyboardEvent, cellComp);\n                    break;\n                case 'keypress':\n                    cellComp.onKeyPress(keyboardEvent);\n                    break;\n            }\n        }\n        if (eventName === 'keydown') {\n            var cellKeyDownEvent = cellComp.createEvent(keyboardEvent, events_1.Events.EVENT_CELL_KEY_DOWN);\n            this.beans.eventService.dispatchEvent(cellKeyDownEvent);\n        }\n        if (eventName === 'keypress') {\n            var cellKeyPressEvent = cellComp.createEvent(keyboardEvent, events_1.Events.EVENT_CELL_KEY_PRESS);\n            this.beans.eventService.dispatchEvent(cellKeyPressEvent);\n        }\n    };\n    GridPanel.prototype.doClipboardOperations = function (keyboardEvent, cellComp) {\n        // check if ctrl or meta key pressed\n        if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\n            return;\n        }\n        // if the cell the event came from is editing, then we do not\n        // want to do the default shortcut keys, otherwise the editor\n        // (eg a text field) would not be able to do the normal cut/copy/paste\n        if (cellComp.isEditing()) {\n            return;\n        }\n        // for copy / paste, we don't want to execute when the event\n        // was from a child grid (happens in master detail)\n        if (!this.mouseEventService.isEventFromThisGrid(keyboardEvent)) {\n            return;\n        }\n        switch (keyboardEvent.which) {\n            case constants_1.Constants.KEY_A:\n                return this.onCtrlAndA(keyboardEvent);\n            case constants_1.Constants.KEY_C:\n                return this.onCtrlAndC(keyboardEvent);\n            case constants_1.Constants.KEY_V:\n                return this.onCtrlAndV();\n            case constants_1.Constants.KEY_D:\n                return this.onCtrlAndD(keyboardEvent);\n        }\n    };\n    // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\n    GridPanel.prototype.scrollToTop = function () {\n        this.eBodyViewport.scrollTop = 0;\n    };\n    GridPanel.prototype.processMouseEvent = function (eventName, mouseEvent) {\n        if (!this.mouseEventService.isEventFromThisGrid(mouseEvent) ||\n            utils_1._.isStopPropagationForAgGrid(mouseEvent)) {\n            return;\n        }\n        var rowComp = this.getRowForEvent(mouseEvent);\n        var cellComp = this.mouseEventService.getRenderedCellForEvent(mouseEvent);\n        if (eventName === \"contextmenu\") {\n            this.handleContextMenuMouseEvent(mouseEvent, null, rowComp, cellComp);\n        }\n        else {\n            if (cellComp) {\n                cellComp.onMouseEvent(eventName, mouseEvent);\n            }\n            if (rowComp) {\n                rowComp.onMouseEvent(eventName, mouseEvent);\n            }\n        }\n        this.preventDefaultOnContextMenu(mouseEvent);\n    };\n    GridPanel.prototype.mockContextMenuForIPad = function () {\n        var _this = this;\n        // we do NOT want this when not in iPad, otherwise we will be doing\n        if (!utils_1._.isUserAgentIPad()) {\n            return;\n        }\n        this.eAllCellContainers.forEach(function (container) {\n            var touchListener = new touchListener_1.TouchListener(container);\n            var longTapListener = function (event) {\n                var rowComp = _this.getRowForEvent(event.touchEvent);\n                var cellComp = _this.mouseEventService.getRenderedCellForEvent(event.touchEvent);\n                _this.handleContextMenuMouseEvent(null, event.touchEvent, rowComp, cellComp);\n            };\n            _this.addDestroyableEventListener(touchListener, touchListener_1.TouchListener.EVENT_LONG_TAP, longTapListener);\n            _this.addDestroyFunc(function () { return touchListener.destroy(); });\n        });\n    };\n    GridPanel.prototype.handleContextMenuMouseEvent = function (mouseEvent, touchEvent, rowComp, cellComp) {\n        var rowNode = rowComp ? rowComp.getRowNode() : null;\n        var column = cellComp ? cellComp.getColumn() : null;\n        var value = null;\n        if (column) {\n            var event_1 = mouseEvent ? mouseEvent : touchEvent;\n            cellComp.dispatchCellContextMenuEvent(event_1);\n            value = this.valueService.getValue(column, rowNode);\n        }\n        this.onContextMenu(mouseEvent, touchEvent, rowNode, column, value);\n    };\n    GridPanel.prototype.onContextMenu = function (mouseEvent, touchEvent, rowNode, column, value) {\n        // to allow us to debug in chrome, we ignore the event if ctrl is pressed.\n        // not everyone wants this, so first 'if' below allows to turn this hack off.\n        if (!this.gridOptionsWrapper.isAllowContextMenuWithControlKey()) {\n            // then do the check\n            if (mouseEvent && (mouseEvent.ctrlKey || mouseEvent.metaKey)) {\n                return;\n            }\n        }\n        if (this.contextMenuFactory && !this.gridOptionsWrapper.isSuppressContextMenu()) {\n            var eventOrTouch = mouseEvent ? mouseEvent : touchEvent.touches[0];\n            this.contextMenuFactory.showMenu(rowNode, column, value, eventOrTouch);\n            var event_2 = mouseEvent ? mouseEvent : touchEvent;\n            event_2.preventDefault();\n        }\n    };\n    GridPanel.prototype.preventDefaultOnContextMenu = function (mouseEvent) {\n        // if we don't do this, then middle click will never result in a 'click' event, as 'mousedown'\n        // will be consumed by the browser to mean 'scroll' (as you can scroll with the middle mouse\n        // button in the browser). so this property allows the user to receive middle button clicks if\n        // they want.\n        if (this.gridOptionsWrapper.isSuppressMiddleClickScrolls() && mouseEvent.which === 2) {\n            mouseEvent.preventDefault();\n        }\n    };\n    GridPanel.prototype.onCtrlAndA = function (event) {\n        var _a = this, columnController = _a.columnController, pinnedRowModel = _a.pinnedRowModel, paginationProxy = _a.paginationProxy, rangeController = _a.rangeController;\n        var PINNED_BOTTOM = constants_1.Constants.PINNED_BOTTOM, PINNED_TOP = constants_1.Constants.PINNED_TOP;\n        if (rangeController && paginationProxy.isRowsToRender()) {\n            var _b = [\n                pinnedRowModel.isEmpty(PINNED_TOP),\n                pinnedRowModel.isEmpty(PINNED_BOTTOM)\n            ], isEmptyPinnedTop = _b[0], isEmptyPinnedBottom = _b[1];\n            var floatingStart = isEmptyPinnedTop ? null : PINNED_TOP;\n            var floatingEnd = void 0;\n            var rowEnd = void 0;\n            if (isEmptyPinnedBottom) {\n                floatingEnd = null;\n                rowEnd = this.paginationProxy.getTotalRowCount() - 1;\n            }\n            else {\n                floatingEnd = PINNED_BOTTOM;\n                rowEnd = pinnedRowModel.getPinnedBottomRowData().length - 1;\n            }\n            var allDisplayedColumns = columnController.getAllDisplayedColumns();\n            if (utils_1._.missingOrEmpty(allDisplayedColumns)) {\n                return;\n            }\n            rangeController.setCellRange({\n                rowStartIndex: 0,\n                rowStartPinned: floatingStart,\n                rowEndIndex: rowEnd,\n                rowEndPinned: floatingEnd,\n                columnStart: allDisplayedColumns[0],\n                columnEnd: utils_1._.last(allDisplayedColumns)\n            });\n        }\n        event.preventDefault();\n    };\n    GridPanel.prototype.onCtrlAndC = function (event) {\n        if (!this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection()) {\n            return;\n        }\n        var focusedCell = this.focusedCellController.getFocusedCell();\n        this.clipboardService.copyToClipboard();\n        event.preventDefault();\n        // the copy operation results in loosing focus on the cell,\n        // because of the trickery the copy logic uses with a temporary\n        // widget. so we set it back again.\n        if (focusedCell) {\n            this.focusedCellController.setFocusedCell(focusedCell.rowIndex, focusedCell.column, focusedCell.rowPinned, true);\n        }\n    };\n    GridPanel.prototype.onCtrlAndV = function () {\n        if (!this.enterprise || this.gridOptionsWrapper.isSuppressClipboardPaste()) {\n            return;\n        }\n        this.clipboardService.pasteFromClipboard();\n    };\n    GridPanel.prototype.onCtrlAndD = function (event) {\n        if (!this.enterprise) {\n            return;\n        }\n        this.clipboardService.copyRangeDown();\n        event.preventDefault();\n    };\n    // Valid values for position are bottom, middle and top\n    // position should be {'top','middle','bottom', or undefined/null}.\n    // if undefined/null, then the grid will to the minimal amount of scrolling,\n    // eg if grid needs to scroll up, it scrolls until row is on top,\n    //    if grid needs to scroll down, it scrolls until row is on bottom,\n    //    if row is already in view, grid does not scroll\n    // fixme - how does this work in the new way\n    GridPanel.prototype.ensureIndexVisible = function (index, position) {\n        // if for print or auto height, everything is always visible\n        if (this.printLayout) {\n            return;\n        }\n        var rowCount = this.paginationProxy.getTotalRowCount();\n        if (typeof index !== 'number' || index < 0 || index >= rowCount) {\n            console.warn('invalid row index for ensureIndexVisible: ' + index);\n            return;\n        }\n        this.paginationProxy.goToPageWithIndex(index);\n        var rowNode = this.paginationProxy.getRow(index);\n        var rowGotShiftedDuringOperation;\n        do {\n            var startingRowTop = rowNode.rowTop;\n            var startingRowHeight = rowNode.rowHeight;\n            var paginationOffset = this.paginationProxy.getPixelOffset();\n            var rowTopPixel = rowNode.rowTop - paginationOffset;\n            var rowBottomPixel = rowTopPixel + rowNode.rowHeight;\n            var scrollPosition = this.getVScrollPosition();\n            var heightOffset = this.heightScaler.getOffset();\n            var vScrollTop = scrollPosition.top + heightOffset;\n            var vScrollBottom = scrollPosition.bottom + heightOffset;\n            var viewportHeight = vScrollBottom - vScrollTop;\n            // work out the pixels for top, middle and bottom up front,\n            // make the if/else below easier to read\n            var pxTop = this.heightScaler.getScrollPositionForPixel(rowTopPixel);\n            var pxBottom = this.heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\n            // make sure if middle, the row is not outside the top of the grid\n            var pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\n            var rowBelowViewport = vScrollTop > rowTopPixel;\n            var rowAboveViewport = vScrollBottom < rowBottomPixel;\n            var newScrollPosition = null;\n            if (position === 'top') {\n                newScrollPosition = pxTop;\n            }\n            else if (position === 'bottom') {\n                newScrollPosition = pxBottom;\n            }\n            else if (position === 'middle') {\n                newScrollPosition = pxMiddle;\n            }\n            else if (rowBelowViewport) {\n                // if row is before, scroll up with row at top\n                newScrollPosition = pxTop;\n            }\n            else if (rowAboveViewport) {\n                // if row is below, scroll down with row at bottom\n                newScrollPosition = pxBottom;\n            }\n            if (newScrollPosition !== null) {\n                this.eBodyViewport.scrollTop = newScrollPosition;\n                this.rowRenderer.redrawAfterScroll();\n            }\n            // the row can get shifted if during the rendering (during rowRenderer.redrawAfterScroll()),\n            // the height of a row changes due to lazy calculation of row heights when using\n            // colDef.autoHeight or gridOptions.getRowHeight.\n            // if row was shifted, then the position we scrolled to is incorrect.\n            rowGotShiftedDuringOperation = (startingRowTop !== rowNode.rowTop)\n                || (startingRowHeight !== rowNode.rowHeight);\n        } while (rowGotShiftedDuringOperation);\n        // so when we return back to user, the cells have rendered\n        this.animationFrameService.flushAllFrames();\n    };\n    // + moveColumnController\n    GridPanel.prototype.getCenterWidth = function () {\n        return this.eCenterViewport.clientWidth;\n    };\n    GridPanel.prototype.isVerticalScrollShowing = function () {\n        var isAlwaysShowVerticalScroll = this.gridOptionsWrapper.isAlwaysShowVerticalScroll();\n        utils_1._.addOrRemoveCssClass(this.eBodyViewport, 'ag-force-vertical-scroll', isAlwaysShowVerticalScroll);\n        return isAlwaysShowVerticalScroll || utils_1._.isVerticalScrollShowing(this.eBodyViewport);\n    };\n    GridPanel.prototype.isHorizontalScrollShowing = function () {\n        return utils_1._.isHorizontalScrollShowing(this.eCenterViewport);\n    };\n    // gets called every time the viewport size changes. we use this to check visibility of scrollbars\n    // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\n    GridPanel.prototype.checkViewportAndScrolls = function () {\n        // results in updating anything that depends on scroll showing\n        this.updateScrollVisibleService();\n        // fires event if height changes, used by PaginationService, HeightScalerService, RowRenderer\n        this.checkBodyHeight();\n        // check for virtual columns for ColumnController\n        this.onHorizontalViewportChanged();\n        this.setPinnedContainerSize();\n    };\n    GridPanel.prototype.updateScrollVisibleService = function () {\n        // because of column animation (which takes 200ms), we have to do this twice.\n        // eg if user removes cols anywhere except at the RHS, then the cols on the RHS\n        // will animate to the left to fill the gap. this animation means just after\n        // the cols are removed, the remaining cols are still in the original location\n        // at the start of the animation, so pre animation the H scrollbar is still needed,\n        // but post animation it is not.\n        this.updateScrollVisibleServiceImpl();\n        setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\n    };\n    GridPanel.prototype.updateScrollVisibleServiceImpl = function () {\n        var params = {\n            horizontalScrollShowing: false,\n            verticalScrollShowing: false\n        };\n        params.verticalScrollShowing = this.isVerticalScrollShowing();\n        params.horizontalScrollShowing = this.isHorizontalScrollShowing();\n        this.scrollVisibleService.setScrollsVisible(params);\n        this.setHorizontalScrollVisible(params.horizontalScrollShowing);\n        this.setVerticalScrollPaddingVisible(params.verticalScrollShowing);\n    };\n    GridPanel.prototype.setHorizontalScrollVisible = function (visible) {\n        var isSuppressHorizontalScroll = this.gridOptionsWrapper.isSuppressHorizontalScroll();\n        var scrollSize = visible ? (this.gridOptionsWrapper.getScrollbarWidth() || 0) : 0;\n        var scrollContainerSize = !isSuppressHorizontalScroll ? scrollSize : 0;\n        var addIEPadding = utils_1._.isBrowserIE() && visible;\n        this.eCenterViewport.style.height = \"calc(100% + \" + scrollSize + \"px)\";\n        utils_1._.setFixedHeight(this.eHorizontalScrollBody, scrollContainerSize);\n        // we have to add an extra pixel to the scroller viewport on IE because\n        // if the container has the same size as the scrollbar, the scroll button won't work\n        utils_1._.setFixedHeight(this.eBodyHorizontalScrollViewport, scrollContainerSize + (addIEPadding ? 1 : 0));\n        if (addIEPadding) {\n            this.eBodyHorizontalScrollViewport.style.bottom = '1px';\n        }\n        utils_1._.setFixedHeight(this.eBodyHorizontalScrollContainer, scrollContainerSize);\n    };\n    GridPanel.prototype.setVerticalScrollPaddingVisible = function (show) {\n        var scroller = show ? \"scroll\" : \"hidden\";\n        this.eTop.style.overflowY = this.eBottom.style.overflowY = scroller;\n        this.setFakeHScrollSpacerWidths();\n    };\n    GridPanel.prototype.ensureColumnVisible = function (key) {\n        var column = this.columnController.getGridColumn(key);\n        if (!column) {\n            return;\n        }\n        if (column.isPinned()) {\n            console.warn('calling ensureIndexVisible on a ' + column.getPinned() + ' pinned column doesn\\'t make sense for column ' + column.getColId());\n            return;\n        }\n        if (!this.columnController.isColumnDisplayed(column)) {\n            console.warn('column is not currently visible');\n            return;\n        }\n        var colLeftPixel = column.getLeft();\n        var colRightPixel = colLeftPixel + column.getActualWidth();\n        var viewportWidth = this.eCenterViewport.clientWidth;\n        var scrollPosition = this.getCenterViewportScrollLeft();\n        var bodyWidth = this.columnController.getBodyContainerWidth();\n        var viewportLeftPixel;\n        var viewportRightPixel;\n        // the logic of working out left and right viewport px is both here and in the ColumnController,\n        // need to refactor it out to one place\n        if (this.enableRtl) {\n            viewportLeftPixel = bodyWidth - scrollPosition - viewportWidth;\n            viewportRightPixel = bodyWidth - scrollPosition;\n        }\n        else {\n            viewportLeftPixel = scrollPosition;\n            viewportRightPixel = viewportWidth + scrollPosition;\n        }\n        var viewportScrolledPastCol = viewportLeftPixel > colLeftPixel;\n        var viewportScrolledBeforeCol = viewportRightPixel < colRightPixel;\n        var colToSmallForViewport = viewportWidth < column.getActualWidth();\n        var alignColToLeft = viewportScrolledPastCol || colToSmallForViewport;\n        var alignColToRight = viewportScrolledBeforeCol;\n        var newScrollPosition = this.getCenterViewportScrollLeft();\n        if (alignColToLeft || alignColToRight) {\n            if (this.enableRtl) {\n                newScrollPosition = alignColToLeft ? (bodyWidth - viewportWidth - colLeftPixel) : (bodyWidth - colRightPixel);\n            }\n            else {\n                newScrollPosition = alignColToLeft ? colLeftPixel : (colRightPixel - viewportWidth);\n            }\n            this.setCenterViewportScrollLeft(newScrollPosition);\n        }\n        else {\n            // otherwise, col is already in view, so do nothing\n        }\n        // this will happen anyway, as the move will cause a 'scroll' event on the body, however\n        // it is possible that the ensureColumnVisible method is called from within ag-Grid and\n        // the caller will need to have the columns rendered to continue, which will be before\n        // the event has been worked on (which is the case for cell navigation).\n        this.onHorizontalViewportChanged();\n        // so when we return back to user, the cells have rendered\n        this.animationFrameService.flushAllFrames();\n    };\n    GridPanel.prototype.showLoadingOverlay = function () {\n        if (!this.gridOptionsWrapper.isSuppressLoadingOverlay()) {\n            this.overlayWrapper.showLoadingOverlay();\n        }\n    };\n    GridPanel.prototype.showNoRowsOverlay = function () {\n        if (!this.gridOptionsWrapper.isSuppressNoRowsOverlay()) {\n            this.overlayWrapper.showNoRowsOverlay();\n        }\n    };\n    GridPanel.prototype.hideOverlay = function () {\n        this.overlayWrapper.hideOverlay();\n    };\n    // method will call itself if no available width. this covers if the grid\n    // isn't visible, but is just about to be visible.\n    GridPanel.prototype.sizeColumnsToFit = function (nextTimeout) {\n        var _this = this;\n        var availableWidth = this.eBodyViewport.clientWidth;\n        if (availableWidth > 0) {\n            this.columnController.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\");\n            return;\n        }\n        if (nextTimeout === undefined) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(100);\n            }, 0);\n        }\n        else if (nextTimeout === 100) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(500);\n            }, 100);\n        }\n        else if (nextTimeout === 500) {\n            window.setTimeout(function () {\n                _this.sizeColumnsToFit(-1);\n            }, 500);\n        }\n        else {\n            console.warn('ag-Grid: tried to call sizeColumnsToFit() but the grid is coming back with ' +\n                'zero width, maybe the grid is not visible yet on the screen?');\n        }\n    };\n    // used by autoWidthCalculator and autoHeightCalculator\n    GridPanel.prototype.getCenterContainer = function () {\n        return this.eCenterContainer;\n    };\n    GridPanel.prototype.getDropTargetBodyContainers = function () {\n        return [this.eCenterViewport, this.eTopViewport, this.eBottomViewport];\n    };\n    GridPanel.prototype.getDropTargetLeftContainers = function () {\n        return [this.eLeftContainer, this.eLeftBottom, this.eLeftTop];\n    };\n    GridPanel.prototype.getDropTargetRightContainers = function () {\n        return [this.eRightContainer, this.eRightBottom, this.eRightTop];\n    };\n    GridPanel.prototype.buildRowContainerComponents = function () {\n        var _this = this;\n        this.eAllCellContainers = [\n            this.eLeftContainer, this.eRightContainer, this.eCenterContainer,\n            this.eTop, this.eBottom, this.eFullWidthContainer\n        ];\n        this.rowContainerComponents = {\n            body: new rowContainerComponent_1.RowContainerComponent({\n                eContainer: this.eCenterContainer,\n                eWrapper: this.eCenterColsClipper,\n                eViewport: this.eBodyViewport\n            }),\n            fullWidth: new rowContainerComponent_1.RowContainerComponent({\n                eContainer: this.eFullWidthContainer\n            }),\n            pinnedLeft: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eLeftContainer }),\n            pinnedRight: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eRightContainer }),\n            floatingTop: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eTopContainer }),\n            floatingTopPinnedLeft: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eLeftTop }),\n            floatingTopPinnedRight: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eRightTop }),\n            floatingTopFullWidth: new rowContainerComponent_1.RowContainerComponent({\n                eContainer: this.eTopFullWidthContainer,\n                hideWhenNoChildren: true\n            }),\n            floatingBottom: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eBottomContainer }),\n            floatingBottomPinnedLeft: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eLeftBottom }),\n            floatingBottomPinnedRight: new rowContainerComponent_1.RowContainerComponent({ eContainer: this.eRightBottom }),\n            floatingBottomFullWith: new rowContainerComponent_1.RowContainerComponent({\n                eContainer: this.eBottomFullWidthContainer,\n                hideWhenNoChildren: true\n            }),\n        };\n        utils_1._.iterateObject(this.rowContainerComponents, function (key, container) {\n            if (container) {\n                _this.getContext().wireBean(container);\n            }\n        });\n    };\n    GridPanel.prototype.setupRowAnimationCssClass = function () {\n        var _this = this;\n        var listener = function () {\n            // we don't want to use row animation if scaling, as rows jump strangely as you scroll,\n            // when scaling and doing row animation.\n            var animateRows = _this.gridOptionsWrapper.isAnimateRows() && !_this.heightScaler.isScaling();\n            utils_1._.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-animation', animateRows);\n            utils_1._.addOrRemoveCssClass(_this.eBodyViewport, 'ag-row-no-animation', !animateRows);\n        };\n        listener();\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_HEIGHT_SCALE_CHANGED, listener);\n    };\n    // when editing a pinned row, if the cell is half outside the scrollable area, the browser can\n    // scroll the column into view. we do not want this, the pinned sections should never scroll.\n    // so we listen to scrolls on these containers and reset the scroll if we find one.\n    GridPanel.prototype.suppressScrollOnFloatingRow = function () {\n        var _this = this;\n        var resetTopScroll = function () { return _this.eTopViewport.scrollLeft = 0; };\n        var resetBottomScroll = function () { return _this.eTopViewport.scrollLeft = 0; };\n        this.addDestroyableEventListener(this.eTopViewport, 'scroll', resetTopScroll);\n        this.addDestroyableEventListener(this.eBottomViewport, 'scroll', resetBottomScroll);\n    };\n    GridPanel.prototype.getRowContainers = function () {\n        return this.rowContainerComponents;\n    };\n    GridPanel.prototype.getFloatingTopBottom = function () {\n        return [this.eTop, this.eBottom];\n    };\n    GridPanel.prototype.onDisplayedColumnsChanged = function () {\n        this.setPinnedContainerSize();\n        this.setHeaderAndFloatingHeights();\n        this.onHorizontalViewportChanged();\n        this.updateScrollVisibleService();\n    };\n    GridPanel.prototype.onDisplayedColumnsWidthChanged = function () {\n        this.setWidthsOfContainers();\n        this.onHorizontalViewportChanged();\n        this.updateScrollVisibleService();\n        if (this.enableRtl) {\n            // because RTL is all backwards, a change in the width of the row\n            // can cause a change in the scroll position, without a scroll event,\n            // because the scroll position in RTL is a function that depends on\n            // the width. to be convinced of this, take out this line, enable RTL,\n            // scroll all the way to the left and then resize a column\n            this.horizontallyScrollHeaderCenterAndFloatingCenter();\n        }\n    };\n    GridPanel.prototype.setWidthsOfContainers = function () {\n        this.setCenterWidth();\n        this.setPinnedContainerSize();\n    };\n    GridPanel.prototype.setCenterWidth = function () {\n        var width = this.columnController.getBodyContainerWidth();\n        if (this.printLayout) {\n            var pinnedContainerWidths = this.columnController.getPinnedLeftContainerWidth()\n                + this.columnController.getPinnedRightContainerWidth();\n            width += pinnedContainerWidths;\n        }\n        this.headerRootComp.setHeaderContainerWidth(width);\n        var widthPx = width + \"px\";\n        this.eCenterContainer.style.width = widthPx;\n        this.eBottomContainer.style.width = widthPx;\n        this.eTopContainer.style.width = widthPx;\n        if (!this.printLayout) {\n            this.eBodyHorizontalScrollContainer.style.width = widthPx;\n        }\n    };\n    GridPanel.prototype.setPinnedLeftWidth = function () {\n        var _this = this;\n        var oldPinning = this.pinningLeft;\n        var widthOfCols = this.columnController.getPinnedLeftContainerWidth();\n        var newPinning = this.pinningLeft = !this.printLayout && widthOfCols > 0;\n        var containers = [this.eLeftContainer, this.eLeftTop, this.eLeftBottom];\n        if (oldPinning !== newPinning) {\n            this.headerRootComp.setLeftVisible(newPinning);\n        }\n        containers.forEach(function (e) { return utils_1._.setVisible(e, _this.pinningLeft); });\n        if (newPinning) {\n            containers.forEach(function (ct) { return utils_1._.setFixedWidth(ct, widthOfCols); });\n        }\n    };\n    GridPanel.prototype.setPinnedRightWidth = function () {\n        var oldPinning = this.pinningRight;\n        var widthOfCols = this.columnController.getPinnedRightContainerWidth();\n        var newPinning = this.pinningRight = !this.printLayout && widthOfCols > 0;\n        var containers = [this.eRightContainer, this.eRightTop, this.eRightBottom];\n        if (oldPinning !== newPinning) {\n            this.headerRootComp.setRightVisible(newPinning);\n        }\n        containers.forEach(function (ct) { return utils_1._.setVisible(ct, newPinning); });\n        if (newPinning) {\n            containers.forEach(function (ct) { return utils_1._.setFixedWidth(ct, widthOfCols); });\n        }\n    };\n    GridPanel.prototype.setPinnedContainerSize = function () {\n        this.setPinnedLeftWidth();\n        this.setPinnedRightWidth();\n        this.setFakeHScrollSpacerWidths();\n    };\n    GridPanel.prototype.setFakeHScrollSpacerWidths = function () {\n        // we pad the right based on a) if cols are pinned to the right and\n        // b) if v scroll is showing on the right (normal position of scroll)\n        var rightSpacing = this.columnController.getPinnedRightContainerWidth();\n        var scrollOnRight = !this.enableRtl && this.isVerticalScrollShowing();\n        if (scrollOnRight) {\n            rightSpacing += this.scrollWidth;\n        }\n        utils_1._.setFixedWidth(this.eHorizontalRightSpacer, rightSpacing);\n        utils_1._.addOrRemoveCssClass(this.eHorizontalRightSpacer, 'ag-scroller-corner', rightSpacing <= this.scrollWidth);\n        // we pad the left based on a) if cols are pinned to the left and\n        // b) if v scroll is showing on the left (happens in LTR layout only)\n        var leftSpacing = this.columnController.getPinnedLeftContainerWidth();\n        var scrollOnLeft = this.enableRtl && this.isVerticalScrollShowing();\n        if (scrollOnLeft) {\n            leftSpacing += this.scrollWidth;\n        }\n        utils_1._.setFixedWidth(this.eHorizontalLeftSpacer, leftSpacing);\n        utils_1._.addOrRemoveCssClass(this.eHorizontalLeftSpacer, 'ag-scroller-corner', leftSpacing <= this.scrollWidth);\n    };\n    GridPanel.prototype.checkBodyHeight = function () {\n        var bodyHeight = this.eBodyViewport.clientHeight;\n        if (this.bodyHeight !== bodyHeight) {\n            this.bodyHeight = bodyHeight;\n            var event_3 = {\n                type: events_1.Events.EVENT_BODY_HEIGHT_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_3);\n        }\n    };\n    GridPanel.prototype.setHeaderAndFloatingHeights = function () {\n        var _a = this, columnController = _a.columnController, gridOptionsWrapper = _a.gridOptionsWrapper, pinnedRowModel = _a.pinnedRowModel, eTop = _a.eTop, eBottom = _a.eBottom;\n        var numberOfFloating = 0;\n        var headerRowCount = columnController.getHeaderRowCount();\n        var totalHeaderHeight;\n        var groupHeight;\n        var headerHeight;\n        if (!columnController.isPivotMode()) {\n            if (gridOptionsWrapper.isFloatingFilter()) {\n                headerRowCount++;\n            }\n            numberOfFloating = (gridOptionsWrapper.isFloatingFilter()) ? 1 : 0;\n            groupHeight = gridOptionsWrapper.getGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getHeaderHeight();\n        }\n        else {\n            numberOfFloating = 0;\n            groupHeight = gridOptionsWrapper.getPivotGroupHeaderHeight();\n            headerHeight = gridOptionsWrapper.getPivotHeaderHeight();\n        }\n        var numberOfNonGroups = 1 + numberOfFloating;\n        var numberOfGroups = headerRowCount - numberOfNonGroups;\n        totalHeaderHeight = numberOfFloating * gridOptionsWrapper.getFloatingFiltersHeight();\n        totalHeaderHeight += numberOfGroups * groupHeight;\n        totalHeaderHeight += headerHeight;\n        this.headerRootComp.setHeight(totalHeaderHeight);\n        var floatingTopHeight = pinnedRowModel.getPinnedTopTotalHeight();\n        if (floatingTopHeight) {\n            // adding 1px for cell bottom border\n            floatingTopHeight += 1;\n        }\n        var floatingBottomHeight = pinnedRowModel.getPinnedBottomTotalHeight();\n        if (floatingBottomHeight) {\n            // adding 1px for cell bottom border\n            floatingBottomHeight += 1;\n        }\n        var floatingTopHeightString = floatingTopHeight + \"px\";\n        var floatingBottomHeightString = floatingBottomHeight + \"px\";\n        eTop.style.minHeight = floatingTopHeightString;\n        eTop.style.height = floatingTopHeightString;\n        eTop.style.display = floatingTopHeight ? 'inherit' : 'none';\n        eBottom.style.minHeight = floatingBottomHeightString;\n        eBottom.style.height = floatingBottomHeightString;\n        eBottom.style.display = floatingBottomHeight ? 'inherit' : 'none';\n        this.checkBodyHeight();\n    };\n    GridPanel.prototype.getBodyHeight = function () {\n        return this.bodyHeight;\n    };\n    // called by scrollHorizontally method and alignedGridsService\n    GridPanel.prototype.setHorizontalScrollPosition = function (hScrollPosition) {\n        this.eCenterViewport.scrollLeft = hScrollPosition;\n        // we need to manually do the event handling (rather than wait for the event)\n        // for the alignedGridsService, as if we don't, the aligned grid service gets\n        // notified async, and then it's 'consuming' flag doesn't get used right, and\n        // we can end up with an infinite loop\n        this.doHorizontalScroll(hScrollPosition);\n    };\n    GridPanel.prototype.setVerticalScrollPosition = function (vScrollPosition) {\n        this.eBodyViewport.scrollTop = vScrollPosition;\n    };\n    // called by the headerRootComp and moveColumnController\n    GridPanel.prototype.scrollHorizontally = function (pixels) {\n        var oldScrollPosition = this.eCenterViewport.scrollLeft;\n        this.setHorizontalScrollPosition(oldScrollPosition + pixels);\n        return this.eCenterViewport.scrollLeft - oldScrollPosition;\n    };\n    // called by rowDragFeature\n    GridPanel.prototype.scrollVertically = function (pixels) {\n        var oldScrollPosition = this.eBodyViewport.scrollTop;\n        this.setVerticalScrollPosition(oldScrollPosition + pixels);\n        return this.eBodyViewport.scrollTop - oldScrollPosition;\n    };\n    GridPanel.prototype.addScrollListener = function () {\n        this.addDestroyableEventListener(this.eCenterViewport, 'scroll', this.onCenterViewportScroll.bind(this));\n        this.addDestroyableEventListener(this.eBodyHorizontalScrollViewport, 'scroll', this.onFakeHorizontalScroll.bind(this));\n        this.addDestroyableEventListener(this.eBodyViewport, 'scroll', this.onVerticalScroll.bind(this));\n    };\n    GridPanel.prototype.onVerticalScroll = function () {\n        var scrollTop = this.eBodyViewport.scrollTop;\n        this.animationFrameService.setScrollTop(scrollTop);\n        this.nextScrollTop = scrollTop;\n        if (this.gridOptionsWrapper.isSuppressAnimationFrame()) {\n            this.redrawRowsAfterScroll();\n        }\n        else {\n            this.animationFrameService.schedule();\n        }\n    };\n    GridPanel.prototype.executeFrame = function () {\n        var frameNeeded = this.scrollTop !== this.nextScrollTop;\n        if (frameNeeded) {\n            this.scrollTop = this.nextScrollTop;\n            this.redrawRowsAfterScroll();\n        }\n        return frameNeeded;\n    };\n    GridPanel.prototype.isControllingScroll = function (eDiv) {\n        if (!this.lastHorizontalScrollElement) {\n            this.lastHorizontalScrollElement = eDiv;\n            return true;\n        }\n        return eDiv === this.lastHorizontalScrollElement;\n    };\n    GridPanel.prototype.onFakeHorizontalScroll = function () {\n        if (!this.isControllingScroll(this.eBodyHorizontalScrollViewport)) {\n            return;\n        }\n        this.onBodyHorizontalScroll(this.eBodyHorizontalScrollViewport);\n    };\n    GridPanel.prototype.onCenterViewportScroll = function () {\n        if (!this.isControllingScroll(this.eCenterViewport)) {\n            return;\n        }\n        this.onBodyHorizontalScroll(this.eCenterViewport);\n    };\n    GridPanel.prototype.onBodyHorizontalScroll = function (eSource) {\n        var _a = this.eCenterViewport, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;\n        // in chrome, fractions can be in the scroll left, eg 250.342234 - which messes up our 'scrollWentPastBounds'\n        // formula. so we floor it to allow the formula to work.\n        var scrollLeft = Math.floor(utils_1._.getScrollLeft(eSource, this.enableRtl));\n        // touch devices allow elastic scroll - which temporally scrolls the panel outside of the viewport\n        // (eg user uses touch to go to the left of the grid, but drags past the left, the rows will actually\n        // scroll past the left until the user releases the mouse). when this happens, we want ignore the scroll,\n        // as otherwise it was causing the rows and header to flicker.\n        var scrollWentPastBounds = scrollLeft < 0 || (scrollLeft + clientWidth > scrollWidth);\n        if (scrollWentPastBounds) {\n            return;\n        }\n        this.doHorizontalScroll(scrollLeft);\n        this.resetLastHorizontalScrollElementDebounce();\n    };\n    GridPanel.prototype.resetLastHorizontalScrollElement = function () {\n        this.lastHorizontalScrollElement = null;\n    };\n    GridPanel.prototype.doHorizontalScroll = function (scrollLeft) {\n        this.scrollLeft = scrollLeft;\n        var event = {\n            type: events_1.Events.EVENT_BODY_SCROLL,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            direction: 'horizontal',\n            left: this.scrollLeft,\n            top: this.scrollTop\n        };\n        this.eventService.dispatchEvent(event);\n        this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\n        this.onHorizontalViewportChanged();\n    };\n    GridPanel.prototype.redrawRowsAfterScroll = function () {\n        var event = {\n            type: events_1.Events.EVENT_BODY_SCROLL,\n            direction: 'vertical',\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            left: this.scrollLeft,\n            top: this.scrollTop\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    // this gets called whenever a change in the viewport, so we can inform column controller it has to work\n    // out the virtual columns again. gets called from following locations:\n    // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged, API (doLayout)\n    GridPanel.prototype.onHorizontalViewportChanged = function () {\n        var scrollWidth = this.eCenterViewport.clientWidth;\n        var scrollPosition = this.getCenterViewportScrollLeft();\n        this.columnController.setVirtualViewportPosition(scrollWidth, scrollPosition);\n    };\n    GridPanel.prototype.getCenterViewportScrollLeft = function () {\n        // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n        return utils_1._.getScrollLeft(this.eCenterViewport, this.enableRtl);\n    };\n    GridPanel.prototype.setCenterViewportScrollLeft = function (value) {\n        // we defer to a util, as how you calculated scrollLeft when doing RTL depends on the browser\n        utils_1._.setScrollLeft(this.eCenterViewport, value, this.enableRtl);\n    };\n    GridPanel.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function (scrollLeft) {\n        if (scrollLeft === undefined) {\n            scrollLeft = this.getCenterViewportScrollLeft();\n        }\n        var offset = this.enableRtl ? scrollLeft : -scrollLeft;\n        var _a = this.eCenterViewport, clientWidth = _a.clientWidth, scrollWidth = _a.scrollWidth;\n        var scrollWentPastBounds = Math.abs(offset) + clientWidth > scrollWidth;\n        if (scrollWentPastBounds ||\n            (this.enableRtl && offset < 0) ||\n            (!this.enableRtl && offset > 0)) {\n            return;\n        }\n        this.headerRootComp.setHorizontalScroll(offset);\n        this.eBottomContainer.style.transform = \"translateX(\" + offset + \"px)\";\n        this.eTopContainer.style.transform = \"translateX(\" + offset + \"px)\";\n        var partner = this.lastHorizontalScrollElement === this.eCenterViewport ? this.eBodyHorizontalScrollViewport : this.eCenterViewport;\n        utils_1._.setScrollLeft(partner, scrollLeft, this.enableRtl);\n    };\n    // + rangeController\n    GridPanel.prototype.addScrollEventListener = function (listener) {\n        this.eBodyViewport.addEventListener('scroll', listener);\n    };\n    // + rangeController\n    GridPanel.prototype.removeScrollEventListener = function (listener) {\n        this.eBodyViewport.removeEventListener('scroll', listener);\n    };\n    __decorate([\n        context_1.Autowired('alignedGridsService'),\n        __metadata(\"design:type\", alignedGridsService_1.AlignedGridsService)\n    ], GridPanel.prototype, \"alignedGridsService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GridPanel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GridPanel.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], GridPanel.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('pinnedRowModel'),\n        __metadata(\"design:type\", pinnedRowModel_1.PinnedRowModel)\n    ], GridPanel.prototype, \"pinnedRowModel\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GridPanel.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('animationFrameService'),\n        __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)\n    ], GridPanel.prototype, \"animationFrameService\", void 0);\n    __decorate([\n        context_1.Autowired('navigationService'),\n        __metadata(\"design:type\", navigationService_1.NavigationService)\n    ], GridPanel.prototype, \"navigationService\", void 0);\n    __decorate([\n        context_1.Autowired('autoHeightCalculator'),\n        __metadata(\"design:type\", autoHeightCalculator_1.AutoHeightCalculator)\n    ], GridPanel.prototype, \"autoHeightCalculator\", void 0);\n    __decorate([\n        context_1.Autowired('columnAnimationService'),\n        __metadata(\"design:type\", columnAnimationService_1.ColumnAnimationService)\n    ], GridPanel.prototype, \"columnAnimationService\", void 0);\n    __decorate([\n        context_1.Autowired('autoWidthCalculator'),\n        __metadata(\"design:type\", autoWidthCalculator_1.AutoWidthCalculator)\n    ], GridPanel.prototype, \"autoWidthCalculator\", void 0);\n    __decorate([\n        context_1.Autowired('paginationAutoPageSizeService'),\n        __metadata(\"design:type\", paginationProxy_1.PaginationAutoPageSizeService)\n    ], GridPanel.prototype, \"paginationAutoPageSizeService\", void 0);\n    __decorate([\n        context_1.Autowired('beans'),\n        __metadata(\"design:type\", beans_1.Beans)\n    ], GridPanel.prototype, \"beans\", void 0);\n    __decorate([\n        context_1.Autowired('paginationProxy'),\n        __metadata(\"design:type\", paginationProxy_1.PaginationProxy)\n    ], GridPanel.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], GridPanel.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], GridPanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('dragService'),\n        __metadata(\"design:type\", dragService_1.DragService)\n    ], GridPanel.prototype, \"dragService\", void 0);\n    __decorate([\n        context_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", mouseEventService_1.MouseEventService)\n    ], GridPanel.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        context_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], GridPanel.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], GridPanel.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('scrollVisibleService'),\n        __metadata(\"design:type\", scrollVisibleService_1.ScrollVisibleService)\n    ], GridPanel.prototype, \"scrollVisibleService\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], GridPanel.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], GridPanel.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('maxDivHeightScaler'),\n        __metadata(\"design:type\", maxDivHeightScaler_1.MaxDivHeightScaler)\n    ], GridPanel.prototype, \"heightScaler\", void 0);\n    __decorate([\n        context_1.Autowired('enterprise'),\n        __metadata(\"design:type\", Boolean)\n    ], GridPanel.prototype, \"enterprise\", void 0);\n    __decorate([\n        context_1.Autowired('resizeObserverService'),\n        __metadata(\"design:type\", resizeObserverService_1.ResizeObserverService)\n    ], GridPanel.prototype, \"resizeObserverService\", void 0);\n    __decorate([\n        context_1.Optional('rangeController'),\n        __metadata(\"design:type\", Object)\n    ], GridPanel.prototype, \"rangeController\", void 0);\n    __decorate([\n        context_1.Optional('contextMenuFactory'),\n        __metadata(\"design:type\", Object)\n    ], GridPanel.prototype, \"contextMenuFactory\", void 0);\n    __decorate([\n        context_1.Optional('clipboardService'),\n        __metadata(\"design:type\", Object)\n    ], GridPanel.prototype, \"clipboardService\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBodyViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBodyViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCenterContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eCenterContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCenterViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eCenterViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLeftContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eLeftContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eRightContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eRightContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eCenterColsClipper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eCenterColsClipper\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eHorizontalScrollBody'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eHorizontalScrollBody\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eHorizontalLeftSpacer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eHorizontalLeftSpacer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eHorizontalRightSpacer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eHorizontalRightSpacer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBodyHorizontalScrollViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBodyHorizontalScrollViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBodyHorizontalScrollContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBodyHorizontalScrollContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eFullWidthContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eFullWidthContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTop'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eTop\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLeftTop'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eLeftTop\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eRightTop'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eRightTop\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eTopContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eTopViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopFullWidthContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eTopFullWidthContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottom'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBottom\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLeftBottom'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eLeftBottom\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eRightBottom'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eRightBottom\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBottomContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomViewport'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBottomViewport\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomFullWidthContainer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridPanel.prototype, \"eBottomFullWidthContainer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('headerRoot'),\n        __metadata(\"design:type\", headerRootComp_1.HeaderRootComp)\n    ], GridPanel.prototype, \"headerRootComp\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('overlayWrapper'),\n        __metadata(\"design:type\", overlayWrapperComponent_1.OverlayWrapperComponent)\n    ], GridPanel.prototype, \"overlayWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridPanel.prototype, \"init\", null);\n    return GridPanel;\n}(component_1.Component));\nexports.GridPanel = GridPanel;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar SelectableService = /** @class */ (function () {\n    function SelectableService() {\n    }\n    SelectableService.prototype.init = function () {\n        this.groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        this.isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();\n    };\n    SelectableService.prototype.updateSelectableAfterGrouping = function (rowNode) {\n        if (this.isRowSelectableFunc) {\n            var nextChildrenFunc = function (rowNode) { return rowNode.childrenAfterGroup; };\n            this.recurseDown(rowNode.childrenAfterGroup, nextChildrenFunc);\n        }\n    };\n    SelectableService.prototype.updateSelectableAfterFiltering = function (rowNode) {\n        if (this.isRowSelectableFunc) {\n            var nextChildrenFunc = function (rowNode) { return rowNode.childrenAfterFilter; };\n            this.recurseDown(rowNode.childrenAfterGroup, nextChildrenFunc);\n        }\n    };\n    SelectableService.prototype.recurseDown = function (children, nextChildrenFunc) {\n        var _this = this;\n        children.forEach(function (child) {\n            if (!child.group) {\n                return;\n            } // only interested in groups\n            if (child.hasChildren()) {\n                _this.recurseDown(nextChildrenFunc(child), nextChildrenFunc);\n            }\n            var rowSelectable;\n            if (_this.groupSelectsChildren) {\n                // have this group selectable if at least one direct child is selectable\n                var firstSelectable = utils_1._.find(nextChildrenFunc(child), 'selectable', true);\n                rowSelectable = utils_1._.exists(firstSelectable);\n            }\n            else {\n                // directly retrieve selectable value from user callback\n                rowSelectable = _this.isRowSelectableFunc ? _this.isRowSelectableFunc(child) : false;\n            }\n            child.setRowSelectable(rowSelectable);\n        });\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SelectableService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectableService.prototype, \"init\", null);\n    SelectableService = __decorate([\n        context_1.Bean('selectableService')\n    ], SelectableService);\n    return SelectableService;\n}());\nexports.SelectableService = SelectableService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar beanStub_1 = require(\"../../context/beanStub\");\nvar rowNodeBlock_1 = require(\"./rowNodeBlock\");\nvar utils_1 = require(\"../../utils\");\nvar RowNodeCache = /** @class */ (function (_super) {\n    __extends(RowNodeCache, _super);\n    function RowNodeCache(cacheParams) {\n        var _this = _super.call(this) || this;\n        _this.maxRowFound = false;\n        _this.blocks = {};\n        _this.blockCount = 0;\n        _this.virtualRowCount = cacheParams.initialRowCount;\n        _this.cacheParams = cacheParams;\n        return _this;\n    }\n    RowNodeCache.prototype.destroy = function () {\n        var _this = this;\n        _super.prototype.destroy.call(this);\n        this.forEachBlockInOrder(function (block) { return _this.destroyBlock(block); });\n    };\n    RowNodeCache.prototype.init = function () {\n        var _this = this;\n        this.active = true;\n        this.addDestroyFunc(function () { return _this.active = false; });\n    };\n    RowNodeCache.prototype.isActive = function () {\n        return this.active;\n    };\n    RowNodeCache.prototype.getVirtualRowCount = function () {\n        return this.virtualRowCount;\n    };\n    RowNodeCache.prototype.hack_setVirtualRowCount = function (virtualRowCount) {\n        this.virtualRowCount = virtualRowCount;\n    };\n    RowNodeCache.prototype.isMaxRowFound = function () {\n        return this.maxRowFound;\n    };\n    // listener on EVENT_LOAD_COMPLETE\n    RowNodeCache.prototype.onPageLoaded = function (event) {\n        this.cacheParams.rowNodeBlockLoader.loadComplete();\n        this.checkBlockToLoad();\n        // if we are not active, then we ignore all events, otherwise we could end up getting the\n        // grid to refresh even though we are no longer the active cache\n        if (!this.isActive()) {\n            return;\n        }\n        this.logger.log(\"onPageLoaded: page = \" + event.page.getBlockNumber() + \", lastRow = \" + event.lastRow);\n        if (event.success) {\n            this.checkVirtualRowCount(event.page, event.lastRow);\n        }\n    };\n    RowNodeCache.prototype.purgeBlocksIfNeeded = function (blockToExclude) {\n        var _this = this;\n        // put all candidate blocks into a list for sorting\n        var blocksForPurging = [];\n        this.forEachBlockInOrder(function (block) {\n            // we exclude checking for the page just created, as this has yet to be accessed and hence\n            // the lastAccessed stamp will not be updated for the first time yet\n            if (block === blockToExclude) {\n                return;\n            }\n            blocksForPurging.push(block);\n        });\n        // note: need to verify that this sorts items in the right order\n        blocksForPurging.sort(function (a, b) { return b.getLastAccessed() - a.getLastAccessed(); });\n        // we remove (maxBlocksInCache - 1) as we already excluded the 'just created' page.\n        // in other words, after the splice operation below, we have taken out the blocks\n        // we want to keep, which means we are left with blocks that we can potentially purge\n        var maxBlocksProvided = this.cacheParams.maxBlocksInCache > 0;\n        var blocksToKeep = maxBlocksProvided ? this.cacheParams.maxBlocksInCache - 1 : null;\n        var emptyBlocksToKeep = RowNodeCache.MAX_EMPTY_BLOCKS_TO_KEEP - 1;\n        blocksForPurging.forEach(function (block, index) {\n            var purgeBecauseBlockEmpty = block.getState() === rowNodeBlock_1.RowNodeBlock.STATE_DIRTY && index >= emptyBlocksToKeep;\n            var purgeBecauseCacheFull = maxBlocksProvided ? index >= blocksToKeep : false;\n            if (purgeBecauseBlockEmpty || purgeBecauseCacheFull) {\n                // we never purge blocks if they are open, as purging them would mess up with\n                // our indexes, it would be very messy to restore the purged block to it's\n                // previous state if it had open children (and what if open children of open\n                // children, jeeeesus, just thinking about it freaks me out) so best is have a\n                // rule, if block is open, we never purge.\n                if (block.isAnyNodeOpen(_this.virtualRowCount)) {\n                    return;\n                }\n                // at this point, block is not needed, and no open nodes, so burn baby burn\n                _this.removeBlockFromCache(block);\n            }\n        });\n    };\n    RowNodeCache.prototype.postCreateBlock = function (newBlock) {\n        newBlock.addEventListener(rowNodeBlock_1.RowNodeBlock.EVENT_LOAD_COMPLETE, this.onPageLoaded.bind(this));\n        this.setBlock(newBlock.getBlockNumber(), newBlock);\n        this.purgeBlocksIfNeeded(newBlock);\n        this.checkBlockToLoad();\n    };\n    RowNodeCache.prototype.removeBlockFromCache = function (blockToRemove) {\n        if (!blockToRemove) {\n            return;\n        }\n        this.destroyBlock(blockToRemove);\n        // we do not want to remove the 'loaded' event listener, as the\n        // concurrent loads count needs to be updated when the load is complete\n        // if the purged page is in loading state\n    };\n    // gets called after: 1) block loaded 2) block created 3) cache refresh\n    RowNodeCache.prototype.checkBlockToLoad = function () {\n        this.cacheParams.rowNodeBlockLoader.checkBlockToLoad();\n    };\n    RowNodeCache.prototype.checkVirtualRowCount = function (block, lastRow) {\n        // if client provided a last row, we always use it, as it could change between server calls\n        // if user deleted data and then called refresh on the grid.\n        if (typeof lastRow === 'number' && lastRow >= 0) {\n            this.virtualRowCount = lastRow;\n            this.maxRowFound = true;\n            this.onCacheUpdated();\n        }\n        else if (!this.maxRowFound) {\n            // otherwise, see if we need to add some virtual rows\n            var lastRowIndex = (block.getBlockNumber() + 1) * this.cacheParams.blockSize;\n            var lastRowIndexPlusOverflow = lastRowIndex + this.cacheParams.overflowSize;\n            if (this.virtualRowCount < lastRowIndexPlusOverflow) {\n                this.virtualRowCount = lastRowIndexPlusOverflow;\n                this.onCacheUpdated();\n            }\n            else if (this.cacheParams.dynamicRowHeight) {\n                // the only other time is if dynamic row height, as loading rows\n                // will change the height of the block, given the height of the rows\n                // is only known after the row is loaded.\n                this.onCacheUpdated();\n            }\n        }\n    };\n    RowNodeCache.prototype.setVirtualRowCount = function (rowCount, maxRowFound) {\n        this.virtualRowCount = rowCount;\n        // if undefined is passed, we do not set this value, if one of {true,false}\n        // is passed, we do set the value.\n        if (utils_1._.exists(maxRowFound)) {\n            this.maxRowFound = maxRowFound;\n        }\n        // if we are still searching, then the row count must not end at the end\n        // of a particular page, otherwise the searching will not pop into the\n        // next page\n        if (!this.maxRowFound) {\n            if (this.virtualRowCount % this.cacheParams.blockSize === 0) {\n                this.virtualRowCount++;\n            }\n        }\n        this.onCacheUpdated();\n    };\n    RowNodeCache.prototype.forEachNodeDeep = function (callback, sequence) {\n        var _this = this;\n        this.forEachBlockInOrder(function (block) {\n            block.forEachNodeDeep(callback, sequence, _this.virtualRowCount);\n        });\n    };\n    RowNodeCache.prototype.forEachBlockInOrder = function (callback) {\n        var ids = this.getBlockIdsSorted();\n        this.forEachBlockId(ids, callback);\n    };\n    RowNodeCache.prototype.forEachBlockInReverseOrder = function (callback) {\n        var ids = this.getBlockIdsSorted().reverse();\n        this.forEachBlockId(ids, callback);\n    };\n    RowNodeCache.prototype.forEachBlockId = function (ids, callback) {\n        var _this = this;\n        ids.forEach(function (id) {\n            var block = _this.blocks[id];\n            callback(block, id);\n        });\n    };\n    RowNodeCache.prototype.getBlockIdsSorted = function () {\n        // get all page id's as NUMBERS (not strings, as we need to sort as numbers) and in descending order\n        var numberComparator = function (a, b) { return a - b; }; // default comparator for array is string comparison\n        var blockIds = Object.keys(this.blocks).map(function (idStr) { return parseInt(idStr, 10); }).sort(numberComparator);\n        return blockIds;\n    };\n    RowNodeCache.prototype.getBlock = function (blockId) {\n        return this.blocks[blockId];\n    };\n    RowNodeCache.prototype.setBlock = function (id, block) {\n        this.blocks[id] = block;\n        this.blockCount++;\n        this.cacheParams.rowNodeBlockLoader.addBlock(block);\n    };\n    RowNodeCache.prototype.destroyBlock = function (block) {\n        delete this.blocks[block.getBlockNumber()];\n        block.destroy();\n        this.blockCount--;\n        this.cacheParams.rowNodeBlockLoader.removeBlock(block);\n    };\n    // gets called 1) row count changed 2) cache purged 3) items inserted\n    RowNodeCache.prototype.onCacheUpdated = function () {\n        if (this.isActive()) {\n            // this results in both row models (infinite and server side) firing ModelUpdated,\n            // however server side row model also updates the row indexes first\n            var event_1 = {\n                type: RowNodeCache.EVENT_CACHE_UPDATED\n            };\n            this.dispatchEvent(event_1);\n        }\n    };\n    RowNodeCache.prototype.purgeCache = function () {\n        var _this = this;\n        this.forEachBlockInOrder(function (block) { return _this.removeBlockFromCache(block); });\n        // re-initialise cache - this ensures a cache with no rows can reload when purged!\n        this.virtualRowCount = this.cacheParams.initialRowCount;\n        this.maxRowFound = false;\n        this.onCacheUpdated();\n    };\n    RowNodeCache.prototype.getRowNodesInRange = function (firstInRange, lastInRange) {\n        var _this = this;\n        var result = [];\n        var lastBlockId = -1;\n        var inActiveRange = false;\n        var numberSequence = new utils_1.NumberSequence();\n        // if only one node passed, we start the selection at the top\n        if (utils_1._.missing(firstInRange)) {\n            inActiveRange = true;\n        }\n        var foundGapInSelection = false;\n        this.forEachBlockInOrder(function (block, id) {\n            if (foundGapInSelection) {\n                return;\n            }\n            if (inActiveRange && (lastBlockId + 1 !== id)) {\n                foundGapInSelection = true;\n                return;\n            }\n            lastBlockId = id;\n            block.forEachNodeShallow(function (rowNode) {\n                var hitFirstOrLast = rowNode === firstInRange || rowNode === lastInRange;\n                if (inActiveRange || hitFirstOrLast) {\n                    result.push(rowNode);\n                }\n                if (hitFirstOrLast) {\n                    inActiveRange = !inActiveRange;\n                }\n            }, numberSequence, _this.virtualRowCount);\n        });\n        // inActiveRange will be still true if we never hit the second rowNode\n        var invalidRange = foundGapInSelection || inActiveRange;\n        return invalidRange ? [] : result;\n    };\n    RowNodeCache.EVENT_CACHE_UPDATED = 'cacheUpdated';\n    // this property says how many empty blocks should be in a cache, eg if scrolls down fast and creates 10\n    // blocks all for loading, the grid will only load the last 2 - it will assume the blocks the user quickly\n    // scrolled over are not needed to be loaded.\n    RowNodeCache.MAX_EMPTY_BLOCKS_TO_KEEP = 2;\n    return RowNodeCache;\n}(beanStub_1.BeanStub));\nexports.RowNodeCache = RowNodeCache;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PropertyKeys = /** @class */ (function () {\n    function PropertyKeys() {\n    }\n    PropertyKeys.STRING_PROPERTIES = [\n        'sortingOrder', 'rowClass', 'rowSelection', 'overlayLoadingTemplate',\n        'overlayNoRowsTemplate', 'quickFilterText', 'rowModelType',\n        'editType', 'domLayout', 'clipboardDeliminator', 'rowGroupPanelShow',\n        'multiSortKey', 'pivotColumnGroupTotals', 'pivotRowTotals', 'pivotPanelShow'\n    ];\n    PropertyKeys.OBJECT_PROPERTIES = [\n        'components', 'frameworkComponents', 'rowStyle', 'context', 'autoGroupColumnDef', 'groupColumnDef', 'localeText',\n        'icons', 'datasource', 'serverSideDatasource', 'viewportDatasource', 'groupRowRendererParams', 'aggFuncs',\n        'fullWidthCellRendererParams', 'defaultColGroupDef', 'defaultColDef', 'defaultExportParams', 'columnTypes',\n        'rowClassRules', 'detailGridOptions', 'detailCellRendererParams', 'loadingCellRendererParams', 'loadingOverlayComponentParams',\n        'noRowsOverlayComponentParams', 'popupParent', 'colResizeDefault', 'reduxStore', 'statusBar', 'sideBar'\n    ];\n    PropertyKeys.ARRAY_PROPERTIES = [\n        'slaveGrids', 'alignedGrids', 'rowData',\n        'columnDefs', 'excelStyles', 'pinnedTopRowData', 'pinnedBottomRowData'\n        /** @deprecated */\n    ];\n    PropertyKeys.NUMBER_PROPERTIES = [\n        'rowHeight', 'detailRowHeight', 'rowBuffer', 'colWidth', 'headerHeight', 'groupHeaderHeight',\n        'floatingFiltersHeight', 'pivotHeaderHeight', 'pivotGroupHeaderHeight', 'groupDefaultExpanded',\n        'minColWidth', 'maxColWidth', 'viewportRowModelPageSize', 'viewportRowModelBufferSize',\n        'autoSizePadding', 'maxBlocksInCache', 'maxConcurrentDatasourceRequests',\n        'cacheOverflowSize', 'paginationPageSize', 'cacheBlockSize', 'infiniteInitialRowCount',\n        'scrollbarWidth', 'paginationStartPage', 'infiniteBlockSize', 'batchUpdateWaitMillis',\n        'blockLoadDebounceMillis'\n    ];\n    PropertyKeys.BOOLEAN_PROPERTIES = [\n        'toolPanelSuppressRowGroups', 'toolPanelSuppressValues', 'toolPanelSuppressPivots', 'toolPanelSuppressPivotMode',\n        'toolPanelSuppressSideButtons', 'toolPanelSuppressColumnFilter', 'toolPanelSuppressColumnSelectAll',\n        'toolPanelSuppressColumnExpandAll', 'suppressMakeColumnVisibleAfterUnGroup', 'suppressRowClickSelection',\n        'suppressCellSelection', 'suppressHorizontalScroll', 'debug', 'enableBrowserTooltips', 'enableColResize',\n        'enableCellExpressions', 'enableSorting', 'enableServerSideSorting', 'enableFilter', 'enableServerSideFilter',\n        'angularCompileRows', 'angularCompileFilters', 'angularCompileHeaders', 'groupSuppressAutoColumn', 'groupSelectsChildren',\n        'groupIncludeFooter', 'groupIncludeTotalFooter', 'groupUseEntireRow', 'groupSuppressRow', 'groupSuppressBlankHeader',\n        'forPrint', 'suppressMenuHide', 'rowDeselection', 'unSortIcon', 'suppressMultiSort', 'singleClickEdit',\n        'suppressLoadingOverlay', 'suppressNoRowsOverlay', 'suppressAutoSize', 'suppressParentsInRowNodes', 'showToolPanel',\n        'suppressColumnMoveAnimation', 'suppressMovableColumns', 'suppressFieldDotNotation', 'enableRangeSelection',\n        'enableRangeHandle', 'enableFillHandle', 'deltaSort', 'suppressTouch', 'suppressAsyncEvents', 'allowContextMenuWithControlKey',\n        'suppressContextMenu', 'suppressMenuFilterPanel', 'suppressMenuMainPanel', 'suppressMenuColumnPanel', 'rememberGroupStateWhenNewData',\n        'enableCellChangeFlash', 'suppressDragLeaveHidesColumns', 'suppressMiddleClickScrolls', 'suppressPreventDefaultOnMouseWheel',\n        'suppressUseColIdForGroups', 'suppressCopyRowsToClipboard', 'copyHeadersToClipboard', 'pivotMode', 'suppressAggFuncInHeader',\n        'suppressColumnVirtualisation', 'suppressAggAtRootLevel', 'suppressFocusAfterRefresh', 'functionsPassive', 'functionsReadOnly',\n        'animateRows', 'groupSelectsFiltered', 'groupRemoveSingleChildren', 'groupRemoveLowestSingleChildren', 'enableRtl',\n        'suppressClickEdit', 'rowDragManaged', 'suppressRowDrag', 'enableGroupEdit', 'embedFullWidthRows', 'deprecatedEmbedFullWidthRows',\n        'suppressTabbing', 'suppressPaginationPanel', 'floatingFilter', 'groupHideOpenParents', 'groupMultiAutoColumn', 'pagination',\n        'stopEditingWhenGridLosesFocus', 'paginationAutoPageSize', 'suppressScrollOnNewData', 'purgeClosedRowNodes', 'cacheQuickFilter',\n        'deltaRowDataMode', 'ensureDomOrder', 'accentedSort', 'pivotTotals', 'suppressChangeDetection', 'valueCache', 'valueCacheNeverExpires',\n        'aggregateOnlyChangedColumns', 'suppressAnimationFrame', 'suppressExcelExport', 'suppressCsvExport', 'treeData', 'masterDetail',\n        'suppressMultiRangeSelection', 'enterMovesDownAfterEdit', 'enterMovesDown', 'suppressPropertyNamesCheck', 'rowMultiSelectWithClick',\n        'contractColumnSelection', 'suppressEnterpriseResetOnNewColumns', 'enableOldSetFilterModel', 'suppressRowHoverHighlight',\n        'gridAutoHeight', 'suppressRowTransform', 'suppressClipboardPaste', 'serverSideSortingAlwaysResets', 'reactNext',\n        'suppressSetColumnStateEvents', 'enableCharts', 'deltaColumnMode', 'suppressMaintainUnsortedOrder', 'enableCellTextSelection',\n        'suppressBrowserResizeObserver', 'suppressMaxRenderedRowRestriction', 'excludeChildrenWhenTreeDataFiltering'\n    ];\n    PropertyKeys.FUNCTION_PROPERTIES = ['localeTextFunc', 'groupRowInnerRenderer', 'groupRowInnerRendererFramework',\n        'dateComponent', 'dateComponentFramework', 'groupRowRenderer', 'groupRowRendererFramework', 'isExternalFilterPresent',\n        'getRowHeight', 'doesExternalFilterPass', 'getRowClass', 'getRowStyle', 'getRowClassRules',\n        'traverseNode', 'getContextMenuItems', 'getMainMenuItems', 'processRowPostCreate', 'processCellForClipboard',\n        'getNodeChildDetails', 'groupRowAggNodes', 'getRowNodeId', 'isFullWidthCell', 'fullWidthCellRenderer',\n        'fullWidthCellRendererFramework', 'doesDataFlower', 'processSecondaryColDef', 'processSecondaryColGroupDef',\n        'getBusinessKeyForNode', 'sendToClipboard', 'navigateToNextCell', 'tabToNextCell', 'getDetailRowData',\n        'processCellFromClipboard', 'getDocument', 'postProcessPopup', 'getChildCount', 'getDataPath', 'loadingCellRenderer',\n        'loadingCellRendererFramework', 'loadingOverlayComponent', 'loadingOverlayComponentFramework', 'noRowsOverlayComponent',\n        'noRowsOverlayComponentFramework', 'detailCellRenderer', 'detailCellRendererFramework', 'onGridReady',\n        'defaultGroupSortComparator', 'isRowMaster', 'isRowSelectable', 'postSort', 'processHeaderForClipboard',\n        'paginationNumberFormatter', 'processDataFromClipboard', 'getServerSideGroupKey', 'isServerSideGroup',\n        'suppressKeyboardEvent', 'createChartContainer', 'processChartOptions', 'getChartToolbarItems'];\n    PropertyKeys.ALL_PROPERTIES = PropertyKeys.ARRAY_PROPERTIES\n        .concat(PropertyKeys.OBJECT_PROPERTIES)\n        .concat(PropertyKeys.STRING_PROPERTIES)\n        .concat(PropertyKeys.NUMBER_PROPERTIES)\n        .concat(PropertyKeys.FUNCTION_PROPERTIES)\n        .concat(PropertyKeys.BOOLEAN_PROPERTIES);\n    // used when doing property checks - this causes noise when using frameworks which can add their own fw specific\n    // properties to colDefs, gridOptions etc\n    PropertyKeys.FRAMEWORK_PROPERTIES = ['__ob__', '__metadata__', 'mappedColumnProperties', 'hasChildColumns',\n        'toColDef', 'createColDefFromGridColumn'];\n    return PropertyKeys;\n}());\nexports.PropertyKeys = PropertyKeys;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CellPositionUtils = /** @class */ (function () {\n    function CellPositionUtils() {\n    }\n    CellPositionUtils.createId = function (cellPosition) {\n        return cellPosition.rowIndex + \".\" + cellPosition.rowPinned + \".\" + cellPosition.column.getId();\n    };\n    CellPositionUtils.equals = function (cellA, cellB) {\n        var colsMatch = cellA.column === cellB.column;\n        var floatingMatch = cellA.rowPinned === cellB.rowPinned;\n        var indexMatch = cellA.rowIndex === cellB.rowIndex;\n        return colsMatch && floatingMatch && indexMatch;\n    };\n    return CellPositionUtils;\n}());\nexports.CellPositionUtils = CellPositionUtils;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CellRangeType;\n(function (CellRangeType) {\n    CellRangeType[CellRangeType[\"VALUE\"] = 0] = \"VALUE\";\n    CellRangeType[CellRangeType[\"DIMENSION\"] = 1] = \"DIMENSION\";\n})(CellRangeType = exports.CellRangeType || (exports.CellRangeType = {}));\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../constants\");\nvar utils_1 = require(\"../utils\");\nvar RowPositionUtils = /** @class */ (function () {\n    function RowPositionUtils() {\n    }\n    RowPositionUtils.sameRow = function (rowA, rowB) {\n        // if both missing\n        if (!rowA && !rowB) {\n            return true;\n        }\n        // if only one missing\n        if ((rowA && !rowB) || (!rowA && rowB)) {\n            return false;\n        }\n        // otherwise compare (use == to compare rowPinned because it can be null or undefined)\n        return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\n    };\n    // tests if this row selection is before the other row selection\n    RowPositionUtils.before = function (rowA, rowB) {\n        switch (rowA.rowPinned) {\n            case constants_1.Constants.PINNED_TOP:\n                // we we are floating top, and other isn't, then we are always before\n                if (rowB.rowPinned !== constants_1.Constants.PINNED_TOP) {\n                    return true;\n                }\n                break;\n            case constants_1.Constants.PINNED_BOTTOM:\n                // if we are floating bottom, and the other isn't, then we are never before\n                if (rowB.rowPinned !== constants_1.Constants.PINNED_BOTTOM) {\n                    return false;\n                }\n                break;\n            default:\n                // if we are not floating, but the other one is floating...\n                if (utils_1._.exists(rowB.rowPinned)) {\n                    if (rowB.rowPinned === constants_1.Constants.PINNED_TOP) {\n                        // we are not floating, other is floating top, we are first\n                        return false;\n                    }\n                    else {\n                        // we are not floating, other is floating bottom, we are always first\n                        return true;\n                    }\n                }\n                break;\n        }\n        return rowA.rowIndex < rowB.rowIndex;\n    };\n    return RowPositionUtils;\n}());\nexports.RowPositionUtils = RowPositionUtils;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Provides sync access to async component. Date component can be lazy created - this class encapsulates\n * this by keeping value locally until DateComp has loaded, then passing DateComp the value. */\nvar DateCompWrapper = /** @class */ (function () {\n    function DateCompWrapper(userComponentFactory, dateComponentParams, eParent) {\n        var _this = this;\n        this.alive = true;\n        userComponentFactory.newDateComponent(dateComponentParams).then(function (dateComp) {\n            // because async, check the filter still exists after component comes back\n            if (!_this.alive) {\n                if (dateComp.destroy) {\n                    dateComp.destroy();\n                }\n                return;\n            }\n            _this.dateComp = dateComp;\n            eParent.appendChild(dateComp.getGui());\n            if (dateComp.afterGuiAttached) {\n                dateComp.afterGuiAttached();\n            }\n            if (_this.tempValue) {\n                dateComp.setDate(_this.tempValue);\n            }\n        });\n    }\n    DateCompWrapper.prototype.destroy = function () {\n        this.alive = false;\n        if (this.dateComp && this.dateComp.destroy) {\n            this.dateComp.destroy();\n        }\n    };\n    DateCompWrapper.prototype.getDate = function () {\n        if (this.dateComp) {\n            return this.dateComp.getDate();\n        }\n        else {\n            return this.tempValue;\n        }\n    };\n    DateCompWrapper.prototype.setDate = function (value) {\n        if (this.dateComp) {\n            this.dateComp.setDate(value);\n        }\n        else {\n            this.tempValue = value;\n        }\n    };\n    return DateCompWrapper;\n}());\nexports.DateCompWrapper = DateCompWrapper;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* Common logic for options, used by both filters and floating filters. */\nvar OptionsFactory = /** @class */ (function () {\n    function OptionsFactory() {\n        this.customFilterOptions = {};\n    }\n    OptionsFactory.prototype.init = function (params, defaultOptions) {\n        this.filterOptions = params.filterOptions ? params.filterOptions : defaultOptions;\n        this.mapCustomOptions();\n        this.selectDefaultItem(params);\n    };\n    OptionsFactory.prototype.getFilterOptions = function () {\n        return this.filterOptions;\n    };\n    OptionsFactory.prototype.mapCustomOptions = function () {\n        var _this = this;\n        if (!this.filterOptions) {\n            return;\n        }\n        this.filterOptions.forEach(function (filterOption) {\n            if (typeof filterOption === 'string') {\n                return;\n            }\n            if (!filterOption.displayKey) {\n                console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'displayKey'\");\n                return;\n            }\n            if (!filterOption.displayName) {\n                console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'displayName'\");\n                return;\n            }\n            if (!filterOption.test) {\n                console.warn(\"ag-Grid: ignoring FilterOptionDef as it doesn't contain a 'test'\");\n                return;\n            }\n            _this.customFilterOptions[filterOption.displayKey] = filterOption;\n        });\n    };\n    OptionsFactory.prototype.selectDefaultItem = function (params) {\n        if (params.defaultOption) {\n            this.defaultOption = params.defaultOption;\n        }\n        else if (this.filterOptions.length >= 1) {\n            var firstFilterOption = this.filterOptions[0];\n            if (typeof firstFilterOption === 'string') {\n                this.defaultOption = firstFilterOption;\n            }\n            else if (firstFilterOption.displayKey) {\n                this.defaultOption = firstFilterOption.displayKey;\n            }\n            else {\n                console.warn(\"ag-Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'\");\n            }\n        }\n        else {\n            console.warn('ag-Grid: no filter options for filter');\n        }\n    };\n    OptionsFactory.prototype.getDefaultOption = function () {\n        return this.defaultOption;\n    };\n    OptionsFactory.prototype.getCustomOption = function (name) {\n        return this.customFilterOptions[name];\n    };\n    return OptionsFactory;\n}());\nexports.OptionsFactory = OptionsFactory;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar textCellEditor_1 = require(\"./textCellEditor\");\nvar PopupTextCellEditor = /** @class */ (function (_super) {\n    __extends(PopupTextCellEditor, _super);\n    function PopupTextCellEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PopupTextCellEditor.prototype.isPopup = function () {\n        return true;\n    };\n    return PopupTextCellEditor;\n}(textCellEditor_1.TextCellEditor));\nexports.PopupTextCellEditor = PopupTextCellEditor;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar selectCellEditor_1 = require(\"./selectCellEditor\");\nvar PopupSelectCellEditor = /** @class */ (function (_super) {\n    __extends(PopupSelectCellEditor, _super);\n    function PopupSelectCellEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PopupSelectCellEditor.prototype.isPopup = function () {\n        return true;\n    };\n    return PopupSelectCellEditor;\n}(selectCellEditor_1.SelectCellEditor));\nexports.PopupSelectCellEditor = PopupSelectCellEditor;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar popupComponent_1 = require(\"../../widgets/popupComponent\");\nvar constants_1 = require(\"../../constants\");\nvar utils_1 = require(\"../../utils\");\nvar LargeTextCellEditor = /** @class */ (function (_super) {\n    __extends(LargeTextCellEditor, _super);\n    function LargeTextCellEditor() {\n        return _super.call(this, LargeTextCellEditor.TEMPLATE) || this;\n    }\n    LargeTextCellEditor.prototype.init = function (params) {\n        this.params = params;\n        this.focusAfterAttached = params.cellStartedEdit;\n        this.textarea = document.createElement(\"textarea\");\n        this.textarea.maxLength = params.maxLength ? params.maxLength : \"200\";\n        this.textarea.cols = params.cols ? params.cols : \"60\";\n        this.textarea.rows = params.rows ? params.rows : \"10\";\n        if (utils_1._.exists(params.value)) {\n            this.textarea.value = params.value.toString();\n        }\n        this.getGui().querySelector('.ag-large-textarea').appendChild(this.textarea);\n        this.addGuiEventListener('keydown', this.onKeyDown.bind(this));\n    };\n    LargeTextCellEditor.prototype.onKeyDown = function (event) {\n        var key = event.which || event.keyCode;\n        if (key == constants_1.Constants.KEY_LEFT ||\n            key == constants_1.Constants.KEY_UP ||\n            key == constants_1.Constants.KEY_RIGHT ||\n            key == constants_1.Constants.KEY_DOWN ||\n            (event.shiftKey && key == constants_1.Constants.KEY_ENTER)) { // shift+enter allows for newlines\n            event.stopPropagation();\n        }\n    };\n    LargeTextCellEditor.prototype.afterGuiAttached = function () {\n        if (this.focusAfterAttached) {\n            this.textarea.focus();\n        }\n    };\n    LargeTextCellEditor.prototype.getValue = function () {\n        return this.params.parseValue(this.textarea.value);\n    };\n    LargeTextCellEditor.TEMPLATE = \n    // tab index is needed so we can focus, which is needed for keyboard events\n    '<div class=\"ag-large-text\" tabindex=\"0\">' +\n        '<div class=\"ag-large-textarea\"></div>' +\n        '</div>';\n    return LargeTextCellEditor;\n}(popupComponent_1.PopupComponent));\nexports.LargeTextCellEditor = LargeTextCellEditor;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../../widgets/component\");\nvar simpleFilter_1 = require(\"../../provided/simpleFilter\");\nvar optionsFactory_1 = require(\"../../provided/optionsFactory\");\nvar SimpleFloatingFilter = /** @class */ (function (_super) {\n    __extends(SimpleFloatingFilter, _super);\n    function SimpleFloatingFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SimpleFloatingFilter.prototype.getDefaultDebounceMs = function () {\n        return 0;\n    };\n    // used by:\n    // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n    // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n    SimpleFloatingFilter.prototype.getTextFromModel = function (model) {\n        if (!model) {\n            return null;\n        }\n        var isCombined = model.operator;\n        if (isCombined) {\n            var combinedModel = model;\n            var con1Str = this.conditionToString(combinedModel.condition1);\n            var con2Str = this.conditionToString(combinedModel.condition2);\n            return con1Str + \" \" + combinedModel.operator + \" \" + con2Str;\n        }\n        else {\n            var condition = model;\n            return this.conditionToString(condition);\n        }\n    };\n    SimpleFloatingFilter.prototype.isEventFromFloatingFilter = function (event) {\n        return (event && event.afterFloatingFilter);\n    };\n    SimpleFloatingFilter.prototype.getLastType = function () {\n        return this.lastType;\n    };\n    SimpleFloatingFilter.prototype.setLastTypeFromModel = function (model) {\n        // if no model provided by the parent filter, we continue to use the last type used\n        if (!model) {\n            return;\n        }\n        var isCombined = model.operator;\n        var condition;\n        if (isCombined) {\n            var combinedModel = model;\n            condition = combinedModel.condition1;\n        }\n        else {\n            condition = model;\n        }\n        this.lastType = condition.type;\n    };\n    SimpleFloatingFilter.prototype.canWeEditAfterModelFromParentFilter = function (model) {\n        if (!model) {\n            // if no model, then we can edit as long as the lastType is something we can edit, as this\n            // is the type we will provide to the parent filter if the user decides to use the floating filter.\n            return this.isTypeEditable(this.lastType);\n        }\n        // never allow editing if the filter is combined (ie has two parts)\n        var isCombined = model.operator;\n        if (isCombined) {\n            return false;\n        }\n        var simpleModel = model;\n        var typeIsEditable = this.isTypeEditable(simpleModel.type);\n        return typeIsEditable;\n    };\n    SimpleFloatingFilter.prototype.init = function (params) {\n        var optionsFactory = new optionsFactory_1.OptionsFactory();\n        optionsFactory.init(params.filterParams, this.getDefaultFilterOptions());\n        this.lastType = optionsFactory.getDefaultOption();\n        // we are editable if:\n        // 1) there is a type (user has configured filter wrong if not type)\n        //  AND\n        // 2) the default type is not 'in range'\n        var editable = this.isTypeEditable(this.lastType);\n        this.setEditable(editable);\n    };\n    SimpleFloatingFilter.prototype.isTypeEditable = function (type) {\n        return type\n            && (type != simpleFilter_1.SimpleFilter.IN_RANGE)\n            && (type != simpleFilter_1.SimpleFilter.EMPTY);\n    };\n    return SimpleFloatingFilter;\n}(component_1.Component));\nexports.SimpleFloatingFilter = SimpleFloatingFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar componentAnnotations_1 = require(\"../../../widgets/componentAnnotations\");\nvar utils_1 = require(\"../../../utils\");\nvar constants_1 = require(\"../../../constants\");\nvar providedFilter_1 = require(\"../../provided/providedFilter\");\nvar context_1 = require(\"../../../context/context\");\nvar simpleFloatingFilter_1 = require(\"./simpleFloatingFilter\");\nvar TextInputFloatingFilter = /** @class */ (function (_super) {\n    __extends(TextInputFloatingFilter, _super);\n    function TextInputFloatingFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TextInputFloatingFilter.prototype.postConstruct = function () {\n        this.setTemplate(\"<div class=\\\"ag-input-text-wrapper\\\">\\n                <input ref=\\\"eFloatingFilterText\\\" class=\\\"ag-floating-filter-input\\\">\\n            </div>\");\n    };\n    TextInputFloatingFilter.prototype.getDefaultDebounceMs = function () {\n        return 500;\n    };\n    TextInputFloatingFilter.prototype.onParentModelChanged = function (model, event) {\n        // we don't want to update the floating filter if the floating filter caused the change.\n        // as if it caused the change, the ui is already in sycn. if we didn't do this, the UI\n        // would behave strange as it would be updating as the user is typing\n        if (this.isEventFromFloatingFilter(event)) {\n            return;\n        }\n        this.setLastTypeFromModel(model);\n        var modelString = this.getTextFromModel(model);\n        this.eFloatingFilterText.value = modelString;\n        var editable = this.canWeEditAfterModelFromParentFilter(model);\n        this.setEditable(editable);\n    };\n    TextInputFloatingFilter.prototype.init = function (params) {\n        _super.prototype.init.call(this, params);\n        this.params = params;\n        this.applyActive = providedFilter_1.ProvidedFilter.isUseApplyButton(this.params.filterParams);\n        var debounceMs = providedFilter_1.ProvidedFilter.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n        var toDebounce = utils_1._.debounce(this.syncUpWithParentFilter.bind(this), debounceMs);\n        this.addDestroyableEventListener(this.eFloatingFilterText, 'input', toDebounce);\n        this.addDestroyableEventListener(this.eFloatingFilterText, 'keypress', toDebounce);\n        this.addDestroyableEventListener(this.eFloatingFilterText, 'keydown', toDebounce);\n        var columnDef = params.column.getDefinition();\n        if (columnDef.filterParams && columnDef.filterParams.filterOptions && columnDef.filterParams.filterOptions.length === 1 && columnDef.filterParams.filterOptions[0] === 'inRange') {\n            this.eFloatingFilterText.disabled = true;\n        }\n    };\n    TextInputFloatingFilter.prototype.syncUpWithParentFilter = function (e) {\n        var _this = this;\n        var value = this.eFloatingFilterText.value;\n        var enterKeyPressed = utils_1._.isKeyPressed(e, constants_1.Constants.KEY_ENTER);\n        if (this.applyActive && !enterKeyPressed) {\n            return;\n        }\n        this.params.parentFilterInstance(function (filterInstance) {\n            if (filterInstance) {\n                var simpleFilter = filterInstance;\n                simpleFilter.onFloatingFilterChanged(_this.getLastType(), value);\n            }\n        });\n    };\n    TextInputFloatingFilter.prototype.setEditable = function (editable) {\n        this.eFloatingFilterText.disabled = !editable;\n    };\n    __decorate([\n        componentAnnotations_1.RefSelector('eFloatingFilterText'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], TextInputFloatingFilter.prototype, \"eFloatingFilterText\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TextInputFloatingFilter.prototype, \"postConstruct\", null);\n    return TextInputFloatingFilter;\n}(simpleFloatingFilter_1.SimpleFloatingFilter));\nexports.TextInputFloatingFilter = TextInputFloatingFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar context_1 = require(\"../../context/context\");\nvar column_1 = require(\"../../entities/column\");\nvar dragAndDropService_1 = require(\"../../dragAndDrop/dragAndDropService\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar horizontalResizeService_1 = require(\"../horizontalResizeService\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar cssClassApplier_1 = require(\"../cssClassApplier\");\nvar setLeftFeature_1 = require(\"../../rendering/features/setLeftFeature\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar sortController_1 = require(\"../../sortController\");\nvar eventService_1 = require(\"../../eventService\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar agCheckbox_1 = require(\"../../widgets/agCheckbox\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar selectAllFeature_1 = require(\"./selectAllFeature\");\nvar events_1 = require(\"../../events\");\nvar columnHoverService_1 = require(\"../../rendering/columnHoverService\");\nvar beans_1 = require(\"../../rendering/beans\");\nvar hoverFeature_1 = require(\"../hoverFeature\");\nvar touchListener_1 = require(\"../../widgets/touchListener\");\nvar utils_1 = require(\"../../utils\");\nvar HeaderWrapperComp = /** @class */ (function (_super) {\n    __extends(HeaderWrapperComp, _super);\n    function HeaderWrapperComp(column, dragSourceDropTarget, pinned) {\n        var _this = _super.call(this, HeaderWrapperComp.TEMPLATE) || this;\n        _this.column = column;\n        _this.dragSourceDropTarget = dragSourceDropTarget;\n        _this.pinned = pinned;\n        return _this;\n    }\n    HeaderWrapperComp.prototype.getColumn = function () {\n        return this.column;\n    };\n    HeaderWrapperComp.prototype.getComponentHolder = function () {\n        return this.column.getColDef();\n    };\n    HeaderWrapperComp.prototype.init = function () {\n        var colDef = this.getComponentHolder();\n        var displayName = this.columnController.getDisplayNameForColumn(this.column, 'header', true);\n        var enableSorting = colDef.sortable;\n        var enableMenu = this.menuFactory.isMenuEnabled(this.column) && !colDef.suppressMenu;\n        this.appendHeaderComp(displayName, enableSorting, enableMenu);\n        this.setupWidth();\n        this.setupMovingCss();\n        this.setupTooltip();\n        this.setupResize();\n        this.setupMenuClass();\n        this.setupSortableClass(enableSorting);\n        this.addColumnHoverListener();\n        this.addFeature(this.getContext(), new hoverFeature_1.HoverFeature([this.column], this.getGui()));\n        this.addDestroyableEventListener(this.column, column_1.Column.EVENT_FILTER_ACTIVE_CHANGED, this.onFilterChanged.bind(this));\n        this.onFilterChanged();\n        this.addFeature(this.getContext(), new selectAllFeature_1.SelectAllFeature(this.cbSelectAll, this.column));\n        var setLeftFeature = new setLeftFeature_1.SetLeftFeature(this.column, this.getGui(), this.beans);\n        setLeftFeature.init();\n        this.addDestroyFunc(setLeftFeature.destroy.bind(setLeftFeature));\n        this.addAttributes();\n        cssClassApplier_1.CssClassApplier.addHeaderClassesFromColDef(colDef, this.getGui(), this.gridOptionsWrapper, this.column, null);\n    };\n    HeaderWrapperComp.prototype.addColumnHoverListener = function () {\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_HOVER_CHANGED, this.onColumnHover.bind(this));\n        this.onColumnHover();\n    };\n    HeaderWrapperComp.prototype.onColumnHover = function () {\n        var isHovered = this.columnHoverService.isHovered(this.column);\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-column-hover', isHovered);\n    };\n    HeaderWrapperComp.prototype.setupSortableClass = function (enableSorting) {\n        if (enableSorting) {\n            var element = this.getGui();\n            utils_1._.addCssClass(element, 'ag-header-cell-sortable');\n        }\n    };\n    HeaderWrapperComp.prototype.onFilterChanged = function () {\n        var filterPresent = this.column.isFilterActive();\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-filtered', filterPresent);\n    };\n    HeaderWrapperComp.prototype.appendHeaderComp = function (displayName, enableSorting, enableMenu) {\n        var _this = this;\n        var params = {\n            column: this.column,\n            displayName: displayName,\n            enableSorting: enableSorting,\n            enableMenu: enableMenu,\n            showColumnMenu: function (source) {\n                _this.gridApi.showColumnMenuAfterButtonClick(_this.column, source);\n            },\n            progressSort: function (multiSort) {\n                _this.sortController.progressSort(_this.column, !!multiSort, \"uiColumnSorted\");\n            },\n            setSort: function (sort, multiSort) {\n                _this.sortController.setSortForColumn(_this.column, sort, !!multiSort, \"uiColumnSorted\");\n            },\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            context: this.gridOptionsWrapper.getContext()\n        };\n        var callback = this.afterHeaderCompCreated.bind(this, displayName);\n        this.userComponentFactory.newHeaderComponent(params).then(callback);\n    };\n    HeaderWrapperComp.prototype.afterHeaderCompCreated = function (displayName, headerComp) {\n        this.appendChild(headerComp);\n        this.setupMove(headerComp.getGui(), displayName);\n    };\n    HeaderWrapperComp.prototype.onColumnMovingChanged = function () {\n        // this function adds or removes the moving css, based on if the col is moving.\n        // this is what makes the header go dark when it is been moved (gives impression to\n        // user that the column was picked up).\n        if (this.column.isMoving()) {\n            utils_1._.addCssClass(this.getGui(), 'ag-header-cell-moving');\n        }\n        else {\n            utils_1._.removeCssClass(this.getGui(), 'ag-header-cell-moving');\n        }\n    };\n    HeaderWrapperComp.prototype.setupMove = function (eHeaderCellLabel, displayName) {\n        var _this = this;\n        var suppressMove = this.gridOptionsWrapper.isSuppressMovableColumns()\n            || this.getComponentHolder().suppressMovable\n            || this.column.getColDef().lockPosition;\n        if (suppressMove) {\n            return;\n        }\n        if (eHeaderCellLabel) {\n            var dragSource_1 = {\n                type: dragAndDropService_1.DragSourceType.HeaderCell,\n                eElement: eHeaderCellLabel,\n                dragItemCallback: function () { return _this.createDragItem(); },\n                dragItemName: displayName,\n                dragSourceDropTarget: this.dragSourceDropTarget,\n                dragStarted: function () { return _this.column.setMoving(true, \"uiColumnMoved\"); },\n                dragStopped: function () { return _this.column.setMoving(false, \"uiColumnMoved\"); }\n            };\n            this.dragAndDropService.addDragSource(dragSource_1, true);\n            this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource_1); });\n        }\n    };\n    HeaderWrapperComp.prototype.createDragItem = function () {\n        var visibleState = {};\n        visibleState[this.column.getId()] = this.column.isVisible();\n        return {\n            columns: [this.column],\n            visibleState: visibleState\n        };\n    };\n    HeaderWrapperComp.prototype.setupResize = function () {\n        var _this = this;\n        var colDef = this.getComponentHolder();\n        // if no eResize in template, do nothing\n        if (!this.eResize) {\n            return;\n        }\n        if (!this.column.isResizable()) {\n            utils_1._.removeFromParent(this.eResize);\n            return;\n        }\n        var finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n            eResizeBar: this.eResize,\n            onResizeStart: this.onResizeStart.bind(this),\n            onResizing: this.onResizing.bind(this, false),\n            onResizeEnd: this.onResizing.bind(this, true)\n        });\n        this.addDestroyFunc(finishedWithResizeFunc);\n        var weWantAutoSize = !this.gridOptionsWrapper.isSuppressAutoSize() && !colDef.suppressAutoSize;\n        if (weWantAutoSize) {\n            this.addDestroyableEventListener(this.eResize, 'dblclick', function () {\n                _this.columnController.autoSizeColumn(_this.column, \"uiColumnResized\");\n            });\n            var touchListener = new touchListener_1.TouchListener(this.eResize);\n            this.addDestroyableEventListener(touchListener, touchListener_1.TouchListener.EVENT_DOUBLE_TAP, function () {\n                _this.columnController.autoSizeColumn(_this.column, \"uiColumnResized\");\n            });\n            this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n        }\n    };\n    HeaderWrapperComp.prototype.onResizing = function (finished, resizeAmount) {\n        var resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n        var newWidth = this.resizeStartWidth + resizeAmountNormalised;\n        this.columnController.setColumnWidth(this.column, newWidth, this.resizeWithShiftKey, finished, \"uiColumnDragged\");\n        if (finished) {\n            utils_1._.removeCssClass(this.getGui(), 'ag-column-resizing');\n        }\n    };\n    HeaderWrapperComp.prototype.onResizeStart = function (shiftKey) {\n        this.resizeStartWidth = this.column.getActualWidth();\n        this.resizeWithShiftKey = shiftKey;\n        utils_1._.addCssClass(this.getGui(), 'ag-column-resizing');\n    };\n    HeaderWrapperComp.prototype.getTooltipText = function () {\n        var colDef = this.getComponentHolder();\n        return colDef.headerTooltip;\n    };\n    HeaderWrapperComp.prototype.setupTooltip = function () {\n        var tooltipText = this.getTooltipText();\n        // add tooltip if exists\n        if (tooltipText == null) {\n            return;\n        }\n        if (this.gridOptionsWrapper.isEnableBrowserTooltips()) {\n            this.getGui().setAttribute('title', tooltipText);\n        }\n        else {\n            this.beans.tooltipManager.registerTooltip(this);\n        }\n    };\n    HeaderWrapperComp.prototype.setupMovingCss = function () {\n        this.addDestroyableEventListener(this.column, column_1.Column.EVENT_MOVING_CHANGED, this.onColumnMovingChanged.bind(this));\n        this.onColumnMovingChanged();\n    };\n    HeaderWrapperComp.prototype.addAttributes = function () {\n        this.getGui().setAttribute(\"col-id\", this.column.getColId());\n    };\n    HeaderWrapperComp.prototype.setupWidth = function () {\n        this.addDestroyableEventListener(this.column, column_1.Column.EVENT_WIDTH_CHANGED, this.onColumnWidthChanged.bind(this));\n        this.onColumnWidthChanged();\n    };\n    HeaderWrapperComp.prototype.setupMenuClass = function () {\n        this.addDestroyableEventListener(this.column, column_1.Column.EVENT_MENU_VISIBLE_CHANGED, this.onMenuVisible.bind(this));\n        this.onColumnWidthChanged();\n    };\n    HeaderWrapperComp.prototype.onMenuVisible = function () {\n        this.addOrRemoveCssClass('ag-column-menu-visible', this.column.isMenuVisible());\n    };\n    HeaderWrapperComp.prototype.onColumnWidthChanged = function () {\n        this.getGui().style.width = this.column.getActualWidth() + 'px';\n    };\n    // optionally inverts the drag, depending on pinned and RTL\n    // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n    HeaderWrapperComp.prototype.normaliseResizeAmount = function (dragChange) {\n        var result = dragChange;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // for RTL, dragging left makes the col bigger, except when pinning left\n            if (this.pinned !== column_1.Column.PINNED_LEFT) {\n                result *= -1;\n            }\n        }\n        else {\n            // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n            if (this.pinned === column_1.Column.PINNED_RIGHT) {\n                result *= -1;\n            }\n        }\n        return result;\n    };\n    HeaderWrapperComp.TEMPLATE = '<div class=\"ag-header-cell\" role=\"presentation\" unselectable=\"on\">' +\n        '<div ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>' +\n        '<ag-checkbox ref=\"cbSelectAll\" class=\"ag-header-select-all\" role=\"presentation\"></ag-checkbox>' +\n        // <inner component goes here>\n        '</div>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderWrapperComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], HeaderWrapperComp.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], HeaderWrapperComp.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('horizontalResizeService'),\n        __metadata(\"design:type\", horizontalResizeService_1.HorizontalResizeService)\n    ], HeaderWrapperComp.prototype, \"horizontalResizeService\", void 0);\n    __decorate([\n        context_1.Autowired('menuFactory'),\n        __metadata(\"design:type\", Object)\n    ], HeaderWrapperComp.prototype, \"menuFactory\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], HeaderWrapperComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], HeaderWrapperComp.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('sortController'),\n        __metadata(\"design:type\", sortController_1.SortController)\n    ], HeaderWrapperComp.prototype, \"sortController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], HeaderWrapperComp.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], HeaderWrapperComp.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        context_1.Autowired('columnHoverService'),\n        __metadata(\"design:type\", columnHoverService_1.ColumnHoverService)\n    ], HeaderWrapperComp.prototype, \"columnHoverService\", void 0);\n    __decorate([\n        context_1.Autowired('beans'),\n        __metadata(\"design:type\", beans_1.Beans)\n    ], HeaderWrapperComp.prototype, \"beans\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eResize'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderWrapperComp.prototype, \"eResize\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('cbSelectAll'),\n        __metadata(\"design:type\", agCheckbox_1.AgCheckbox)\n    ], HeaderWrapperComp.prototype, \"cbSelectAll\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeaderWrapperComp.prototype, \"init\", null);\n    return HeaderWrapperComp;\n}(component_1.Component));\nexports.HeaderWrapperComp = HeaderWrapperComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar column_1 = require(\"../entities/column\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnController_1 = require(\"./columnController\");\nvar columnFactory_1 = require(\"./columnFactory\");\nvar constants_1 = require(\"../constants\");\nvar utils_1 = require(\"../utils\");\nvar AutoGroupColService = /** @class */ (function () {\n    function AutoGroupColService() {\n    }\n    AutoGroupColService_1 = AutoGroupColService;\n    AutoGroupColService.prototype.createAutoGroupColumns = function (rowGroupColumns) {\n        var _this = this;\n        var groupAutoColumns = [];\n        var doingTreeData = this.gridOptionsWrapper.isTreeData();\n        var doingMultiAutoColumn = this.gridOptionsWrapper.isGroupMultiAutoColumn();\n        if (doingTreeData && doingMultiAutoColumn) {\n            console.warn('ag-Grid: you cannot mix groupMultiAutoColumn with treeData, only one column can be used to display groups when doing tree data');\n            doingMultiAutoColumn = false;\n        }\n        // if doing groupMultiAutoColumn, then we call the method multiple times, once\n        // for each column we are grouping by\n        if (doingMultiAutoColumn) {\n            rowGroupColumns.forEach(function (rowGroupCol, index) {\n                groupAutoColumns.push(_this.createOneAutoGroupColumn(rowGroupCol, index));\n            });\n        }\n        else {\n            groupAutoColumns.push(this.createOneAutoGroupColumn());\n        }\n        return groupAutoColumns;\n    };\n    // rowGroupCol and index are missing if groupMultiAutoColumn=false\n    AutoGroupColService.prototype.createOneAutoGroupColumn = function (rowGroupCol, index) {\n        // if one provided by user, use it, otherwise create one\n        var defaultAutoColDef = this.generateDefaultColDef(rowGroupCol);\n        // if doing multi, set the field\n        var colId;\n        if (rowGroupCol) {\n            colId = constants_1.Constants.GROUP_AUTO_COLUMN_ID + \"-\" + rowGroupCol.getId();\n        }\n        else {\n            colId = AutoGroupColService_1.GROUP_AUTO_COLUMN_BUNDLE_ID;\n        }\n        var userAutoColDef = this.gridOptionsWrapper.getAutoGroupColumnDef();\n        utils_1._.mergeDeep(defaultAutoColDef, userAutoColDef);\n        defaultAutoColDef = this.columnFactory.mergeColDefs(defaultAutoColDef);\n        defaultAutoColDef.colId = colId;\n        // For tree data the filter is always allowed\n        if (!this.gridOptionsWrapper.isTreeData()) {\n            // we would only allow filter if the user has provided field or value getter. otherwise the filter\n            // would not be able to work.\n            var noFieldOrValueGetter = utils_1._.missing(defaultAutoColDef.field) && utils_1._.missing(defaultAutoColDef.valueGetter) && utils_1._.missing(defaultAutoColDef.filterValueGetter);\n            if (noFieldOrValueGetter) {\n                defaultAutoColDef.filter = false;\n            }\n        }\n        // if showing many cols, we don't want to show more than one with a checkbox for selection\n        if (index && index > 0) {\n            defaultAutoColDef.headerCheckboxSelection = false;\n        }\n        var newCol = new column_1.Column(defaultAutoColDef, null, colId, true);\n        this.context.wireBean(newCol);\n        return newCol;\n    };\n    AutoGroupColService.prototype.generateDefaultColDef = function (rowGroupCol) {\n        var userAutoColDef = this.gridOptionsWrapper.getAutoGroupColumnDef();\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var defaultAutoColDef = {\n            headerName: localeTextFunc('group', 'Group'),\n            // this is needed for charting, so that the group column can be used as a dimension\n            enableRowGroup: true\n        };\n        var userHasProvidedGroupCellRenderer = userAutoColDef && (userAutoColDef.cellRenderer || userAutoColDef.cellRendererFramework);\n        // only add the default group cell renderer if user hasn't provided one\n        if (!userHasProvidedGroupCellRenderer) {\n            defaultAutoColDef.cellRenderer = 'agGroupCellRenderer';\n        }\n        // we never allow moving the group column\n        // defaultAutoColDef.suppressMovable = true;\n        if (rowGroupCol) {\n            var rowGroupColDef = rowGroupCol.getColDef();\n            utils_1._.assign(defaultAutoColDef, {\n                // cellRendererParams.groupKey: colDefToCopy.field;\n                headerName: this.columnController.getDisplayNameForColumn(rowGroupCol, 'header'),\n                headerValueGetter: rowGroupColDef.headerValueGetter\n            });\n            if (rowGroupColDef.cellRenderer) {\n                utils_1._.assign(defaultAutoColDef, {\n                    cellRendererParams: {\n                        innerRenderer: rowGroupColDef.cellRenderer,\n                        innerRendererParams: rowGroupColDef.cellRendererParams\n                    }\n                });\n            }\n            defaultAutoColDef.showRowGroup = rowGroupCol.getColId();\n        }\n        else {\n            defaultAutoColDef.showRowGroup = true;\n        }\n        return defaultAutoColDef;\n    };\n    var AutoGroupColService_1;\n    AutoGroupColService.GROUP_AUTO_COLUMN_BUNDLE_ID = constants_1.Constants.GROUP_AUTO_COLUMN_ID;\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], AutoGroupColService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], AutoGroupColService.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], AutoGroupColService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('columnFactory'),\n        __metadata(\"design:type\", columnFactory_1.ColumnFactory)\n    ], AutoGroupColService.prototype, \"columnFactory\", void 0);\n    AutoGroupColService = AutoGroupColService_1 = __decorate([\n        context_1.Bean('autoGroupColService')\n    ], AutoGroupColService);\n    return AutoGroupColService;\n}());\nexports.AutoGroupColService = AutoGroupColService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar constants_1 = require(\"../../constants\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar utils_1 = require(\"../../utils\");\nvar ImmutableService = /** @class */ (function () {\n    function ImmutableService() {\n    }\n    ImmutableService.prototype.postConstruct = function () {\n        if (this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            this.clientSideRowModel = this.rowModel;\n        }\n    };\n    // converts the setRowData() command to a transaction\n    ImmutableService.prototype.createTransactionForRowData = function (data) {\n        if (utils_1._.missing(this.clientSideRowModel)) {\n            console.error('ag-Grid: ImmutableService only works with ClientSideRowModel');\n            return;\n        }\n        var getRowNodeIdFunc = this.gridOptionsWrapper.getRowNodeIdFunc();\n        if (!getRowNodeIdFunc || utils_1._.missing(getRowNodeIdFunc)) {\n            console.error('ag-Grid: ImmutableService requires getRowNodeId() callback to be implemented, your row data need IDs!');\n            return;\n        }\n        // convert the data into a transaction object by working out adds, removes and updates\n        var transaction = {\n            remove: [],\n            update: [],\n            add: []\n        };\n        var existingNodesMap = this.clientSideRowModel.getCopyOfNodesMap();\n        var suppressSortOrder = this.gridOptionsWrapper.isSuppressMaintainUnsortedOrder();\n        var orderMap = suppressSortOrder ? null : {};\n        if (utils_1._.exists(data)) {\n            // split all the new data in the following:\n            // if new, push to 'add'\n            // if update, push to 'update'\n            // if not changed, do not include in the transaction\n            data.forEach(function (dataItem, index) {\n                var id = getRowNodeIdFunc(dataItem);\n                var existingNode = existingNodesMap[id];\n                if (orderMap) {\n                    orderMap[id] = index;\n                }\n                if (existingNode) {\n                    var dataHasChanged = existingNode.data !== dataItem;\n                    if (dataHasChanged) {\n                        transaction.update.push(dataItem);\n                    }\n                    // otherwise, if data not changed, we just don't include it anywhere, as it's not a delta\n                    // remove from list, so we know the item is not to be removed\n                    existingNodesMap[id] = undefined;\n                }\n                else {\n                    transaction.add.push(dataItem);\n                }\n            });\n        }\n        // at this point, all rows that are left, should be removed\n        utils_1._.iterateObject(existingNodesMap, function (id, rowNode) {\n            if (rowNode) {\n                transaction.remove.push(rowNode.data);\n            }\n        });\n        return [transaction, orderMap];\n    };\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], ImmutableService.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ImmutableService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ImmutableService.prototype, \"postConstruct\", null);\n    ImmutableService = __decorate([\n        context_1.Bean('immutableService')\n    ], ImmutableService);\n    return ImmutableService;\n}());\nexports.ImmutableService = ImmutableService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ColDefUtil = /** @class */ (function () {\n    function ColDefUtil() {\n    }\n    ColDefUtil.STRING_PROPERTIES = [\n        'headerName',\n        'columnGroupShow',\n        'headerClass',\n        'toolPanelClass',\n        'headerValueGetter',\n        'pivotKeys',\n        'groupId',\n        'colId',\n        'sort',\n        'field',\n        'type',\n        'tooltipComponent',\n        'tooltipField',\n        'headerTooltip',\n        'cellClass',\n        'showRowGroup',\n        'template',\n        'templateUrl',\n        'filter',\n        'aggFunc',\n        'cellRenderer',\n        'cellEditor',\n        'pinned',\n        'chartDataType'\n    ];\n    ColDefUtil.OBJECT_PROPERTIES = [\n        'headerGroupComponent',\n        'headerGroupComponentFramework',\n        'headerGroupComponentParams',\n        'cellStyle',\n        'cellRendererParams',\n        'cellEditorFramework',\n        'cellEditorParams',\n        'pinnedRowCellRendererFramework',\n        'pinnedRowCellRendererParams',\n        'filterFramework',\n        'filterParams',\n        'pivotValueColumn',\n        'headerComponent',\n        'headerComponentFramework',\n        'headerComponentParams',\n        'floatingFilterComponent',\n        'floatingFilterComponentParams',\n        'floatingFilterComponentFramework',\n        'tooltipComponent',\n        'tooltipComponentParams',\n        'tooltipComponentFramework',\n        'refData'\n    ];\n    ColDefUtil.ARRAY_PROPERTIES = [\n        'children',\n        'sortingOrder',\n        'allowedAggFuncs',\n        'menuTabs',\n        'pivotTotalColumnIds',\n        'cellClassRules',\n        'icons'\n    ];\n    ColDefUtil.NUMBER_PROPERTIES = [\n        'sortedAt',\n        'width',\n        'minWidth',\n        'maxWidth',\n        'rowGroupIndex',\n        'pivotIndex'\n    ];\n    ColDefUtil.BOOLEAN_PROPERTIES = [\n        'suppressCellFlash',\n        'suppressToolPanel',\n        'openByDefault',\n        'marryChildren',\n        'hide',\n        'rowGroup',\n        'pivot',\n        'checkboxSelection',\n        'headerCheckboxSelection',\n        'headerCheckboxSelectionFilteredOnly',\n        'suppressMenu',\n        'suppressSorting',\n        'suppressMovable',\n        'suppressFilter',\n        'lockPosition',\n        'lockVisible',\n        'lockPinned',\n        'unSortIcon',\n        'suppressSizeToFit',\n        'suppressResize',\n        'suppressAutoSize',\n        'enableRowGroup',\n        'enablePivot',\n        'enableValue',\n        'editable',\n        'suppressPaste',\n        'suppressNavigable',\n        'enableCellChangeFlash',\n        'rowDrag',\n        'autoHeight',\n        'sortable',\n        'resizable',\n        'singleClickEdit'\n    ];\n    ColDefUtil.FUNCTION_PROPERTIES = [\n        'valueGetter',\n        'valueSetter',\n        'filterValueGetter',\n        'keyCreator',\n        'cellRenderer',\n        'cellRendererFramework',\n        'pinnedRowCellRenderer',\n        'valueFormatter',\n        'pinnedRowValueFormatter',\n        'valueParser',\n        'comparator',\n        'equals',\n        'pivotComparator',\n        'suppressKeyboardEvent',\n        'colSpan',\n        'rowSpan',\n        'getQuickFilterText',\n        'newValueHandler',\n        'onCellValueChanged',\n        'onCellClicked',\n        'onCellDoubleClicked',\n        'onCellContextMenu',\n        'tooltip',\n        'tooltipValueGetter',\n        'tooltipComponent',\n        'tooltipComponentFramework',\n        'cellRendererSelector',\n        'cellEditorSelector'\n    ];\n    ColDefUtil.ALL_PROPERTIES = ColDefUtil.ARRAY_PROPERTIES\n        .concat(ColDefUtil.OBJECT_PROPERTIES)\n        .concat(ColDefUtil.STRING_PROPERTIES)\n        .concat(ColDefUtil.NUMBER_PROPERTIES)\n        .concat(ColDefUtil.FUNCTION_PROPERTIES)\n        .concat(ColDefUtil.BOOLEAN_PROPERTIES);\n    // used when doing property checks - this causes noise when using frameworks which can add their own fw specific\n    // properties to colDefs, gridOptions etc\n    ColDefUtil.FRAMEWORK_PROPERTIES = ['__ob__', '__metadata__', 'mappedColumnProperties', 'hasChildColumns',\n        'toColDef', 'createColDefFromGridColumn'];\n    return ColDefUtil;\n}());\nexports.ColDefUtil = ColDefUtil;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SideBarDefParser = /** @class */ (function () {\n    function SideBarDefParser() {\n    }\n    SideBarDefParser.parse = function (toParse) {\n        if (!toParse) {\n            return null;\n        }\n        if (toParse === true) {\n            return {\n                toolPanels: [\n                    SideBarDefParser.DEFAULT_COLUMN_COMP,\n                    SideBarDefParser.DEFAULT_FILTER_COMP,\n                ],\n                defaultToolPanel: 'columns'\n            };\n        }\n        if (typeof toParse === 'string') {\n            return SideBarDefParser.parse([toParse]);\n        }\n        if (Array.isArray(toParse)) {\n            var comps_1 = [];\n            toParse.forEach(function (key) {\n                var lookupResult = SideBarDefParser.DEFAULT_BY_KEY[key];\n                if (!lookupResult) {\n                    console.warn(\"ag-grid: the key \" + key + \" is not a valid key for specifying a tool panel, valid keys are: \" + Object.keys(SideBarDefParser.DEFAULT_BY_KEY).join(','));\n                    return;\n                }\n                comps_1.push(lookupResult);\n            });\n            if (comps_1.length === 0) {\n                return null;\n            }\n            return {\n                toolPanels: comps_1,\n                defaultToolPanel: comps_1[0].id\n            };\n        }\n        var result = {\n            toolPanels: SideBarDefParser.parseComponents(toParse.toolPanels),\n            defaultToolPanel: toParse.defaultToolPanel,\n            hiddenByDefault: toParse.hiddenByDefault\n        };\n        return result;\n    };\n    SideBarDefParser.parseComponents = function (from) {\n        var result = [];\n        from.forEach(function (it) {\n            var toAdd = null;\n            if (typeof it === 'string') {\n                var lookupResult = SideBarDefParser.DEFAULT_BY_KEY[it];\n                if (!lookupResult) {\n                    console.warn(\"ag-grid: the key \" + it + \" is not a valid key for specifying a tool panel, valid keys are: \" + Object.keys(SideBarDefParser.DEFAULT_BY_KEY).join(','));\n                    return;\n                }\n                toAdd = lookupResult;\n            }\n            else {\n                toAdd = it;\n            }\n            result.push(toAdd);\n        });\n        return result;\n    };\n    SideBarDefParser.DEFAULT_COLUMN_COMP = {\n        id: 'columns',\n        labelDefault: 'Columns',\n        labelKey: 'columns',\n        iconKey: 'columns',\n        toolPanel: 'agColumnsToolPanel',\n    };\n    SideBarDefParser.DEFAULT_FILTER_COMP = {\n        id: 'filters',\n        labelDefault: 'Filters',\n        labelKey: 'filters',\n        iconKey: 'filter',\n        toolPanel: 'agFiltersToolPanel',\n    };\n    SideBarDefParser.DEFAULT_BY_KEY = {\n        columns: SideBarDefParser.DEFAULT_COLUMN_COMP,\n        filters: SideBarDefParser.DEFAULT_FILTER_COMP\n    };\n    return SideBarDefParser;\n}());\nexports.SideBarDefParser = SideBarDefParser;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// class returns a unique id to use for the column. it checks the existing columns, and if the requested\n// id is already taken, it will start appending numbers until it gets a unique id.\n// eg, if the col field is 'name', it will try ids: {name, name_1, name_2...}\n// if no field or id provided in the col, it will try the ids of natural numbers\nvar utils_1 = require(\"../utils\");\nvar ColumnKeyCreator = /** @class */ (function () {\n    function ColumnKeyCreator() {\n        this.existingKeys = [];\n    }\n    ColumnKeyCreator.prototype.addExistingKeys = function (keys) {\n        this.existingKeys = this.existingKeys.concat(keys);\n    };\n    ColumnKeyCreator.prototype.getUniqueKey = function (colId, colField) {\n        // in case user passed in number for colId, convert to string\n        colId = utils_1._.toStringOrNull(colId);\n        var count = 0;\n        while (true) {\n            var idToTry = void 0;\n            if (colId) {\n                idToTry = colId;\n                if (count !== 0) {\n                    idToTry += '_' + count;\n                }\n            }\n            else if (colField) {\n                idToTry = colField;\n                if (count !== 0) {\n                    idToTry += '_' + count;\n                }\n            }\n            else {\n                idToTry = '' + count;\n            }\n            if (this.existingKeys.indexOf(idToTry) < 0) {\n                this.existingKeys.push(idToTry);\n                return idToTry;\n            }\n            count++;\n        }\n    };\n    return ColumnKeyCreator;\n}());\nexports.ColumnKeyCreator = ColumnKeyCreator;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar context_1 = require(\"../context/context\");\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar headerRowComp_1 = require(\"./headerRowComp\");\nvar bodyDropTarget_1 = require(\"./bodyDropTarget\");\nvar column_1 = require(\"../entities/column\");\nvar scrollVisibleService_1 = require(\"../gridPanel/scrollVisibleService\");\nvar utils_1 = require(\"../utils\");\nvar HeaderContainer = /** @class */ (function () {\n    function HeaderContainer(eContainer, eViewport, pinned) {\n        this.headerRowComps = [];\n        this.eContainer = eContainer;\n        this.pinned = pinned;\n        this.eViewport = eViewport;\n    }\n    HeaderContainer.prototype.registerGridComp = function (gridPanel) {\n        this.setupDragAndDrop(gridPanel);\n    };\n    HeaderContainer.prototype.forEachHeaderElement = function (callback) {\n        this.headerRowComps.forEach(function (headerRowComp) { return headerRowComp.forEachHeaderElement(callback); });\n    };\n    HeaderContainer.prototype.init = function () {\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        // if value changes, then if not pivoting, we at least need to change the label eg from sum() to avg(),\n        // if pivoting, then the columns have changed\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        this.eventService.addEventListener(events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    };\n    // if row group changes, that means we may need to add aggFuncs to the column headers,\n    // if the grid goes from no aggregation (ie no grouping) to grouping\n    HeaderContainer.prototype.onColumnRowGroupChanged = function () {\n        this.onGridColumnsChanged();\n    };\n    // if the agg func of a column changes, then we may need to update the agg func in columns header\n    HeaderContainer.prototype.onColumnValueChanged = function () {\n        this.onGridColumnsChanged();\n    };\n    HeaderContainer.prototype.onColumnResized = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onDisplayedColumnsChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onScrollVisibilityChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.setWidthOfPinnedContainer = function () {\n        var pinningLeft = this.pinned === column_1.Column.PINNED_LEFT;\n        var pinningRight = this.pinned === column_1.Column.PINNED_RIGHT;\n        var controller = this.columnController;\n        var isRtl = this.gridOptionsWrapper.isEnableRtl();\n        if (pinningLeft || pinningRight) {\n            // size to fit all columns\n            var width = controller[pinningLeft ? 'getPinnedLeftContainerWidth' : 'getPinnedRightContainerWidth']();\n            // if there is a scroll showing (and taking up space, so Windows, and not iOS)\n            // in the body, then we add extra space to keep header aligned with the body,\n            // as body width fits the cols and the scrollbar\n            var addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && ((isRtl && pinningLeft) || (!isRtl && pinningRight));\n            if (addPaddingForScrollbar) {\n                width += this.scrollWidth;\n            }\n            utils_1._.setFixedWidth(this.eContainer, width);\n        }\n    };\n    HeaderContainer.prototype.destroy = function () {\n        this.removeHeaderRowComps();\n    };\n    // grid cols have changed - this also means the number of rows in the header can have\n    // changed. so we remove all the old rows and insert new ones for a complete refresh\n    HeaderContainer.prototype.onGridColumnsChanged = function () {\n        this.removeAndCreateAllRowComps();\n    };\n    HeaderContainer.prototype.removeAndCreateAllRowComps = function () {\n        this.removeHeaderRowComps();\n        this.createHeaderRowComps();\n    };\n    // we expose this for gridOptions.api.refreshHeader() to call\n    HeaderContainer.prototype.refresh = function () {\n        this.removeAndCreateAllRowComps();\n    };\n    HeaderContainer.prototype.setupDragAndDrop = function (gridComp) {\n        var dropContainer = this.eViewport ? this.eViewport : this.eContainer;\n        var bodyDropTarget = new bodyDropTarget_1.BodyDropTarget(this.pinned, dropContainer);\n        this.context.wireBean(bodyDropTarget);\n        bodyDropTarget.registerGridComp(gridComp);\n    };\n    HeaderContainer.prototype.removeHeaderRowComps = function () {\n        this.headerRowComps.forEach(function (headerRowComp) {\n            headerRowComp.destroy();\n        });\n        this.headerRowComps.length = 0;\n        utils_1._.clearElement(this.eContainer);\n    };\n    HeaderContainer.prototype.createHeaderRowComps = function () {\n        // if we are displaying header groups, then we have many rows here.\n        // go through each row of the header, one by one.\n        var rowCount = this.columnController.getHeaderRowCount();\n        for (var dept = 0; dept < rowCount; dept++) {\n            var groupRow = dept !== (rowCount - 1);\n            var type = groupRow ? headerRowComp_1.HeaderRowType.COLUMN_GROUP : headerRowComp_1.HeaderRowType.COLUMN;\n            var headerRowComp = new headerRowComp_1.HeaderRowComp(dept, type, this.pinned, this.dropTarget);\n            this.context.wireBean(headerRowComp);\n            this.headerRowComps.push(headerRowComp);\n            this.eContainer.appendChild(headerRowComp.getGui());\n        }\n        var includeFloatingFilterRow = this.gridOptionsWrapper.isFloatingFilter() && !this.columnController.isPivotMode();\n        if (includeFloatingFilterRow) {\n            var headerRowComp = new headerRowComp_1.HeaderRowComp(rowCount, headerRowComp_1.HeaderRowType.FLOATING_FILTER, this.pinned, this.dropTarget);\n            this.context.wireBean(headerRowComp);\n            this.headerRowComps.push(headerRowComp);\n            this.eContainer.appendChild(headerRowComp.getGui());\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderContainer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], HeaderContainer.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], HeaderContainer.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], HeaderContainer.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], HeaderContainer.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], HeaderContainer.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('scrollVisibleService'),\n        __metadata(\"design:type\", scrollVisibleService_1.ScrollVisibleService)\n    ], HeaderContainer.prototype, \"scrollVisibleService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeaderContainer.prototype, \"init\", null);\n    return HeaderContainer;\n}());\nexports.HeaderContainer = HeaderContainer;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../widgets/component\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar column_1 = require(\"../entities/column\");\nvar eventService_1 = require(\"../eventService\");\nvar events_1 = require(\"../events\");\nvar headerWrapperComp_1 = require(\"./header/headerWrapperComp\");\nvar headerGroupWrapperComp_1 = require(\"./headerGroup/headerGroupWrapperComp\");\nvar filterManager_1 = require(\"../filter/filterManager\");\nvar gridApi_1 = require(\"../gridApi\");\nvar constants_1 = require(\"../constants\");\nvar utils_1 = require(\"../utils\");\nvar floatingFilterWrapper_1 = require(\"../filter/floating/floatingFilterWrapper\");\nvar HeaderRowType;\n(function (HeaderRowType) {\n    HeaderRowType[HeaderRowType[\"COLUMN_GROUP\"] = 0] = \"COLUMN_GROUP\";\n    HeaderRowType[HeaderRowType[\"COLUMN\"] = 1] = \"COLUMN\";\n    HeaderRowType[HeaderRowType[\"FLOATING_FILTER\"] = 2] = \"FLOATING_FILTER\";\n})(HeaderRowType = exports.HeaderRowType || (exports.HeaderRowType = {}));\nvar HeaderRowComp = /** @class */ (function (_super) {\n    __extends(HeaderRowComp, _super);\n    function HeaderRowComp(dept, type, pinned, dropTarget) {\n        var _this = _super.call(this, \"<div class=\\\"ag-header-row\\\" role=\\\"presentation\\\"/>\") || this;\n        _this.headerComps = {};\n        _this.dept = dept;\n        _this.type = type;\n        _this.pinned = pinned;\n        _this.dropTarget = dropTarget;\n        return _this;\n    }\n    HeaderRowComp.prototype.forEachHeaderElement = function (callback) {\n        var _this = this;\n        Object.keys(this.headerComps).forEach(function (key) {\n            callback(_this.headerComps[key]);\n        });\n    };\n    HeaderRowComp.prototype.destroy = function () {\n        var idsOfAllChildren = Object.keys(this.headerComps);\n        this.removeAndDestroyChildComponents(idsOfAllChildren);\n        _super.prototype.destroy.call(this);\n    };\n    HeaderRowComp.prototype.removeAndDestroyChildComponents = function (idsToDestroy) {\n        var _this = this;\n        idsToDestroy.forEach(function (id) {\n            var childHeaderComp = _this.headerComps[id];\n            _this.getGui().removeChild(childHeaderComp.getGui());\n            childHeaderComp.destroy();\n            delete _this.headerComps[id];\n        });\n    };\n    HeaderRowComp.prototype.onRowHeightChanged = function () {\n        var headerRowCount = this.columnController.getHeaderRowCount();\n        var sizes = [];\n        var numberOfFloating = 0;\n        var groupHeight;\n        var headerHeight;\n        if (!this.columnController.isPivotMode()) {\n            if (this.gridOptionsWrapper.isFloatingFilter()) {\n                headerRowCount++;\n            }\n            numberOfFloating = (this.gridOptionsWrapper.isFloatingFilter()) ? 1 : 0;\n            groupHeight = this.gridOptionsWrapper.getGroupHeaderHeight();\n            headerHeight = this.gridOptionsWrapper.getHeaderHeight();\n        }\n        else {\n            numberOfFloating = 0;\n            groupHeight = this.gridOptionsWrapper.getPivotGroupHeaderHeight();\n            headerHeight = this.gridOptionsWrapper.getPivotHeaderHeight();\n        }\n        var numberOfNonGroups = 1 + numberOfFloating;\n        var numberOfGroups = headerRowCount - numberOfNonGroups;\n        for (var i = 0; i < numberOfGroups; i++) {\n            sizes.push(groupHeight);\n        }\n        sizes.push(headerHeight);\n        for (var i = 0; i < numberOfFloating; i++) {\n            sizes.push(this.gridOptionsWrapper.getFloatingFiltersHeight());\n        }\n        var rowHeight = 0;\n        for (var i = 0; i < this.dept; i++) {\n            rowHeight += sizes[i];\n        }\n        this.getGui().style.top = rowHeight + 'px';\n        this.getGui().style.height = sizes[this.dept] + 'px';\n    };\n    //noinspection JSUnusedLocalSymbols\n    HeaderRowComp.prototype.init = function () {\n        this.onRowHeightChanged();\n        this.onVirtualColumnsChanged();\n        this.setWidth();\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.gridOptionsWrapper, gridOptionsWrapper_1.GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n    };\n    HeaderRowComp.prototype.onColumnResized = function () {\n        this.setWidth();\n    };\n    HeaderRowComp.prototype.setWidth = function () {\n        var width = this.getWidthForRow();\n        this.getGui().style.width = width + 'px';\n    };\n    HeaderRowComp.prototype.getWidthForRow = function () {\n        var printLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        if (printLayout) {\n            var centerRow = utils_1._.missing(this.pinned);\n            if (centerRow) {\n                return this.columnController.getContainerWidth(column_1.Column.PINNED_RIGHT)\n                    + this.columnController.getContainerWidth(column_1.Column.PINNED_LEFT)\n                    + this.columnController.getContainerWidth(null);\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            // if not printing, just return the width as normal\n            return this.columnController.getContainerWidth(this.pinned);\n        }\n    };\n    HeaderRowComp.prototype.onGridColumnsChanged = function () {\n        this.removeAndDestroyAllChildComponents();\n    };\n    HeaderRowComp.prototype.removeAndDestroyAllChildComponents = function () {\n        var idsOfAllChildren = Object.keys(this.headerComps);\n        this.removeAndDestroyChildComponents(idsOfAllChildren);\n    };\n    HeaderRowComp.prototype.onDisplayedColumnsChanged = function () {\n        this.onVirtualColumnsChanged();\n        this.setWidth();\n    };\n    HeaderRowComp.prototype.getItemsAtDept = function () {\n        var _this = this;\n        var printLayout = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_PRINT;\n        if (printLayout) {\n            // for print layout, we add all columns into the center\n            var centerContainer = utils_1._.missing(this.pinned);\n            if (centerContainer) {\n                var result_1 = [];\n                [column_1.Column.PINNED_LEFT, null, column_1.Column.PINNED_RIGHT].forEach(function (pinned) {\n                    var items = _this.columnController.getVirtualHeaderGroupRow(pinned, _this.type == HeaderRowType.FLOATING_FILTER ?\n                        _this.dept - 1 :\n                        _this.dept);\n                    result_1 = result_1.concat(items);\n                });\n                return result_1;\n            }\n            else {\n                return [];\n            }\n        }\n        else {\n            // when in normal layout, we add the columns for that container only\n            return this.columnController.getVirtualHeaderGroupRow(this.pinned, this.type == HeaderRowType.FLOATING_FILTER ?\n                this.dept - 1 :\n                this.dept);\n        }\n    };\n    HeaderRowComp.prototype.onVirtualColumnsChanged = function () {\n        var _this = this;\n        var currentChildIds = Object.keys(this.headerComps);\n        var itemsAtDepth = this.getItemsAtDept();\n        var ensureDomOrder = this.gridOptionsWrapper.isEnsureDomOrder();\n        var eBefore;\n        itemsAtDepth.forEach(function (child) {\n            // skip groups that have no displayed children. this can happen when the group is broken,\n            // and this section happens to have nothing to display for the open / closed state.\n            // (a broken group is one that is split, ie columns in the group have a non-group column\n            // in between them)\n            if (child.isEmptyGroup()) {\n                return;\n            }\n            var idOfChild = child.getUniqueId();\n            var eParentContainer = _this.getGui();\n            // if we already have this cell rendered, do nothing\n            var colAlreadyInDom = currentChildIds.indexOf(idOfChild) >= 0;\n            var headerComp;\n            var eHeaderCompGui;\n            if (colAlreadyInDom) {\n                utils_1._.removeFromArray(currentChildIds, idOfChild);\n                headerComp = _this.headerComps[idOfChild];\n                eHeaderCompGui = headerComp.getGui();\n                if (ensureDomOrder) {\n                    utils_1._.ensureDomOrder(eParentContainer, eHeaderCompGui, eBefore);\n                }\n                eBefore = eHeaderCompGui;\n            }\n            else {\n                headerComp = _this.createHeaderComp(child);\n                _this.headerComps[idOfChild] = headerComp;\n                eHeaderCompGui = headerComp.getGui();\n                if (ensureDomOrder) {\n                    utils_1._.insertWithDomOrder(eParentContainer, eHeaderCompGui, eBefore);\n                }\n                else {\n                    eParentContainer.appendChild(eHeaderCompGui);\n                }\n                eBefore = eHeaderCompGui;\n            }\n        });\n        // at this point, anything left in currentChildIds is an element that is no longer in the viewport\n        this.removeAndDestroyChildComponents(currentChildIds);\n    };\n    HeaderRowComp.prototype.createHeaderComp = function (columnGroupChild) {\n        var result;\n        switch (this.type) {\n            case HeaderRowType.COLUMN:\n                result = new headerWrapperComp_1.HeaderWrapperComp(columnGroupChild, this.dropTarget, this.pinned);\n                break;\n            case HeaderRowType.COLUMN_GROUP:\n                result = new headerGroupWrapperComp_1.HeaderGroupWrapperComp(columnGroupChild, this.dropTarget, this.pinned);\n                break;\n            case HeaderRowType.FLOATING_FILTER:\n                result = new floatingFilterWrapper_1.FloatingFilterWrapper(columnGroupChild);\n                break;\n        }\n        this.getContext().wireBean(result);\n        return result;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderRowComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], HeaderRowComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], HeaderRowComp.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], HeaderRowComp.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], HeaderRowComp.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeaderRowComp.prototype, \"init\", null);\n    return HeaderRowComp;\n}(component_1.Component));\nexports.HeaderRowComp = HeaderRowComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar context_1 = require(\"../context/context\");\nvar moveColumnController_1 = require(\"./moveColumnController\");\nvar column_1 = require(\"../entities/column\");\nvar bodyDropPivotTarget_1 = require(\"./bodyDropPivotTarget\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar DropType;\n(function (DropType) {\n    DropType[DropType[\"ColumnMove\"] = 0] = \"ColumnMove\";\n    DropType[DropType[\"Pivot\"] = 1] = \"Pivot\";\n})(DropType || (DropType = {}));\nvar BodyDropTarget = /** @class */ (function () {\n    function BodyDropTarget(pinned, eContainer) {\n        this.dropListeners = {};\n        this.pinned = pinned;\n        this.eContainer = eContainer;\n    }\n    BodyDropTarget.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n        this.moveColumnController.registerGridComp(gridPanel);\n        switch (this.pinned) {\n            case column_1.Column.PINNED_LEFT:\n                this.eSecondaryContainers = this.gridPanel.getDropTargetLeftContainers();\n                break;\n            case column_1.Column.PINNED_RIGHT:\n                this.eSecondaryContainers = this.gridPanel.getDropTargetRightContainers();\n                break;\n            default:\n                this.eSecondaryContainers = this.gridPanel.getDropTargetBodyContainers();\n                break;\n        }\n    };\n    BodyDropTarget.prototype.isInterestedIn = function (type) {\n        // not interested in row drags\n        return type === dragAndDropService_1.DragSourceType.HeaderCell || type === dragAndDropService_1.DragSourceType.ToolPanel;\n    };\n    BodyDropTarget.prototype.getSecondaryContainers = function () {\n        return this.eSecondaryContainers;\n    };\n    BodyDropTarget.prototype.getContainer = function () {\n        return this.eContainer;\n    };\n    BodyDropTarget.prototype.init = function () {\n        this.moveColumnController = new moveColumnController_1.MoveColumnController(this.pinned, this.eContainer);\n        this.context.wireBean(this.moveColumnController);\n        var bodyDropPivotTarget = new bodyDropPivotTarget_1.BodyDropPivotTarget(this.pinned);\n        this.context.wireBean(bodyDropPivotTarget);\n        this.dropListeners[DropType.ColumnMove] = this.moveColumnController;\n        this.dropListeners[DropType.Pivot] = bodyDropPivotTarget;\n        this.dragAndDropService.addDropTarget(this);\n    };\n    BodyDropTarget.prototype.getIconName = function () {\n        return this.currentDropListener.getIconName();\n    };\n    // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\n    // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\n    // dropped into the grid's body.\n    BodyDropTarget.prototype.getDropType = function (draggingEvent) {\n        if (this.columnController.isPivotMode()) {\n            // in pivot mode, then if moving a column (ie didn't come from toolpanel) then it's\n            // a standard column move, however if it came from teh toolpanel, then we are introducing\n            // dimensions or values to the grid\n            if (draggingEvent.dragSource.type === dragAndDropService_1.DragSourceType.ToolPanel) {\n                return DropType.Pivot;\n            }\n            else {\n                return DropType.ColumnMove;\n            }\n        }\n        else {\n            // it's a column, and not pivot mode, so always moving\n            return DropType.ColumnMove;\n        }\n    };\n    BodyDropTarget.prototype.onDragEnter = function (draggingEvent) {\n        // we pick the drop listener depending on whether we are in pivot mode are not. if we are\n        // in pivot mode, then dropping cols changes the row group, pivot, value stats. otherwise\n        // we change visibility state and position.\n        // if (this.columnController.isPivotMode()) {\n        var dropType = this.getDropType(draggingEvent);\n        this.currentDropListener = this.dropListeners[dropType];\n        this.currentDropListener.onDragEnter(draggingEvent);\n    };\n    BodyDropTarget.prototype.onDragLeave = function (params) {\n        this.currentDropListener.onDragLeave(params);\n    };\n    BodyDropTarget.prototype.onDragging = function (params) {\n        this.currentDropListener.onDragging(params);\n    };\n    BodyDropTarget.prototype.onDragStop = function (params) {\n        this.currentDropListener.onDragStop(params);\n    };\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], BodyDropTarget.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], BodyDropTarget.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], BodyDropTarget.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BodyDropTarget.prototype, \"init\", null);\n    return BodyDropTarget;\n}());\nexports.BodyDropTarget = BodyDropTarget;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar logger_1 = require(\"../logger\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar column_1 = require(\"../entities/column\");\nvar utils_1 = require(\"../utils\");\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar MoveColumnController = /** @class */ (function () {\n    function MoveColumnController(pinned, eContainer) {\n        this.needToMoveLeft = false;\n        this.needToMoveRight = false;\n        this.pinned = pinned;\n        this.eContainer = eContainer;\n        this.centerContainer = !utils_1._.exists(pinned);\n    }\n    MoveColumnController.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    MoveColumnController.prototype.init = function () {\n        this.logger = this.loggerFactory.create('MoveColumnController');\n    };\n    MoveColumnController.prototype.getIconName = function () {\n        return this.pinned ? dragAndDropService_1.DragAndDropService.ICON_PINNED : dragAndDropService_1.DragAndDropService.ICON_MOVE;\n    };\n    MoveColumnController.prototype.onDragEnter = function (draggingEvent) {\n        // we do dummy drag, so make sure column appears in the right location when first placed\n        var columns = draggingEvent.dragItem.columns;\n        var dragCameFromToolPanel = draggingEvent.dragSource.type === dragAndDropService_1.DragSourceType.ToolPanel;\n        if (dragCameFromToolPanel) {\n            // the if statement doesn't work if drag leaves grid, then enters again\n            this.setColumnsVisible(columns, true, \"uiColumnDragged\");\n        }\n        else {\n            // restore previous state of visible columns upon re-entering. this means if the user drags\n            // a group out, and then drags the group back in, only columns that were originally visible\n            // will be visible again. otherwise a group with three columns (but only two visible) could\n            // be dragged out, then when it's dragged in again, all three are visible. this stops that.\n            var visibleState_1 = draggingEvent.dragItem.visibleState;\n            var visibleColumns = columns.filter(function (column) { return visibleState_1[column.getId()]; });\n            this.setColumnsVisible(visibleColumns, true, \"uiColumnDragged\");\n        }\n        this.setColumnsPinned(columns, this.pinned, \"uiColumnDragged\");\n        this.onDragging(draggingEvent, true);\n    };\n    MoveColumnController.prototype.onDragLeave = function (draggingEvent) {\n        var hideColumnOnExit = !this.gridOptionsWrapper.isSuppressDragLeaveHidesColumns() && !draggingEvent.fromNudge;\n        if (hideColumnOnExit) {\n            var dragItem = draggingEvent.dragSource.dragItemCallback();\n            var columns = dragItem.columns;\n            this.setColumnsVisible(columns, false, \"uiColumnDragged\");\n        }\n        this.ensureIntervalCleared();\n    };\n    MoveColumnController.prototype.setColumnsVisible = function (columns, visible, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (columns) {\n            var allowedCols = columns.filter(function (c) { return !c.getColDef().lockVisible; });\n            this.columnController.setColumnsVisible(allowedCols, visible, source);\n        }\n    };\n    MoveColumnController.prototype.setColumnsPinned = function (columns, pinned, source) {\n        if (source === void 0) { source = \"api\"; }\n        if (columns) {\n            var allowedCols = columns.filter(function (c) { return !c.getColDef().lockPinned; });\n            this.columnController.setColumnsPinned(allowedCols, pinned, source);\n        }\n    };\n    MoveColumnController.prototype.onDragStop = function () {\n        this.ensureIntervalCleared();\n    };\n    MoveColumnController.prototype.normaliseX = function (x) {\n        // flip the coordinate if doing RTL\n        var flipHorizontallyForRtl = this.gridOptionsWrapper.isEnableRtl();\n        if (flipHorizontallyForRtl) {\n            var clientWidth = this.eContainer.clientWidth;\n            x = clientWidth - x;\n        }\n        // adjust for scroll only if centre container (the pinned containers dont scroll)\n        var adjustForScroll = this.centerContainer;\n        if (adjustForScroll) {\n            x += this.gridPanel.getCenterViewportScrollLeft();\n        }\n        return x;\n    };\n    MoveColumnController.prototype.checkCenterForScrolling = function (xAdjustedForScroll) {\n        if (this.centerContainer) {\n            // scroll if the mouse has gone outside the grid (or just outside the scrollable part if pinning)\n            // putting in 50 buffer, so even if user gets to edge of grid, a scroll will happen\n            var firstVisiblePixel = this.gridPanel.getCenterViewportScrollLeft();\n            var lastVisiblePixel = firstVisiblePixel + this.gridPanel.getCenterWidth();\n            if (this.gridOptionsWrapper.isEnableRtl()) {\n                this.needToMoveRight = xAdjustedForScroll < (firstVisiblePixel + 50);\n                this.needToMoveLeft = xAdjustedForScroll > (lastVisiblePixel - 50);\n            }\n            else {\n                this.needToMoveLeft = xAdjustedForScroll < (firstVisiblePixel + 50);\n                this.needToMoveRight = xAdjustedForScroll > (lastVisiblePixel - 50);\n            }\n            if (this.needToMoveLeft || this.needToMoveRight) {\n                this.ensureIntervalStarted();\n            }\n            else {\n                this.ensureIntervalCleared();\n            }\n        }\n    };\n    MoveColumnController.prototype.onDragging = function (draggingEvent, fromEnter) {\n        var _this = this;\n        if (fromEnter === void 0) { fromEnter = false; }\n        this.lastDraggingEvent = draggingEvent;\n        // if moving up or down (ie not left or right) then do nothing\n        if (utils_1._.missing(draggingEvent.hDirection)) {\n            return;\n        }\n        var xNormalised = this.normaliseX(draggingEvent.x);\n        // if the user is dragging into the panel, ie coming from the side panel into the main grid,\n        // we don't want to scroll the grid this time, it would appear like the table is jumping\n        // each time a column is dragged in.\n        if (!fromEnter) {\n            this.checkCenterForScrolling(xNormalised);\n        }\n        var hDirectionNormalised = this.normaliseDirection(draggingEvent.hDirection);\n        var dragSourceType = draggingEvent.dragSource.type;\n        var columnsToMove = draggingEvent.dragSource.dragItemCallback().columns;\n        columnsToMove = columnsToMove.filter(function (col) {\n            if (col.getColDef().lockPinned) {\n                // if locked return true only if both col and container are same pin type.\n                // double equals (==) here on purpose so that null==undefined is true (for not pinned options)\n                return col.getPinned() == _this.pinned;\n            }\n            else {\n                // if not pin locked, then always allowed to be in this container\n                return true;\n            }\n        });\n        this.attemptMoveColumns(dragSourceType, columnsToMove, hDirectionNormalised, xNormalised, fromEnter);\n    };\n    MoveColumnController.prototype.normaliseDirection = function (hDirection) {\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            switch (hDirection) {\n                case dragAndDropService_1.HDirection.Left: return dragAndDropService_1.HDirection.Right;\n                case dragAndDropService_1.HDirection.Right: return dragAndDropService_1.HDirection.Left;\n                default: console.error(\"ag-Grid: Unknown direction \" + hDirection);\n            }\n        }\n        else {\n            return hDirection;\n        }\n    };\n    // returns the index of the first column in the list ONLY if the cols are all beside\n    // each other. if the cols are not beside each other, then returns null\n    MoveColumnController.prototype.calculateOldIndex = function (movingCols) {\n        var gridCols = this.columnController.getAllGridColumns();\n        var indexes = [];\n        movingCols.forEach(function (col) { return indexes.push(gridCols.indexOf(col)); });\n        utils_1._.sortNumberArray(indexes);\n        var firstIndex = indexes[0];\n        var lastIndex = utils_1._.last(indexes);\n        var spread = lastIndex - firstIndex;\n        var gapsExist = spread !== indexes.length - 1;\n        return gapsExist ? null : firstIndex;\n    };\n    MoveColumnController.prototype.attemptMoveColumns = function (dragSourceType, allMovingColumns, hDirection, xAdjusted, fromEnter) {\n        var draggingLeft = hDirection === dragAndDropService_1.HDirection.Left;\n        var draggingRight = hDirection === dragAndDropService_1.HDirection.Right;\n        var validMoves = this.calculateValidMoves(allMovingColumns, draggingRight, xAdjusted);\n        // if cols are not adjacent, then this returns null. when moving, we constrain the direction of the move\n        // (ie left or right) to the mouse direction. however\n        var oldIndex = this.calculateOldIndex(allMovingColumns);\n        for (var i = 0; i < validMoves.length; i++) {\n            var newIndex = validMoves[i];\n            // the two check below stop an error when the user grabs a group my a middle column, then\n            // it is possible the mouse pointer is to the right of a column while been dragged left.\n            // so we need to make sure that the mouse pointer is actually left of the left most column\n            // if moving left, and right of the right most column if moving right\n            // we check 'fromEnter' below so we move the column to the new spot if the mouse is coming from\n            // outside the grid, eg if the column is moving from side panel, mouse is moving left, then we should\n            // place the column to the RHS even if the mouse is moving left and the column is already on\n            // the LHS. otherwise we stick to the rule described above.\n            var constrainDirection = oldIndex !== null && !fromEnter;\n            // don't consider 'fromEnter' when dragging header cells, otherwise group can jump to opposite direction of drag\n            if (dragSourceType == dragAndDropService_1.DragSourceType.HeaderCell) {\n                constrainDirection = oldIndex !== null;\n            }\n            if (constrainDirection) {\n                // only allow left drag if this column is moving left\n                if (draggingLeft && newIndex >= oldIndex) {\n                    continue;\n                }\n                // only allow right drag if this column is moving right\n                if (draggingRight && newIndex <= oldIndex) {\n                    continue;\n                }\n            }\n            if (!this.columnController.doesMovePassRules(allMovingColumns, newIndex)) {\n                continue;\n            }\n            this.columnController.moveColumns(allMovingColumns, newIndex, \"uiColumnDragged\");\n            // important to return here, so once we do the first valid move, we don't try do any more\n            return;\n        }\n    };\n    MoveColumnController.prototype.calculateValidMoves = function (movingCols, draggingRight, x) {\n        // this is the list of cols on the screen, so it's these we use when comparing the x mouse position\n        var allDisplayedCols = this.columnController.getDisplayedColumns(this.pinned);\n        // but this list is the list of all cols, when we move a col it's the index within this list that gets used,\n        // so the result we return has to be and index location for this list\n        var allGridCols = this.columnController.getAllGridColumns();\n        var colIsMovingFunc = function (col) { return movingCols.indexOf(col) >= 0; };\n        var colIsNotMovingFunc = function (col) { return movingCols.indexOf(col) < 0; };\n        var movingDisplayedCols = allDisplayedCols.filter(colIsMovingFunc);\n        var otherDisplayedCols = allDisplayedCols.filter(colIsNotMovingFunc);\n        var otherGridCols = allGridCols.filter(colIsNotMovingFunc);\n        // work out how many DISPLAYED columns fit before the 'x' position. this gives us the displayIndex.\n        // for example, if cols are a,b,c,d and we find a,b fit before 'x', then we want to place the moving\n        // col between b and c (so that it is under the mouse position).\n        var displayIndex = 0;\n        var availableWidth = x;\n        // if we are dragging right, then the columns will be to the left of the mouse, so we also want to\n        // include the width of the moving columns\n        if (draggingRight) {\n            var widthOfMovingDisplayedCols_1 = 0;\n            movingDisplayedCols.forEach(function (col) { return widthOfMovingDisplayedCols_1 += col.getActualWidth(); });\n            availableWidth -= widthOfMovingDisplayedCols_1;\n        }\n        if (availableWidth > 0) {\n            // now count how many of the displayed columns will fit to the left\n            for (var i = 0; i < otherDisplayedCols.length; i++) {\n                var col = otherDisplayedCols[i];\n                availableWidth -= col.getActualWidth();\n                if (availableWidth < 0) {\n                    break;\n                }\n                displayIndex++;\n            }\n            // trial and error, if going right, we adjust by one, i didn't manage to quantify why, but it works\n            if (draggingRight) {\n                displayIndex++;\n            }\n        }\n        // the display index is with respect to all the showing columns, however when we move, it's with\n        // respect to all grid columns, so we need to translate from display index to grid index\n        var gridColIndex;\n        if (displayIndex > 0) {\n            var leftColumn = otherDisplayedCols[displayIndex - 1];\n            gridColIndex = otherGridCols.indexOf(leftColumn) + 1;\n        }\n        else {\n            gridColIndex = 0;\n        }\n        var validMoves = [gridColIndex];\n        // add in all adjacent empty columns as other valid moves. this allows us to try putting the new\n        // column in any place of a hidden column, to try different combinations so that we don't break\n        // married children. in other words, maybe the new index breaks a group, but only because some\n        // columns are hidden, maybe we can reshuffle the hidden columns to find a place that works.\n        var nextCol = allGridCols[gridColIndex];\n        while (utils_1._.exists(nextCol) && this.isColumnHidden(allDisplayedCols, nextCol)) {\n            gridColIndex++;\n            validMoves.push(gridColIndex);\n            nextCol = allGridCols[gridColIndex];\n        }\n        return validMoves;\n    };\n    // isHidden takes into account visible=false and group=closed, ie it is not displayed\n    MoveColumnController.prototype.isColumnHidden = function (displayedColumns, col) {\n        return displayedColumns.indexOf(col) < 0;\n    };\n    MoveColumnController.prototype.ensureIntervalStarted = function () {\n        if (!this.movingIntervalId) {\n            this.intervalCount = 0;\n            this.failedMoveAttempts = 0;\n            this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100);\n            if (this.needToMoveLeft) {\n                this.dragAndDropService.setGhostIcon(dragAndDropService_1.DragAndDropService.ICON_LEFT, true);\n            }\n            else {\n                this.dragAndDropService.setGhostIcon(dragAndDropService_1.DragAndDropService.ICON_RIGHT, true);\n            }\n        }\n    };\n    MoveColumnController.prototype.ensureIntervalCleared = function () {\n        if (this.moveInterval) {\n            window.clearInterval(this.movingIntervalId);\n            this.movingIntervalId = null;\n            this.dragAndDropService.setGhostIcon(dragAndDropService_1.DragAndDropService.ICON_MOVE);\n        }\n    };\n    MoveColumnController.prototype.moveInterval = function () {\n        // the amounts we move get bigger at each interval, so the speed accelerates, starting a bit slow\n        // and getting faster. this is to give smoother user experience. we max at 100px to limit the speed.\n        var pixelsToMove;\n        this.intervalCount++;\n        pixelsToMove = 10 + (this.intervalCount * 5);\n        if (pixelsToMove > 100) {\n            pixelsToMove = 100;\n        }\n        var pixelsMoved;\n        if (this.needToMoveLeft) {\n            pixelsMoved = this.gridPanel.scrollHorizontally(-pixelsToMove);\n        }\n        else if (this.needToMoveRight) {\n            pixelsMoved = this.gridPanel.scrollHorizontally(pixelsToMove);\n        }\n        if (pixelsMoved !== 0) {\n            this.onDragging(this.lastDraggingEvent);\n            this.failedMoveAttempts = 0;\n        }\n        else {\n            // we count the failed move attempts. if we fail to move 7 times, then we pin the column.\n            // this is how we achieve pining by dragging the column to the edge of the grid.\n            this.failedMoveAttempts++;\n            var columns = this.lastDraggingEvent.dragItem.columns;\n            var columnsThatCanPin = columns.filter(function (c) { return !c.getColDef().lockPinned; });\n            if (columnsThatCanPin.length > 0) {\n                this.dragAndDropService.setGhostIcon(dragAndDropService_1.DragAndDropService.ICON_PINNED);\n                if (this.failedMoveAttempts > 7) {\n                    var pinType = this.needToMoveLeft ? column_1.Column.PINNED_LEFT : column_1.Column.PINNED_RIGHT;\n                    this.setColumnsPinned(columnsThatCanPin, pinType, \"uiColumnDragged\");\n                    this.dragAndDropService.nudge();\n                }\n            }\n        }\n    };\n    __decorate([\n        context_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", logger_1.LoggerFactory)\n    ], MoveColumnController.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], MoveColumnController.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], MoveColumnController.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], MoveColumnController.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MoveColumnController.prototype, \"init\", null);\n    return MoveColumnController;\n}());\nexports.MoveColumnController = MoveColumnController;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar BodyDropPivotTarget = /** @class */ (function () {\n    function BodyDropPivotTarget(pinned) {\n        this.columnsToAggregate = [];\n        this.columnsToGroup = [];\n        this.columnsToPivot = [];\n        this.pinned = pinned;\n    }\n    /** Callback for when drag enters */\n    BodyDropPivotTarget.prototype.onDragEnter = function (draggingEvent) {\n        var _this = this;\n        this.clearColumnsList();\n        // in pivot mode, we don't accept any drops if functions are read only\n        if (this.gridOptionsWrapper.isFunctionsReadOnly()) {\n            return;\n        }\n        var dragColumns = draggingEvent.dragItem.columns;\n        dragColumns.forEach(function (column) {\n            // we don't allow adding secondary columns\n            if (!column.isPrimary()) {\n                return;\n            }\n            if (column.isAnyFunctionActive()) {\n                return;\n            }\n            if (column.isAllowValue()) {\n                _this.columnsToAggregate.push(column);\n            }\n            else if (column.isAllowRowGroup()) {\n                _this.columnsToGroup.push(column);\n            }\n            else if (column.isAllowRowGroup()) {\n                _this.columnsToPivot.push(column);\n            }\n        });\n    };\n    BodyDropPivotTarget.prototype.getIconName = function () {\n        var totalColumns = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;\n        if (totalColumns > 0) {\n            return this.pinned ? dragAndDropService_1.DragAndDropService.ICON_PINNED : dragAndDropService_1.DragAndDropService.ICON_MOVE;\n        }\n        else {\n            return null;\n        }\n    };\n    /** Callback for when drag leaves */\n    BodyDropPivotTarget.prototype.onDragLeave = function (draggingEvent) {\n        // if we are taking columns out of the center, then we remove them from the report\n        this.clearColumnsList();\n    };\n    BodyDropPivotTarget.prototype.clearColumnsList = function () {\n        this.columnsToAggregate.length = 0;\n        this.columnsToGroup.length = 0;\n        this.columnsToPivot.length = 0;\n    };\n    /** Callback for when dragging */\n    BodyDropPivotTarget.prototype.onDragging = function (draggingEvent) {\n    };\n    /** Callback for when drag stops */\n    BodyDropPivotTarget.prototype.onDragStop = function (draggingEvent) {\n        if (this.columnsToAggregate.length > 0) {\n            this.columnController.addValueColumns(this.columnsToAggregate, \"toolPanelDragAndDrop\");\n        }\n        if (this.columnsToGroup.length > 0) {\n            this.columnController.addRowGroupColumns(this.columnsToGroup, \"toolPanelDragAndDrop\");\n        }\n        if (this.columnsToPivot.length > 0) {\n            this.columnController.addPivotColumns(this.columnsToPivot, \"toolPanelDragAndDrop\");\n        }\n    };\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], BodyDropPivotTarget.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], BodyDropPivotTarget.prototype, \"gridOptionsWrapper\", void 0);\n    return BodyDropPivotTarget;\n}());\nexports.BodyDropPivotTarget = BodyDropPivotTarget;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar constants_1 = require(\"../constants\");\nvar mouseEventService_1 = require(\"./mouseEventService\");\nvar paginationProxy_1 = require(\"../rowModels/paginationProxy\");\nvar focusedCellController_1 = require(\"../focusedCellController\");\nvar animationFrameService_1 = require(\"../misc/animationFrameService\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar NavigationService = /** @class */ (function () {\n    function NavigationService() {\n        this.timeLastPageEventProcessed = 0;\n    }\n    NavigationService.prototype.init = function () {\n        this.scrollWidth = this.gridOptionsWrapper.getScrollbarWidth();\n    };\n    NavigationService.prototype.registerGridComp = function (gridPanel) {\n        this.gridPanel = gridPanel;\n    };\n    NavigationService.prototype.handlePageScrollingKey = function (event) {\n        var key = event.which || event.keyCode;\n        var alt = event.altKey;\n        var ctrl = event.ctrlKey;\n        var currentCell = this.mouseEventService.getCellPositionForEvent(event);\n        if (!currentCell) {\n            return false;\n        }\n        var processed = false;\n        switch (key) {\n            case constants_1.Constants.KEY_PAGE_HOME:\n            case constants_1.Constants.KEY_PAGE_END:\n                // handle home and end when ctrl & alt are NOT pressed\n                if (!ctrl && !alt) {\n                    this.onHomeOrEndKey(key);\n                    processed = true;\n                }\n                break;\n            case constants_1.Constants.KEY_LEFT:\n            case constants_1.Constants.KEY_RIGHT:\n                // handle left and right when ctrl is pressed only\n                if (ctrl && !alt) {\n                    this.onCtrlLeftOrRight(key, currentCell);\n                    processed = true;\n                }\n                break;\n            case constants_1.Constants.KEY_UP:\n            case constants_1.Constants.KEY_DOWN:\n                // handle up and down when ctrl is pressed only\n                if (ctrl && !alt) {\n                    this.onCtrlUpOrDown(key, currentCell);\n                    processed = true;\n                }\n                break;\n            case constants_1.Constants.KEY_PAGE_DOWN:\n                // handle page up and page down when ctrl & alt are NOT pressed\n                if (!ctrl && !alt) {\n                    this.onPageDown(currentCell);\n                    processed = true;\n                }\n                break;\n            case constants_1.Constants.KEY_PAGE_UP:\n                // handle page up and page down when ctrl & alt are NOT pressed\n                if (!ctrl && !alt) {\n                    this.onPageUp(currentCell);\n                    processed = true;\n                }\n                break;\n        }\n        if (processed) {\n            event.preventDefault();\n        }\n        return processed;\n    };\n    // the page up/down keys caused a problem, in that if the user\n    // held the page up/down key down, lots of events got generated,\n    // which clogged up the event queue (as they take time to process)\n    // which in turn froze the grid. Logic below makes sure we wait 100ms\n    // between processing the page up/down events, so when user has finger\n    // held down on key, we ignore page up/down events until 100ms has passed,\n    // which effectively empties the queue of page up/down events.\n    NavigationService.prototype.isTimeSinceLastPageEventToRecent = function () {\n        var now = new Date().getTime();\n        var diff = now - this.timeLastPageEventProcessed;\n        return (diff < 100);\n    };\n    NavigationService.prototype.setTimeLastPageEventProcessed = function () {\n        this.timeLastPageEventProcessed = new Date().getTime();\n    };\n    NavigationService.prototype.onPageDown = function (gridCell) {\n        if (this.isTimeSinceLastPageEventToRecent()) {\n            return;\n        }\n        var scrollPosition = this.gridPanel.getVScrollPosition();\n        var pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n        if (this.gridPanel.isHorizontalScrollShowing()) {\n            pixelsInOnePage -= this.scrollWidth;\n        }\n        var pagingPixelOffset = this.paginationProxy.getPixelOffset();\n        var currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\n        var currentPageBottomRow = this.paginationProxy.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\n        var scrollIndex = currentPageBottomRow;\n        var currentCellPixel = this.paginationProxy.getRow(gridCell.rowIndex).rowTop;\n        var nextCellPixel = currentCellPixel + pixelsInOnePage - pagingPixelOffset;\n        var focusIndex = this.paginationProxy.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n        var pageLastRow = this.paginationProxy.getPageLastRow();\n        if (focusIndex > pageLastRow) {\n            focusIndex = pageLastRow;\n        }\n        if (scrollIndex > pageLastRow) {\n            scrollIndex = pageLastRow;\n        }\n        this.navigateTo(scrollIndex, 'top', null, focusIndex, gridCell.column);\n        this.setTimeLastPageEventProcessed();\n    };\n    NavigationService.prototype.onPageUp = function (gridCell) {\n        if (this.isTimeSinceLastPageEventToRecent()) {\n            return;\n        }\n        var scrollPosition = this.gridPanel.getVScrollPosition();\n        var pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\n        if (this.gridPanel.isHorizontalScrollShowing()) {\n            pixelsInOnePage -= this.scrollWidth;\n        }\n        var pagingPixelOffset = this.paginationProxy.getPixelOffset();\n        var currentPageTopPixel = scrollPosition.top;\n        var currentPageTopRow = this.paginationProxy.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\n        var scrollIndex = currentPageTopRow;\n        var currentRowNode = this.paginationProxy.getRow(gridCell.rowIndex);\n        var nextCellPixel = currentRowNode.rowTop + currentRowNode.rowHeight - pixelsInOnePage - pagingPixelOffset;\n        var focusIndex = this.paginationProxy.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\n        var firstRow = this.paginationProxy.getPageFirstRow();\n        if (focusIndex < firstRow) {\n            focusIndex = firstRow;\n        }\n        if (scrollIndex < firstRow) {\n            scrollIndex = firstRow;\n        }\n        this.navigateTo(scrollIndex, 'bottom', null, focusIndex, gridCell.column);\n        this.setTimeLastPageEventProcessed();\n    };\n    // common logic to navigate. takes parameters:\n    // scrollIndex - what row to vertically scroll to\n    // scrollType - what position to put scroll index ie top/bottom\n    // scrollColumn - what column to horizontally scroll to\n    // focusIndex / focusColumn - for page up / down, we want to scroll to one row/column, but focus another\n    NavigationService.prototype.navigateTo = function (scrollIndex, scrollType, scrollColumn, focusIndex, focusColumn) {\n        if (utils_1._.exists(scrollColumn)) {\n            this.gridPanel.ensureColumnVisible(scrollColumn);\n        }\n        if (utils_1._.exists(scrollIndex)) {\n            this.gridPanel.ensureIndexVisible(scrollIndex, scrollType);\n        }\n        // make sure the cell is rendered, needed if we are to focus\n        this.animationFrameService.flushAllFrames();\n        // if we don't do this, the range will be left on the last cell, which will leave the last focused cell\n        // highlighted.\n        this.focusedCellController.setFocusedCell(focusIndex, focusColumn, null, true);\n        if (this.rangeController) {\n            var cellPosition = { rowIndex: focusIndex, rowPinned: null, column: focusColumn };\n            this.rangeController.setRangeToCell(cellPosition);\n        }\n    };\n    // ctrl + up/down will bring focus to same column, first/last row. no horizontal scrolling.\n    NavigationService.prototype.onCtrlUpOrDown = function (key, gridCell) {\n        var upKey = key === constants_1.Constants.KEY_UP;\n        var rowIndexToScrollTo = upKey ? 0 : this.paginationProxy.getPageLastRow();\n        this.navigateTo(rowIndexToScrollTo, null, gridCell.column, rowIndexToScrollTo, gridCell.column);\n    };\n    // ctrl + left/right will bring focus to same row, first/last cell. no vertical scrolling.\n    NavigationService.prototype.onCtrlLeftOrRight = function (key, gridCell) {\n        var leftKey = key === constants_1.Constants.KEY_LEFT;\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var columnToSelect = leftKey ? allColumns[0] : utils_1._.last(allColumns);\n        this.navigateTo(gridCell.rowIndex, null, columnToSelect, gridCell.rowIndex, columnToSelect);\n    };\n    // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\n    // same cell into view (which means either scroll all the way up, or all the way down).\n    NavigationService.prototype.onHomeOrEndKey = function (key) {\n        var homeKey = key === constants_1.Constants.KEY_PAGE_HOME;\n        var allColumns = this.columnController.getAllDisplayedColumns();\n        var columnToSelect = homeKey ? allColumns[0] : utils_1._.last(allColumns);\n        var rowIndexToScrollTo = homeKey ? 0 : this.paginationProxy.getPageLastRow();\n        this.navigateTo(rowIndexToScrollTo, null, columnToSelect, rowIndexToScrollTo, columnToSelect);\n    };\n    __decorate([\n        context_1.Autowired('mouseEventService'),\n        __metadata(\"design:type\", mouseEventService_1.MouseEventService)\n    ], NavigationService.prototype, \"mouseEventService\", void 0);\n    __decorate([\n        context_1.Autowired('paginationProxy'),\n        __metadata(\"design:type\", paginationProxy_1.PaginationProxy)\n    ], NavigationService.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        context_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], NavigationService.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Autowired('animationFrameService'),\n        __metadata(\"design:type\", animationFrameService_1.AnimationFrameService)\n    ], NavigationService.prototype, \"animationFrameService\", void 0);\n    __decorate([\n        context_1.Optional('rangeController'),\n        __metadata(\"design:type\", Object)\n    ], NavigationService.prototype, \"rangeController\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], NavigationService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], NavigationService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], NavigationService.prototype, \"init\", null);\n    NavigationService = __decorate([\n        context_1.Bean('navigationService')\n    ], NavigationService);\n    return NavigationService;\n}());\nexports.NavigationService = NavigationService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar context_1 = require(\"../../context/context\");\nvar component_1 = require(\"../../widgets/component\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar utils_1 = require(\"../../utils\");\nvar LoadingType;\n(function (LoadingType) {\n    LoadingType[LoadingType[\"Loading\"] = 0] = \"Loading\";\n    LoadingType[LoadingType[\"NoRows\"] = 1] = \"NoRows\";\n})(LoadingType || (LoadingType = {}));\nvar OverlayWrapperComponent = /** @class */ (function (_super) {\n    __extends(OverlayWrapperComponent, _super);\n    function OverlayWrapperComponent() {\n        return _super.call(this, OverlayWrapperComponent.TEMPLATE) || this;\n    }\n    OverlayWrapperComponent.prototype.postConstruct = function () {\n        this.gridOptionsWrapper.addLayoutElement(this.eOverlayWrapper);\n        this.setVisible(false);\n    };\n    OverlayWrapperComponent.prototype.setWrapperTypeClass = function (loadingType) {\n        utils_1._.addOrRemoveCssClass(this.eOverlayWrapper, 'ag-overlay-loading-wrapper', loadingType === LoadingType.Loading);\n        utils_1._.addOrRemoveCssClass(this.eOverlayWrapper, 'ag-overlay-no-rows-wrapper', loadingType === LoadingType.NoRows);\n    };\n    OverlayWrapperComponent.prototype.showLoadingOverlay = function () {\n        var _this = this;\n        this.setWrapperTypeClass(LoadingType.Loading);\n        this.destroyActiveOverlay();\n        var params = { api: this.gridOptionsWrapper.getApi() };\n        this.userComponentFactory.newLoadingOverlayComponent(params).then(function (comp) {\n            _this.eOverlayWrapper.appendChild(comp.getGui());\n            _this.activeOverlay = comp;\n        });\n        this.setVisible(true);\n    };\n    OverlayWrapperComponent.prototype.showNoRowsOverlay = function () {\n        var _this = this;\n        this.setWrapperTypeClass(LoadingType.NoRows);\n        this.destroyActiveOverlay();\n        var params = { api: this.gridOptionsWrapper.getApi() };\n        this.userComponentFactory.newNoRowsOverlayComponent(params).then(function (comp) {\n            _this.eOverlayWrapper.appendChild(comp.getGui());\n            _this.activeOverlay = comp;\n        });\n        this.setVisible(true);\n    };\n    OverlayWrapperComponent.prototype.destroyActiveOverlay = function () {\n        if (!this.activeOverlay) {\n            return;\n        }\n        if (this.activeOverlay.destroy) {\n            this.activeOverlay.destroy();\n        }\n        this.activeOverlay = undefined;\n        utils_1._.clearElement(this.eOverlayWrapper);\n    };\n    OverlayWrapperComponent.prototype.hideOverlay = function () {\n        this.destroyActiveOverlay();\n        this.setVisible(false);\n    };\n    OverlayWrapperComponent.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.destroyActiveOverlay();\n    };\n    // wrapping in outer div, and wrapper, is needed to center the loading icon\n    // The idea for centering came from here: http://www.vanseodesign.com/css/vertical-centering/\n    OverlayWrapperComponent.TEMPLATE = \"<div class=\\\"ag-overlay\\\">\\n            <div class=\\\"ag-overlay-panel\\\" role=\\\"presentation\\\">\\n                <div class=\\\"ag-overlay-wrapper\\\" ref=\\\"eOverlayWrapper\\\"></div>\\n            </div>\\n        </div>\";\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], OverlayWrapperComponent.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], OverlayWrapperComponent.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eOverlayWrapper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], OverlayWrapperComponent.prototype, \"eOverlayWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], OverlayWrapperComponent.prototype, \"postConstruct\", null);\n    return OverlayWrapperComponent;\n}(component_1.Component));\nexports.OverlayWrapperComponent = OverlayWrapperComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"./gridOptionsWrapper\");\nvar columnApi_1 = require(\"./columnController/columnApi\");\nvar columnController_1 = require(\"./columnController/columnController\");\nvar rowRenderer_1 = require(\"./rendering/rowRenderer\");\nvar filterManager_1 = require(\"./filter/filterManager\");\nvar eventService_1 = require(\"./eventService\");\nvar gridPanel_1 = require(\"./gridPanel/gridPanel\");\nvar logger_1 = require(\"./logger\");\nvar popupService_1 = require(\"./widgets/popupService\");\nvar context_1 = require(\"./context/context\");\nvar focusedCellController_1 = require(\"./focusedCellController\");\nvar component_1 = require(\"./widgets/component\");\nvar gridApi_1 = require(\"./gridApi\");\nvar componentAnnotations_1 = require(\"./widgets/componentAnnotations\");\nvar events_1 = require(\"./events\");\nvar resizeObserverService_1 = require(\"./misc/resizeObserverService\");\nvar sideBar_1 = require(\"./entities/sideBar\");\nvar utils_1 = require(\"./utils\");\nvar GridCore = /** @class */ (function (_super) {\n    __extends(GridCore, _super);\n    function GridCore() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GridCore.prototype.init = function () {\n        var _this = this;\n        this.logger = this.loggerFactory.create('GridCore');\n        var template = this.enterprise ? GridCore.TEMPLATE_ENTERPRISE : GridCore.TEMPLATE_NORMAL;\n        this.setTemplate(template);\n        // register with services that need grid core\n        [\n            this.gridApi,\n            this.filterManager,\n            this.rowRenderer,\n            this.popupService\n        ].forEach(function (service) { return service.registerGridCore(_this); });\n        if (this.enterprise) {\n            this.clipboardService.registerGridCore(this);\n        }\n        this.gridOptionsWrapper.addLayoutElement(this.getGui());\n        // see what the grid options are for default of toolbar\n        this.setSideBarVisible(this.gridOptionsWrapper.isShowToolPanel());\n        this.eGridDiv.appendChild(this.getGui());\n        this.addDestroyFunc(function () {\n            _this.eGridDiv.removeChild(_this.getGui());\n        });\n        // if using angular, watch for quickFilter changes\n        if (this.$scope) {\n            var quickFilterUnregisterFn = this.$scope.$watch(this.quickFilterOnScope, function (newFilter) { return _this.filterManager.setQuickFilter(newFilter); });\n            this.addDestroyFunc(quickFilterUnregisterFn);\n        }\n        // important to set rtl before doLayout, as setting the RTL class impacts the scroll position,\n        // which doLayout indirectly depends on\n        this.addRtlSupport();\n        this.logger.log('ready');\n        this.gridOptionsWrapper.addLayoutElement(this.eRootWrapperBody);\n        var gridPanelEl = this.gridPanel.getGui();\n        this.addDestroyableEventListener(gridPanelEl, 'focusin', function () {\n            utils_1._.addCssClass(gridPanelEl, 'ag-has-focus');\n        });\n        this.addDestroyableEventListener(gridPanelEl, 'focusout', function (e) {\n            if (!gridPanelEl.contains(e.relatedTarget)) {\n                utils_1._.removeCssClass(gridPanelEl, 'ag-has-focus');\n            }\n        });\n        var unsubscribeFromResize = this.resizeObserverService.observeResize(this.eGridDiv, this.onGridSizeChanged.bind(this));\n        this.addDestroyFunc(function () { return unsubscribeFromResize(); });\n    };\n    GridCore.prototype.onGridSizeChanged = function () {\n        var event = {\n            type: events_1.Events.EVENT_GRID_SIZE_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            clientWidth: this.eGridDiv.clientWidth,\n            clientHeight: this.eGridDiv.clientHeight\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    GridCore.prototype.addRtlSupport = function () {\n        var cssClass = this.gridOptionsWrapper.isEnableRtl() ? 'ag-rtl' : 'ag-ltr';\n        utils_1._.addCssClass(this.getGui(), cssClass);\n    };\n    GridCore.prototype.getRootGui = function () {\n        return this.getGui();\n    };\n    GridCore.prototype.isSideBarVisible = function () {\n        if (!this.sideBarComp) {\n            return false;\n        }\n        return this.sideBarComp.isVisible();\n    };\n    GridCore.prototype.setSideBarVisible = function (show) {\n        if (!this.sideBarComp) {\n            if (show) {\n                console.warn('ag-Grid: toolPanel is only available in ag-Grid Enterprise');\n            }\n            return;\n        }\n        this.sideBarComp.setVisible(show);\n    };\n    GridCore.prototype.closeToolPanel = function () {\n        if (!this.sideBarComp) {\n            console.warn('ag-Grid: toolPanel is only available in ag-Grid Enterprise');\n            return;\n        }\n        this.sideBarComp.close();\n    };\n    GridCore.prototype.getSideBar = function () {\n        return this.gridOptions.sideBar;\n    };\n    GridCore.prototype.refreshSideBar = function () {\n        if (this.sideBarComp) {\n            this.sideBarComp.refresh();\n        }\n    };\n    GridCore.prototype.setSideBar = function (def) {\n        this.eRootWrapperBody.removeChild(this.sideBarComp.getGui());\n        this.gridOptions.sideBar = sideBar_1.SideBarDefParser.parse(def);\n        this.sideBarComp.reset();\n        this.eRootWrapperBody.appendChild(this.sideBarComp.getGui());\n    };\n    GridCore.prototype.getOpenedToolPanel = function () {\n        if (!this.sideBarComp) {\n            return null;\n        }\n        return this.sideBarComp.openedItem();\n    };\n    GridCore.prototype.openToolPanel = function (key) {\n        if (!this.sideBarComp) {\n            console.warn('ag-Grid: toolPanel is only available in ag-Grid Enterprise');\n            return;\n        }\n        this.sideBarComp.openToolPanel(key);\n    };\n    GridCore.prototype.isToolPanelShowing = function () {\n        return this.sideBarComp.isToolPanelShowing();\n    };\n    GridCore.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.logger.log('Grid DOM removed');\n    };\n    // Valid values for position are bottom, middle and top\n    GridCore.prototype.ensureNodeVisible = function (comparator, position) {\n        if (position === void 0) { position = 'top'; }\n        if (this.doingVirtualPaging) {\n            throw new Error('Cannot use ensureNodeVisible when doing virtual paging, as we cannot check rows that are not in memory');\n        }\n        // look for the node index we want to display\n        var rowCount = this.rowModel.getPageLastRow() + 1;\n        var comparatorIsAFunction = typeof comparator === 'function';\n        var indexToSelect = -1;\n        // go through all the nodes, find the one we want to show\n        for (var i = 0; i < rowCount; i++) {\n            var node = this.rowModel.getRow(i);\n            if (comparatorIsAFunction) {\n                if (comparator(node)) {\n                    indexToSelect = i;\n                    break;\n                }\n            }\n            else {\n                // check object equality against node and data\n                if (comparator === node || comparator === node.data) {\n                    indexToSelect = i;\n                    break;\n                }\n            }\n        }\n        if (indexToSelect >= 0) {\n            this.gridPanel.ensureIndexVisible(indexToSelect, position);\n        }\n    };\n    GridCore.TEMPLATE_NORMAL = \"<div class=\\\"ag-root-wrapper\\\">\\n            <div class=\\\"ag-root-wrapper-body\\\" ref=\\\"rootWrapperBody\\\">\\n                <ag-grid-comp ref=\\\"gridPanel\\\"></ag-grid-comp>\\n            </div>\\n            <ag-pagination></ag-pagination>\\n        </div>\";\n    GridCore.TEMPLATE_ENTERPRISE = \"<div class=\\\"ag-root-wrapper\\\">\\n            <ag-grid-header-drop-zones></ag-grid-header-drop-zones>\\n            <div ref=\\\"rootWrapperBody\\\" class=\\\"ag-root-wrapper-body\\\">\\n                <ag-grid-comp ref=\\\"gridPanel\\\"></ag-grid-comp>\\n                <ag-side-bar ref=\\\"sideBar\\\"></ag-side-bar>\\n            </div>\\n            <ag-status-bar ref=\\\"statusBar\\\"></ag-status-bar>\\n            <ag-pagination></ag-pagination>\\n            <ag-watermark></ag-watermark>\\n        </div>\";\n    __decorate([\n        context_1.Autowired('enterprise'),\n        __metadata(\"design:type\", Boolean)\n    ], GridCore.prototype, \"enterprise\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptions'),\n        __metadata(\"design:type\", Object)\n    ], GridCore.prototype, \"gridOptions\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], GridCore.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], GridCore.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('resizeObserverService'),\n        __metadata(\"design:type\", resizeObserverService_1.ResizeObserverService)\n    ], GridCore.prototype, \"resizeObserverService\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], GridCore.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], GridCore.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], GridCore.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], GridCore.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('eGridDiv'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridCore.prototype, \"eGridDiv\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], GridCore.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('quickFilterOnScope'),\n        __metadata(\"design:type\", String)\n    ], GridCore.prototype, \"quickFilterOnScope\", void 0);\n    __decorate([\n        context_1.Autowired('popupService'),\n        __metadata(\"design:type\", popupService_1.PopupService)\n    ], GridCore.prototype, \"popupService\", void 0);\n    __decorate([\n        context_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], GridCore.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Autowired('loggerFactory'),\n        __metadata(\"design:type\", logger_1.LoggerFactory)\n    ], GridCore.prototype, \"loggerFactory\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], GridCore.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], GridCore.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Optional('clipboardService'),\n        __metadata(\"design:type\", Object)\n    ], GridCore.prototype, \"clipboardService\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('gridPanel'),\n        __metadata(\"design:type\", gridPanel_1.GridPanel)\n    ], GridCore.prototype, \"gridPanel\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('sideBar'),\n        __metadata(\"design:type\", Object)\n    ], GridCore.prototype, \"sideBarComp\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('rootWrapperBody'),\n        __metadata(\"design:type\", HTMLElement)\n    ], GridCore.prototype, \"eRootWrapperBody\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GridCore.prototype, \"init\", null);\n    return GridCore;\n}(component_1.Component));\nexports.GridCore = GridCore;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar filterManager_1 = require(\"../filter/filterManager\");\nvar popupService_1 = require(\"../widgets/popupService\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar eventService_1 = require(\"../eventService\");\nvar utils_1 = require(\"../utils\");\nvar StandardMenuFactory = /** @class */ (function () {\n    function StandardMenuFactory() {\n    }\n    StandardMenuFactory.prototype.hideActiveMenu = function () {\n        if (this.hidePopup) {\n            this.hidePopup();\n        }\n    };\n    StandardMenuFactory.prototype.showMenuAfterMouseEvent = function (column, mouseEvent) {\n        var _this = this;\n        this.showPopup(column, function (eMenu) {\n            _this.popupService.positionPopupUnderMouseEvent({\n                column: column,\n                type: 'columnMenu',\n                mouseEvent: mouseEvent,\n                ePopup: eMenu\n            });\n        });\n    };\n    StandardMenuFactory.prototype.showMenuAfterButtonClick = function (column, eventSource) {\n        var _this = this;\n        this.showPopup(column, function (eMenu) {\n            _this.popupService.positionPopupUnderComponent({\n                type: 'columnMenu', eventSource: eventSource,\n                ePopup: eMenu, keepWithinBounds: true, column: column\n            });\n        });\n    };\n    StandardMenuFactory.prototype.showPopup = function (column, positionCallback) {\n        var _this = this;\n        var filterWrapper = this.filterManager.getOrCreateFilterWrapper(column, 'COLUMN_MENU');\n        var eMenu = document.createElement('div');\n        utils_1._.addCssClass(eMenu, 'ag-menu');\n        filterWrapper.guiPromise.promise.then(function (gui) {\n            eMenu.appendChild(gui);\n        });\n        var hidePopup;\n        var bodyScrollListener = function (event) {\n            // if h scroll, popup is no longer over the column\n            if (event.direction === 'horizontal') {\n                hidePopup();\n            }\n        };\n        this.eventService.addEventListener('bodyScroll', bodyScrollListener);\n        var closedCallback = function () {\n            _this.eventService.removeEventListener('bodyScroll', bodyScrollListener);\n            column.setMenuVisible(false, \"contextMenu\");\n        };\n        // need to show filter before positioning, as only after filter\n        // is visible can we find out what the width of it is\n        hidePopup = this.popupService.addAsModalPopup(eMenu, true, closedCallback);\n        positionCallback(eMenu);\n        filterWrapper.filterPromise.then(function (filter) {\n            if (filter.afterGuiAttached) {\n                var params = {\n                    hidePopup: hidePopup\n                };\n                filter.afterGuiAttached(params);\n            }\n        });\n        this.hidePopup = hidePopup;\n        column.setMenuVisible(true, \"contextMenu\");\n    };\n    StandardMenuFactory.prototype.isMenuEnabled = function (column) {\n        // for standard, we show menu if filter is enabled, and he menu is not suppressed\n        return column.isFilterAllowed();\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], StandardMenuFactory.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], StandardMenuFactory.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('popupService'),\n        __metadata(\"design:type\", popupService_1.PopupService)\n    ], StandardMenuFactory.prototype, \"popupService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], StandardMenuFactory.prototype, \"gridOptionsWrapper\", void 0);\n    StandardMenuFactory = __decorate([\n        context_1.Bean('menuFactory')\n    ], StandardMenuFactory);\n    return StandardMenuFactory;\n}());\nexports.StandardMenuFactory = StandardMenuFactory;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar filterService_1 = require(\"../../rowNodes/filterService\");\nvar selectableService_1 = require(\"../../rowNodes/selectableService\");\nvar FilterStage = /** @class */ (function () {\n    function FilterStage() {\n    }\n    FilterStage.prototype.execute = function (params) {\n        var rowNode = params.rowNode, changedPath = params.changedPath;\n        this.filterService.filter(changedPath);\n        this.selectableService.updateSelectableAfterFiltering(rowNode);\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FilterStage.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('selectableService'),\n        __metadata(\"design:type\", selectableService_1.SelectableService)\n    ], FilterStage.prototype, \"selectableService\", void 0);\n    __decorate([\n        context_1.Autowired('filterService'),\n        __metadata(\"design:type\", filterService_1.FilterService)\n    ], FilterStage.prototype, \"filterService\", void 0);\n    FilterStage = __decorate([\n        context_1.Bean('filterStage')\n    ], FilterStage);\n    return FilterStage;\n}());\nexports.FilterStage = FilterStage;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar filterManager_1 = require(\"../filter/filterManager\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar FilterService = /** @class */ (function () {\n    function FilterService() {\n    }\n    FilterService.prototype.postConstruct = function () {\n        this.doingTreeData = this.gridOptionsWrapper.isTreeData();\n    };\n    FilterService.prototype.filter = function (changedPath) {\n        var filterActive = this.filterManager.isAnyFilterPresent();\n        this.filterNodes(filterActive, changedPath);\n    };\n    FilterService.prototype.filterNodes = function (filterActive, changedPath) {\n        var _this = this;\n        var filterCallback = function (rowNode, includeChildNodes) {\n            // recursively get all children that are groups to also filter\n            if (rowNode.hasChildren()) {\n                // result of filter for this node. when filtering tree data, includeChildNodes = true when parent passes\n                if (filterActive && !includeChildNodes) {\n                    rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter(function (childNode) {\n                        // a group is included in the result if it has any children of it's own.\n                        // by this stage, the child groups are already filtered\n                        var passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0;\n                        // both leaf level nodes and tree data nodes have data. these get added if\n                        // the data passes the filter\n                        var passBecauseDataPasses = childNode.data && _this.filterManager.doesRowPassFilter(childNode);\n                        // note - tree data nodes pass either if a) they pass themselves or b) any children of that node pass\n                        return passBecauseChildren || passBecauseDataPasses;\n                    });\n                }\n                else {\n                    // if not filtering, the result is the original list\n                    rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n                }\n                _this.setAllChildrenCount(rowNode);\n            }\n            else {\n                rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\n                rowNode.setAllChildrenCount(null);\n            }\n        };\n        if (this.doingTreeDataFiltering()) {\n            var treeDataDepthFirstFilter_1 = function (rowNode, alreadyFoundInParent) {\n                // tree data filter traverses the hierarchy depth first and includes child nodes if parent passes\n                // filter, and parent nodes will be include if any children exist.\n                if (rowNode.childrenAfterGroup) {\n                    for (var i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n                        var childNode = rowNode.childrenAfterGroup[i];\n                        // first check if current node passes filter before invoking child nodes\n                        var foundInParent = alreadyFoundInParent || _this.filterManager.doesRowPassFilter(childNode);\n                        if (childNode.childrenAfterGroup) {\n                            treeDataDepthFirstFilter_1(rowNode.childrenAfterGroup[i], foundInParent);\n                        }\n                        else {\n                            filterCallback(childNode, foundInParent);\n                        }\n                    }\n                }\n                filterCallback(rowNode, alreadyFoundInParent);\n            };\n            var treeDataFilterCallback = function (rowNode) { return treeDataDepthFirstFilter_1(rowNode, false); };\n            changedPath.executeFromRootNode(treeDataFilterCallback);\n        }\n        else {\n            var defaultFilterCallback = function (rowNode) { return filterCallback(rowNode, false); };\n            changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\n        }\n    };\n    FilterService.prototype.setAllChildrenCountTreeData = function (rowNode) {\n        // for tree data, we include all children, groups and leafs\n        var allChildrenCount = 0;\n        rowNode.childrenAfterFilter.forEach(function (child) {\n            // include child itself\n            allChildrenCount++;\n            // include children of children\n            allChildrenCount += child.allChildrenCount;\n        });\n        rowNode.setAllChildrenCount(allChildrenCount);\n    };\n    FilterService.prototype.setAllChildrenCountGridGrouping = function (rowNode) {\n        // for grid data, we only count the leafs\n        var allChildrenCount = 0;\n        rowNode.childrenAfterFilter.forEach(function (child) {\n            if (child.group) {\n                allChildrenCount += child.allChildrenCount;\n            }\n            else {\n                allChildrenCount++;\n            }\n        });\n        rowNode.setAllChildrenCount(allChildrenCount);\n    };\n    FilterService.prototype.setAllChildrenCount = function (rowNode) {\n        if (this.doingTreeData) {\n            this.setAllChildrenCountTreeData(rowNode);\n        }\n        else {\n            this.setAllChildrenCountGridGrouping(rowNode);\n        }\n    };\n    FilterService.prototype.doingTreeDataFiltering = function () {\n        return this.gridOptionsWrapper.isTreeData() && !this.gridOptionsWrapper.isExcludeChildrenWhenTreeDataFiltering();\n    };\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], FilterService.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FilterService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FilterService.prototype, \"postConstruct\", null);\n    FilterService = __decorate([\n        context_1.Bean(\"filterService\")\n    ], FilterService);\n    return FilterService;\n}());\nexports.FilterService = FilterService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar sortService_1 = require(\"../../rowNodes/sortService\");\nvar sortController_1 = require(\"../../sortController\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar utils_1 = require(\"../../utils\");\nvar SortStage = /** @class */ (function () {\n    function SortStage() {\n    }\n    SortStage.prototype.execute = function (params) {\n        var sortOptions = this.sortController.getSortForRowController();\n        var sortActive = utils_1._.exists(sortOptions) && sortOptions.length > 0;\n        var deltaSort = sortActive\n            && utils_1._.exists(params.rowNodeTransactions)\n            // in time we can remove this check, so that delta sort is always\n            // on if transactions are present. it's off for now so that we can\n            // selectively turn it on and test it with some select users before\n            // rolling out to everyone.\n            && this.gridOptionsWrapper.isDeltaSort();\n        // we only need dirty nodes if doing delta sort\n        var dirtyLeafNodes = deltaSort ? this.calculateDirtyNodes(params.rowNodeTransactions) : null;\n        var valueColumns = this.columnController.getValueColumns();\n        var noAggregations = utils_1._.missingOrEmpty(valueColumns);\n        this.sortService.sort(sortOptions, sortActive, deltaSort, dirtyLeafNodes, params.changedPath, noAggregations);\n    };\n    SortStage.prototype.calculateDirtyNodes = function (rowNodeTransactions) {\n        var dirtyNodes = {};\n        var addNodesFunc = function (rowNodes) {\n            if (rowNodes) {\n                rowNodes.forEach(function (rowNode) { return dirtyNodes[rowNode.id] = true; });\n            }\n        };\n        // all leaf level nodes in the transaction were impacted\n        rowNodeTransactions.forEach(function (tran) {\n            addNodesFunc(tran.add);\n            addNodesFunc(tran.update);\n            addNodesFunc(tran.remove);\n        });\n        return dirtyNodes;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SortStage.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('sortService'),\n        __metadata(\"design:type\", sortService_1.SortService)\n    ], SortStage.prototype, \"sortService\", void 0);\n    __decorate([\n        context_1.Autowired('sortController'),\n        __metadata(\"design:type\", sortController_1.SortController)\n    ], SortStage.prototype, \"sortController\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], SortStage.prototype, \"columnController\", void 0);\n    SortStage = __decorate([\n        context_1.Bean('sortStage')\n    ], SortStage);\n    return SortStage;\n}());\nexports.SortStage = SortStage;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar sortController_1 = require(\"../sortController\");\nvar valueService_1 = require(\"../valueService/valueService\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar columnController_1 = require(\"../columnController/columnController\");\nvar utils_1 = require(\"../utils\");\nvar SortService = /** @class */ (function () {\n    function SortService() {\n    }\n    SortService.prototype.init = function () {\n        this.postSortFunc = this.gridOptionsWrapper.getPostSortFunc();\n    };\n    SortService.prototype.sort = function (sortOptions, sortActive, deltaSort, dirtyLeafNodes, changedPath, noAggregations) {\n        var _this = this;\n        var callback = function (rowNode) {\n            // we clear out the 'pull down open parents' first, as the values mix up the sorting\n            _this.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterFilter, true);\n            // Javascript sort is non deterministic when all the array items are equals, ie Comparator always returns 0,\n            // so to ensure the array keeps its order, add an additional sorting condition manually, in this case we\n            // are going to inspect the original array position. This is what sortedRowNodes is for.\n            if (sortActive) {\n                var sortedRowNodes = deltaSort ?\n                    _this.doDeltaSort(rowNode, sortOptions, dirtyLeafNodes, changedPath, noAggregations)\n                    : _this.doFullSort(rowNode, sortOptions);\n                rowNode.childrenAfterSort = sortedRowNodes.map(function (sorted) { return sorted.rowNode; });\n            }\n            else {\n                rowNode.childrenAfterSort = rowNode.childrenAfterFilter.slice(0);\n            }\n            _this.updateChildIndexes(rowNode);\n            if (_this.postSortFunc) {\n                _this.postSortFunc(rowNode.childrenAfterSort);\n            }\n        };\n        changedPath.forEachChangedNodeDepthFirst(callback);\n        this.updateGroupDataForHiddenOpenParents(changedPath);\n    };\n    SortService.prototype.doFullSort = function (rowNode, sortOptions) {\n        var sortedRowNodes = rowNode.childrenAfterFilter\n            .map(this.mapNodeToSortedNode.bind(this));\n        sortedRowNodes.sort(this.compareRowNodes.bind(this, sortOptions));\n        return sortedRowNodes;\n    };\n    SortService.prototype.mapNodeToSortedNode = function (rowNode, pos) {\n        return { currentPos: pos, rowNode: rowNode };\n    };\n    SortService.prototype.doDeltaSort = function (rowNode, sortOptions, dirtyLeafNodes, changedPath, noAggregations) {\n        // clean nodes will be a list of all row nodes that remain in the set\n        // and ordered. we start with the old sorted set and take out any nodes\n        // that were removed or changed (but not added, added doesn't make sense,\n        // if a node was added, there is no way it could be here from last time).\n        var cleanNodes = rowNode.childrenAfterSort\n            .filter(function (rowNode) {\n            // take out all nodes that were changed as part of the current transaction.\n            // a changed node could a) be in a different sort position or b) may\n            // no longer be in this set as the changed node may not pass filtering,\n            // or be in a different group.\n            var passesDirtyNodesCheck = !dirtyLeafNodes[rowNode.id];\n            // also remove group nodes in the changed path, as they can have different aggregate\n            // values which could impact the sort order.\n            // note: changed path is not active if a) no value columns or b) no transactions. it is never\n            // (b) in deltaSort as we only do deltaSort for transactions. for (a) if no value columns, then\n            // there is no value in the group that could of changed (ie no aggregate values)\n            var passesChangedPathCheck = noAggregations || changedPath.canSkip(rowNode);\n            return passesDirtyNodesCheck && passesChangedPathCheck;\n        })\n            .map(this.mapNodeToSortedNode.bind(this));\n        // for fast access below, we map them\n        var cleanNodesMapped = {};\n        cleanNodes.forEach(function (sortedRowNode) { return cleanNodesMapped[sortedRowNode.rowNode.id] = sortedRowNode.rowNode; });\n        // these are all nodes that need to be placed\n        var changedNodes = rowNode.childrenAfterFilter\n            // ignore nodes in the clean list\n            .filter(function (rowNode) { return !cleanNodesMapped[rowNode.id]; })\n            .map(this.mapNodeToSortedNode.bind(this));\n        // sort changed nodes. note that we don't need to sort cleanNodes as they are\n        // already sorted from last time.\n        changedNodes.sort(this.compareRowNodes.bind(this, sortOptions));\n        if (changedNodes.length === 0) {\n            return cleanNodes;\n        }\n        else if (cleanNodes.length === 0) {\n            return changedNodes;\n        }\n        else {\n            return this.mergeSortedArrays(sortOptions, cleanNodes, changedNodes);\n        }\n    };\n    // Merge two sorted arrays into each other\n    SortService.prototype.mergeSortedArrays = function (sortOptions, arr1, arr2) {\n        var res = [];\n        var i = 0;\n        var j = 0;\n        // Traverse both array, adding them in order\n        while (i < arr1.length && j < arr2.length) {\n            // Check if current element of first\n            // array is smaller than current element\n            // of second array. If yes, store first\n            // array element and increment first array\n            // index. Otherwise do same with second array\n            var compareResult = this.compareRowNodes(sortOptions, arr1[i], arr2[j]);\n            if (compareResult < 0) {\n                res.push(arr1[i++]);\n            }\n            else {\n                res.push(arr2[j++]);\n            }\n        }\n        // add remaining from arr1\n        while (i < arr1.length) {\n            res.push(arr1[i++]);\n        }\n        // add remaining from arr2\n        while (j < arr2.length) {\n            res.push(arr2[j++]);\n        }\n        return res;\n    };\n    SortService.prototype.compareRowNodes = function (sortOptions, sortedNodeA, sortedNodeB) {\n        var nodeA = sortedNodeA.rowNode;\n        var nodeB = sortedNodeB.rowNode;\n        // Iterate columns, return the first that doesn't match\n        for (var i = 0, len = sortOptions.length; i < len; i++) {\n            var sortOption = sortOptions[i];\n            // let compared = compare(nodeA, nodeB, sortOption.column, sortOption.inverter === -1);\n            var isInverted = sortOption.inverter === -1;\n            var valueA = this.getValue(nodeA, sortOption.column);\n            var valueB = this.getValue(nodeB, sortOption.column);\n            var comparatorResult = void 0;\n            if (sortOption.column.getColDef().comparator) {\n                //if comparator provided, use it\n                comparatorResult = sortOption.column.getColDef().comparator(valueA, valueB, nodeA, nodeB, isInverted);\n            }\n            else {\n                //otherwise do our own comparison\n                comparatorResult = utils_1._.defaultComparator(valueA, valueB, this.gridOptionsWrapper.isAccentedSort());\n            }\n            if (comparatorResult !== 0) {\n                return comparatorResult * sortOption.inverter;\n            }\n        }\n        // All matched, we make is so that the original sort order is kept:\n        return sortedNodeA.currentPos - sortedNodeB.currentPos;\n    };\n    SortService.prototype.getValue = function (nodeA, column) {\n        return this.valueService.getValue(column, nodeA);\n    };\n    SortService.prototype.updateChildIndexes = function (rowNode) {\n        if (utils_1._.missing(rowNode.childrenAfterSort)) {\n            return;\n        }\n        var listToSort = rowNode.childrenAfterSort;\n        for (var i = 0; i < listToSort.length; i++) {\n            var child = listToSort[i];\n            var firstChild = i === 0;\n            var lastChild = i === rowNode.childrenAfterSort.length - 1;\n            child.setFirstChild(firstChild);\n            child.setLastChild(lastChild);\n            child.setChildIndex(i);\n        }\n    };\n    SortService.prototype.updateGroupDataForHiddenOpenParents = function (changedPath) {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            return;\n        }\n        // recurse breadth first over group nodes after sort to 'pull down' group data to child groups\n        var callback = function (rowNode) {\n            _this.pullDownGroupDataForHideOpenParents(rowNode.childrenAfterSort, false);\n            rowNode.childrenAfterSort.forEach(function (child) {\n                if (child.hasChildren()) {\n                    callback(child);\n                }\n            });\n        };\n        changedPath.executeFromRootNode(function (rowNode) { return callback(rowNode); });\n    };\n    SortService.prototype.pullDownGroupDataForHideOpenParents = function (rowNodes, clearOperation) {\n        var _this = this;\n        if (utils_1._.missing(rowNodes)) {\n            return;\n        }\n        if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {\n            return;\n        }\n        rowNodes.forEach(function (childRowNode) {\n            var groupDisplayCols = _this.columnController.getGroupDisplayColumns();\n            groupDisplayCols.forEach(function (groupDisplayCol) {\n                var showRowGroup = groupDisplayCol.getColDef().showRowGroup;\n                if (typeof showRowGroup !== 'string') {\n                    console.error('ag-Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup');\n                    return;\n                }\n                var displayingGroupKey = showRowGroup;\n                var rowGroupColumn = _this.columnController.getPrimaryColumn(displayingGroupKey);\n                var thisRowNodeMatches = rowGroupColumn === childRowNode.rowGroupColumn;\n                if (thisRowNodeMatches) {\n                    return;\n                }\n                if (clearOperation) {\n                    // if doing a clear operation, we clear down the value for every possible group column\n                    childRowNode.setGroupValue(groupDisplayCol.getId(), null);\n                }\n                else {\n                    // if doing a set operation, we set only where the pull down is to occur\n                    var parentToStealFrom = childRowNode.getFirstChildOfFirstChild(rowGroupColumn);\n                    if (parentToStealFrom) {\n                        childRowNode.setGroupValue(groupDisplayCol.getId(), parentToStealFrom.key);\n                    }\n                }\n            });\n        });\n    };\n    __decorate([\n        context_1.Autowired('sortController'),\n        __metadata(\"design:type\", sortController_1.SortController)\n    ], SortService.prototype, \"sortController\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], SortService.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], SortService.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SortService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SortService.prototype, \"init\", null);\n    SortService = __decorate([\n        context_1.Bean('sortService')\n    ], SortService);\n    return SortService;\n}());\nexports.SortService = SortService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar selectionController_1 = require(\"../../selectionController\");\nvar eventService_1 = require(\"../../eventService\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar utils_1 = require(\"../../utils\");\nvar FlattenStage = /** @class */ (function () {\n    function FlattenStage() {\n    }\n    FlattenStage.prototype.execute = function (params) {\n        var rootNode = params.rowNode;\n        // even if not doing grouping, we do the mapping, as the client might\n        // of passed in data that already has a grouping in it somewhere\n        var result = [];\n        // putting value into a wrapper so it's passed by reference\n        var nextRowTop = { value: 0 };\n        var skipLeafNodes = this.columnController.isPivotMode();\n        // if we are reducing, and not grouping, then we want to show the root node, as that\n        // is where the pivot values are\n        var showRootNode = skipLeafNodes && rootNode.leafGroup;\n        var topList = showRootNode ? [rootNode] : rootNode.childrenAfterSort;\n        this.recursivelyAddToRowsToDisplay(topList, result, nextRowTop, skipLeafNodes, 0);\n        // don't show total footer when showRootNode is true (i.e. in pivot mode and no groups)\n        var includeGroupTotalFooter = !showRootNode && this.gridOptionsWrapper.isGroupIncludeTotalFooter();\n        if (includeGroupTotalFooter) {\n            this.ensureFooterNodeExists(rootNode);\n            this.addRowNodeToRowsToDisplay(rootNode.sibling, result, nextRowTop, 0);\n        }\n        return result;\n    };\n    FlattenStage.prototype.recursivelyAddToRowsToDisplay = function (rowsToFlatten, result, nextRowTop, skipLeafNodes, uiLevel) {\n        if (utils_1._.missingOrEmpty(rowsToFlatten)) {\n            return;\n        }\n        var groupSuppressRow = this.gridOptionsWrapper.isGroupSuppressRow();\n        var hideOpenParents = this.gridOptionsWrapper.isGroupHideOpenParents();\n        // these two are mutually exclusive, so if first set, we don't set the second\n        var groupRemoveSingleChildren = this.gridOptionsWrapper.isGroupRemoveSingleChildren();\n        var groupRemoveLowestSingleChildren = !groupRemoveSingleChildren && this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren();\n        for (var i = 0; i < rowsToFlatten.length; i++) {\n            var rowNode = rowsToFlatten[i];\n            // check all these cases, for working out if this row should be included in the final mapped list\n            var isParent = rowNode.hasChildren();\n            var isGroupSuppressedNode = groupSuppressRow && isParent;\n            var isSkippedLeafNode = skipLeafNodes && !isParent;\n            var isRemovedSingleChildrenGroup = groupRemoveSingleChildren && isParent && rowNode.childrenAfterGroup.length === 1;\n            var isRemovedLowestSingleChildrenGroup = groupRemoveLowestSingleChildren && isParent && rowNode.leafGroup && rowNode.childrenAfterGroup.length === 1;\n            // hide open parents means when group is open, we don't show it. we also need to make sure the\n            // group is expandable in the first place (as leaf groups are not expandable if pivot mode is on).\n            // the UI will never allow expanding leaf  groups, however the user might via the API (or menu option 'expand all')\n            var neverAllowToExpand = skipLeafNodes && rowNode.leafGroup;\n            var isHiddenOpenParent = hideOpenParents && rowNode.expanded && (!neverAllowToExpand);\n            var thisRowShouldBeRendered = !isSkippedLeafNode && !isGroupSuppressedNode && !isHiddenOpenParent && !isRemovedSingleChildrenGroup && !isRemovedLowestSingleChildrenGroup;\n            if (thisRowShouldBeRendered) {\n                this.addRowNodeToRowsToDisplay(rowNode, result, nextRowTop, uiLevel);\n            }\n            // if we are pivoting, we never map below the leaf group\n            if (skipLeafNodes && rowNode.leafGroup) {\n                continue;\n            }\n            if (isParent) {\n                var excludedParent = isRemovedSingleChildrenGroup || isRemovedLowestSingleChildrenGroup;\n                // we traverse the group if it is expended, however we always traverse if the parent node\n                // was removed (as the group will never be opened if it is not displayed, we show the children instead)\n                if (rowNode.expanded || excludedParent) {\n                    // if the parent was excluded, then ui level is that of the parent\n                    var uiLevelForChildren = excludedParent ? uiLevel : uiLevel + 1;\n                    this.recursivelyAddToRowsToDisplay(rowNode.childrenAfterSort, result, nextRowTop, skipLeafNodes, uiLevelForChildren);\n                    // put a footer in if user is looking for it\n                    if (this.gridOptionsWrapper.isGroupIncludeFooter()) {\n                        this.ensureFooterNodeExists(rowNode);\n                        this.addRowNodeToRowsToDisplay(rowNode.sibling, result, nextRowTop, uiLevel);\n                    }\n                }\n            }\n            else if (rowNode.master && rowNode.expanded) {\n                var detailNode = this.createDetailNode(rowNode);\n                this.addRowNodeToRowsToDisplay(detailNode, result, nextRowTop, uiLevel);\n            }\n        }\n    };\n    // duplicated method, it's also in floatingRowModel\n    FlattenStage.prototype.addRowNodeToRowsToDisplay = function (rowNode, result, nextRowTop, uiLevel) {\n        result.push(rowNode);\n        var isGroupMultiAutoColumn = this.gridOptionsWrapper.isGroupMultiAutoColumn();\n        rowNode.setUiLevel(isGroupMultiAutoColumn ? 0 : uiLevel);\n    };\n    FlattenStage.prototype.ensureFooterNodeExists = function (groupNode) {\n        // only create footer node once, otherwise we have daemons and\n        // the animate screws up with the daemons hanging around\n        if (utils_1._.exists(groupNode.sibling)) {\n            return;\n        }\n        var footerNode = new rowNode_1.RowNode();\n        this.context.wireBean(footerNode);\n        Object.keys(groupNode).forEach(function (key) {\n            footerNode[key] = groupNode[key];\n        });\n        footerNode.footer = true;\n        footerNode.rowTop = null;\n        footerNode.oldRowTop = null;\n        if (utils_1._.exists(footerNode.id)) {\n            footerNode.id = 'rowGroupFooter_' + footerNode.id;\n        }\n        // get both header and footer to reference each other as siblings. this is never undone,\n        // only overwritten. so if a group is expanded, then contracted, it will have a ghost\n        // sibling - but that's fine, as we can ignore this if the header is contracted.\n        footerNode.sibling = groupNode;\n        groupNode.sibling = footerNode;\n    };\n    FlattenStage.prototype.createDetailNode = function (masterNode) {\n        if (utils_1._.exists(masterNode.detailNode)) {\n            return masterNode.detailNode;\n        }\n        else {\n            var detailNode = new rowNode_1.RowNode();\n            this.context.wireBean(detailNode);\n            detailNode.detail = true;\n            detailNode.selectable = false;\n            // flower was renamed to 'detail', but keeping for backwards compatibility\n            detailNode.flower = detailNode.detail;\n            detailNode.parent = masterNode;\n            if (utils_1._.exists(masterNode.id)) {\n                detailNode.id = 'detail_' + masterNode.id;\n            }\n            detailNode.data = masterNode.data;\n            detailNode.level = masterNode.level + 1;\n            masterNode.detailNode = detailNode;\n            masterNode.childFlower = masterNode.detailNode; // for backwards compatibility\n            return detailNode;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FlattenStage.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], FlattenStage.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], FlattenStage.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], FlattenStage.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], FlattenStage.prototype, \"columnController\", void 0);\n    FlattenStage = __decorate([\n        context_1.Bean('flattenStage')\n    ], FlattenStage);\n    return FlattenStage;\n}());\nexports.FlattenStage = FlattenStage;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar context_1 = require(\"../../context/context\");\nvar eventService_1 = require(\"../../eventService\");\nvar selectionController_1 = require(\"../../selectionController\");\nvar events_1 = require(\"../../events\");\nvar sortController_1 = require(\"../../sortController\");\nvar filterManager_1 = require(\"../../filter/filterManager\");\nvar constants_1 = require(\"../../constants\");\nvar infiniteCache_1 = require(\"./infiniteCache\");\nvar beanStub_1 = require(\"../../context/beanStub\");\nvar rowNodeCache_1 = require(\"../cache/rowNodeCache\");\nvar rowNodeBlockLoader_1 = require(\"../cache/rowNodeBlockLoader\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar utils_1 = require(\"../../utils\");\nvar rowRenderer_1 = require(\"../../rendering/rowRenderer\");\nvar InfiniteRowModel = /** @class */ (function (_super) {\n    __extends(InfiniteRowModel, _super);\n    function InfiniteRowModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InfiniteRowModel.prototype.getRowBounds = function (index) {\n        return {\n            rowHeight: this.rowHeight,\n            rowTop: this.rowHeight * index\n        };\n    };\n    // we don't implement as lazy row heights is not supported in this row model\n    InfiniteRowModel.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) { return false; };\n    InfiniteRowModel.prototype.init = function () {\n        var _this = this;\n        if (!this.gridOptionsWrapper.isRowModelInfinite()) {\n            return;\n        }\n        this.rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber();\n        this.addEventListeners();\n        this.setDatasource(this.gridOptionsWrapper.getDatasource());\n        this.addDestroyFunc(function () { return _this.destroyCache(); });\n    };\n    InfiniteRowModel.prototype.destroyDatasource = function () {\n        if (this.datasource) {\n            if (this.datasource.destroy) {\n                this.datasource.destroy();\n            }\n            this.rowRenderer.datasourceChanged();\n            this.datasource = null;\n        }\n    };\n    InfiniteRowModel.prototype.isLastRowFound = function () {\n        return this.infiniteCache ? this.infiniteCache.isMaxRowFound() : false;\n    };\n    InfiniteRowModel.prototype.addEventListeners = function () {\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, this.onColumnEverything.bind(this));\n    };\n    InfiniteRowModel.prototype.onFilterChanged = function () {\n        this.reset();\n    };\n    InfiniteRowModel.prototype.onSortChanged = function () {\n        this.reset();\n    };\n    InfiniteRowModel.prototype.onColumnEverything = function () {\n        var resetRequired;\n        // if cache params, we require reset only if sort model has changed. we don't need to check\n        // for filter model, as the filter manager will fire an event when columns change that result\n        // in the filter changing.\n        if (this.cacheParams) {\n            resetRequired = this.isSortModelDifferent();\n        }\n        else {\n            // if no cacheParams, means first time creating the cache, so always create one\n            resetRequired = true;\n        }\n        if (resetRequired) {\n            this.reset();\n        }\n    };\n    InfiniteRowModel.prototype.isSortModelDifferent = function () {\n        return !utils_1._.jsonEquals(this.cacheParams.sortModel, this.sortController.getSortModel());\n    };\n    InfiniteRowModel.prototype.getType = function () {\n        return constants_1.Constants.ROW_MODEL_TYPE_INFINITE;\n    };\n    InfiniteRowModel.prototype.setDatasource = function (datasource) {\n        this.destroyDatasource();\n        this.datasource = datasource;\n        // only reset if we have a valid datasource to working with\n        if (datasource) {\n            this.checkForDeprecated();\n            this.reset();\n        }\n    };\n    InfiniteRowModel.prototype.checkForDeprecated = function () {\n        var ds = this.datasource;\n        // the number of concurrent loads we are allowed to the server\n        if (utils_1._.exists(ds.maxConcurrentRequests)) {\n            console.error('ag-Grid: since version 5.1.x, maxConcurrentRequests is replaced with grid property maxConcurrentDatasourceRequests');\n        }\n        if (utils_1._.exists(ds.maxPagesInCache)) {\n            console.error('ag-Grid: since version 5.1.x, maxPagesInCache is replaced with grid property maxPagesInPaginationCache');\n        }\n        if (utils_1._.exists(ds.overflowSize)) {\n            console.error('ag-Grid: since version 5.1.x, overflowSize is replaced with grid property paginationOverflowSize');\n        }\n        if (utils_1._.exists(ds.blockSize)) {\n            console.error('ag-Grid: since version 5.1.x, pageSize/blockSize is replaced with grid property infinitePageSize');\n        }\n    };\n    InfiniteRowModel.prototype.isEmpty = function () {\n        return utils_1._.missing(this.infiniteCache);\n    };\n    InfiniteRowModel.prototype.isRowsToRender = function () {\n        return utils_1._.exists(this.infiniteCache);\n    };\n    InfiniteRowModel.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n        return this.infiniteCache ? this.infiniteCache.getRowNodesInRange(firstInRange, lastInRange) : [];\n    };\n    InfiniteRowModel.prototype.reset = function () {\n        // important to return here, as the user could be setting filter or sort before\n        // data-source is set\n        if (utils_1._.missing(this.datasource)) {\n            return;\n        }\n        // if user is providing id's, then this means we can keep the selection between datasource hits,\n        // as the rows will keep their unique id's even if, for example, server side sorting or filtering\n        // is done.\n        var userGeneratingIds = utils_1._.exists(this.gridOptionsWrapper.getRowNodeIdFunc());\n        if (!userGeneratingIds) {\n            this.selectionController.reset();\n        }\n        this.resetCache();\n        var event = this.createModelUpdatedEvent();\n        this.eventService.dispatchEvent(event);\n    };\n    InfiniteRowModel.prototype.createModelUpdatedEvent = function () {\n        return {\n            type: events_1.Events.EVENT_MODEL_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            // not sure if these should all be false - noticed if after implementing,\n            // maybe they should be true?\n            newPage: false,\n            newData: false,\n            keepRenderedRows: false,\n            animate: false\n        };\n    };\n    InfiniteRowModel.prototype.resetCache = function () {\n        // if not first time creating a cache, need to destroy the old one\n        this.destroyCache();\n        var maxConcurrentRequests = this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests();\n        var blockLoadDebounceMillis = this.gridOptionsWrapper.getBlockLoadDebounceMillis();\n        // there is a bi-directional dependency between the loader and the cache,\n        // so we create loader here, and then pass dependencies in setDependencies() method later\n        this.rowNodeBlockLoader = new rowNodeBlockLoader_1.RowNodeBlockLoader(maxConcurrentRequests, blockLoadDebounceMillis);\n        this.getContext().wireBean(this.rowNodeBlockLoader);\n        this.cacheParams = {\n            // the user provided datasource\n            datasource: this.datasource,\n            // sort and filter model\n            filterModel: this.filterManager.getFilterModel(),\n            sortModel: this.sortController.getSortModel(),\n            rowNodeBlockLoader: this.rowNodeBlockLoader,\n            // properties - this way we take a snapshot of them, so if user changes any, they will be\n            // used next time we create a new cache, which is generally after a filter or sort change,\n            // or a new datasource is set\n            maxConcurrentRequests: maxConcurrentRequests,\n            overflowSize: this.gridOptionsWrapper.getCacheOverflowSize(),\n            initialRowCount: this.gridOptionsWrapper.getInfiniteInitialRowCount(),\n            maxBlocksInCache: this.gridOptionsWrapper.getMaxBlocksInCache(),\n            blockSize: this.gridOptionsWrapper.getCacheBlockSize(),\n            rowHeight: this.gridOptionsWrapper.getRowHeightAsNumber(),\n            // the cache could create this, however it is also used by the pages, so handy to create it\n            // here as the settings are also passed to the pages\n            lastAccessedSequence: new utils_1.NumberSequence()\n        };\n        // set defaults\n        if (!this.cacheParams.maxConcurrentRequests || !(this.cacheParams.maxConcurrentRequests >= 1)) {\n            this.cacheParams.maxConcurrentRequests = 2;\n        }\n        // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the\n        // server for one page at a time. so the default if not specified is 100.\n        if (!this.cacheParams.blockSize || !(this.cacheParams.blockSize >= 1)) {\n            this.cacheParams.blockSize = 100;\n        }\n        // if user doesn't give initial rows to display, we assume zero\n        if (!(this.cacheParams.initialRowCount >= 1)) {\n            this.cacheParams.initialRowCount = 0;\n        }\n        // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past\n        // the current page and request first row of next page\n        if (!(this.cacheParams.overflowSize >= 1)) {\n            this.cacheParams.overflowSize = 1;\n        }\n        this.infiniteCache = new infiniteCache_1.InfiniteCache(this.cacheParams);\n        this.getContext().wireBean(this.infiniteCache);\n        this.infiniteCache.addEventListener(rowNodeCache_1.RowNodeCache.EVENT_CACHE_UPDATED, this.onCacheUpdated.bind(this));\n    };\n    InfiniteRowModel.prototype.destroyCache = function () {\n        if (this.infiniteCache) {\n            this.infiniteCache.destroy();\n            this.infiniteCache = null;\n        }\n        if (this.rowNodeBlockLoader) {\n            this.rowNodeBlockLoader.destroy();\n            this.rowNodeBlockLoader = null;\n        }\n    };\n    InfiniteRowModel.prototype.onCacheUpdated = function () {\n        var event = this.createModelUpdatedEvent();\n        this.eventService.dispatchEvent(event);\n    };\n    InfiniteRowModel.prototype.getRow = function (rowIndex) {\n        return this.infiniteCache ? this.infiniteCache.getRow(rowIndex) : null;\n    };\n    InfiniteRowModel.prototype.getRowNode = function (id) {\n        var result = null;\n        this.forEachNode(function (rowNode) {\n            if (rowNode.id === id) {\n                result = rowNode;\n            }\n        });\n        return result;\n    };\n    InfiniteRowModel.prototype.forEachNode = function (callback) {\n        if (this.infiniteCache) {\n            this.infiniteCache.forEachNodeDeep(callback, new utils_1.NumberSequence());\n        }\n    };\n    InfiniteRowModel.prototype.getCurrentPageHeight = function () {\n        return this.getRowCount() * this.rowHeight;\n    };\n    InfiniteRowModel.prototype.getRowIndexAtPixel = function (pixel) {\n        if (this.rowHeight !== 0) { // avoid divide by zero error\n            var rowIndexForPixel = Math.floor(pixel / this.rowHeight);\n            if (rowIndexForPixel > this.getPageLastRow()) {\n                return this.getPageLastRow();\n            }\n            else {\n                return rowIndexForPixel;\n            }\n        }\n        else {\n            return 0;\n        }\n    };\n    InfiniteRowModel.prototype.getPageFirstRow = function () {\n        return 0;\n    };\n    InfiniteRowModel.prototype.getPageLastRow = function () {\n        return this.infiniteCache ? this.infiniteCache.getVirtualRowCount() - 1 : 0;\n    };\n    InfiniteRowModel.prototype.getRowCount = function () {\n        return this.infiniteCache ? this.infiniteCache.getVirtualRowCount() : 0;\n    };\n    InfiniteRowModel.prototype.updateRowData = function (transaction) {\n        if (utils_1._.exists(transaction.remove) || utils_1._.exists(transaction.update)) {\n            console.warn('ag-Grid: updateRowData for InfiniteRowModel does not support remove or update, only add');\n            return;\n        }\n        if (utils_1._.missing(transaction.addIndex)) {\n            console.warn('ag-Grid: updateRowData for InfiniteRowModel requires add and addIndex to be set');\n            return;\n        }\n        if (this.infiniteCache) {\n            this.infiniteCache.insertItemsAtIndex(transaction.addIndex, transaction.add);\n        }\n    };\n    InfiniteRowModel.prototype.isRowPresent = function (rowNode) {\n        return false;\n    };\n    InfiniteRowModel.prototype.refreshCache = function () {\n        if (this.infiniteCache) {\n            this.infiniteCache.refreshCache();\n        }\n    };\n    InfiniteRowModel.prototype.purgeCache = function () {\n        if (this.infiniteCache) {\n            this.infiniteCache.purgeCache();\n        }\n    };\n    InfiniteRowModel.prototype.getVirtualRowCount = function () {\n        if (this.infiniteCache) {\n            return this.infiniteCache.getVirtualRowCount();\n        }\n        else {\n            return null;\n        }\n    };\n    InfiniteRowModel.prototype.isMaxRowFound = function () {\n        if (this.infiniteCache) {\n            return this.infiniteCache.isMaxRowFound();\n        }\n    };\n    InfiniteRowModel.prototype.setVirtualRowCount = function (rowCount, maxRowFound) {\n        if (this.infiniteCache) {\n            this.infiniteCache.setVirtualRowCount(rowCount, maxRowFound);\n        }\n    };\n    InfiniteRowModel.prototype.getBlockState = function () {\n        if (this.rowNodeBlockLoader) {\n            return this.rowNodeBlockLoader.getBlockState();\n        }\n        else {\n            return null;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], InfiniteRowModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], InfiniteRowModel.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('sortController'),\n        __metadata(\"design:type\", sortController_1.SortController)\n    ], InfiniteRowModel.prototype, \"sortController\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], InfiniteRowModel.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], InfiniteRowModel.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], InfiniteRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], InfiniteRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], InfiniteRowModel.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteRowModel.prototype, \"init\", null);\n    __decorate([\n        context_1.PreDestroy,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteRowModel.prototype, \"destroyDatasource\", null);\n    InfiniteRowModel = __decorate([\n        context_1.Bean('rowModel')\n    ], InfiniteRowModel);\n    return InfiniteRowModel;\n}(beanStub_1.BeanStub));\nexports.InfiniteRowModel = InfiniteRowModel;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rowNodeBlock_1 = require(\"./rowNodeBlock\");\nvar logger_1 = require(\"../../logger\");\nvar context_1 = require(\"../../context/context\");\nvar utils_1 = require(\"../../utils\");\nvar RowNodeBlockLoader = /** @class */ (function () {\n    function RowNodeBlockLoader(maxConcurrentRequests, blockLoadDebounceMillis) {\n        this.activeBlockLoadsCount = 0;\n        this.blocks = [];\n        this.active = true;\n        this.maxConcurrentRequests = maxConcurrentRequests;\n        if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\n            this.checkBlockToLoadDebounce = utils_1._.debounce(this.performCheckBlocksToLoad.bind(this), blockLoadDebounceMillis);\n        }\n    }\n    RowNodeBlockLoader.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('RowNodeBlockLoader');\n    };\n    RowNodeBlockLoader.prototype.addBlock = function (block) {\n        this.blocks.push(block);\n    };\n    RowNodeBlockLoader.prototype.removeBlock = function (block) {\n        utils_1._.removeFromArray(this.blocks, block);\n    };\n    RowNodeBlockLoader.prototype.destroy = function () {\n        this.active = false;\n    };\n    RowNodeBlockLoader.prototype.loadComplete = function () {\n        this.activeBlockLoadsCount--;\n    };\n    RowNodeBlockLoader.prototype.checkBlockToLoad = function () {\n        if (this.checkBlockToLoadDebounce) {\n            this.checkBlockToLoadDebounce();\n        }\n        else {\n            this.performCheckBlocksToLoad();\n        }\n    };\n    RowNodeBlockLoader.prototype.performCheckBlocksToLoad = function () {\n        if (!this.active) {\n            return;\n        }\n        this.printCacheStatus();\n        if (this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\n            this.logger.log(\"checkBlockToLoad: max loads exceeded\");\n            return;\n        }\n        var blockToLoad = null;\n        this.blocks.forEach(function (block) {\n            if (block.getState() === rowNodeBlock_1.RowNodeBlock.STATE_DIRTY) {\n                blockToLoad = block;\n            }\n        });\n        if (blockToLoad) {\n            blockToLoad.load();\n            this.activeBlockLoadsCount++;\n            this.logger.log(\"checkBlockToLoad: loading page \" + blockToLoad.getBlockNumber());\n            this.printCacheStatus();\n        }\n        else {\n            this.logger.log(\"checkBlockToLoad: no pages to load\");\n        }\n    };\n    RowNodeBlockLoader.prototype.getBlockState = function () {\n        var result = {};\n        this.blocks.forEach(function (block) {\n            var nodeIdPrefix = block.getNodeIdPrefix();\n            var stateItem = {\n                blockNumber: block.getBlockNumber(),\n                startRow: block.getStartRow(),\n                endRow: block.getEndRow(),\n                pageStatus: block.getState()\n            };\n            if (utils_1._.exists(nodeIdPrefix)) {\n                result[nodeIdPrefix + block.getBlockNumber()] = stateItem;\n            }\n            else {\n                result[block.getBlockNumber()] = stateItem;\n            }\n        });\n        return result;\n    };\n    RowNodeBlockLoader.prototype.printCacheStatus = function () {\n        if (this.logger.isLogging()) {\n            this.logger.log(\"printCacheStatus: activePageLoadsCount = \" + this.activeBlockLoadsCount + \",\"\n                + (\" blocks = \" + JSON.stringify(this.getBlockState())));\n        }\n    };\n    RowNodeBlockLoader.prototype.isLoading = function () {\n        return this.activeBlockLoadsCount > 0;\n    };\n    __decorate([\n        __param(0, context_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], RowNodeBlockLoader.prototype, \"setBeans\", null);\n    return RowNodeBlockLoader;\n}());\nexports.RowNodeBlockLoader = RowNodeBlockLoader;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../../constants\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar filterManager_1 = require(\"../../filter/filterManager\");\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar eventService_1 = require(\"../../eventService\");\nvar events_1 = require(\"../../events\");\nvar context_1 = require(\"../../context/context\");\nvar selectionController_1 = require(\"../../selectionController\");\nvar clientSideNodeManager_1 = require(\"./clientSideNodeManager\");\nvar changedPath_1 = require(\"./changedPath\");\nvar valueService_1 = require(\"../../valueService/valueService\");\nvar valueCache_1 = require(\"../../valueService/valueCache\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar utils_1 = require(\"../../utils\");\nvar RecursionType;\n(function (RecursionType) {\n    RecursionType[RecursionType[\"Normal\"] = 0] = \"Normal\";\n    RecursionType[RecursionType[\"AfterFilter\"] = 1] = \"AfterFilter\";\n    RecursionType[RecursionType[\"AfterFilterAndSort\"] = 2] = \"AfterFilterAndSort\";\n    RecursionType[RecursionType[\"PivotNodes\"] = 3] = \"PivotNodes\";\n})(RecursionType || (RecursionType = {}));\nvar ClientSideRowModel = /** @class */ (function () {\n    function ClientSideRowModel() {\n    }\n    ClientSideRowModel.prototype.init = function () {\n        var refreshEverythingFunc = this.refreshModel.bind(this, { step: constants_1.Constants.STEP_EVERYTHING });\n        var refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, { step: constants_1.Constants.STEP_EVERYTHING, afterColumnsChanged: true });\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_EVERYTHING_CHANGED, refreshEverythingAfterColsChangedFunc);\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, refreshEverythingFunc);\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_VALUE_CHANGED, this.onValueChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_PIVOT_CHANGED, this.refreshModel.bind(this, { step: constants_1.Constants.STEP_PIVOT }));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_ROW_GROUP_OPENED, this.onRowGroupOpened.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.eventService.addModalPriorityEventListener(events_1.Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, refreshEverythingFunc);\n        var refreshMapFunc = this.refreshModel.bind(this, {\n            step: constants_1.Constants.STEP_MAP,\n            keepRenderedRows: true,\n            animate: true\n        });\n        this.gridOptionsWrapper.addEventListener(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_REMOVE_SINGLE_CHILDREN, refreshMapFunc);\n        this.gridOptionsWrapper.addEventListener(gridOptionsWrapper_1.GridOptionsWrapper.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN, refreshMapFunc);\n        this.rootNode = new rowNode_1.RowNode();\n        this.nodeManager = new clientSideNodeManager_1.ClientSideNodeManager(this.rootNode, this.gridOptionsWrapper, this.context, this.eventService, this.columnController, this.gridApi, this.columnApi, this.selectionController);\n        this.context.wireBean(this.rootNode);\n    };\n    ClientSideRowModel.prototype.ensureRowHeightsValid = function (startPixel, endPixel, startLimitIndex, endLimitIndex) {\n        var atLeastOneChange;\n        var res = false;\n        // we do this multiple times as changing the row heights can also change the first and last rows,\n        // so the first pass can make lots of rows smaller, which means the second pass we end up changing\n        // more rows.\n        do {\n            atLeastOneChange = false;\n            var rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\n            var rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\n            // keep check to current page if doing pagination\n            var firstRow = Math.max(rowAtStartPixel, startLimitIndex);\n            var lastRow = Math.min(rowAtEndPixel, endLimitIndex);\n            for (var rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\n                var rowNode = this.getRow(rowIndex);\n                if (rowNode.rowHeightEstimated) {\n                    var rowHeight = this.gridOptionsWrapper.getRowHeightForNode(rowNode);\n                    rowNode.setRowHeight(rowHeight.height);\n                    atLeastOneChange = true;\n                    res = true;\n                }\n            }\n            if (atLeastOneChange) {\n                this.setRowTops();\n            }\n        } while (atLeastOneChange);\n        return res;\n    };\n    ClientSideRowModel.prototype.setRowTops = function () {\n        var nextRowTop = 0;\n        for (var i = 0; i < this.rowsToDisplay.length; i++) {\n            // we don't estimate if doing fullHeight or autoHeight, as all rows get rendered all the time\n            // with these two layouts.\n            var allowEstimate = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_NORMAL;\n            var rowNode = this.rowsToDisplay[i];\n            if (utils_1._.missing(rowNode.rowHeight)) {\n                var rowHeight = this.gridOptionsWrapper.getRowHeightForNode(rowNode, allowEstimate);\n                rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\n            }\n            rowNode.setRowTop(nextRowTop);\n            rowNode.setRowIndex(i);\n            nextRowTop += rowNode.rowHeight;\n        }\n    };\n    ClientSideRowModel.prototype.resetRowTops = function (rowNode, changedPath) {\n        rowNode.clearRowTop();\n        if (rowNode.hasChildren()) {\n            if (rowNode.childrenAfterGroup) {\n                // if a changedPath is active, it means we are here because of a transaction update or\n                // a change detection. neither of these impacts the open/closed state of groups. so if\n                // a group is not open this time, it was not open last time. so we know all closed groups\n                // already have their top positions cleared. so there is no need to traverse all the way\n                // when changedPath is active and the rowNode is not expanded.\n                var skipChildren = changedPath.isActive() && !rowNode.expanded;\n                if (!skipChildren) {\n                    for (var i = 0; i < rowNode.childrenAfterGroup.length; i++) {\n                        this.resetRowTops(rowNode.childrenAfterGroup[i], changedPath);\n                    }\n                }\n            }\n            if (rowNode.sibling) {\n                rowNode.sibling.clearRowTop();\n            }\n        }\n        if (rowNode.detailNode) {\n            rowNode.detailNode.clearRowTop();\n        }\n    };\n    // returns false if row was moved, otherwise true\n    ClientSideRowModel.prototype.ensureRowAtPixel = function (rowNode, pixel) {\n        var indexAtPixelNow = this.getRowIndexAtPixel(pixel);\n        var rowNodeAtPixelNow = this.getRow(indexAtPixelNow);\n        if (rowNodeAtPixelNow === rowNode) {\n            return false;\n        }\n        utils_1._.removeFromArray(this.rootNode.allLeafChildren, rowNode);\n        utils_1._.insertIntoArray(this.rootNode.allLeafChildren, rowNode, indexAtPixelNow);\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            keepRenderedRows: true,\n            animate: true,\n            keepEditingRows: true\n        });\n        return true;\n    };\n    ClientSideRowModel.prototype.isLastRowFound = function () {\n        return true;\n    };\n    ClientSideRowModel.prototype.getRowCount = function () {\n        if (this.rowsToDisplay) {\n            return this.rowsToDisplay.length;\n        }\n        else {\n            return 0;\n        }\n    };\n    ClientSideRowModel.prototype.getRowBounds = function (index) {\n        if (utils_1._.missing(this.rowsToDisplay)) {\n            return null;\n        }\n        var rowNode = this.rowsToDisplay[index];\n        if (rowNode) {\n            return {\n                rowTop: rowNode.rowTop,\n                rowHeight: rowNode.rowHeight\n            };\n        }\n        else {\n            return null;\n        }\n    };\n    ClientSideRowModel.prototype.onRowGroupOpened = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP, keepRenderedRows: true, animate: animate });\n    };\n    ClientSideRowModel.prototype.onFilterChanged = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_FILTER, keepRenderedRows: true, animate: animate });\n    };\n    ClientSideRowModel.prototype.onSortChanged = function () {\n        var animate = this.gridOptionsWrapper.isAnimateRows();\n        this.refreshModel({ step: constants_1.Constants.STEP_SORT, keepRenderedRows: true, animate: animate, keepEditingRows: true });\n    };\n    ClientSideRowModel.prototype.getType = function () {\n        return constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n    };\n    ClientSideRowModel.prototype.onValueChanged = function () {\n        if (this.columnController.isPivotActive()) {\n            this.refreshModel({ step: constants_1.Constants.STEP_PIVOT });\n        }\n        else {\n            this.refreshModel({ step: constants_1.Constants.STEP_AGGREGATE });\n        }\n    };\n    ClientSideRowModel.prototype.createChangePath = function (rowNodeTransactions) {\n        // for updates, if the row is updated at all, then we re-calc all the values\n        // in that row. we could compare each value to each old value, however if we\n        // did this, we would be calling the valueService twice, once on the old value\n        // and once on the new value. so it's less valueGetter calls if we just assume\n        // each column is different. that way the changedPath is used so that only\n        // the impacted parent rows are recalculated, parents who's children have\n        // not changed are not impacted.\n        var noTransactions = utils_1._.missingOrEmpty(rowNodeTransactions);\n        var changedPath = new changedPath_1.ChangedPath(false, this.rootNode);\n        if (noTransactions || this.gridOptionsWrapper.isTreeData()) {\n            changedPath.setInactive();\n        }\n        return changedPath;\n    };\n    ClientSideRowModel.prototype.refreshModel = function (params) {\n        // this goes through the pipeline of stages. what's in my head is similar\n        // to the diagram on this page:\n        // http://commons.apache.org/sandbox/commons-pipeline/pipeline_basics.html\n        // however we want to keep the results of each stage, hence we manually call\n        // each step rather than have them chain each other.\n        var _this = this;\n        // fallthrough in below switch is on purpose,\n        // eg if STEP_FILTER, then all steps below this\n        // step get done\n        // let start: number;\n        // console.log('======= start =======');\n        var changedPath = this.createChangePath(params.rowNodeTransactions);\n        switch (params.step) {\n            case constants_1.Constants.STEP_EVERYTHING:\n                // start = new Date().getTime();\n                this.doRowGrouping(params.groupState, params.rowNodeTransactions, params.rowNodeOrder, changedPath, params.afterColumnsChanged);\n            // console.log('rowGrouping = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_FILTER:\n                // start = new Date().getTime();\n                this.doFilter(changedPath);\n            // console.log('filter = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_PIVOT:\n                this.doPivot(changedPath);\n            case constants_1.Constants.STEP_AGGREGATE: // depends on agg fields\n                // start = new Date().getTime();\n                this.doAggregate(changedPath);\n            // console.log('aggregation = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_SORT:\n                // start = new Date().getTime();\n                this.doSort(params.rowNodeTransactions, changedPath);\n            // console.log('sort = ' + (new Date().getTime() - start));\n            case constants_1.Constants.STEP_MAP:\n                // start = new Date().getTime();\n                this.doRowsToDisplay();\n            // console.log('rowsToDisplay = ' + (new Date().getTime() - start));\n        }\n        // set all row tops to null, then set row tops on all visible rows. if we don't\n        // do this, then the algorithm below only sets row tops, old row tops from old rows\n        // will still lie around\n        this.resetRowTops(this.rootNode, changedPath);\n        this.setRowTops();\n        var event = {\n            type: events_1.Events.EVENT_MODEL_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            animate: params.animate,\n            keepRenderedRows: params.keepRenderedRows,\n            newData: params.newData,\n            newPage: false\n        };\n        this.eventService.dispatchEvent(event);\n        if (this.$scope) {\n            window.setTimeout(function () {\n                _this.$scope.$apply();\n            }, 0);\n        }\n    };\n    ClientSideRowModel.prototype.isEmpty = function () {\n        var rowsMissing;\n        var doingLegacyTreeData = utils_1._.exists(this.gridOptionsWrapper.getNodeChildDetailsFunc());\n        if (doingLegacyTreeData) {\n            rowsMissing = utils_1._.missing(this.rootNode.childrenAfterGroup) || this.rootNode.childrenAfterGroup.length === 0;\n        }\n        else {\n            rowsMissing = utils_1._.missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;\n        }\n        var empty = utils_1._.missing(this.rootNode) || rowsMissing || !this.columnController.isReady();\n        return empty;\n    };\n    ClientSideRowModel.prototype.isRowsToRender = function () {\n        return utils_1._.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;\n    };\n    ClientSideRowModel.prototype.getNodesInRangeForSelection = function (firstInRange, lastInRange) {\n        // if lastSelectedNode is missing, we start at the first row\n        var firstRowHit = !lastInRange;\n        var lastRowHit = false;\n        var lastRow;\n        var result = [];\n        var groupsSelectChildren = this.gridOptionsWrapper.isGroupSelectsChildren();\n        this.forEachNodeAfterFilterAndSort(function (rowNode) {\n            var lookingForLastRow = firstRowHit && !lastRowHit;\n            // check if we need to flip the select switch\n            if (!firstRowHit) {\n                if (rowNode === lastInRange || rowNode === firstInRange) {\n                    firstRowHit = true;\n                }\n            }\n            var skipThisGroupNode = rowNode.group && groupsSelectChildren;\n            if (!skipThisGroupNode) {\n                var inRange = firstRowHit && !lastRowHit;\n                var childOfLastRow = rowNode.isParentOfNode(lastRow);\n                if (inRange || childOfLastRow) {\n                    result.push(rowNode);\n                }\n            }\n            if (lookingForLastRow) {\n                if (rowNode === lastInRange || rowNode === firstInRange) {\n                    lastRowHit = true;\n                    if (rowNode === lastInRange) {\n                        lastRow = lastInRange;\n                    }\n                    else {\n                        lastRow = firstInRange;\n                    }\n                }\n            }\n        });\n        return result;\n    };\n    ClientSideRowModel.prototype.setDatasource = function (datasource) {\n        console.error('ag-Grid: should never call setDatasource on clientSideRowController');\n    };\n    ClientSideRowModel.prototype.getTopLevelNodes = function () {\n        return this.rootNode ? this.rootNode.childrenAfterGroup : null;\n    };\n    ClientSideRowModel.prototype.getRootNode = function () {\n        return this.rootNode;\n    };\n    ClientSideRowModel.prototype.getRow = function (index) {\n        return this.rowsToDisplay[index];\n    };\n    ClientSideRowModel.prototype.isRowPresent = function (rowNode) {\n        return this.rowsToDisplay.indexOf(rowNode) >= 0;\n    };\n    ClientSideRowModel.prototype.getVirtualRowCount = function () {\n        console.warn('ag-Grid: rowModel.getVirtualRowCount() is not longer a function, use rowModel.getRowCount() instead');\n        return this.getPageLastRow();\n    };\n    ClientSideRowModel.prototype.getPageFirstRow = function () {\n        return 0;\n    };\n    ClientSideRowModel.prototype.getPageLastRow = function () {\n        if (this.rowsToDisplay) {\n            return this.rowsToDisplay.length - 1;\n        }\n        else {\n            return 0;\n        }\n    };\n    ClientSideRowModel.prototype.getRowIndexAtPixel = function (pixelToMatch) {\n        if (this.isEmpty()) {\n            return -1;\n        }\n        // do binary search of tree\n        // http://oli.me.uk/2013/06/08/searching-javascript-arrays-with-a-binary-search/\n        var bottomPointer = 0;\n        var topPointer = this.rowsToDisplay.length - 1;\n        // quick check, if the pixel is out of bounds, then return last row\n        if (pixelToMatch <= 0) {\n            // if pixel is less than or equal zero, it's always the first row\n            return 0;\n        }\n        var lastNode = utils_1._.last(this.rowsToDisplay);\n        if (lastNode.rowTop <= pixelToMatch) {\n            return this.rowsToDisplay.length - 1;\n        }\n        while (true) {\n            var midPointer = Math.floor((bottomPointer + topPointer) / 2);\n            var currentRowNode = this.rowsToDisplay[midPointer];\n            if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\n                return midPointer;\n            }\n            else if (currentRowNode.rowTop < pixelToMatch) {\n                bottomPointer = midPointer + 1;\n            }\n            else if (currentRowNode.rowTop > pixelToMatch) {\n                topPointer = midPointer - 1;\n            }\n        }\n    };\n    ClientSideRowModel.prototype.isRowInPixel = function (rowNode, pixelToMatch) {\n        var topPixel = rowNode.rowTop;\n        var bottomPixel = rowNode.rowTop + rowNode.rowHeight;\n        var pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\n        return pixelInRow;\n    };\n    ClientSideRowModel.prototype.getCurrentPageHeight = function () {\n        if (this.rowsToDisplay && this.rowsToDisplay.length > 0) {\n            var lastRow = utils_1._.last(this.rowsToDisplay);\n            var lastPixel = lastRow.rowTop + lastRow.rowHeight;\n            return lastPixel;\n        }\n        else {\n            return 0;\n        }\n    };\n    ClientSideRowModel.prototype.forEachLeafNode = function (callback) {\n        if (this.rootNode.allLeafChildren) {\n            this.rootNode.allLeafChildren.forEach(function (rowNode, index) { return callback(rowNode, index); });\n        }\n    };\n    ClientSideRowModel.prototype.forEachNode = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterGroup, callback, RecursionType.Normal, 0);\n    };\n    ClientSideRowModel.prototype.forEachNodeAfterFilter = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterFilter, callback, RecursionType.AfterFilter, 0);\n    };\n    ClientSideRowModel.prototype.forEachNodeAfterFilterAndSort = function (callback) {\n        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterSort, callback, RecursionType.AfterFilterAndSort, 0);\n    };\n    ClientSideRowModel.prototype.forEachPivotNode = function (callback) {\n        this.recursivelyWalkNodesAndCallback([this.rootNode], callback, RecursionType.PivotNodes, 0);\n    };\n    // iterates through each item in memory, and calls the callback function\n    // nodes - the rowNodes to traverse\n    // callback - the user provided callback\n    // recursion type - need this to know what child nodes to recurse, eg if looking at all nodes, or filtered notes etc\n    // index - works similar to the index in forEach in javascript's array function\n    ClientSideRowModel.prototype.recursivelyWalkNodesAndCallback = function (nodes, callback, recursionType, index) {\n        if (nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                var node = nodes[i];\n                callback(node, index++);\n                // go to the next level if it is a group\n                if (node.hasChildren()) {\n                    // depending on the recursion type, we pick a difference set of children\n                    var nodeChildren = null;\n                    switch (recursionType) {\n                        case RecursionType.Normal:\n                            nodeChildren = node.childrenAfterGroup;\n                            break;\n                        case RecursionType.AfterFilter:\n                            nodeChildren = node.childrenAfterFilter;\n                            break;\n                        case RecursionType.AfterFilterAndSort:\n                            nodeChildren = node.childrenAfterSort;\n                            break;\n                        case RecursionType.PivotNodes:\n                            // for pivot, we don't go below leafGroup levels\n                            nodeChildren = !node.leafGroup ? node.childrenAfterSort : null;\n                            break;\n                    }\n                    if (nodeChildren) {\n                        index = this.recursivelyWalkNodesAndCallback(nodeChildren, callback, recursionType, index);\n                    }\n                }\n            }\n        }\n        return index;\n    };\n    // it's possible to recompute the aggregate without doing the other parts\n    // + gridApi.recomputeAggregates()\n    ClientSideRowModel.prototype.doAggregate = function (changedPath) {\n        if (this.aggregationStage) {\n            this.aggregationStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n        }\n    };\n    // + gridApi.expandAll()\n    // + gridApi.collapseAll()\n    ClientSideRowModel.prototype.expandOrCollapseAll = function (expand) {\n        var usingTreeData = this.gridOptionsWrapper.isTreeData();\n        if (this.rootNode) {\n            recursiveExpandOrCollapse(this.rootNode.childrenAfterGroup);\n        }\n        function recursiveExpandOrCollapse(rowNodes) {\n            if (!rowNodes) {\n                return;\n            }\n            rowNodes.forEach(function (rowNode) {\n                var shouldExpandOrCollapse = usingTreeData ? utils_1._.exists(rowNode.childrenAfterGroup) : rowNode.group;\n                if (shouldExpandOrCollapse) {\n                    rowNode.expanded = expand;\n                    recursiveExpandOrCollapse(rowNode.childrenAfterGroup);\n                }\n            });\n        }\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP });\n        var eventSource = expand ? 'expandAll' : 'collapseAll';\n        var event = {\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            type: events_1.Events.EVENT_EXPAND_COLLAPSE_ALL,\n            source: eventSource\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ClientSideRowModel.prototype.doSort = function (rowNodeTransactions, changedPath) {\n        this.sortStage.execute({\n            rowNode: this.rootNode,\n            rowNodeTransactions: rowNodeTransactions,\n            changedPath: changedPath\n        });\n    };\n    ClientSideRowModel.prototype.doRowGrouping = function (groupState, rowNodeTransactions, rowNodeOrder, changedPath, afterColumnsChanged) {\n        var _this = this;\n        // grouping is enterprise only, so if service missing, skip the step\n        var doingLegacyTreeData = utils_1._.exists(this.gridOptionsWrapper.getNodeChildDetailsFunc());\n        if (doingLegacyTreeData) {\n            return;\n        }\n        if (this.groupStage) {\n            if (rowNodeTransactions && utils_1._.exists(rowNodeTransactions)) {\n                rowNodeTransactions.forEach(function (tran) {\n                    _this.groupStage.execute({\n                        rowNode: _this.rootNode,\n                        rowNodeTransaction: tran,\n                        rowNodeOrder: rowNodeOrder,\n                        changedPath: changedPath\n                    });\n                });\n            }\n            else {\n                // groups are about to get disposed, so need to deselect any that are selected\n                this.selectionController.removeGroupsFromSelection();\n                this.groupStage.execute({\n                    rowNode: this.rootNode,\n                    changedPath: changedPath,\n                    afterColumnsChanged: afterColumnsChanged\n                });\n                // set open/closed state on groups\n                this.restoreGroupState(groupState);\n            }\n            if (this.gridOptionsWrapper.isGroupSelectsChildren()) {\n                this.selectionController.updateGroupsFromChildrenSelections(changedPath);\n            }\n        }\n        else {\n            this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren;\n        }\n    };\n    ClientSideRowModel.prototype.restoreGroupState = function (groupState) {\n        if (!groupState) {\n            return;\n        }\n        utils_1._.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function (node, key) {\n            // if the group was open last time, then open it this time. however\n            // if was not open last time, then don't touch the group, so the 'groupDefaultExpanded'\n            // setting will take effect.\n            if (typeof groupState[key] === 'boolean') {\n                node.expanded = groupState[key];\n            }\n        });\n    };\n    ClientSideRowModel.prototype.doFilter = function (changedPath) {\n        this.filterStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n    };\n    ClientSideRowModel.prototype.doPivot = function (changedPath) {\n        if (this.pivotStage) {\n            this.pivotStage.execute({ rowNode: this.rootNode, changedPath: changedPath });\n        }\n    };\n    ClientSideRowModel.prototype.getGroupState = function () {\n        if (!this.rootNode.childrenAfterGroup || !this.gridOptionsWrapper.isRememberGroupStateWhenNewData()) {\n            return null;\n        }\n        var result = {};\n        utils_1._.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function (node, key) { return result[key] = node.expanded; });\n        return result;\n    };\n    ClientSideRowModel.prototype.getCopyOfNodesMap = function () {\n        return this.nodeManager.getCopyOfNodesMap();\n    };\n    ClientSideRowModel.prototype.getRowNode = function (id) {\n        return this.nodeManager.getRowNode(id);\n    };\n    // rows: the rows to put into the model\n    ClientSideRowModel.prototype.setRowData = function (rowData) {\n        // no need to invalidate cache, as the cache is stored on the rowNode,\n        // so new rowNodes means the cache is wiped anyway.\n        // remember group state, so we can expand groups that should be expanded\n        var groupState = this.getGroupState();\n        this.nodeManager.setRowData(rowData);\n        // this event kicks off:\n        // - clears selection\n        // - updates filters\n        // - shows 'no rows' overlay if needed\n        var rowDataChangedEvent = {\n            type: events_1.Events.EVENT_ROW_DATA_CHANGED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(rowDataChangedEvent);\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            groupState: groupState,\n            newData: true\n        });\n    };\n    ClientSideRowModel.prototype.batchUpdateRowData = function (rowDataTransaction, callback) {\n        var _this = this;\n        if (!this.rowDataTransactionBatch) {\n            this.rowDataTransactionBatch = [];\n            var waitMillis = this.gridOptionsWrapper.getBatchUpdateWaitMillis();\n            window.setTimeout(function () {\n                _this.executeBatchUpdateRowData();\n                _this.rowDataTransactionBatch = null;\n            }, waitMillis);\n        }\n        this.rowDataTransactionBatch.push({ rowDataTransaction: rowDataTransaction, callback: callback });\n    };\n    ClientSideRowModel.prototype.executeBatchUpdateRowData = function () {\n        var _this = this;\n        this.valueCache.onDataChanged();\n        var callbackFuncsBound = [];\n        var rowNodeTrans = [];\n        if (this.rowDataTransactionBatch) {\n            this.rowDataTransactionBatch.forEach(function (tranItem) {\n                var rowNodeTran = _this.nodeManager.updateRowData(tranItem.rowDataTransaction, null);\n                rowNodeTrans.push(rowNodeTran);\n                if (tranItem.callback) {\n                    callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTran));\n                }\n            });\n        }\n        this.commonUpdateRowData(rowNodeTrans);\n        // do callbacks in next VM turn so it's async\n        if (callbackFuncsBound.length > 0) {\n            window.setTimeout(function () {\n                callbackFuncsBound.forEach(function (func) { return func(); });\n            }, 0);\n        }\n    };\n    ClientSideRowModel.prototype.updateRowData = function (rowDataTran, rowNodeOrder) {\n        this.valueCache.onDataChanged();\n        var rowNodeTran = this.nodeManager.updateRowData(rowDataTran, rowNodeOrder);\n        this.commonUpdateRowData([rowNodeTran], rowNodeOrder);\n        return rowNodeTran;\n    };\n    // common to updateRowData and batchUpdateRowData\n    ClientSideRowModel.prototype.commonUpdateRowData = function (rowNodeTrans, rowNodeOrder) {\n        this.refreshModel({\n            step: constants_1.Constants.STEP_EVERYTHING,\n            rowNodeTransactions: rowNodeTrans,\n            rowNodeOrder: rowNodeOrder,\n            keepRenderedRows: true,\n            animate: true,\n            keepEditingRows: true\n        });\n        var event = {\n            type: events_1.Events.EVENT_ROW_DATA_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    ClientSideRowModel.prototype.doRowsToDisplay = function () {\n        this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });\n    };\n    ClientSideRowModel.prototype.onRowHeightChanged = function () {\n        this.refreshModel({ step: constants_1.Constants.STEP_MAP, keepRenderedRows: true, keepEditingRows: true });\n    };\n    ClientSideRowModel.prototype.resetRowHeights = function () {\n        this.forEachNode(function (rowNode) { return rowNode.setRowHeight(null); });\n        this.onRowHeightChanged();\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ClientSideRowModel.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], ClientSideRowModel.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('filterManager'),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], ClientSideRowModel.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('$scope'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"$scope\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], ClientSideRowModel.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ClientSideRowModel.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('context'),\n        __metadata(\"design:type\", context_1.Context)\n    ], ClientSideRowModel.prototype, \"context\", void 0);\n    __decorate([\n        context_1.Autowired('valueService'),\n        __metadata(\"design:type\", valueService_1.ValueService)\n    ], ClientSideRowModel.prototype, \"valueService\", void 0);\n    __decorate([\n        context_1.Autowired('valueCache'),\n        __metadata(\"design:type\", valueCache_1.ValueCache)\n    ], ClientSideRowModel.prototype, \"valueCache\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], ClientSideRowModel.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], ClientSideRowModel.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('filterStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"filterStage\", void 0);\n    __decorate([\n        context_1.Autowired('sortStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"sortStage\", void 0);\n    __decorate([\n        context_1.Autowired('flattenStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"flattenStage\", void 0);\n    __decorate([\n        context_1.Optional('groupStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"groupStage\", void 0);\n    __decorate([\n        context_1.Optional('aggregationStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"aggregationStage\", void 0);\n    __decorate([\n        context_1.Optional('pivotStage'),\n        __metadata(\"design:type\", Object)\n    ], ClientSideRowModel.prototype, \"pivotStage\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ClientSideRowModel.prototype, \"init\", null);\n    ClientSideRowModel = __decorate([\n        context_1.Bean('rowModel')\n    ], ClientSideRowModel);\n    return ClientSideRowModel;\n}());\nexports.ClientSideRowModel = ClientSideRowModel;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rowNode_1 = require(\"../../entities/rowNode\");\nvar events_1 = require(\"../../events\");\nvar utils_1 = require(\"../../utils\");\nvar ClientSideNodeManager = /** @class */ (function () {\n    function ClientSideNodeManager(rootNode, gridOptionsWrapper, context, eventService, columnController, gridApi, columnApi, selectionController) {\n        this.nextId = 0;\n        // when user is provide the id's, we also keep a map of ids to row nodes for convenience\n        this.allNodesMap = {};\n        this.rootNode = rootNode;\n        this.gridOptionsWrapper = gridOptionsWrapper;\n        this.context = context;\n        this.eventService = eventService;\n        this.columnController = columnController;\n        this.gridApi = gridApi;\n        this.columnApi = columnApi;\n        this.selectionController = selectionController;\n        this.rootNode.group = true;\n        this.rootNode.level = -1;\n        this.rootNode.id = ClientSideNodeManager.ROOT_NODE_ID;\n        this.rootNode.allLeafChildren = [];\n        this.rootNode.childrenAfterGroup = [];\n        this.rootNode.childrenAfterSort = [];\n        this.rootNode.childrenAfterFilter = [];\n        // if we make this class a bean, then can annotate postConstruct\n        this.postConstruct();\n    }\n    // @PostConstruct - this is not a bean, so postConstruct called by constructor\n    ClientSideNodeManager.prototype.postConstruct = function () {\n        // func below doesn't have 'this' pointer, so need to pull out these bits\n        this.getNodeChildDetails = this.gridOptionsWrapper.getNodeChildDetailsFunc();\n        this.suppressParentsInRowNodes = this.gridOptionsWrapper.isSuppressParentsInRowNodes();\n        this.doesDataFlower = this.gridOptionsWrapper.getDoesDataFlowerFunc();\n        this.isRowMasterFunc = this.gridOptionsWrapper.getIsRowMasterFunc();\n        this.doingLegacyTreeData = utils_1._.exists(this.getNodeChildDetails);\n        this.doingMasterDetail = this.gridOptionsWrapper.isMasterDetail();\n        if (this.getNodeChildDetails) {\n            console.warn(\"ag-Grid: the callback nodeChildDetailsFunc() is now deprecated. The new way of doing\\n                                    tree data in ag-Grid was introduced in v14 (released November 2017). In the next\\n                                    major release of ag-Grid we will be dropping support for the old version of\\n                                    tree data. If you are reading this message, please go to the docs to see how\\n                                    to implement Tree Data without using nodeChildDetailsFunc().\");\n        }\n    };\n    ClientSideNodeManager.prototype.getCopyOfNodesMap = function () {\n        var result = utils_1._.cloneObject(this.allNodesMap);\n        return result;\n    };\n    ClientSideNodeManager.prototype.getRowNode = function (id) {\n        return this.allNodesMap[id];\n    };\n    ClientSideNodeManager.prototype.setRowData = function (rowData) {\n        this.rootNode.childrenAfterFilter = null;\n        this.rootNode.childrenAfterGroup = null;\n        this.rootNode.childrenAfterSort = null;\n        this.rootNode.childrenMapped = null;\n        this.nextId = 0;\n        this.allNodesMap = {};\n        if (!rowData) {\n            this.rootNode.allLeafChildren = [];\n            this.rootNode.childrenAfterGroup = [];\n            return;\n        }\n        // kick off recursion\n        // we add rootNode as the parent, however if using ag-grid-enterprise, the grouping stage\n        // sets the parent node on each row (even if we are not grouping). so setting parent node\n        // here is for benefit of ag-grid-community users\n        var result = this.recursiveFunction(rowData, this.rootNode, ClientSideNodeManager.TOP_LEVEL);\n        if (this.doingLegacyTreeData) {\n            this.rootNode.childrenAfterGroup = result;\n            this.setLeafChildren(this.rootNode);\n        }\n        else {\n            this.rootNode.allLeafChildren = result;\n        }\n    };\n    ClientSideNodeManager.prototype.updateRowData = function (rowDataTran, rowNodeOrder) {\n        if (this.isLegacyTreeData()) {\n            return null;\n        }\n        var add = rowDataTran.add, addIndex = rowDataTran.addIndex, remove = rowDataTran.remove, update = rowDataTran.update;\n        var rowNodeTransaction = {\n            remove: [],\n            update: [],\n            add: []\n        };\n        this.executeAdd(rowDataTran, rowNodeTransaction);\n        this.executeRemove(rowDataTran, rowNodeTransaction);\n        this.executeUpdate(rowDataTran, rowNodeTransaction);\n        if (rowNodeOrder) {\n            utils_1._.sortRowNodesByOrder(this.rootNode.allLeafChildren, rowNodeOrder);\n        }\n        return rowNodeTransaction;\n    };\n    ClientSideNodeManager.prototype.executeAdd = function (rowDataTran, rowNodeTransaction) {\n        var _this = this;\n        var add = rowDataTran.add, addIndex = rowDataTran.addIndex;\n        if (!add) {\n            return;\n        }\n        var useIndex = typeof addIndex === 'number' && addIndex >= 0;\n        if (useIndex) {\n            // items get inserted in reverse order for index insertion\n            add.reverse().forEach(function (item) {\n                var newRowNode = _this.addRowNode(item, addIndex);\n                rowNodeTransaction.add.push(newRowNode);\n            });\n        }\n        else {\n            add.forEach(function (item) {\n                var newRowNode = _this.addRowNode(item);\n                rowNodeTransaction.add.push(newRowNode);\n            });\n        }\n    };\n    ClientSideNodeManager.prototype.executeRemove = function (rowDataTran, rowNodeTransaction) {\n        var _this = this;\n        var remove = rowDataTran.remove;\n        if (!remove) {\n            return;\n        }\n        var rowIdsRemoved = {};\n        var anyNodesSelected = false;\n        remove.forEach(function (item) {\n            var rowNode = _this.lookupRowNode(item);\n            if (!rowNode) {\n                return;\n            }\n            if (rowNode.isSelected()) {\n                anyNodesSelected = true;\n            }\n            // do delete - setting 'tailingNodeInSequence = true' to ensure EVENT_SELECTION_CHANGED is not raised for\n            // each row node updated, instead it is raised once by the calling code if any selected nodes exist.\n            rowNode.setSelected(false, false, true);\n            // so row renderer knows to fade row out (and not reposition it)\n            rowNode.clearRowTop();\n            // NOTE: were we could remove from allLeaveChildren, however _.removeFromArray() is expensive, especially\n            // if called multiple times (eg deleting lots of rows) and if allLeafChildren is a large list\n            rowIdsRemoved[rowNode.id] = true;\n            // _.removeFromArray(this.rootNode.allLeafChildren, rowNode);\n            delete _this.allNodesMap[rowNode.id];\n            rowNodeTransaction.remove.push(rowNode);\n        });\n        this.rootNode.allLeafChildren = this.rootNode.allLeafChildren.filter(function (rowNode) { return !rowIdsRemoved[rowNode.id]; });\n        if (anyNodesSelected) {\n            this.selectionController.updateGroupsFromChildrenSelections();\n            var event_1 = {\n                type: events_1.Events.EVENT_SELECTION_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n    };\n    ClientSideNodeManager.prototype.executeUpdate = function (rowDataTran, rowNodeTransaction) {\n        var _this = this;\n        var update = rowDataTran.update;\n        if (!update) {\n            return;\n        }\n        update.forEach(function (item) {\n            var rowNode = _this.lookupRowNode(item);\n            if (!rowNode) {\n                return;\n            }\n            rowNode.updateData(item);\n            rowNodeTransaction.update.push(rowNode);\n        });\n    };\n    ClientSideNodeManager.prototype.addRowNode = function (data, index) {\n        var newNode = this.createNode(data, this.rootNode, ClientSideNodeManager.TOP_LEVEL);\n        if (utils_1._.exists(index)) {\n            utils_1._.insertIntoArray(this.rootNode.allLeafChildren, newNode, index);\n        }\n        else {\n            this.rootNode.allLeafChildren.push(newNode);\n        }\n        return newNode;\n    };\n    ClientSideNodeManager.prototype.lookupRowNode = function (data) {\n        var rowNodeIdFunc = this.gridOptionsWrapper.getRowNodeIdFunc();\n        var rowNode;\n        if (utils_1._.exists(rowNodeIdFunc)) {\n            // find rowNode using id\n            var id = rowNodeIdFunc(data);\n            rowNode = this.allNodesMap[id];\n            if (!rowNode) {\n                console.error(\"ag-Grid: could not find row id=\" + id + \", data item was not found for this id\");\n                return null;\n            }\n        }\n        else {\n            // find rowNode using object references\n            rowNode = utils_1._.find(this.rootNode.allLeafChildren, function (rowNode) { return rowNode.data === data; });\n            if (!rowNode) {\n                console.error(\"ag-Grid: could not find data item as object was not found\", data);\n                return null;\n            }\n        }\n        return rowNode;\n    };\n    ClientSideNodeManager.prototype.recursiveFunction = function (rowData, parent, level) {\n        var _this = this;\n        // make sure the rowData is an array and not a string of json - this was a commonly reported problem on the forum\n        if (typeof rowData === 'string') {\n            console.warn('ag-Grid: rowData must be an array, however you passed in a string. If you are loading JSON, make sure you convert the JSON string to JavaScript objects first');\n            return;\n        }\n        var rowNodes = [];\n        rowData.forEach(function (dataItem) {\n            var node = _this.createNode(dataItem, parent, level);\n            rowNodes.push(node);\n        });\n        return rowNodes;\n    };\n    ClientSideNodeManager.prototype.createNode = function (dataItem, parent, level) {\n        var node = new rowNode_1.RowNode();\n        this.context.wireBean(node);\n        var doingTreeData = this.gridOptionsWrapper.isTreeData();\n        var doingLegacyTreeData = !doingTreeData && utils_1._.exists(this.getNodeChildDetails);\n        var nodeChildDetails = doingLegacyTreeData ? this.getNodeChildDetails(dataItem) : null;\n        if (nodeChildDetails && nodeChildDetails.group) {\n            node.group = true;\n            node.childrenAfterGroup = this.recursiveFunction(nodeChildDetails.children, node, level + 1);\n            node.expanded = nodeChildDetails.expanded === true;\n            node.field = nodeChildDetails.field;\n            node.key = nodeChildDetails.key;\n            /** @deprecated is now 'master' */\n            node.canFlower = node.master;\n            // pull out all the leaf children and add to our node\n            this.setLeafChildren(node);\n        }\n        else {\n            node.group = false;\n            if (doingTreeData) {\n                node.master = false;\n                node.expanded = false;\n            }\n            else {\n                // this is the default, for when doing grid data\n                if (this.doesDataFlower) {\n                    node.master = this.doesDataFlower(dataItem);\n                }\n                else if (this.doingMasterDetail) {\n                    // if we are doing master detail, then the\n                    // default is that everything can flower.\n                    if (this.isRowMasterFunc) {\n                        node.master = this.isRowMasterFunc(dataItem);\n                    }\n                    else {\n                        node.master = true;\n                    }\n                }\n                else {\n                    node.master = false;\n                }\n                var rowGroupColumns = this.columnController.getRowGroupColumns();\n                var numRowGroupColumns = rowGroupColumns ? rowGroupColumns.length : 0;\n                // need to take row group into account when determining level\n                var masterRowLevel = level + numRowGroupColumns;\n                node.expanded = node.master ? this.isExpanded(masterRowLevel) : false;\n            }\n        }\n        // support for backwards compatibility, canFlow is now called 'master'\n        node.canFlower = node.master;\n        if (parent && !this.suppressParentsInRowNodes) {\n            node.parent = parent;\n        }\n        node.level = level;\n        node.setDataAndId(dataItem, this.nextId.toString());\n        if (this.allNodesMap[node.id]) {\n            console.warn(\"ag-grid: duplicate node id '\" + node.id + \"' detected from getRowNodeId callback, this could cause issues in your grid.\");\n        }\n        this.allNodesMap[node.id] = node;\n        this.nextId++;\n        return node;\n    };\n    ClientSideNodeManager.prototype.isExpanded = function (level) {\n        var expandByDefault = this.gridOptionsWrapper.getGroupDefaultExpanded();\n        if (expandByDefault === -1) {\n            return true;\n        }\n        else {\n            return level < expandByDefault;\n        }\n    };\n    // this is only used for doing legacy tree data\n    ClientSideNodeManager.prototype.setLeafChildren = function (node) {\n        node.allLeafChildren = [];\n        if (node.childrenAfterGroup) {\n            node.childrenAfterGroup.forEach(function (childAfterGroup) {\n                if (childAfterGroup.group) {\n                    if (childAfterGroup.allLeafChildren) {\n                        childAfterGroup.allLeafChildren.forEach(function (leafChild) { return node.allLeafChildren.push(leafChild); });\n                    }\n                }\n                else {\n                    node.allLeafChildren.push(childAfterGroup);\n                }\n            });\n        }\n    };\n    ClientSideNodeManager.prototype.isLegacyTreeData = function () {\n        var rowsAlreadyGrouped = utils_1._.exists(this.gridOptionsWrapper.getNodeChildDetailsFunc());\n        if (rowsAlreadyGrouped) {\n            console.warn('ag-Grid: adding and removing rows is not supported when using nodeChildDetailsFunc, ie it is not ' +\n                'supported for legacy tree data. Please see the docs on the new preferred way of providing tree data that works with delta updates.');\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ClientSideNodeManager.TOP_LEVEL = 0;\n    ClientSideNodeManager.ROOT_NODE_ID = 'ROOT_NODE_ID';\n    return ClientSideNodeManager;\n}());\nexports.ClientSideNodeManager = ClientSideNodeManager;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"./component\");\nvar componentAnnotations_1 = require(\"./componentAnnotations\");\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\nvar AgRadioButton = /** @class */ (function (_super) {\n    __extends(AgRadioButton, _super);\n    function AgRadioButton() {\n        var _this = _super.call(this) || this;\n        _this.selected = false;\n        return _this;\n    }\n    AgRadioButton.prototype.preConstruct = function () {\n        this.setTemplate(AgRadioButton.TEMPLATE);\n    };\n    AgRadioButton.prototype.postConstruct = function () {\n        this.loadIcons();\n        this.updateIcons();\n    };\n    AgRadioButton.prototype.setLabel = function (label) {\n        this.eLabel.innerText = label;\n    };\n    AgRadioButton.prototype.loadIcons = function () {\n        utils_1._.clearElement(this.eRadioOn);\n        utils_1._.clearElement(this.eRadioOff);\n        this.eRadioOn.appendChild(utils_1._.createIconNoSpan('radioButtonOn', this.gridOptionsWrapper, null));\n        this.eRadioOff.appendChild(utils_1._.createIconNoSpan('radioButtonOff', this.gridOptionsWrapper, null));\n    };\n    AgRadioButton.prototype.onClick = function (event) {\n        // if we don't set the path, then won't work in Edge, as once the <span> is removed from the dom,\n        // it's not possible to calculate the path by following the parent's chain. in other browser (eg\n        // chrome) there is event.path for this purpose, but missing in Edge.\n        utils_1._.addAgGridEventPath(event);\n        this.toggle();\n    };\n    AgRadioButton.prototype.getNextValue = function () {\n        if (this.selected === undefined) {\n            return true;\n        }\n        else {\n            return !this.selected;\n        }\n    };\n    AgRadioButton.prototype.isSelected = function () {\n        return this.selected;\n    };\n    AgRadioButton.prototype.toggle = function () {\n        var nextValue = this.getNextValue();\n        this.setSelected(nextValue);\n    };\n    AgRadioButton.prototype.select = function (selected) {\n        if (this.selected === selected) {\n            return;\n        }\n        this.selected = selected;\n        this.updateIcons();\n    };\n    AgRadioButton.prototype.setSelected = function (selected) {\n        if (this.selected === selected) {\n            return;\n        }\n        this.selected = selected;\n        this.updateIcons();\n        var event = {\n            type: AgRadioButton.EVENT_CHANGED,\n            selected: this.selected\n        };\n        this.dispatchEvent(event);\n    };\n    AgRadioButton.prototype.updateIcons = function () {\n        utils_1._.setVisible(this.eRadioOn, this.selected === true);\n        utils_1._.setVisible(this.eRadioOff, this.selected === false);\n    };\n    AgRadioButton.EVENT_CHANGED = 'change';\n    AgRadioButton.TEMPLATE = '<div class=\"ag-radio-button\" role=\"presentation\">' +\n        '  <span class=\"ag-radio-button-on\" role=\"presentation\"></span>' +\n        '  <span class=\"ag-radio-button-off\" role=\"presentation\"></span>' +\n        '  <span class=\"ag-radio-button-label\" role=\"presentation\"></span>' +\n        '</div>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], AgRadioButton.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        componentAnnotations_1.QuerySelector('.ag-radio-button-on'),\n        __metadata(\"design:type\", HTMLElement)\n    ], AgRadioButton.prototype, \"eRadioOn\", void 0);\n    __decorate([\n        componentAnnotations_1.QuerySelector('.ag-radio-button-off'),\n        __metadata(\"design:type\", HTMLElement)\n    ], AgRadioButton.prototype, \"eRadioOff\", void 0);\n    __decorate([\n        componentAnnotations_1.QuerySelector('.ag-radio-button-label'),\n        __metadata(\"design:type\", HTMLElement)\n    ], AgRadioButton.prototype, \"eLabel\", void 0);\n    __decorate([\n        context_1.PreConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AgRadioButton.prototype, \"preConstruct\", null);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AgRadioButton.prototype, \"postConstruct\", null);\n    __decorate([\n        componentAnnotations_1.Listener('click'),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [MouseEvent]),\n        __metadata(\"design:returntype\", void 0)\n    ], AgRadioButton.prototype, \"onClick\", null);\n    return AgRadioButton;\n}(component_1.Component));\nexports.AgRadioButton = AgRadioButton;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The base frameworks, eg React & Angular 2, override this bean with implementations specific to their requirement. */\nvar VanillaFrameworkOverrides = /** @class */ (function () {\n    function VanillaFrameworkOverrides() {\n    }\n    // for Vanilla JS, we use simple timeout\n    VanillaFrameworkOverrides.prototype.setTimeout = function (action, timeout) {\n        window.setTimeout(action, timeout);\n    };\n    // for Vanilla JS, we just add the event to the element\n    VanillaFrameworkOverrides.prototype.addEventListenerOutsideAngular = function (element, type, listener, useCapture) {\n        element.addEventListener(type, listener, useCapture);\n    };\n    return VanillaFrameworkOverrides;\n}());\nexports.VanillaFrameworkOverrides = VanillaFrameworkOverrides;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar LINE_SEPARATOR = '\\r\\n';\nvar XmlFactory = /** @class */ (function () {\n    function XmlFactory() {\n    }\n    XmlFactory.prototype.createHeader = function (headerElement) {\n        if (headerElement === void 0) { headerElement = {}; }\n        var headerStart = '<?';\n        var headerEnd = '?>';\n        var keys = ['version'];\n        if (!headerElement.version) {\n            headerElement.version = \"1.0\";\n        }\n        if (headerElement.encoding) {\n            keys.push('encoding');\n        }\n        if (headerElement.standalone) {\n            keys.push('standalone');\n        }\n        var att = keys.map(function (key) { return key + \"=\\\"\" + headerElement[key] + \"\\\"\"; }).join(' ');\n        return headerStart + \"xml \" + att + \" \" + headerEnd;\n    };\n    XmlFactory.prototype.createXml = function (xmlElement, booleanTransformer) {\n        var _this = this;\n        var props = '';\n        if (xmlElement.properties) {\n            if (xmlElement.properties.prefixedAttributes) {\n                xmlElement.properties.prefixedAttributes.forEach(function (prefixedSet) {\n                    Object.keys(prefixedSet.map).forEach(function (key) {\n                        props += _this.returnAttributeIfPopulated(prefixedSet.prefix + key, prefixedSet.map[key], booleanTransformer);\n                    });\n                });\n            }\n            if (xmlElement.properties.rawMap) {\n                Object.keys(xmlElement.properties.rawMap).forEach(function (key) {\n                    props += _this.returnAttributeIfPopulated(key, xmlElement.properties.rawMap[key], booleanTransformer);\n                });\n            }\n        }\n        var result = '<' + xmlElement.name + props;\n        if (!xmlElement.children && xmlElement.textNode == null) {\n            return result + '/>' + LINE_SEPARATOR;\n        }\n        if (xmlElement.textNode != null) {\n            return result + '>' + xmlElement.textNode + '</' + xmlElement.name + '>' + LINE_SEPARATOR;\n        }\n        result += '>' + LINE_SEPARATOR;\n        if (xmlElement.children) {\n            xmlElement.children.forEach(function (it) {\n                result += _this.createXml(it, booleanTransformer);\n            });\n        }\n        return result + '</' + xmlElement.name + '>' + LINE_SEPARATOR;\n    };\n    XmlFactory.prototype.returnAttributeIfPopulated = function (key, value, booleanTransformer) {\n        if (!value && value !== '' && value !== 0) {\n            return '';\n        }\n        var xmlValue = value;\n        if ((typeof (value) === 'boolean')) {\n            if (booleanTransformer) {\n                xmlValue = booleanTransformer(value);\n            }\n        }\n        return \" \" + key + \"=\\\"\" + xmlValue + \"\\\"\";\n    };\n    XmlFactory = __decorate([\n        context_1.Bean('xmlFactory')\n    ], XmlFactory);\n    return XmlFactory;\n}());\nexports.XmlFactory = XmlFactory;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../../context/context\");\nvar utils_1 = require(\"../../../utils\");\n// table for crc calculation\n// from: https://referencesource.microsoft.com/#System/sys/System/IO/compression/Crc32Helper.cs,3b31978c7d7f7246,references\nvar crcTable = [\n    0, 1996959894, -301047508, -1727442502, 124634137, 1886057615, -379345611, -1637575261, 249268274,\n    2044508324, -522852066, -1747789432, 162941995, 2125561021, -407360249, -1866523247, 498536548,\n    1789927666, -205950648, -2067906082, 450548861, 1843258603, -187386543, -2083289657, 325883990,\n    1684777152, -43845254, -1973040660, 335633487, 1661365465, -99664541, -1928851979, 997073096,\n    1281953886, -715111964, -1570279054, 1006888145, 1258607687, -770865667, -1526024853, 901097722,\n    1119000684, -608450090, -1396901568, 853044451, 1172266101, -589951537, -1412350631, 651767980,\n    1373503546, -925412992, -1076862698, 565507253, 1454621731, -809855591, -1195530993, 671266974,\n    1594198024, -972236366, -1324619484, 795835527, 1483230225, -1050600021, -1234817731, 1994146192,\n    31158534, -1731059524, -271249366, 1907459465, 112637215, -1614814043, -390540237, 2013776290,\n    251722036, -1777751922, -519137256, 2137656763, 141376813, -1855689577, -429695999, 1802195444,\n    476864866, -2056965928, -228458418, 1812370925, 453092731, -2113342271, -183516073, 1706088902,\n    314042704, -1950435094, -54949764, 1658658271, 366619977, -1932296973, -69972891, 1303535960,\n    984961486, -1547960204, -725929758, 1256170817, 1037604311, -1529756563, -740887301, 1131014506,\n    879679996, -1385723834, -631195440, 1141124467, 855842277, -1442165665, -586318647, 1342533948,\n    654459306, -1106571248, -921952122, 1466479909, 544179635, -1184443383, -832445281, 1591671054,\n    702138776, -1328506846, -942167884, 1504918807, 783551873, -1212326853, -1061524307, -306674912,\n    -1698712650, 62317068, 1957810842, -355121351, -1647151185, 81470997, 1943803523, -480048366,\n    -1805370492, 225274430, 2053790376, -468791541, -1828061283, 167816743, 2097651377, -267414716,\n    -2029476910, 503444072, 1762050814, -144550051, -2140837941, 426522225, 1852507879, -19653770,\n    -1982649376, 282753626, 1742555852, -105259153, -1900089351, 397917763, 1622183637, -690576408,\n    -1580100738, 953729732, 1340076626, -776247311, -1497606297, 1068828381, 1219638859, -670225446,\n    -1358292148, 906185462, 1090812512, -547295293, -1469587627, 829329135, 1181335161, -882789492,\n    -1134132454, 628085408, 1382605366, -871598187, -1156888829, 570562233, 1426400815, -977650754,\n    -1296233688, 733239954, 1555261956, -1026031705, -1244606671, 752459403, 1541320221, -1687895376,\n    -328994266, 1969922972, 40735498, -1677130071, -351390145, 1913087877, 83908371, -1782625662,\n    -491226604, 2075208622, 213261112, -1831694693, -438977011, 2094854071, 198958881, -2032938284,\n    -237706686, 1759359992, 534414190, -2118248755, -155638181, 1873836001, 414664567, -2012718362,\n    -15766928, 1711684554, 285281116, -1889165569, -127750551, 1634467795, 376229701, -1609899400,\n    -686959890, 1308918612, 956543938, -1486412191, -799009033, 1231636301, 1047427035, -1362007478,\n    -640263460, 1088359270, 936918000, -1447252397, -558129467, 1202900863, 817233897, -1111625188,\n    -893730166, 1404277552, 615818150, -1160759803, -841546093, 1423857449, 601450431, -1285129682,\n    -1000256840, 1567103746, 711928724, -1274298825, -1022587231, 1510334235, 755167117\n];\nvar ZipContainer = /** @class */ (function () {\n    function ZipContainer() {\n        var _this = this;\n        this.folders = [];\n        this.files = [];\n        this.addFolder = function (path) {\n            _this.folders.push({\n                path: path,\n                created: new Date()\n            });\n        };\n    }\n    ZipContainer.prototype.addFolders = function (paths) {\n        paths.forEach(this.addFolder);\n    };\n    ZipContainer.prototype.addFile = function (path, content) {\n        this.files.push({\n            path: path,\n            created: new Date(),\n            content: content\n        });\n    };\n    ZipContainer.prototype.clearStream = function () {\n        this.folders = [];\n        this.files = [];\n    };\n    ZipContainer.prototype.getContent = function (mimeType) {\n        if (mimeType === void 0) { mimeType = 'application/zip'; }\n        var textOutput = this.buildFileStream();\n        var uInt8Output = this.buildUint8Array(textOutput);\n        this.clearStream();\n        return new Blob([uInt8Output], { type: mimeType });\n    };\n    ZipContainer.prototype.buildFileStream = function (fData) {\n        if (fData === void 0) { fData = ''; }\n        var totalFiles = this.folders.concat(this.files);\n        var len = totalFiles.length;\n        var foData = '';\n        var lL = 0;\n        var cL = 0;\n        for (var _i = 0, totalFiles_1 = totalFiles; _i < totalFiles_1.length; _i++) {\n            var currentFile = totalFiles_1[_i];\n            var _a = this.getHeader(currentFile, lL), fileHeader = _a.fileHeader, folderHeader = _a.folderHeader, content = _a.content;\n            lL += fileHeader.length + content.length;\n            cL += folderHeader.length;\n            fData += fileHeader + content;\n            foData += folderHeader;\n        }\n        var foEnd = this.buildFolderEnd(len, cL, lL);\n        return fData + foData + foEnd;\n    };\n    ZipContainer.prototype.getHeader = function (currentFile, offset) {\n        var content = currentFile.content, path = currentFile.path, created = currentFile.created;\n        var utf8_encode = utils_1._.utf8_encode, decToHex = utils_1._.decToHex;\n        var utfPath = utf8_encode(path);\n        var isUTF8 = utfPath !== path;\n        var time = this.convertTime(created);\n        var dt = this.convertDate(created);\n        var extraFields = '';\n        if (isUTF8) {\n            var uExtraFieldPath = decToHex(1, 1) + decToHex(this.getFromCrc32Table(utfPath), 4) + utfPath;\n            extraFields = \"\\x75\\x70\" + decToHex(uExtraFieldPath.length, 2) + uExtraFieldPath;\n        }\n        var header = '\\x0A\\x00' +\n            (isUTF8 ? '\\x00\\x08' : '\\x00\\x00') +\n            '\\x00\\x00' +\n            decToHex(time, 2) + // last modified time\n            decToHex(dt, 2) + // last modified date\n            decToHex(content ? this.getFromCrc32Table(content) : 0, 4) +\n            decToHex(content ? content.length : 0, 4) + // compressed size\n            decToHex(content ? content.length : 0, 4) + // uncompressed size\n            decToHex(utfPath.length, 2) + // file name length\n            decToHex(extraFields.length, 2); // extra field length\n        var fileHeader = 'PK\\x03\\x04' + header + utfPath + extraFields;\n        var folderHeader = 'PK\\x01\\x02' + // central header\n            '\\x14\\x00' +\n            header + // file header\n            '\\x00\\x00' +\n            '\\x00\\x00' +\n            '\\x00\\x00' +\n            (content ? '\\x00\\x00\\x00\\x00' : '\\x10\\x00\\x00\\x00') + // external file attributes\n            decToHex(offset, 4) + // relative offset of local header\n            utfPath + // file name\n            extraFields; // extra field\n        return { fileHeader: fileHeader, folderHeader: folderHeader, content: content || '' };\n    };\n    ZipContainer.prototype.buildFolderEnd = function (tLen, cLen, lLen) {\n        var decToHex = utils_1._.decToHex;\n        return 'PK\\x05\\x06' + // central folder end\n            '\\x00\\x00' +\n            '\\x00\\x00' +\n            decToHex(tLen, 2) + // total number of entries in the central folder\n            decToHex(tLen, 2) + // total number of entries in the central folder\n            decToHex(cLen, 4) + // size of the central folder\n            decToHex(lLen, 4) + // central folder start offset\n            '\\x00\\x00';\n    };\n    ZipContainer.prototype.buildUint8Array = function (content) {\n        var uint8 = new Uint8Array(content.length);\n        for (var i = 0; i < uint8.length; i++) {\n            uint8[i] = content.charCodeAt(i);\n        }\n        return uint8;\n    };\n    ZipContainer.prototype.getFromCrc32Table = function (content, crc) {\n        if (crc === void 0) { crc = 0; }\n        if (!content.length) {\n            return 0;\n        }\n        crc ^= (-1);\n        var j = 0;\n        var k = 0;\n        var l = 0;\n        for (var i = 0; i < content.length; i++) {\n            j = content.charCodeAt(i);\n            k = (crc ^ j) & 0xFF;\n            l = crcTable[k];\n            crc = (crc >>> 8) ^ l;\n        }\n        return crc ^ (-1);\n    };\n    ZipContainer.prototype.convertTime = function (date) {\n        var time = date.getHours();\n        time <<= 6;\n        time = time | date.getMinutes();\n        time <<= 5;\n        time = time | date.getSeconds() / 2;\n        return time;\n    };\n    ZipContainer.prototype.convertDate = function (date) {\n        var dt = date.getFullYear() - 1980;\n        dt <<= 4;\n        dt = dt | (date.getMonth() + 1);\n        dt <<= 5;\n        dt = dt | date.getDate();\n        return dt;\n    };\n    ZipContainer = __decorate([\n        context_1.Bean('zipContainer')\n    ], ZipContainer);\n    return ZipContainer;\n}());\nexports.ZipContainer = ZipContainer;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dragService_1 = require(\"../dragAndDrop/dragService\");\nvar componentAnnotations_1 = require(\"./componentAnnotations\");\nvar context_1 = require(\"../context/context\");\nvar popupService_1 = require(\"./popupService\");\nvar popupComponent_1 = require(\"./popupComponent\");\nvar utils_1 = require(\"../utils\");\nvar component_1 = require(\"./component\");\nvar Dialog = /** @class */ (function (_super) {\n    __extends(Dialog, _super);\n    function Dialog(config) {\n        var _this = _super.call(this, Dialog.TEMPLATE) || this;\n        _this.resizable = {};\n        _this.isResizable = false;\n        _this.isMaximizable = false;\n        _this.isMaximized = false;\n        _this.maximizeListeners = [];\n        _this.movable = false;\n        _this.closable = true;\n        _this.isMoving = false;\n        _this.isResizing = false;\n        _this.dragStartPosition = {\n            x: 0,\n            y: 0\n        };\n        _this.position = {\n            x: 0,\n            y: 0\n        };\n        _this.size = {\n            width: 0,\n            height: 0\n        };\n        _this.lastPosition = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        };\n        _this.config = config;\n        return _this;\n    }\n    Dialog.prototype.postConstruct = function () {\n        var _this = this;\n        var _a = this.config, alwaysOnTop = _a.alwaysOnTop, component = _a.component, centered = _a.centered, resizable = _a.resizable, movable = _a.movable, maximizable = _a.maximizable, closable = _a.closable, title = _a.title, minWidth = _a.minWidth, width = _a.width, minHeight = _a.minHeight, height = _a.height;\n        var _b = this.config, x = _b.x, y = _b.y;\n        var eGui = this.getGui();\n        this.popupParent = this.popupService.getPopupParent();\n        this.minHeight = minHeight != null ? minHeight : 250;\n        this.minWidth = minWidth != null ? minWidth : 250;\n        if (component) {\n            this.setBodyComponent(component);\n        }\n        if (resizable) {\n            this.setResizable(resizable);\n        }\n        if (title) {\n            this.setTitle(title);\n        }\n        if (this.isResizable && maximizable) {\n            this.setMaximizable(maximizable);\n        }\n        this.setMovable(!!movable);\n        this.setClosable(closable != null ? closable : this.closable);\n        if (width) {\n            utils_1._.setFixedWidth(eGui, width);\n            this.size.width = width;\n        }\n        if (height) {\n            utils_1._.setFixedHeight(eGui, height);\n            this.size.height = height;\n        }\n        this.close = this.popupService.addPopup(false, eGui, true, this.destroy.bind(this));\n        if (alwaysOnTop) {\n            eGui.style.zIndex = '6';\n        }\n        this.refreshSize();\n        eGui.focus();\n        if (centered) {\n            x = (eGui.offsetParent.clientWidth / 2) - (this.getWidth() / 2);\n            y = (eGui.offsetParent.clientHeight / 2) - (this.getHeight() / 2);\n        }\n        if (x || y) {\n            this.offsetDialog(x, y);\n        }\n        this.addDestroyableEventListener(this.eTitleBar, 'mousedown', function (e) {\n            if (eGui.contains(e.relatedTarget) || eGui.contains(document.activeElement)) {\n                return;\n            }\n            var focusEl = _this.eContentWrapper.querySelector('button, [href], input, select, textarea, [tabindex]');\n            if (focusEl) {\n                focusEl.focus();\n            }\n        });\n        this.addDestroyableEventListener(eGui, 'focusin', function (e) {\n            if (eGui.contains(e.relatedTarget)) {\n                return;\n            }\n            _this.popupService.bringPopupToFront(eGui);\n        });\n    };\n    Dialog.prototype.updateDragStartPosition = function (x, y) {\n        this.dragStartPosition = { x: x, y: y };\n    };\n    Dialog.prototype.getResizerElement = function (side) {\n        var map = {\n            topLeft: this.eTopLeftResizer,\n            top: this.eTopResizer,\n            topRight: this.eTopRightResizer,\n            right: this.eRightResizer,\n            bottomRight: this.eBottomRightResizer,\n            bottom: this.eBottomResizer,\n            bottomLeft: this.eBottomLeftResizer,\n            left: this.eLeftResizer\n        };\n        return map[side];\n    };\n    Dialog.prototype.setResizable = function (resizable) {\n        var _this = this;\n        var isResizable = false;\n        if (typeof resizable === 'boolean') {\n            resizable = {\n                topLeft: resizable,\n                top: resizable,\n                topRight: resizable,\n                right: resizable,\n                bottomRight: resizable,\n                bottom: resizable,\n                bottomLeft: resizable,\n                left: resizable\n            };\n        }\n        Object.keys(resizable).forEach(function (side) {\n            var r = resizable;\n            var s = side;\n            var val = !!r[s];\n            var el = _this.getResizerElement(s);\n            var params = {\n                eElement: el,\n                onDragStart: _this.onDialogResizeStart.bind(_this),\n                onDragging: function (e) { return _this.onDialogResize(e, s); },\n                onDragStop: _this.onDialogResizeEnd.bind(_this),\n            };\n            if (!!_this.resizable[s] !== val) {\n                if (val) {\n                    _this.dragService.addDragSource(params);\n                    el.style.pointerEvents = 'all';\n                    isResizable = true;\n                }\n                else {\n                    _this.dragService.removeDragSource(params);\n                    el.style.pointerEvents = 'none';\n                }\n            }\n        });\n        this.isResizable = isResizable;\n    };\n    Dialog.prototype.onDialogResizeStart = function (e) {\n        this.isResizing = true;\n        this.updateDragStartPosition(e.clientX, e.clientY);\n    };\n    Dialog.prototype.calculateMouseMovement = function (params) {\n        var parentRect = this.popupParent.getBoundingClientRect();\n        var e = params.e, isLeft = params.isLeft, isTop = params.isTop, anywhereWithin = params.anywhereWithin, topBuffer = params.topBuffer;\n        var movementX = e.clientX - this.dragStartPosition.x;\n        var movementY = e.clientY - this.dragStartPosition.y;\n        var width = this.getWidth();\n        var height = this.getHeight();\n        // skip if cursor is outside of popupParent horizontally\n        var skipX = (parentRect.left >= e.clientX && this.position.x <= 0 ||\n            parentRect.right <= e.clientX && parentRect.right <= this.position.x + parentRect.left + width);\n        if (!skipX) {\n            if (isLeft) {\n                skipX = (\n                // skip if we are moving to the left and the cursor\n                // is positioned to the right of the left side anchor\n                (movementX < 0 && e.clientX > this.position.x + parentRect.left) ||\n                    // skip if we are moving to the right and the cursor\n                    // is positioned to the left of the dialog\n                    (movementX > 0 && e.clientX < this.position.x + parentRect.left));\n            }\n            else {\n                if (anywhereWithin) {\n                    // if anywhereWithin is true, we allow to move\n                    // as long as the cursor is within the dialog\n                    skipX = ((movementX < 0 && e.clientX > this.position.x + parentRect.left + width) ||\n                        (movementX > 0 && e.clientX < this.position.x + parentRect.left));\n                }\n                else {\n                    skipX = (\n                    // if the movement is bound to the right side of the dialog\n                    // we skip if we are moving to the left and the cursor\n                    // is to the right of the dialog\n                    (movementX < 0 && e.clientX > this.position.x + parentRect.left + width) ||\n                        // or skip if we are moving to the right and the cursor\n                        // is to the left of the right side anchor\n                        (movementX > 0 && e.clientX < this.position.x + parentRect.left + width));\n                }\n            }\n        }\n        movementX = skipX ? 0 : movementX;\n        var skipY = (\n        // skip if cursor is outside of popupParent vertically\n        parentRect.top >= e.clientY && this.position.y <= 0 ||\n            parentRect.bottom <= e.clientY && parentRect.bottom <= this.position.y + parentRect.top + height ||\n            isTop && (\n            // skip if we are moving to towards top and the cursor is\n            // below the top anchor + topBuffer\n            // note: topBuffer is used when moving the dialog using the title bar\n            (movementY < 0 && e.clientY > this.position.y + parentRect.top + (topBuffer || 0)) ||\n                // skip if we are moving to the bottom and the cursor is\n                // above the top anchor\n                (movementY > 0 && e.clientY < this.position.y + parentRect.top)) ||\n            // we are anchored to the bottom of the dialog\n            !isTop && (\n            // skip if we are moving towards the top and the cursor\n            // is below the bottom anchor\n            (movementY < 0 && e.clientY > this.position.y + parentRect.top + height) ||\n                // skip if we are moving towards the bottom and the cursor\n                // is above the bottom anchor\n                (movementY > 0 && e.clientY < this.position.y + parentRect.top + height)));\n        movementY = skipY ? 0 : movementY;\n        return { movementX: movementX, movementY: movementY };\n    };\n    Dialog.prototype.onDialogResize = function (e, side) {\n        if (!this.isResizing) {\n            return;\n        }\n        var isLeft = !!side.match(/left/i);\n        var isRight = !!side.match(/right/i);\n        var isTop = !!side.match(/top/i);\n        var isBottom = !!side.match(/bottom/i);\n        var isHorizontal = isLeft || isRight;\n        var isVertical = isTop || isBottom;\n        var _a = this.calculateMouseMovement({ e: e, isLeft: isLeft, isTop: isTop }), movementX = _a.movementX, movementY = _a.movementY;\n        var offsetLeft = 0;\n        var offsetTop = 0;\n        if (isHorizontal && movementX) {\n            var direction = isLeft ? -1 : 1;\n            var oldWidth = this.getWidth();\n            var newWidth = oldWidth + (movementX * direction);\n            var skipWidth = false;\n            if (isLeft) {\n                offsetLeft = oldWidth - newWidth;\n                if (this.position.x + offsetLeft <= 0 || newWidth <= this.minWidth) {\n                    skipWidth = true;\n                    offsetLeft = 0;\n                }\n            }\n            if (!skipWidth) {\n                this.setWidth(newWidth);\n            }\n        }\n        if (isVertical && movementY) {\n            var direction = isTop ? -1 : 1;\n            var oldHeight = this.getHeight();\n            var newHeight = oldHeight + (movementY * direction);\n            var skipHeight = false;\n            if (isTop) {\n                offsetTop = oldHeight - newHeight;\n                if (this.position.y + offsetTop <= 0 || newHeight <= this.minHeight) {\n                    skipHeight = true;\n                    offsetTop = 0;\n                }\n            }\n            if (!skipHeight) {\n                this.setHeight(newHeight);\n            }\n        }\n        this.updateDragStartPosition(e.clientX, e.clientY);\n        if (offsetLeft || offsetTop) {\n            this.offsetDialog(this.position.x + offsetLeft, this.position.y + offsetTop);\n        }\n        this.isMaximized = false;\n    };\n    Dialog.prototype.onDialogResizeEnd = function () {\n        this.isResizing = false;\n    };\n    Dialog.prototype.refreshSize = function () {\n        var _a = this.size, width = _a.width, height = _a.height;\n        if (!width) {\n            this.setWidth(this.getGui().offsetWidth);\n        }\n        if (!height) {\n            this.setHeight(this.getGui().offsetHeight);\n        }\n    };\n    Dialog.prototype.setMovable = function (movable) {\n        if (movable !== this.movable) {\n            this.movable = movable;\n            var params = {\n                eElement: this.eTitleBar,\n                onDragStart: this.onDialogMoveStart.bind(this),\n                onDragging: this.onDialogMove.bind(this),\n                onDragStop: this.onDialogMoveEnd.bind(this)\n            };\n            this.dragService[movable ? 'addDragSource' : 'removeDragSource'](params);\n        }\n    };\n    Dialog.prototype.onDialogMoveStart = function (e) {\n        this.isMoving = true;\n        this.updateDragStartPosition(e.clientX, e.clientY);\n    };\n    Dialog.prototype.onDialogMove = function (e) {\n        if (!this.isMoving) {\n            return;\n        }\n        var _a = this.position, x = _a.x, y = _a.y;\n        var _b = this.calculateMouseMovement({\n            e: e,\n            isTop: true,\n            anywhereWithin: true,\n            topBuffer: this.getHeight() - this.getBodyHeight()\n        }), movementX = _b.movementX, movementY = _b.movementY;\n        this.offsetDialog(x + movementX, y + movementY);\n        this.updateDragStartPosition(e.clientX, e.clientY);\n    };\n    Dialog.prototype.offsetDialog = function (x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        var ePopup = this.getGui();\n        this.popupService.positionPopup({\n            ePopup: ePopup,\n            x: x,\n            y: y,\n            minWidth: this.minWidth,\n            minHeight: this.minHeight,\n            keepWithinBounds: true\n        });\n        this.position.x = parseInt(ePopup.style.left, 10);\n        this.position.y = parseInt(ePopup.style.top, 10);\n    };\n    Dialog.prototype.onDialogMoveEnd = function () {\n        this.isMoving = false;\n    };\n    Dialog.prototype.setClosable = function (closable) {\n        if (closable !== this.closable) {\n            this.closable = closable;\n        }\n        if (closable) {\n            var closeButtonComp = this.closeButtonComp = new component_1.Component(Dialog.CLOSE_BTN_TEMPLATE);\n            this.addTitleBarButton(closeButtonComp);\n            closeButtonComp.addDestroyableEventListener(closeButtonComp.getGui(), 'click', this.onBtClose.bind(this));\n        }\n        else if (this.closeButtonComp) {\n            this.closeButtonComp.destroy();\n            this.closeButtonComp = undefined;\n        }\n    };\n    Dialog.prototype.setMaximizable = function (maximizable) {\n        if (maximizable === false) {\n            this.clearMaximizebleListeners();\n            if (this.maximizeButtonComp) {\n                this.maximizeButtonComp.destroy();\n                this.maximizeButtonComp = undefined;\n            }\n            return;\n        }\n        var eTitleBar = this.eTitleBar;\n        if (!this.isResizable || !eTitleBar || maximizable === this.isMaximizable) {\n            return;\n        }\n        var maximizeButtonComp = this.maximizeButtonComp = new component_1.Component(Dialog.MAXIMIZE_BTN_TEMPLATE);\n        maximizeButtonComp.addDestroyableEventListener(maximizeButtonComp.getGui(), 'click', this.toggleMaximize.bind(this));\n        this.addTitleBarButton(maximizeButtonComp, 0);\n        this.maximizeListeners.push(this.addDestroyableEventListener(eTitleBar, 'dblclick', this.toggleMaximize.bind(this)));\n    };\n    Dialog.prototype.toggleMaximize = function () {\n        var maximizeButton = this.maximizeButtonComp.getGui();\n        var maximizeEl = maximizeButton.querySelector('.ag-icon-maximize');\n        var minimizeEl = maximizeButton.querySelector('.ag-icon-minimize');\n        if (this.isMaximized) {\n            var _a = this.lastPosition, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n            this.setWidth(width);\n            this.setHeight(height);\n            this.offsetDialog(x, y);\n        }\n        else {\n            this.lastPosition.width = this.getWidth();\n            this.lastPosition.height = this.getHeight();\n            this.lastPosition.x = this.position.x;\n            this.lastPosition.y = this.position.y;\n            this.offsetDialog(0, 0);\n            this.setHeight(Infinity);\n            this.setWidth(Infinity);\n        }\n        this.isMaximized = !this.isMaximized;\n        utils_1._.addOrRemoveCssClass(maximizeEl, 'ag-hidden', this.isMaximized);\n        utils_1._.addOrRemoveCssClass(minimizeEl, 'ag-hidden', !this.isMaximized);\n    };\n    Dialog.prototype.clearMaximizebleListeners = function () {\n        if (this.maximizeListeners.length) {\n            this.maximizeListeners.forEach(function (destroyListener) { return destroyListener(); });\n            this.maximizeListeners.length = 0;\n        }\n    };\n    Dialog.prototype.setBodyComponent = function (bodyComponent) {\n        bodyComponent.setParentComponent(this);\n        this.eContentWrapper.appendChild(bodyComponent.getGui());\n    };\n    Dialog.prototype.addTitleBarButton = function (button, position) {\n        var eTitleBarButtons = this.eTitleBarButtons;\n        var buttons = eTitleBarButtons.children;\n        var len = buttons.length;\n        if (position == null) {\n            position = len;\n        }\n        position = Math.max(0, Math.min(position, len));\n        var eGui = button.getGui();\n        utils_1._.addCssClass(eGui, 'ag-dialog-button');\n        if (position === 0) {\n            eTitleBarButtons.insertAdjacentElement('afterbegin', eGui);\n        }\n        else if (position === len) {\n            eTitleBarButtons.insertAdjacentElement('beforeend', eGui);\n        }\n        else {\n            buttons[position - 1].insertAdjacentElement('afterend', eGui);\n        }\n        button.setParentComponent(this);\n    };\n    Dialog.prototype.getBodyHeight = function () {\n        return utils_1._.getInnerHeight(this.eContentWrapper);\n    };\n    Dialog.prototype.getBodyWidth = function () {\n        return utils_1._.getInnerWidth(this.eContentWrapper);\n    };\n    Dialog.prototype.setTitle = function (title) {\n        this.eTitle.innerText = title;\n    };\n    Dialog.prototype.getHeight = function () {\n        return this.size.height;\n    };\n    Dialog.prototype.setHeight = function (height) {\n        var newHeight = Math.max(this.minHeight, height);\n        var eGui = this.getGui();\n        if (newHeight + this.position.y > eGui.offsetParent.clientHeight) {\n            newHeight = eGui.offsetParent.clientHeight - this.position.y;\n        }\n        if (this.size.height === newHeight) {\n            return;\n        }\n        this.size.height = newHeight;\n        utils_1._.setFixedHeight(eGui, newHeight);\n        utils_1._.setFixedHeight(this.eContentWrapper, eGui.clientHeight - this.eTitleBar.offsetHeight);\n    };\n    Dialog.prototype.getWidth = function () {\n        return this.size.width;\n    };\n    Dialog.prototype.setWidth = function (width) {\n        var newWidth = Math.max(this.minWidth, width);\n        var eGui = this.getGui();\n        if (newWidth + this.position.x > eGui.offsetParent.clientWidth) {\n            newWidth = eGui.offsetParent.clientWidth - this.position.x;\n        }\n        if (this.size.width === newWidth) {\n            return;\n        }\n        this.size.width = newWidth;\n        utils_1._.setFixedWidth(eGui, newWidth);\n    };\n    // called when user hits the 'x' in the top right\n    Dialog.prototype.onBtClose = function () {\n        this.close();\n    };\n    Dialog.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.closeButtonComp) {\n            this.closeButtonComp.destroy();\n            this.closeButtonComp = undefined;\n        }\n        if (this.maximizeButtonComp) {\n            this.maximizeButtonComp.destroy();\n            this.maximizeButtonComp = undefined;\n        }\n        this.clearMaximizebleListeners();\n        var eGui = this.getGui();\n        if (eGui && eGui.offsetParent) {\n            this.close();\n        }\n    };\n    Dialog.TEMPLATE = \"<div class=\\\"ag-dialog\\\" tabindex=\\\"-1\\\">\\n            <div class=\\\"ag-resizer-wrapper\\\">\\n                <div ref=\\\"eTopLeftResizer\\\" class=\\\"ag-resizer ag-resizer-topLeft\\\"></div>\\n                <div ref=\\\"eTopResizer\\\" class=\\\"ag-resizer ag-resizer-top\\\"></div>\\n                <div ref=\\\"eTopRightResizer\\\" class=\\\"ag-resizer ag-resizer-topRight\\\"></div>\\n                <div ref=\\\"eRightResizer\\\" class=\\\"ag-resizer ag-resizer-right\\\"></div>\\n                <div ref=\\\"eBottomRightResizer\\\" class=\\\"ag-resizer ag-resizer-bottomRight\\\"></div>\\n                <div ref=\\\"eBottomResizer\\\" class=\\\"ag-resizer ag-resizer-bottom\\\"></div>\\n                <div ref=\\\"eBottomLeftResizer\\\" class=\\\"ag-resizer ag-resizer-bottomLeft\\\"></div>\\n                <div ref=\\\"eLeftResizer\\\" class=\\\"ag-resizer ag-resizer-left\\\"></div>\\n            </div>\\n            <div ref=\\\"eTitleBar\\\" class=\\\"ag-dialog-title-bar ag-unselectable\\\">\\n                <span ref=\\\"eTitle\\\" class=\\\"ag-dialog-title-bar-title\\\"></span>\\n                <div ref=\\\"eTitleBarButtons\\\" class=\\\"ag-dialog-title-bar-buttons\\\"></div>\\n            </div>\\n            <div ref=\\\"eContentWrapper\\\" class=\\\"ag-dialog-content-wrapper\\\"></div>\\n        </div>\";\n    Dialog.CLOSE_BTN_TEMPLATE = \"<div class=\\\"ag-dialog-button\\\">\\n            <span class=\\\"ag-icon ag-icon-cross\\\"></span>\\n        </div>\\n        \";\n    Dialog.MAXIMIZE_BTN_TEMPLATE = \"<div class=\\\"ag-dialog-button\\\">\\n            <span class=\\\"ag-icon ag-icon-maximize\\\"></span>\\n            <span class=\\\"ag-icon ag-icon-minimize ag-hidden\\\"></span>\\n        </span>\\n        \";\n    __decorate([\n        context_1.Autowired('dragService'),\n        __metadata(\"design:type\", dragService_1.DragService)\n    ], Dialog.prototype, \"dragService\", void 0);\n    __decorate([\n        context_1.Autowired('popupService'),\n        __metadata(\"design:type\", popupService_1.PopupService)\n    ], Dialog.prototype, \"popupService\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eContentWrapper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eContentWrapper\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTitleBar'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eTitleBar\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTitleBarButtons'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eTitleBarButtons\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTitle'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eTitle\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopLeftResizer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eTopLeftResizer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopResizer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eTopResizer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eTopRightResizer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eTopRightResizer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eRightResizer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eRightResizer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomRightResizer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eBottomRightResizer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomResizer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eBottomResizer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eBottomLeftResizer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eBottomLeftResizer\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLeftResizer'),\n        __metadata(\"design:type\", HTMLElement)\n    ], Dialog.prototype, \"eLeftResizer\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Dialog.prototype, \"postConstruct\", null);\n    return Dialog;\n}(popupComponent_1.PopupComponent));\nexports.Dialog = Dialog;\n","/*!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2015 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\n */\n\n// vim: ts=4 sts=4 sw=4 expandtab\n\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\n;\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n(function (root, factory) {\n    'use strict';\n\n    /* global define, exports, module */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory();\n    }\n}(this, function () {\n    /**\n     * Brings an environment as close to ECMAScript 5 compliance\n     * as is possible with the facilities of erstwhile engines.\n     *\n     * Annotated ES5: http://es5.github.com/ (specific links below)\n     * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\n     * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/\n     */\n\n    // Shortcut to an often accessed properties, in order to avoid multiple\n    // dereference that costs universally. This also holds a reference to known-good\n    // functions.\n    var $Array = Array;\n    var ArrayPrototype = $Array.prototype;\n    var $Object = Object;\n    var ObjectPrototype = $Object.prototype;\n    var $Function = Function;\n    var FunctionPrototype = $Function.prototype;\n    var $String = String;\n    var StringPrototype = $String.prototype;\n    var $Number = Number;\n    var NumberPrototype = $Number.prototype;\n    var array_slice = ArrayPrototype.slice;\n    var array_splice = ArrayPrototype.splice;\n    var array_push = ArrayPrototype.push;\n    var array_unshift = ArrayPrototype.unshift;\n    var array_concat = ArrayPrototype.concat;\n    var array_join = ArrayPrototype.join;\n    var call = FunctionPrototype.call;\n    var apply = FunctionPrototype.apply;\n    var max = Math.max;\n    var min = Math.min;\n\n    // Having a toString local variable name breaks in Opera so use to_string.\n    var to_string = ObjectPrototype.toString;\n\n    /* global Symbol */\n    /* eslint-disable one-var-declaration-per-line, no-redeclare, max-statements-per-line */\n    var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n    var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, constructorRegex = /^\\s*class /, isES6ClassFn = function isES6ClassFn(value) { try { var fnStr = fnToStr.call(value); var singleStripped = fnStr.replace(/\\/\\/.*\\n/g, ''); var multiStripped = singleStripped.replace(/\\/\\*[.\\s\\S]*\\*\\//g, ''); var spaceStripped = multiStripped.replace(/\\n/mg, ' ').replace(/ {2}/g, ' '); return constructorRegex.test(spaceStripped); } catch (e) { return false; /* not a function */ } }, tryFunctionObject = function tryFunctionObject(value) { try { if (isES6ClassFn(value)) { return false; } fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]', isCallable = function isCallable(value) { if (!value) { return false; } if (typeof value !== 'function' && typeof value !== 'object') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } if (isES6ClassFn(value)) { return false; } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\n\n    var isRegex; /* inlined from https://npmjs.com/is-regex */ var regexExec = RegExp.prototype.exec, tryRegexExec = function tryRegexExec(value) { try { regexExec.call(value); return true; } catch (e) { return false; } }, regexClass = '[object RegExp]'; isRegex = function isRegex(value) { if (typeof value !== 'object') { return false; } return hasToStringTag ? tryRegexExec(value) : to_string.call(value) === regexClass; };\n    var isString; /* inlined from https://npmjs.com/is-string */ var strValue = String.prototype.valueOf, tryStringObject = function tryStringObject(value) { try { strValue.call(value); return true; } catch (e) { return false; } }, stringClass = '[object String]'; isString = function isString(value) { if (typeof value === 'string') { return true; } if (typeof value !== 'object') { return false; } return hasToStringTag ? tryStringObject(value) : to_string.call(value) === stringClass; };\n    /* eslint-enable one-var-declaration-per-line, no-redeclare, max-statements-per-line */\n\n    /* inlined from http://npmjs.com/define-properties */\n    var supportsDescriptors = $Object.defineProperty && (function () {\n        try {\n            var obj = {};\n            $Object.defineProperty(obj, 'x', { enumerable: false, value: obj });\n            for (var _ in obj) { // jscs:ignore disallowUnusedVariables\n                return false;\n            }\n            return obj.x === obj;\n        } catch (e) { /* this is ES3 */\n            return false;\n        }\n    }());\n    var defineProperties = (function (has) {\n        // Define configurable, writable, and non-enumerable props\n        // if they don't exist.\n        var defineProperty;\n        if (supportsDescriptors) {\n            defineProperty = function (object, name, method, forceAssign) {\n                if (!forceAssign && (name in object)) {\n                    return;\n                }\n                $Object.defineProperty(object, name, {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: method\n                });\n            };\n        } else {\n            defineProperty = function (object, name, method, forceAssign) {\n                if (!forceAssign && (name in object)) {\n                    return;\n                }\n                object[name] = method;\n            };\n        }\n        return function defineProperties(object, map, forceAssign) {\n            for (var name in map) {\n                if (has.call(map, name)) {\n                    defineProperty(object, name, map[name], forceAssign);\n                }\n            }\n        };\n    }(ObjectPrototype.hasOwnProperty));\n\n    //\n    // Util\n    // ======\n    //\n\n    /* replaceable with https://npmjs.com/package/es-abstract /helpers/isPrimitive */\n    var isPrimitive = function isPrimitive(input) {\n        var type = typeof input;\n        return input === null || (type !== 'object' && type !== 'function');\n    };\n\n    var isActualNaN = $Number.isNaN || function isActualNaN(x) {\n        return x !== x;\n    };\n\n    var ES = {\n        // ES5 9.4\n        // http://es5.github.com/#x9.4\n        // http://jsperf.com/to-integer\n        /* replaceable with https://npmjs.com/package/es-abstract ES5.ToInteger */\n        ToInteger: function ToInteger(num) {\n            var n = +num;\n            if (isActualNaN(n)) {\n                n = 0;\n            } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {\n                n = (n > 0 || -1) * Math.floor(Math.abs(n));\n            }\n            return n;\n        },\n\n        /* replaceable with https://npmjs.com/package/es-abstract ES5.ToPrimitive */\n        ToPrimitive: function ToPrimitive(input) {\n            var val, valueOf, toStr;\n            if (isPrimitive(input)) {\n                return input;\n            }\n            valueOf = input.valueOf;\n            if (isCallable(valueOf)) {\n                val = valueOf.call(input);\n                if (isPrimitive(val)) {\n                    return val;\n                }\n            }\n            toStr = input.toString;\n            if (isCallable(toStr)) {\n                val = toStr.call(input);\n                if (isPrimitive(val)) {\n                    return val;\n                }\n            }\n            throw new TypeError();\n        },\n\n        // ES5 9.9\n        // http://es5.github.com/#x9.9\n        /* replaceable with https://npmjs.com/package/es-abstract ES5.ToObject */\n        ToObject: function (o) {\n            if (o == null) { // this matches both null and undefined\n                throw new TypeError(\"can't convert \" + o + ' to object');\n            }\n            return $Object(o);\n        },\n\n        /* replaceable with https://npmjs.com/package/es-abstract ES5.ToUint32 */\n        ToUint32: function ToUint32(x) {\n            return x >>> 0;\n        }\n    };\n\n    //\n    // Function\n    // ========\n    //\n\n    // ES-5 15.3.4.5\n    // http://es5.github.com/#x15.3.4.5\n\n    var Empty = function Empty() {};\n\n    defineProperties(FunctionPrototype, {\n        bind: function bind(that) { // .length is 1\n            // 1. Let Target be the this value.\n            var target = this;\n            // 2. If IsCallable(Target) is false, throw a TypeError exception.\n            if (!isCallable(target)) {\n                throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n            }\n            // 3. Let A be a new (possibly empty) internal list of all of the\n            //   argument values provided after thisArg (arg1, arg2 etc), in order.\n            // XXX slicedArgs will stand in for \"A\" if used\n            var args = array_slice.call(arguments, 1); // for normal call\n            // 4. Let F be a new native ECMAScript object.\n            // 11. Set the [[Prototype]] internal property of F to the standard\n            //   built-in Function prototype object as specified in 15.3.3.1.\n            // 12. Set the [[Call]] internal property of F as described in\n            //   15.3.4.5.1.\n            // 13. Set the [[Construct]] internal property of F as described in\n            //   15.3.4.5.2.\n            // 14. Set the [[HasInstance]] internal property of F as described in\n            //   15.3.4.5.3.\n            var bound;\n            var binder = function () {\n\n                if (this instanceof bound) {\n                    // 15.3.4.5.2 [[Construct]]\n                    // When the [[Construct]] internal method of a function object,\n                    // F that was created using the bind function is called with a\n                    // list of arguments ExtraArgs, the following steps are taken:\n                    // 1. Let target be the value of F's [[TargetFunction]]\n                    //   internal property.\n                    // 2. If target has no [[Construct]] internal method, a\n                    //   TypeError exception is thrown.\n                    // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n                    //   property.\n                    // 4. Let args be a new list containing the same values as the\n                    //   list boundArgs in the same order followed by the same\n                    //   values as the list ExtraArgs in the same order.\n                    // 5. Return the result of calling the [[Construct]] internal\n                    //   method of target providing args as the arguments.\n\n                    var result = apply.call(\n                        target,\n                        this,\n                        array_concat.call(args, array_slice.call(arguments))\n                    );\n                    if ($Object(result) === result) {\n                        return result;\n                    }\n                    return this;\n\n                } else {\n                    // 15.3.4.5.1 [[Call]]\n                    // When the [[Call]] internal method of a function object, F,\n                    // which was created using the bind function is called with a\n                    // this value and a list of arguments ExtraArgs, the following\n                    // steps are taken:\n                    // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n                    //   property.\n                    // 2. Let boundThis be the value of F's [[BoundThis]] internal\n                    //   property.\n                    // 3. Let target be the value of F's [[TargetFunction]] internal\n                    //   property.\n                    // 4. Let args be a new list containing the same values as the\n                    //   list boundArgs in the same order followed by the same\n                    //   values as the list ExtraArgs in the same order.\n                    // 5. Return the result of calling the [[Call]] internal method\n                    //   of target providing boundThis as the this value and\n                    //   providing args as the arguments.\n\n                    // equiv: target.call(this, ...boundArgs, ...args)\n                    return apply.call(\n                        target,\n                        that,\n                        array_concat.call(args, array_slice.call(arguments))\n                    );\n\n                }\n\n            };\n\n            // 15. If the [[Class]] internal property of Target is \"Function\", then\n            //     a. Let L be the length property of Target minus the length of A.\n            //     b. Set the length own property of F to either 0 or L, whichever is\n            //       larger.\n            // 16. Else set the length own property of F to 0.\n\n            var boundLength = max(0, target.length - args.length);\n\n            // 17. Set the attributes of the length own property of F to the values\n            //   specified in 15.3.5.1.\n            var boundArgs = [];\n            for (var i = 0; i < boundLength; i++) {\n                array_push.call(boundArgs, '$' + i);\n            }\n\n            // XXX Build a dynamic function with desired amount of arguments is the only\n            // way to set the length property of a function.\n            // In environments where Content Security Policies enabled (Chrome extensions,\n            // for ex.) all use of eval or Function costructor throws an exception.\n            // However in all of these environments Function.prototype.bind exists\n            // and so this code will never be executed.\n            bound = $Function('binder', 'return function (' + array_join.call(boundArgs, ',') + '){ return binder.apply(this, arguments); }')(binder);\n\n            if (target.prototype) {\n                Empty.prototype = target.prototype;\n                bound.prototype = new Empty();\n                // Clean up dangling references.\n                Empty.prototype = null;\n            }\n\n            // TODO\n            // 18. Set the [[Extensible]] internal property of F to true.\n\n            // TODO\n            // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n            // 20. Call the [[DefineOwnProperty]] internal method of F with\n            //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n            //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n            //   false.\n            // 21. Call the [[DefineOwnProperty]] internal method of F with\n            //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n            //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n            //   and false.\n\n            // TODO\n            // NOTE Function objects created using Function.prototype.bind do not\n            // have a prototype property or the [[Code]], [[FormalParameters]], and\n            // [[Scope]] internal properties.\n            // XXX can't delete prototype in pure-js.\n\n            // 22. Return F.\n            return bound;\n        }\n    });\n\n    // _Please note: Shortcuts are defined after `Function.prototype.bind` as we\n    // use it in defining shortcuts.\n    var owns = call.bind(ObjectPrototype.hasOwnProperty);\n    var toStr = call.bind(ObjectPrototype.toString);\n    var arraySlice = call.bind(array_slice);\n    var arraySliceApply = apply.bind(array_slice);\n    /* globals document */\n    if (typeof document === 'object' && document && document.documentElement) {\n        try {\n            arraySlice(document.documentElement.childNodes);\n        } catch (e) {\n            var origArraySlice = arraySlice;\n            var origArraySliceApply = arraySliceApply;\n            arraySlice = function arraySliceIE(arr) {\n                var r = [];\n                var i = arr.length;\n                while (i-- > 0) {\n                    r[i] = arr[i];\n                }\n                return origArraySliceApply(r, origArraySlice(arguments, 1));\n            };\n            arraySliceApply = function arraySliceApplyIE(arr, args) {\n                return origArraySliceApply(arraySlice(arr), args);\n            };\n        }\n    }\n    var strSlice = call.bind(StringPrototype.slice);\n    var strSplit = call.bind(StringPrototype.split);\n    var strIndexOf = call.bind(StringPrototype.indexOf);\n    var pushCall = call.bind(array_push);\n    var isEnum = call.bind(ObjectPrototype.propertyIsEnumerable);\n    var arraySort = call.bind(ArrayPrototype.sort);\n\n    //\n    // Array\n    // =====\n    //\n\n    var isArray = $Array.isArray || function isArray(obj) {\n        return toStr(obj) === '[object Array]';\n    };\n\n    // ES5 15.4.4.12\n    // http://es5.github.com/#x15.4.4.13\n    // Return len+argCount.\n    // [bugfix, ielt8]\n    // IE < 8 bug: [].unshift(0) === undefined but should be \"1\"\n    var hasUnshiftReturnValueBug = [].unshift(0) !== 1;\n    defineProperties(ArrayPrototype, {\n        unshift: function () {\n            array_unshift.apply(this, arguments);\n            return this.length;\n        }\n    }, hasUnshiftReturnValueBug);\n\n    // ES5 15.4.3.2\n    // http://es5.github.com/#x15.4.3.2\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\n    defineProperties($Array, { isArray: isArray });\n\n    // The IsCallable() check in the Array functions\n    // has been replaced with a strict check on the\n    // internal class of the object to trap cases where\n    // the provided function was actually a regular\n    // expression literal, which in V8 and\n    // JavaScriptCore is a typeof \"function\".  Only in\n    // V8 are regular expression literals permitted as\n    // reduce parameters, so it is desirable in the\n    // general case for the shim to match the more\n    // strict and common behavior of rejecting regular\n    // expressions.\n\n    // ES5 15.4.4.18\n    // http://es5.github.com/#x15.4.4.18\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach\n\n    // Check failure of by-index access of string characters (IE < 9)\n    // and failure of `0 in boxedString` (Rhino)\n    var boxedString = $Object('a');\n    var splitString = boxedString[0] !== 'a' || !(0 in boxedString);\n\n    var properlyBoxesContext = function properlyBoxed(method) {\n        // Check node 0.6.21 bug where third parameter is not boxed\n        var properlyBoxesNonStrict = true;\n        var properlyBoxesStrict = true;\n        var threwException = false;\n        if (method) {\n            try {\n                method.call('foo', function (_, __, context) {\n                    if (typeof context !== 'object') {\n                        properlyBoxesNonStrict = false;\n                    }\n                });\n\n                method.call([1], function () {\n                    'use strict';\n\n                    properlyBoxesStrict = typeof this === 'string';\n                }, 'x');\n            } catch (e) {\n                threwException = true;\n            }\n        }\n        return !!method && !threwException && properlyBoxesNonStrict && properlyBoxesStrict;\n    };\n\n    defineProperties(ArrayPrototype, {\n        forEach: function forEach(callbackfn/*, thisArg*/) {\n            var object = ES.ToObject(this);\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\n            var i = -1;\n            var length = ES.ToUint32(self.length);\n            var T;\n            if (arguments.length > 1) {\n                T = arguments[1];\n            }\n\n            // If no callback function or if callback is not a callable function\n            if (!isCallable(callbackfn)) {\n                throw new TypeError('Array.prototype.forEach callback must be a function');\n            }\n\n            while (++i < length) {\n                if (i in self) {\n                    // Invoke the callback function with call, passing arguments:\n                    // context, property value, property key, thisArg object\n                    if (typeof T === 'undefined') {\n                        callbackfn(self[i], i, object);\n                    } else {\n                        callbackfn.call(T, self[i], i, object);\n                    }\n                }\n            }\n        }\n    }, !properlyBoxesContext(ArrayPrototype.forEach));\n\n    // ES5 15.4.4.19\n    // http://es5.github.com/#x15.4.4.19\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\n    defineProperties(ArrayPrototype, {\n        map: function map(callbackfn/*, thisArg*/) {\n            var object = ES.ToObject(this);\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\n            var length = ES.ToUint32(self.length);\n            var result = $Array(length);\n            var T;\n            if (arguments.length > 1) {\n                T = arguments[1];\n            }\n\n            // If no callback function or if callback is not a callable function\n            if (!isCallable(callbackfn)) {\n                throw new TypeError('Array.prototype.map callback must be a function');\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (i in self) {\n                    if (typeof T === 'undefined') {\n                        result[i] = callbackfn(self[i], i, object);\n                    } else {\n                        result[i] = callbackfn.call(T, self[i], i, object);\n                    }\n                }\n            }\n            return result;\n        }\n    }, !properlyBoxesContext(ArrayPrototype.map));\n\n    // ES5 15.4.4.20\n    // http://es5.github.com/#x15.4.4.20\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\n    defineProperties(ArrayPrototype, {\n        filter: function filter(callbackfn/*, thisArg*/) {\n            var object = ES.ToObject(this);\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\n            var length = ES.ToUint32(self.length);\n            var result = [];\n            var value;\n            var T;\n            if (arguments.length > 1) {\n                T = arguments[1];\n            }\n\n            // If no callback function or if callback is not a callable function\n            if (!isCallable(callbackfn)) {\n                throw new TypeError('Array.prototype.filter callback must be a function');\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (i in self) {\n                    value = self[i];\n                    if (typeof T === 'undefined' ? callbackfn(value, i, object) : callbackfn.call(T, value, i, object)) {\n                        pushCall(result, value);\n                    }\n                }\n            }\n            return result;\n        }\n    }, !properlyBoxesContext(ArrayPrototype.filter));\n\n    // ES5 15.4.4.16\n    // http://es5.github.com/#x15.4.4.16\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every\n    defineProperties(ArrayPrototype, {\n        every: function every(callbackfn/*, thisArg*/) {\n            var object = ES.ToObject(this);\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\n            var length = ES.ToUint32(self.length);\n            var T;\n            if (arguments.length > 1) {\n                T = arguments[1];\n            }\n\n            // If no callback function or if callback is not a callable function\n            if (!isCallable(callbackfn)) {\n                throw new TypeError('Array.prototype.every callback must be a function');\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (i in self && !(typeof T === 'undefined' ? callbackfn(self[i], i, object) : callbackfn.call(T, self[i], i, object))) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }, !properlyBoxesContext(ArrayPrototype.every));\n\n    // ES5 15.4.4.17\n    // http://es5.github.com/#x15.4.4.17\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some\n    defineProperties(ArrayPrototype, {\n        some: function some(callbackfn/*, thisArg */) {\n            var object = ES.ToObject(this);\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\n            var length = ES.ToUint32(self.length);\n            var T;\n            if (arguments.length > 1) {\n                T = arguments[1];\n            }\n\n            // If no callback function or if callback is not a callable function\n            if (!isCallable(callbackfn)) {\n                throw new TypeError('Array.prototype.some callback must be a function');\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (i in self && (typeof T === 'undefined' ? callbackfn(self[i], i, object) : callbackfn.call(T, self[i], i, object))) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    }, !properlyBoxesContext(ArrayPrototype.some));\n\n    // ES5 15.4.4.21\n    // http://es5.github.com/#x15.4.4.21\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce\n    var reduceCoercesToObject = false;\n    if (ArrayPrototype.reduce) {\n        reduceCoercesToObject = typeof ArrayPrototype.reduce.call('es5', function (_, __, ___, list) {\n            return list;\n        }) === 'object';\n    }\n    defineProperties(ArrayPrototype, {\n        reduce: function reduce(callbackfn/*, initialValue*/) {\n            var object = ES.ToObject(this);\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\n            var length = ES.ToUint32(self.length);\n\n            // If no callback function or if callback is not a callable function\n            if (!isCallable(callbackfn)) {\n                throw new TypeError('Array.prototype.reduce callback must be a function');\n            }\n\n            // no value to return if no initial value and an empty array\n            if (length === 0 && arguments.length === 1) {\n                throw new TypeError('reduce of empty array with no initial value');\n            }\n\n            var i = 0;\n            var result;\n            if (arguments.length >= 2) {\n                result = arguments[1];\n            } else {\n                do {\n                    if (i in self) {\n                        result = self[i++];\n                        break;\n                    }\n\n                    // if array contains no values, no initial value to return\n                    if (++i >= length) {\n                        throw new TypeError('reduce of empty array with no initial value');\n                    }\n                } while (true);\n            }\n\n            for (; i < length; i++) {\n                if (i in self) {\n                    result = callbackfn(result, self[i], i, object);\n                }\n            }\n\n            return result;\n        }\n    }, !reduceCoercesToObject);\n\n    // ES5 15.4.4.22\n    // http://es5.github.com/#x15.4.4.22\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight\n    var reduceRightCoercesToObject = false;\n    if (ArrayPrototype.reduceRight) {\n        reduceRightCoercesToObject = typeof ArrayPrototype.reduceRight.call('es5', function (_, __, ___, list) {\n            return list;\n        }) === 'object';\n    }\n    defineProperties(ArrayPrototype, {\n        reduceRight: function reduceRight(callbackfn/*, initial*/) {\n            var object = ES.ToObject(this);\n            var self = splitString && isString(this) ? strSplit(this, '') : object;\n            var length = ES.ToUint32(self.length);\n\n            // If no callback function or if callback is not a callable function\n            if (!isCallable(callbackfn)) {\n                throw new TypeError('Array.prototype.reduceRight callback must be a function');\n            }\n\n            // no value to return if no initial value, empty array\n            if (length === 0 && arguments.length === 1) {\n                throw new TypeError('reduceRight of empty array with no initial value');\n            }\n\n            var result;\n            var i = length - 1;\n            if (arguments.length >= 2) {\n                result = arguments[1];\n            } else {\n                do {\n                    if (i in self) {\n                        result = self[i--];\n                        break;\n                    }\n\n                    // if array contains no values, no initial value to return\n                    if (--i < 0) {\n                        throw new TypeError('reduceRight of empty array with no initial value');\n                    }\n                } while (true);\n            }\n\n            if (i < 0) {\n                return result;\n            }\n\n            do {\n                if (i in self) {\n                    result = callbackfn(result, self[i], i, object);\n                }\n            } while (i--);\n\n            return result;\n        }\n    }, !reduceRightCoercesToObject);\n\n    // ES5 15.4.4.14\n    // http://es5.github.com/#x15.4.4.14\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\n    var hasFirefox2IndexOfBug = ArrayPrototype.indexOf && [0, 1].indexOf(1, 2) !== -1;\n    defineProperties(ArrayPrototype, {\n        indexOf: function indexOf(searchElement/*, fromIndex */) {\n            var self = splitString && isString(this) ? strSplit(this, '') : ES.ToObject(this);\n            var length = ES.ToUint32(self.length);\n\n            if (length === 0) {\n                return -1;\n            }\n\n            var i = 0;\n            if (arguments.length > 1) {\n                i = ES.ToInteger(arguments[1]);\n            }\n\n            // handle negative indices\n            i = i >= 0 ? i : max(0, length + i);\n            for (; i < length; i++) {\n                if (i in self && self[i] === searchElement) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }, hasFirefox2IndexOfBug);\n\n    // ES5 15.4.4.15\n    // http://es5.github.com/#x15.4.4.15\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf\n    var hasFirefox2LastIndexOfBug = ArrayPrototype.lastIndexOf && [0, 1].lastIndexOf(0, -3) !== -1;\n    defineProperties(ArrayPrototype, {\n        lastIndexOf: function lastIndexOf(searchElement/*, fromIndex */) {\n            var self = splitString && isString(this) ? strSplit(this, '') : ES.ToObject(this);\n            var length = ES.ToUint32(self.length);\n\n            if (length === 0) {\n                return -1;\n            }\n            var i = length - 1;\n            if (arguments.length > 1) {\n                i = min(i, ES.ToInteger(arguments[1]));\n            }\n            // handle negative indices\n            i = i >= 0 ? i : length - Math.abs(i);\n            for (; i >= 0; i--) {\n                if (i in self && searchElement === self[i]) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n    }, hasFirefox2LastIndexOfBug);\n\n    // ES5 15.4.4.12\n    // http://es5.github.com/#x15.4.4.12\n    var spliceNoopReturnsEmptyArray = (function () {\n        var a = [1, 2];\n        var result = a.splice();\n        return a.length === 2 && isArray(result) && result.length === 0;\n    }());\n    defineProperties(ArrayPrototype, {\n        // Safari 5.0 bug where .splice() returns undefined\n        splice: function splice(start, deleteCount) {\n            if (arguments.length === 0) {\n                return [];\n            } else {\n                return array_splice.apply(this, arguments);\n            }\n        }\n    }, !spliceNoopReturnsEmptyArray);\n\n    var spliceWorksWithEmptyObject = (function () {\n        var obj = {};\n        ArrayPrototype.splice.call(obj, 0, 0, 1);\n        return obj.length === 1;\n    }());\n    defineProperties(ArrayPrototype, {\n        splice: function splice(start, deleteCount) {\n            if (arguments.length === 0) {\n                return [];\n            }\n            var args = arguments;\n            this.length = max(ES.ToInteger(this.length), 0);\n            if (arguments.length > 0 && typeof deleteCount !== 'number') {\n                args = arraySlice(arguments);\n                if (args.length < 2) {\n                    pushCall(args, this.length - start);\n                } else {\n                    args[1] = ES.ToInteger(deleteCount);\n                }\n            }\n            return array_splice.apply(this, args);\n        }\n    }, !spliceWorksWithEmptyObject);\n    var spliceWorksWithLargeSparseArrays = (function () {\n        // Per https://github.com/es-shims/es5-shim/issues/295\n        // Safari 7/8 breaks with sparse arrays of size 1e5 or greater\n        var arr = new $Array(1e5);\n        // note: the index MUST be 8 or larger or the test will false pass\n        arr[8] = 'x';\n        arr.splice(1, 1);\n        // note: this test must be defined *after* the indexOf shim\n        // per https://github.com/es-shims/es5-shim/issues/313\n        return arr.indexOf('x') === 7;\n    }());\n    var spliceWorksWithSmallSparseArrays = (function () {\n        // Per https://github.com/es-shims/es5-shim/issues/295\n        // Opera 12.15 breaks on this, no idea why.\n        var n = 256;\n        var arr = [];\n        arr[n] = 'a';\n        arr.splice(n + 1, 0, 'b');\n        return arr[n] === 'a';\n    }());\n    defineProperties(ArrayPrototype, {\n        splice: function splice(start, deleteCount) {\n            var O = ES.ToObject(this);\n            var A = [];\n            var len = ES.ToUint32(O.length);\n            var relativeStart = ES.ToInteger(start);\n            var actualStart = relativeStart < 0 ? max((len + relativeStart), 0) : min(relativeStart, len);\n            var actualDeleteCount = min(max(ES.ToInteger(deleteCount), 0), len - actualStart);\n\n            var k = 0;\n            var from;\n            while (k < actualDeleteCount) {\n                from = $String(actualStart + k);\n                if (owns(O, from)) {\n                    A[k] = O[from];\n                }\n                k += 1;\n            }\n\n            var items = arraySlice(arguments, 2);\n            var itemCount = items.length;\n            var to;\n            if (itemCount < actualDeleteCount) {\n                k = actualStart;\n                var maxK = len - actualDeleteCount;\n                while (k < maxK) {\n                    from = $String(k + actualDeleteCount);\n                    to = $String(k + itemCount);\n                    if (owns(O, from)) {\n                        O[to] = O[from];\n                    } else {\n                        delete O[to];\n                    }\n                    k += 1;\n                }\n                k = len;\n                var minK = len - actualDeleteCount + itemCount;\n                while (k > minK) {\n                    delete O[k - 1];\n                    k -= 1;\n                }\n            } else if (itemCount > actualDeleteCount) {\n                k = len - actualDeleteCount;\n                while (k > actualStart) {\n                    from = $String(k + actualDeleteCount - 1);\n                    to = $String(k + itemCount - 1);\n                    if (owns(O, from)) {\n                        O[to] = O[from];\n                    } else {\n                        delete O[to];\n                    }\n                    k -= 1;\n                }\n            }\n            k = actualStart;\n            for (var i = 0; i < items.length; ++i) {\n                O[k] = items[i];\n                k += 1;\n            }\n            O.length = len - actualDeleteCount + itemCount;\n\n            return A;\n        }\n    }, !spliceWorksWithLargeSparseArrays || !spliceWorksWithSmallSparseArrays);\n\n    var originalJoin = ArrayPrototype.join;\n    var hasStringJoinBug;\n    try {\n        hasStringJoinBug = Array.prototype.join.call('123', ',') !== '1,2,3';\n    } catch (e) {\n        hasStringJoinBug = true;\n    }\n    if (hasStringJoinBug) {\n        defineProperties(ArrayPrototype, {\n            join: function join(separator) {\n                var sep = typeof separator === 'undefined' ? ',' : separator;\n                return originalJoin.call(isString(this) ? strSplit(this, '') : this, sep);\n            }\n        }, hasStringJoinBug);\n    }\n\n    var hasJoinUndefinedBug = [1, 2].join(undefined) !== '1,2';\n    if (hasJoinUndefinedBug) {\n        defineProperties(ArrayPrototype, {\n            join: function join(separator) {\n                var sep = typeof separator === 'undefined' ? ',' : separator;\n                return originalJoin.call(this, sep);\n            }\n        }, hasJoinUndefinedBug);\n    }\n\n    var pushShim = function push(item) {\n        var O = ES.ToObject(this);\n        var n = ES.ToUint32(O.length);\n        var i = 0;\n        while (i < arguments.length) {\n            O[n + i] = arguments[i];\n            i += 1;\n        }\n        O.length = n + i;\n        return n + i;\n    };\n\n    var pushIsNotGeneric = (function () {\n        var obj = {};\n        var result = Array.prototype.push.call(obj, undefined);\n        return result !== 1 || obj.length !== 1 || typeof obj[0] !== 'undefined' || !owns(obj, 0);\n    }());\n    defineProperties(ArrayPrototype, {\n        push: function push(item) {\n            if (isArray(this)) {\n                return array_push.apply(this, arguments);\n            }\n            return pushShim.apply(this, arguments);\n        }\n    }, pushIsNotGeneric);\n\n    // This fixes a very weird bug in Opera 10.6 when pushing `undefined\n    var pushUndefinedIsWeird = (function () {\n        var arr = [];\n        var result = arr.push(undefined);\n        return result !== 1 || arr.length !== 1 || typeof arr[0] !== 'undefined' || !owns(arr, 0);\n    }());\n    defineProperties(ArrayPrototype, { push: pushShim }, pushUndefinedIsWeird);\n\n    // ES5 15.2.3.14\n    // http://es5.github.io/#x15.4.4.10\n    // Fix boxed string bug\n    defineProperties(ArrayPrototype, {\n        slice: function (start, end) {\n            var arr = isString(this) ? strSplit(this, '') : this;\n            return arraySliceApply(arr, arguments);\n        }\n    }, splitString);\n\n    var sortIgnoresNonFunctions = (function () {\n        try {\n            [1, 2].sort(null);\n        } catch (e) {\n            try {\n                [1, 2].sort({});\n            } catch (e2) {\n                return false;\n            }\n        }\n        return true;\n    }());\n    var sortThrowsOnRegex = (function () {\n        // this is a problem in Firefox 4, in which `typeof /a/ === 'function'`\n        try {\n            [1, 2].sort(/a/);\n            return false;\n        } catch (e) {}\n        return true;\n    }());\n    var sortIgnoresUndefined = (function () {\n        // applies in IE 8, for one.\n        try {\n            [1, 2].sort(undefined);\n            return true;\n        } catch (e) {}\n        return false;\n    }());\n    defineProperties(ArrayPrototype, {\n        sort: function sort(compareFn) {\n            if (typeof compareFn === 'undefined') {\n                return arraySort(this);\n            }\n            if (!isCallable(compareFn)) {\n                throw new TypeError('Array.prototype.sort callback must be a function');\n            }\n            return arraySort(this, compareFn);\n        }\n    }, sortIgnoresNonFunctions || !sortIgnoresUndefined || !sortThrowsOnRegex);\n\n    //\n    // Object\n    // ======\n    //\n\n    // ES5 15.2.3.14\n    // http://es5.github.com/#x15.2.3.14\n\n    // http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n    var hasDontEnumBug = !isEnum({ 'toString': null }, 'toString'); // jscs:ignore disallowQuotedKeysInObjects\n    var hasProtoEnumBug = isEnum(function () {}, 'prototype');\n    var hasStringEnumBug = !owns('x', '0');\n    var equalsConstructorPrototype = function (o) {\n        var ctor = o.constructor;\n        return ctor && ctor.prototype === o;\n    };\n    var excludedKeys = {\n        $applicationCache: true,\n        $console: true,\n        $external: true,\n        $frame: true,\n        $frameElement: true,\n        $frames: true,\n        $innerHeight: true,\n        $innerWidth: true,\n        $outerHeight: true,\n        $outerWidth: true,\n        $pageXOffset: true,\n        $pageYOffset: true,\n        $parent: true,\n        $scrollLeft: true,\n        $scrollTop: true,\n        $scrollX: true,\n        $scrollY: true,\n        $self: true,\n        $webkitIndexedDB: true,\n        $webkitStorageInfo: true,\n        $window: true,\n\n        $width: true,\n        $height: true,\n        $top: true,\n        $localStorage: true\n    };\n    var hasAutomationEqualityBug = (function () {\n        /* globals window */\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        for (var k in window) {\n            try {\n                if (!excludedKeys['$' + k] && owns(window, k) && window[k] !== null && typeof window[k] === 'object') {\n                    equalsConstructorPrototype(window[k]);\n                }\n            } catch (e) {\n                return true;\n            }\n        }\n        return false;\n    }());\n    var equalsConstructorPrototypeIfNotBuggy = function (object) {\n        if (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n            return equalsConstructorPrototype(object);\n        }\n        try {\n            return equalsConstructorPrototype(object);\n        } catch (e) {\n            return false;\n        }\n    };\n    var dontEnums = [\n        'toString',\n        'toLocaleString',\n        'valueOf',\n        'hasOwnProperty',\n        'isPrototypeOf',\n        'propertyIsEnumerable',\n        'constructor'\n    ];\n    var dontEnumsLength = dontEnums.length;\n\n    // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\n    // can be replaced with require('is-arguments') if we ever use a build process instead\n    var isStandardArguments = function isArguments(value) {\n        return toStr(value) === '[object Arguments]';\n    };\n    var isLegacyArguments = function isArguments(value) {\n        return value !== null\n            && typeof value === 'object'\n            && typeof value.length === 'number'\n            && value.length >= 0\n            && !isArray(value)\n            && isCallable(value.callee);\n    };\n    var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\n\n    defineProperties($Object, {\n        keys: function keys(object) {\n            var isFn = isCallable(object);\n            var isArgs = isArguments(object);\n            var isObject = object !== null && typeof object === 'object';\n            var isStr = isObject && isString(object);\n\n            if (!isObject && !isFn && !isArgs) {\n                throw new TypeError('Object.keys called on a non-object');\n            }\n\n            var theKeys = [];\n            var skipProto = hasProtoEnumBug && isFn;\n            if ((isStr && hasStringEnumBug) || isArgs) {\n                for (var i = 0; i < object.length; ++i) {\n                    pushCall(theKeys, $String(i));\n                }\n            }\n\n            if (!isArgs) {\n                for (var name in object) {\n                    if (!(skipProto && name === 'prototype') && owns(object, name)) {\n                        pushCall(theKeys, $String(name));\n                    }\n                }\n            }\n\n            if (hasDontEnumBug) {\n                var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n                for (var j = 0; j < dontEnumsLength; j++) {\n                    var dontEnum = dontEnums[j];\n                    if (!(skipConstructor && dontEnum === 'constructor') && owns(object, dontEnum)) {\n                        pushCall(theKeys, dontEnum);\n                    }\n                }\n            }\n            return theKeys;\n        }\n    });\n\n    var keysWorksWithArguments = $Object.keys && (function () {\n        // Safari 5.0 bug\n        return $Object.keys(arguments).length === 2;\n    }(1, 2));\n    var keysHasArgumentsLengthBug = $Object.keys && (function () {\n        var argKeys = $Object.keys(arguments);\n        return arguments.length !== 1 || argKeys.length !== 1 || argKeys[0] !== 1;\n    }(1));\n    var originalKeys = $Object.keys;\n    defineProperties($Object, {\n        keys: function keys(object) {\n            if (isArguments(object)) {\n                return originalKeys(arraySlice(object));\n            } else {\n                return originalKeys(object);\n            }\n        }\n    }, !keysWorksWithArguments || keysHasArgumentsLengthBug);\n\n    //\n    // Date\n    // ====\n    //\n\n    var hasNegativeMonthYearBug = new Date(-3509827329600292).getUTCMonth() !== 0;\n    var aNegativeTestDate = new Date(-1509842289600292);\n    var aPositiveTestDate = new Date(1449662400000);\n    var hasToUTCStringFormatBug = aNegativeTestDate.toUTCString() !== 'Mon, 01 Jan -45875 11:59:59 GMT';\n    var hasToDateStringFormatBug;\n    var hasToStringFormatBug;\n    var timeZoneOffset = aNegativeTestDate.getTimezoneOffset();\n    if (timeZoneOffset < -720) {\n        hasToDateStringFormatBug = aNegativeTestDate.toDateString() !== 'Tue Jan 02 -45875';\n        hasToStringFormatBug = !(/^Thu Dec 10 2015 \\d\\d:\\d\\d:\\d\\d GMT[-+]\\d\\d\\d\\d(?: |$)/).test(String(aPositiveTestDate));\n    } else {\n        hasToDateStringFormatBug = aNegativeTestDate.toDateString() !== 'Mon Jan 01 -45875';\n        hasToStringFormatBug = !(/^Wed Dec 09 2015 \\d\\d:\\d\\d:\\d\\d GMT[-+]\\d\\d\\d\\d(?: |$)/).test(String(aPositiveTestDate));\n    }\n\n    var originalGetFullYear = call.bind(Date.prototype.getFullYear);\n    var originalGetMonth = call.bind(Date.prototype.getMonth);\n    var originalGetDate = call.bind(Date.prototype.getDate);\n    var originalGetUTCFullYear = call.bind(Date.prototype.getUTCFullYear);\n    var originalGetUTCMonth = call.bind(Date.prototype.getUTCMonth);\n    var originalGetUTCDate = call.bind(Date.prototype.getUTCDate);\n    var originalGetUTCDay = call.bind(Date.prototype.getUTCDay);\n    var originalGetUTCHours = call.bind(Date.prototype.getUTCHours);\n    var originalGetUTCMinutes = call.bind(Date.prototype.getUTCMinutes);\n    var originalGetUTCSeconds = call.bind(Date.prototype.getUTCSeconds);\n    var originalGetUTCMilliseconds = call.bind(Date.prototype.getUTCMilliseconds);\n    var dayName = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    var monthName = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var daysInMonth = function daysInMonth(month, year) {\n        return originalGetDate(new Date(year, month, 0));\n    };\n\n    defineProperties(Date.prototype, {\n        getFullYear: function getFullYear() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var year = originalGetFullYear(this);\n            if (year < 0 && originalGetMonth(this) > 11) {\n                return year + 1;\n            }\n            return year;\n        },\n        getMonth: function getMonth() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var year = originalGetFullYear(this);\n            var month = originalGetMonth(this);\n            if (year < 0 && month > 11) {\n                return 0;\n            }\n            return month;\n        },\n        getDate: function getDate() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var year = originalGetFullYear(this);\n            var month = originalGetMonth(this);\n            var date = originalGetDate(this);\n            if (year < 0 && month > 11) {\n                if (month === 12) {\n                    return date;\n                }\n                var days = daysInMonth(0, year + 1);\n                return (days - date) + 1;\n            }\n            return date;\n        },\n        getUTCFullYear: function getUTCFullYear() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var year = originalGetUTCFullYear(this);\n            if (year < 0 && originalGetUTCMonth(this) > 11) {\n                return year + 1;\n            }\n            return year;\n        },\n        getUTCMonth: function getUTCMonth() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var year = originalGetUTCFullYear(this);\n            var month = originalGetUTCMonth(this);\n            if (year < 0 && month > 11) {\n                return 0;\n            }\n            return month;\n        },\n        getUTCDate: function getUTCDate() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var year = originalGetUTCFullYear(this);\n            var month = originalGetUTCMonth(this);\n            var date = originalGetUTCDate(this);\n            if (year < 0 && month > 11) {\n                if (month === 12) {\n                    return date;\n                }\n                var days = daysInMonth(0, year + 1);\n                return (days - date) + 1;\n            }\n            return date;\n        }\n    }, hasNegativeMonthYearBug);\n\n    defineProperties(Date.prototype, {\n        toUTCString: function toUTCString() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var day = originalGetUTCDay(this);\n            var date = originalGetUTCDate(this);\n            var month = originalGetUTCMonth(this);\n            var year = originalGetUTCFullYear(this);\n            var hour = originalGetUTCHours(this);\n            var minute = originalGetUTCMinutes(this);\n            var second = originalGetUTCSeconds(this);\n            return dayName[day] + ', '\n                + (date < 10 ? '0' + date : date) + ' '\n                + monthName[month] + ' '\n                + year + ' '\n                + (hour < 10 ? '0' + hour : hour) + ':'\n                + (minute < 10 ? '0' + minute : minute) + ':'\n                + (second < 10 ? '0' + second : second) + ' GMT';\n        }\n    }, hasNegativeMonthYearBug || hasToUTCStringFormatBug);\n\n    // Opera 12 has `,`\n    defineProperties(Date.prototype, {\n        toDateString: function toDateString() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var day = this.getDay();\n            var date = this.getDate();\n            var month = this.getMonth();\n            var year = this.getFullYear();\n            return dayName[day] + ' '\n                + monthName[month] + ' '\n                + (date < 10 ? '0' + date : date) + ' '\n                + year;\n        }\n    }, hasNegativeMonthYearBug || hasToDateStringFormatBug);\n\n    // can't use defineProperties here because of toString enumeration issue in IE <= 8\n    if (hasNegativeMonthYearBug || hasToStringFormatBug) {\n        Date.prototype.toString = function toString() {\n            if (!this || !(this instanceof Date)) {\n                throw new TypeError('this is not a Date object.');\n            }\n            var day = this.getDay();\n            var date = this.getDate();\n            var month = this.getMonth();\n            var year = this.getFullYear();\n            var hour = this.getHours();\n            var minute = this.getMinutes();\n            var second = this.getSeconds();\n            var timezoneOffset = this.getTimezoneOffset();\n            var hoursOffset = Math.floor(Math.abs(timezoneOffset) / 60);\n            var minutesOffset = Math.floor(Math.abs(timezoneOffset) % 60);\n            return dayName[day] + ' '\n                + monthName[month] + ' '\n                + (date < 10 ? '0' + date : date) + ' '\n                + year + ' '\n                + (hour < 10 ? '0' + hour : hour) + ':'\n                + (minute < 10 ? '0' + minute : minute) + ':'\n                + (second < 10 ? '0' + second : second) + ' GMT'\n                + (timezoneOffset > 0 ? '-' : '+')\n                + (hoursOffset < 10 ? '0' + hoursOffset : hoursOffset)\n                + (minutesOffset < 10 ? '0' + minutesOffset : minutesOffset);\n        };\n        if (supportsDescriptors) {\n            $Object.defineProperty(Date.prototype, 'toString', {\n                configurable: true,\n                enumerable: false,\n                writable: true\n            });\n        }\n    }\n\n    // ES5 15.9.5.43\n    // http://es5.github.com/#x15.9.5.43\n    // This function returns a String value represent the instance in time\n    // represented by this Date object. The format of the String is the Date Time\n    // string format defined in 15.9.1.15. All fields are present in the String.\n    // The time zone is always UTC, denoted by the suffix Z. If the time value of\n    // this object is not a finite Number a RangeError exception is thrown.\n    var negativeDate = -62198755200000;\n    var negativeYearString = '-000001';\n    var hasNegativeDateBug = Date.prototype.toISOString && new Date(negativeDate).toISOString().indexOf(negativeYearString) === -1; // eslint-disable-line max-len\n    var hasSafari51DateBug = Date.prototype.toISOString && new Date(-1).toISOString() !== '1969-12-31T23:59:59.999Z';\n\n    var getTime = call.bind(Date.prototype.getTime);\n\n    defineProperties(Date.prototype, {\n        toISOString: function toISOString() {\n            if (!isFinite(this) || !isFinite(getTime(this))) {\n                // Adope Photoshop requires the second check.\n                throw new RangeError('Date.prototype.toISOString called on non-finite value.');\n            }\n\n            var year = originalGetUTCFullYear(this);\n\n            var month = originalGetUTCMonth(this);\n            // see https://github.com/es-shims/es5-shim/issues/111\n            year += Math.floor(month / 12);\n            month = ((month % 12) + 12) % 12;\n\n            // the date time string format is specified in 15.9.1.15.\n            var result = [\n                month + 1,\n                originalGetUTCDate(this),\n                originalGetUTCHours(this),\n                originalGetUTCMinutes(this),\n                originalGetUTCSeconds(this)\n            ];\n            year = (\n                (year < 0 ? '-' : (year > 9999 ? '+' : ''))\n                + strSlice('00000' + Math.abs(year), (0 <= year && year <= 9999) ? -4 : -6)\n            );\n\n            for (var i = 0; i < result.length; ++i) {\n                // pad months, days, hours, minutes, and seconds to have two digits.\n                result[i] = strSlice('00' + result[i], -2);\n            }\n            // pad milliseconds to have three digits.\n            return (\n                year + '-' + arraySlice(result, 0, 2).join('-')\n                + 'T' + arraySlice(result, 2).join(':') + '.'\n                + strSlice('000' + originalGetUTCMilliseconds(this), -3) + 'Z'\n            );\n        }\n    }, hasNegativeDateBug || hasSafari51DateBug);\n\n    // ES5 15.9.5.44\n    // http://es5.github.com/#x15.9.5.44\n    // This function provides a String representation of a Date object for use by\n    // JSON.stringify (15.12.3).\n    var dateToJSONIsSupported = (function () {\n        try {\n            return Date.prototype.toJSON\n                && new Date(NaN).toJSON() === null\n                && new Date(negativeDate).toJSON().indexOf(negativeYearString) !== -1\n                && Date.prototype.toJSON.call({ // generic\n                    toISOString: function () { return true; }\n                });\n        } catch (e) {\n            return false;\n        }\n    }());\n    if (!dateToJSONIsSupported) {\n        Date.prototype.toJSON = function toJSON(key) {\n            // When the toJSON method is called with argument key, the following\n            // steps are taken:\n\n            // 1.  Let O be the result of calling ToObject, giving it the this\n            // value as its argument.\n            // 2. Let tv be ES.ToPrimitive(O, hint Number).\n            var O = $Object(this);\n            var tv = ES.ToPrimitive(O);\n            // 3. If tv is a Number and is not finite, return null.\n            if (typeof tv === 'number' && !isFinite(tv)) {\n                return null;\n            }\n            // 4. Let toISO be the result of calling the [[Get]] internal method of\n            // O with argument \"toISOString\".\n            var toISO = O.toISOString;\n            // 5. If IsCallable(toISO) is false, throw a TypeError exception.\n            if (!isCallable(toISO)) {\n                throw new TypeError('toISOString property is not callable');\n            }\n            // 6. Return the result of calling the [[Call]] internal method of\n            //  toISO with O as the this value and an empty argument list.\n            return toISO.call(O);\n\n            // NOTE 1 The argument is ignored.\n\n            // NOTE 2 The toJSON function is intentionally generic; it does not\n            // require that its this value be a Date object. Therefore, it can be\n            // transferred to other kinds of objects for use as a method. However,\n            // it does require that any such object have a toISOString method. An\n            // object is free to use the argument key to filter its\n            // stringification.\n        };\n    }\n\n    // ES5 15.9.4.2\n    // http://es5.github.com/#x15.9.4.2\n    // based on work shared by Daniel Friesen (dantman)\n    // http://gist.github.com/303249\n    var supportsExtendedYears = Date.parse('+033658-09-27T01:46:40.000Z') === 1e15;\n    var acceptsInvalidDates = !isNaN(Date.parse('2012-04-04T24:00:00.500Z')) || !isNaN(Date.parse('2012-11-31T23:59:59.000Z')) || !isNaN(Date.parse('2012-12-31T23:59:60.000Z'));\n    var doesNotParseY2KNewYear = isNaN(Date.parse('2000-01-01T00:00:00.000Z'));\n    if (doesNotParseY2KNewYear || acceptsInvalidDates || !supportsExtendedYears) {\n        // XXX global assignment won't work in embeddings that use\n        // an alternate object for the context.\n        /* global Date: true */\n        var maxSafeUnsigned32Bit = Math.pow(2, 31) - 1;\n        var hasSafariSignedIntBug = isActualNaN(new Date(1970, 0, 1, 0, 0, 0, maxSafeUnsigned32Bit + 1).getTime());\n        // eslint-disable-next-line no-implicit-globals, no-global-assign\n        Date = (function (NativeDate) {\n            // Date.length === 7\n            var DateShim = function Date(Y, M, D, h, m, s, ms) {\n                var length = arguments.length;\n                var date;\n                if (this instanceof NativeDate) {\n                    var seconds = s;\n                    var millis = ms;\n                    if (hasSafariSignedIntBug && length >= 7 && ms > maxSafeUnsigned32Bit) {\n                        // work around a Safari 8/9 bug where it treats the seconds as signed\n                        var msToShift = Math.floor(ms / maxSafeUnsigned32Bit) * maxSafeUnsigned32Bit;\n                        var sToShift = Math.floor(msToShift / 1e3);\n                        seconds += sToShift;\n                        millis -= sToShift * 1e3;\n                    }\n                    date = length === 1 && $String(Y) === Y // isString(Y)\n                        // We explicitly pass it through parse:\n                        ? new NativeDate(DateShim.parse(Y))\n                        // We have to manually make calls depending on argument\n                        // length here\n                        : length >= 7 ? new NativeDate(Y, M, D, h, m, seconds, millis)\n                            : length >= 6 ? new NativeDate(Y, M, D, h, m, seconds)\n                                : length >= 5 ? new NativeDate(Y, M, D, h, m)\n                                    : length >= 4 ? new NativeDate(Y, M, D, h)\n                                        : length >= 3 ? new NativeDate(Y, M, D)\n                                            : length >= 2 ? new NativeDate(Y, M)\n                                                : length >= 1 ? new NativeDate(Y instanceof NativeDate ? +Y : Y)\n                                                    : new NativeDate();\n                } else {\n                    date = NativeDate.apply(this, arguments);\n                }\n                if (!isPrimitive(date)) {\n                    // Prevent mixups with unfixed Date object\n                    defineProperties(date, { constructor: DateShim }, true);\n                }\n                return date;\n            };\n\n            // 15.9.1.15 Date Time String Format.\n            var isoDateExpression = new RegExp('^'\n                + '(\\\\d{4}|[+-]\\\\d{6})' // four-digit year capture or sign + 6-digit extended year\n                + '(?:-(\\\\d{2})' // optional month capture\n                + '(?:-(\\\\d{2})' // optional day capture\n                + '(?:' // capture hours:minutes:seconds.milliseconds\n                    + 'T(\\\\d{2})' // hours capture\n                    + ':(\\\\d{2})' // minutes capture\n                    + '(?:' // optional :seconds.milliseconds\n                        + ':(\\\\d{2})' // seconds capture\n                        + '(?:(\\\\.\\\\d{1,}))?' // milliseconds capture\n                    + ')?'\n                + '(' // capture UTC offset component\n                    + 'Z|' // UTC capture\n                    + '(?:' // offset specifier +/-hours:minutes\n                        + '([-+])' // sign capture\n                        + '(\\\\d{2})' // hours offset capture\n                        + ':(\\\\d{2})' // minutes offset capture\n                    + ')'\n                + ')?)?)?)?'\n            + '$');\n\n            var months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n\n            var dayFromMonth = function dayFromMonth(year, month) {\n                var t = month > 1 ? 1 : 0;\n                return (\n                    months[month]\n                    + Math.floor((year - 1969 + t) / 4)\n                    - Math.floor((year - 1901 + t) / 100)\n                    + Math.floor((year - 1601 + t) / 400)\n                    + (365 * (year - 1970))\n                );\n            };\n\n            var toUTC = function toUTC(t) {\n                var s = 0;\n                var ms = t;\n                if (hasSafariSignedIntBug && ms > maxSafeUnsigned32Bit) {\n                    // work around a Safari 8/9 bug where it treats the seconds as signed\n                    var msToShift = Math.floor(ms / maxSafeUnsigned32Bit) * maxSafeUnsigned32Bit;\n                    var sToShift = Math.floor(msToShift / 1e3);\n                    s += sToShift;\n                    ms -= sToShift * 1e3;\n                }\n                return $Number(new NativeDate(1970, 0, 1, 0, 0, s, ms));\n            };\n\n            // Copy any custom methods a 3rd party library may have added\n            for (var key in NativeDate) {\n                if (owns(NativeDate, key)) {\n                    DateShim[key] = NativeDate[key];\n                }\n            }\n\n            // Copy \"native\" methods explicitly; they may be non-enumerable\n            defineProperties(DateShim, {\n                now: NativeDate.now,\n                UTC: NativeDate.UTC\n            }, true);\n            DateShim.prototype = NativeDate.prototype;\n            defineProperties(DateShim.prototype, { constructor: DateShim }, true);\n\n            // Upgrade Date.parse to handle simplified ISO 8601 strings\n            var parseShim = function parse(string) {\n                var match = isoDateExpression.exec(string);\n                if (match) {\n                    // parse months, days, hours, minutes, seconds, and milliseconds\n                    // provide default values if necessary\n                    // parse the UTC offset component\n                    var year = $Number(match[1]),\n                        month = $Number(match[2] || 1) - 1,\n                        day = $Number(match[3] || 1) - 1,\n                        hour = $Number(match[4] || 0),\n                        minute = $Number(match[5] || 0),\n                        second = $Number(match[6] || 0),\n                        millisecond = Math.floor($Number(match[7] || 0) * 1000),\n                        // When time zone is missed, local offset should be used\n                        // (ES 5.1 bug)\n                        // see https://bugs.ecmascript.org/show_bug.cgi?id=112\n                        isLocalTime = Boolean(match[4] && !match[8]),\n                        signOffset = match[9] === '-' ? 1 : -1,\n                        hourOffset = $Number(match[10] || 0),\n                        minuteOffset = $Number(match[11] || 0),\n                        result;\n                    var hasMinutesOrSecondsOrMilliseconds = minute > 0 || second > 0 || millisecond > 0;\n                    if (\n                        hour < (hasMinutesOrSecondsOrMilliseconds ? 24 : 25)\n                        && minute < 60 && second < 60 && millisecond < 1000\n                        && month > -1 && month < 12 && hourOffset < 24\n                        && minuteOffset < 60 // detect invalid offsets\n                        && day > -1\n                        && day < (dayFromMonth(year, month + 1) - dayFromMonth(year, month))\n                    ) {\n                        result = (\n                            ((dayFromMonth(year, month) + day) * 24)\n                            + hour\n                            + (hourOffset * signOffset)\n                        ) * 60;\n                        result = ((\n                            ((result + minute + (minuteOffset * signOffset)) * 60)\n                            + second\n                        ) * 1000) + millisecond;\n                        if (isLocalTime) {\n                            result = toUTC(result);\n                        }\n                        if (-8.64e15 <= result && result <= 8.64e15) {\n                            return result;\n                        }\n                    }\n                    return NaN;\n                }\n                return NativeDate.parse.apply(this, arguments);\n            };\n            defineProperties(DateShim, { parse: parseShim });\n\n            return DateShim;\n        }(Date));\n        /* global Date: false */\n    }\n\n    // ES5 15.9.4.4\n    // http://es5.github.com/#x15.9.4.4\n    if (!Date.now) {\n        Date.now = function now() {\n            return new Date().getTime();\n        };\n    }\n\n    //\n    // Number\n    // ======\n    //\n\n    // ES5.1 15.7.4.5\n    // http://es5.github.com/#x15.7.4.5\n    var hasToFixedBugs = NumberPrototype.toFixed && (\n        (0.00008).toFixed(3) !== '0.000'\n        || (0.9).toFixed(0) !== '1'\n        || (1.255).toFixed(2) !== '1.25'\n        || (1000000000000000128).toFixed(0) !== '1000000000000000128'\n    );\n\n    var toFixedHelpers = {\n        base: 1e7,\n        size: 6,\n        data: [0, 0, 0, 0, 0, 0],\n        multiply: function multiply(n, c) {\n            var i = -1;\n            var c2 = c;\n            while (++i < toFixedHelpers.size) {\n                c2 += n * toFixedHelpers.data[i];\n                toFixedHelpers.data[i] = c2 % toFixedHelpers.base;\n                c2 = Math.floor(c2 / toFixedHelpers.base);\n            }\n        },\n        divide: function divide(n) {\n            var i = toFixedHelpers.size;\n            var c = 0;\n            while (--i >= 0) {\n                c += toFixedHelpers.data[i];\n                toFixedHelpers.data[i] = Math.floor(c / n);\n                c = (c % n) * toFixedHelpers.base;\n            }\n        },\n        numToString: function numToString() {\n            var i = toFixedHelpers.size;\n            var s = '';\n            while (--i >= 0) {\n                if (s !== '' || i === 0 || toFixedHelpers.data[i] !== 0) {\n                    var t = $String(toFixedHelpers.data[i]);\n                    if (s === '') {\n                        s = t;\n                    } else {\n                        s += strSlice('0000000', 0, 7 - t.length) + t;\n                    }\n                }\n            }\n            return s;\n        },\n        pow: function pow(x, n, acc) {\n            return (n === 0 ? acc : (n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc)));\n        },\n        log: function log(x) {\n            var n = 0;\n            var x2 = x;\n            while (x2 >= 4096) {\n                n += 12;\n                x2 /= 4096;\n            }\n            while (x2 >= 2) {\n                n += 1;\n                x2 /= 2;\n            }\n            return n;\n        }\n    };\n\n    var toFixedShim = function toFixed(fractionDigits) {\n        var f, x, s, m, e, z, j, k;\n\n        // Test for NaN and round fractionDigits down\n        f = $Number(fractionDigits);\n        f = isActualNaN(f) ? 0 : Math.floor(f);\n\n        if (f < 0 || f > 20) {\n            throw new RangeError('Number.toFixed called with invalid number of decimals');\n        }\n\n        x = $Number(this);\n\n        if (isActualNaN(x)) {\n            return 'NaN';\n        }\n\n        // If it is too big or small, return the string value of the number\n        if (x <= -1e21 || x >= 1e21) {\n            return $String(x);\n        }\n\n        s = '';\n\n        if (x < 0) {\n            s = '-';\n            x = -x;\n        }\n\n        m = '0';\n\n        if (x > 1e-21) {\n            // 1e-21 < x < 1e21\n            // -70 < log2(x) < 70\n            e = toFixedHelpers.log(x * toFixedHelpers.pow(2, 69, 1)) - 69;\n            z = (e < 0 ? x * toFixedHelpers.pow(2, -e, 1) : x / toFixedHelpers.pow(2, e, 1));\n            z *= 0x10000000000000; // Math.pow(2, 52);\n            e = 52 - e;\n\n            // -18 < e < 122\n            // x = z / 2 ^ e\n            if (e > 0) {\n                toFixedHelpers.multiply(0, z);\n                j = f;\n\n                while (j >= 7) {\n                    toFixedHelpers.multiply(1e7, 0);\n                    j -= 7;\n                }\n\n                toFixedHelpers.multiply(toFixedHelpers.pow(10, j, 1), 0);\n                j = e - 1;\n\n                while (j >= 23) {\n                    toFixedHelpers.divide(1 << 23);\n                    j -= 23;\n                }\n\n                toFixedHelpers.divide(1 << j);\n                toFixedHelpers.multiply(1, 1);\n                toFixedHelpers.divide(2);\n                m = toFixedHelpers.numToString();\n            } else {\n                toFixedHelpers.multiply(0, z);\n                toFixedHelpers.multiply(1 << (-e), 0);\n                m = toFixedHelpers.numToString() + strSlice('0.00000000000000000000', 2, 2 + f);\n            }\n        }\n\n        if (f > 0) {\n            k = m.length;\n\n            if (k <= f) {\n                m = s + strSlice('0.0000000000000000000', 0, f - k + 2) + m;\n            } else {\n                m = s + strSlice(m, 0, k - f) + '.' + strSlice(m, k - f);\n            }\n        } else {\n            m = s + m;\n        }\n\n        return m;\n    };\n    defineProperties(NumberPrototype, { toFixed: toFixedShim }, hasToFixedBugs);\n\n    var hasToPrecisionUndefinedBug = (function () {\n        try {\n            return 1.0.toPrecision(undefined) === '1';\n        } catch (e) {\n            return true;\n        }\n    }());\n    var originalToPrecision = NumberPrototype.toPrecision;\n    defineProperties(NumberPrototype, {\n        toPrecision: function toPrecision(precision) {\n            return typeof precision === 'undefined' ? originalToPrecision.call(this) : originalToPrecision.call(this, precision);\n        }\n    }, hasToPrecisionUndefinedBug);\n\n    //\n    // String\n    // ======\n    //\n\n    // ES5 15.5.4.14\n    // http://es5.github.com/#x15.5.4.14\n\n    // [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\n    // Many browsers do not split properly with regular expressions or they\n    // do not perform the split correctly under obscure conditions.\n    // See http://blog.stevenlevithan.com/archives/cross-browser-split\n    // I've tested in many browsers and this seems to cover the deviant ones:\n    //    'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]\n    //    '.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]\n    //    'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not\n    //       [undefined, \"t\", undefined, \"e\", ...]\n    //    ''.split(/.?/) should be [], not [\"\"]\n    //    '.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]\n\n    if (\n        'ab'.split(/(?:ab)*/).length !== 2\n        || '.'.split(/(.?)(.?)/).length !== 4\n        || 'tesst'.split(/(s)*/)[1] === 't'\n        || 'test'.split(/(?:)/, -1).length !== 4\n        || ''.split(/.?/).length\n        || '.'.split(/()()/).length > 1\n    ) {\n        (function () {\n            var compliantExecNpcg = typeof (/()??/).exec('')[1] === 'undefined'; // NPCG: nonparticipating capturing group\n            var maxSafe32BitInt = Math.pow(2, 32) - 1;\n\n            StringPrototype.split = function (separator, limit) {\n                var string = String(this);\n                if (typeof separator === 'undefined' && limit === 0) {\n                    return [];\n                }\n\n                // If `separator` is not a regex, use native split\n                if (!isRegex(separator)) {\n                    return strSplit(this, separator, limit);\n                }\n\n                var output = [];\n                var flags = (separator.ignoreCase ? 'i' : '')\n                            + (separator.multiline ? 'm' : '')\n                            + (separator.unicode ? 'u' : '') // in ES6\n                            + (separator.sticky ? 'y' : ''), // Firefox 3+ and ES6\n                    lastLastIndex = 0,\n                    // Make `global` and avoid `lastIndex` issues by working with a copy\n                    separator2, match, lastIndex, lastLength;\n                var separatorCopy = new RegExp(separator.source, flags + 'g');\n                if (!compliantExecNpcg) {\n                    // Doesn't need flags gy, but they don't hurt\n                    separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n                }\n                /* Values for `limit`, per the spec:\n                 * If undefined: 4294967295 // maxSafe32BitInt\n                 * If 0, Infinity, or NaN: 0\n                 * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\n                 * If negative number: 4294967296 - Math.floor(Math.abs(limit))\n                 * If other: Type-convert, then use the above rules\n                 */\n                var splitLimit = typeof limit === 'undefined' ? maxSafe32BitInt : ES.ToUint32(limit);\n                match = separatorCopy.exec(string);\n                while (match) {\n                    // `separatorCopy.lastIndex` is not reliable cross-browser\n                    lastIndex = match.index + match[0].length;\n                    if (lastIndex > lastLastIndex) {\n                        pushCall(output, strSlice(string, lastLastIndex, match.index));\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\n                        // nonparticipating capturing groups\n                        if (!compliantExecNpcg && match.length > 1) {\n                            /* eslint-disable no-loop-func */\n                            match[0].replace(separator2, function () {\n                                for (var i = 1; i < arguments.length - 2; i++) {\n                                    if (typeof arguments[i] === 'undefined') {\n                                        match[i] = void 0;\n                                    }\n                                }\n                            });\n                            /* eslint-enable no-loop-func */\n                        }\n                        if (match.length > 1 && match.index < string.length) {\n                            array_push.apply(output, arraySlice(match, 1));\n                        }\n                        lastLength = match[0].length;\n                        lastLastIndex = lastIndex;\n                        if (output.length >= splitLimit) {\n                            break;\n                        }\n                    }\n                    if (separatorCopy.lastIndex === match.index) {\n                        separatorCopy.lastIndex++; // Avoid an infinite loop\n                    }\n                    match = separatorCopy.exec(string);\n                }\n                if (lastLastIndex === string.length) {\n                    if (lastLength || !separatorCopy.test('')) {\n                        pushCall(output, '');\n                    }\n                } else {\n                    pushCall(output, strSlice(string, lastLastIndex));\n                }\n                return output.length > splitLimit ? arraySlice(output, 0, splitLimit) : output;\n            };\n        }());\n\n    // [bugfix, chrome]\n    // If separator is undefined, then the result array contains just one String,\n    // which is the this value (converted to a String). If limit is not undefined,\n    // then the output array is truncated so that it contains no more than limit\n    // elements.\n    // \"0\".split(undefined, 0) -> []\n    } else if ('0'.split(void 0, 0).length) {\n        StringPrototype.split = function split(separator, limit) {\n            if (typeof separator === 'undefined' && limit === 0) {\n                return [];\n            }\n            return strSplit(this, separator, limit);\n        };\n    }\n\n    var str_replace = StringPrototype.replace;\n    var replaceReportsGroupsCorrectly = (function () {\n        var groups = [];\n        'x'.replace(/x(.)?/g, function (match, group) {\n            pushCall(groups, group);\n        });\n        return groups.length === 1 && typeof groups[0] === 'undefined';\n    }());\n\n    if (!replaceReportsGroupsCorrectly) {\n        StringPrototype.replace = function replace(searchValue, replaceValue) {\n            var isFn = isCallable(replaceValue);\n            var hasCapturingGroups = isRegex(searchValue) && (/\\)[*?]/).test(searchValue.source);\n            if (!isFn || !hasCapturingGroups) {\n                return str_replace.call(this, searchValue, replaceValue);\n            } else {\n                var wrappedReplaceValue = function (match) {\n                    var length = arguments.length;\n                    var originalLastIndex = searchValue.lastIndex;\n                    searchValue.lastIndex = 0;\n                    var args = searchValue.exec(match) || [];\n                    searchValue.lastIndex = originalLastIndex;\n                    pushCall(args, arguments[length - 2], arguments[length - 1]);\n                    return replaceValue.apply(this, args);\n                };\n                return str_replace.call(this, searchValue, wrappedReplaceValue);\n            }\n        };\n    }\n\n    // ECMA-262, 3rd B.2.3\n    // Not an ECMAScript standard, although ECMAScript 3rd Edition has a\n    // non-normative section suggesting uniform semantics and it should be\n    // normalized across all browsers\n    // [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\n    var string_substr = StringPrototype.substr;\n    var hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';\n    defineProperties(StringPrototype, {\n        substr: function substr(start, length) {\n            var normalizedStart = start;\n            if (start < 0) {\n                normalizedStart = max(this.length + start, 0);\n            }\n            return string_substr.call(this, normalizedStart, length);\n        }\n    }, hasNegativeSubstrBug);\n\n    // ES5 15.5.4.20\n    // whitespace from: http://es5.github.io/#x15.5.4.20\n    var ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003'\n        + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028'\n        + '\\u2029\\uFEFF';\n    var zeroWidth = '\\u200b';\n    var wsRegexChars = '[' + ws + ']';\n    var trimBeginRegexp = new RegExp('^' + wsRegexChars + wsRegexChars + '*');\n    var trimEndRegexp = new RegExp(wsRegexChars + wsRegexChars + '*$');\n    var hasTrimWhitespaceBug = StringPrototype.trim && (ws.trim() || !zeroWidth.trim());\n    defineProperties(StringPrototype, {\n        // http://blog.stevenlevithan.com/archives/faster-trim-javascript\n        // http://perfectionkills.com/whitespace-deviations/\n        trim: function trim() {\n            if (typeof this === 'undefined' || this === null) {\n                throw new TypeError(\"can't convert \" + this + ' to object');\n            }\n            return $String(this).replace(trimBeginRegexp, '').replace(trimEndRegexp, '');\n        }\n    }, hasTrimWhitespaceBug);\n    var trim = call.bind(String.prototype.trim);\n\n    var hasLastIndexBug = StringPrototype.lastIndexOf && 'abcあい'.lastIndexOf('あい', 2) !== -1;\n    defineProperties(StringPrototype, {\n        lastIndexOf: function lastIndexOf(searchString) {\n            if (typeof this === 'undefined' || this === null) {\n                throw new TypeError(\"can't convert \" + this + ' to object');\n            }\n            var S = $String(this);\n            var searchStr = $String(searchString);\n            var numPos = arguments.length > 1 ? $Number(arguments[1]) : NaN;\n            var pos = isActualNaN(numPos) ? Infinity : ES.ToInteger(numPos);\n            var start = min(max(pos, 0), S.length);\n            var searchLen = searchStr.length;\n            var k = start + searchLen;\n            while (k > 0) {\n                k = max(0, k - searchLen);\n                var index = strIndexOf(strSlice(S, k, start + searchLen), searchStr);\n                if (index !== -1) {\n                    return k + index;\n                }\n            }\n            return -1;\n        }\n    }, hasLastIndexBug);\n\n    var originalLastIndexOf = StringPrototype.lastIndexOf;\n    defineProperties(StringPrototype, {\n        lastIndexOf: function lastIndexOf(searchString) {\n            return originalLastIndexOf.apply(this, arguments);\n        }\n    }, StringPrototype.lastIndexOf.length !== 1);\n\n    // ES-5 15.1.2.2\n    // eslint-disable-next-line radix\n    if (parseInt(ws + '08') !== 8 || parseInt(ws + '0x16') !== 22) {\n        /* global parseInt: true */\n        parseInt = (function (origParseInt) {\n            var hexRegex = /^[-+]?0[xX]/;\n            return function parseInt(str, radix) {\n                if (typeof str === 'symbol') {\n                    // handle Symbols in node 8.3/8.4\n                    // eslint-disable-next-line no-implicit-coercion, no-unused-expressions\n                    '' + str; // jscs:ignore disallowImplicitTypeConversion\n                }\n\n                var string = trim(String(str));\n                var defaultedRadix = $Number(radix) || (hexRegex.test(string) ? 16 : 10);\n                return origParseInt(string, defaultedRadix);\n            };\n        }(parseInt));\n    }\n\n    // https://es5.github.io/#x15.1.2.3\n    if (1 / parseFloat('-0') !== -Infinity) {\n        /* global parseFloat: true */\n        parseFloat = (function (origParseFloat) {\n            return function parseFloat(string) {\n                var inputString = trim(String(string));\n                var result = origParseFloat(inputString);\n                return result === 0 && strSlice(inputString, 0, 1) === '-' ? -0 : result;\n            };\n        }(parseFloat));\n    }\n\n    if (String(new RangeError('test')) !== 'RangeError: test') {\n        var errorToStringShim = function toString() {\n            if (typeof this === 'undefined' || this === null) {\n                throw new TypeError(\"can't convert \" + this + ' to object');\n            }\n            var name = this.name;\n            if (typeof name === 'undefined') {\n                name = 'Error';\n            } else if (typeof name !== 'string') {\n                name = $String(name);\n            }\n            var msg = this.message;\n            if (typeof msg === 'undefined') {\n                msg = '';\n            } else if (typeof msg !== 'string') {\n                msg = $String(msg);\n            }\n            if (!name) {\n                return msg;\n            }\n            if (!msg) {\n                return name;\n            }\n            return name + ': ' + msg;\n        };\n        // can't use defineProperties here because of toString enumeration issue in IE <= 8\n        Error.prototype.toString = errorToStringShim;\n    }\n\n    if (supportsDescriptors) {\n        var ensureNonEnumerable = function (obj, prop) {\n            if (isEnum(obj, prop)) {\n                var desc = Object.getOwnPropertyDescriptor(obj, prop);\n                if (desc.configurable) {\n                    desc.enumerable = false;\n                    Object.defineProperty(obj, prop, desc);\n                }\n            }\n        };\n        ensureNonEnumerable(Error.prototype, 'message');\n        if (Error.prototype.message !== '') {\n            Error.prototype.message = '';\n        }\n        ensureNonEnumerable(Error.prototype, 'name');\n    }\n\n    if (String(/a/mig) !== '/a/gim') {\n        var regexToString = function toString() {\n            var str = '/' + this.source + '/';\n            if (this.global) {\n                str += 'g';\n            }\n            if (this.ignoreCase) {\n                str += 'i';\n            }\n            if (this.multiline) {\n                str += 'm';\n            }\n            return str;\n        };\n        // can't use defineProperties here because of toString enumeration issue in IE <= 8\n        RegExp.prototype.toString = regexToString;\n    }\n}));\n","/*!\n * https://github.com/es-shims/es5-shim\n * @license es5-shim Copyright 2009-2015 by contributors, MIT License\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\n */\n\n// vim: ts=4 sts=4 sw=4 expandtab\n\n// Add semicolon to prevent IIFE from being passed as argument to concatenated code.\n;\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/templates/returnExports.js\n(function (root, factory) {\n    'use strict';\n\n    /* global define, exports, module */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory();\n    }\n}(this, function () {\n\n    var call = Function.call;\n    var prototypeOfObject = Object.prototype;\n    var owns = call.bind(prototypeOfObject.hasOwnProperty);\n    var isEnumerable = call.bind(prototypeOfObject.propertyIsEnumerable);\n    var toStr = call.bind(prototypeOfObject.toString);\n\n    // If JS engine supports accessors creating shortcuts.\n    var defineGetter;\n    var defineSetter;\n    var lookupGetter;\n    var lookupSetter;\n    var supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n    if (supportsAccessors) {\n        /* eslint-disable no-underscore-dangle, no-restricted-properties */\n        defineGetter = call.bind(prototypeOfObject.__defineGetter__);\n        defineSetter = call.bind(prototypeOfObject.__defineSetter__);\n        lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);\n        lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);\n        /* eslint-enable no-underscore-dangle, no-restricted-properties */\n    }\n\n    var isPrimitive = function isPrimitive(o) {\n        return o == null || (typeof o !== 'object' && typeof o !== 'function');\n    };\n\n    // ES5 15.2.3.2\n    // http://es5.github.com/#x15.2.3.2\n    if (!Object.getPrototypeOf) {\n        // https://github.com/es-shims/es5-shim/issues#issue/2\n        // http://ejohn.org/blog/objectgetprototypeof/\n        // recommended by fschaefer on github\n        //\n        // sure, and webreflection says ^_^\n        // ... this will nerever possibly return null\n        // ... Opera Mini breaks here with infinite loops\n        Object.getPrototypeOf = function getPrototypeOf(object) {\n            // eslint-disable-next-line no-proto\n            var proto = object.__proto__;\n            if (proto || proto === null) {\n                return proto;\n            } else if (toStr(object.constructor) === '[object Function]') {\n                return object.constructor.prototype;\n            } else if (object instanceof Object) {\n                return prototypeOfObject;\n            } else {\n                // Correctly return null for Objects created with `Object.create(null)`\n                // (shammed or native) or `{ __proto__: null}`.  Also returns null for\n                // cross-realm objects on browsers that lack `__proto__` support (like\n                // IE <11), but that's the best we can do.\n                return null;\n            }\n        };\n    }\n\n    // ES5 15.2.3.3\n    // http://es5.github.com/#x15.2.3.3\n\n    var doesGetOwnPropertyDescriptorWork = function doesGetOwnPropertyDescriptorWork(object) {\n        try {\n            object.sentinel = 0;\n            return Object.getOwnPropertyDescriptor(object, 'sentinel').value === 0;\n        } catch (exception) {\n            return false;\n        }\n    };\n\n    // check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n    if (Object.defineProperty) {\n        var getOwnPropertyDescriptorWorksOnObject = doesGetOwnPropertyDescriptorWork({});\n        var getOwnPropertyDescriptorWorksOnDom = typeof document === 'undefined'\n            || doesGetOwnPropertyDescriptorWork(document.createElement('div'));\n        if (!getOwnPropertyDescriptorWorksOnDom || !getOwnPropertyDescriptorWorksOnObject) {\n            var getOwnPropertyDescriptorFallback = Object.getOwnPropertyDescriptor;\n        }\n    }\n\n    if (!Object.getOwnPropertyDescriptor || getOwnPropertyDescriptorFallback) {\n        var ERR_NON_OBJECT = 'Object.getOwnPropertyDescriptor called on a non-object: ';\n\n        /* eslint-disable no-proto */\n        Object.getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            if (isPrimitive(object)) {\n                throw new TypeError(ERR_NON_OBJECT + object);\n            }\n\n            // make a valiant attempt to use the real getOwnPropertyDescriptor\n            // for I8's DOM elements.\n            if (getOwnPropertyDescriptorFallback) {\n                try {\n                    return getOwnPropertyDescriptorFallback.call(Object, object, property);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            var descriptor;\n\n            // If object does not owns property return undefined immediately.\n            if (!owns(object, property)) {\n                return descriptor;\n            }\n\n            // If object has a property then it's for sure `configurable`, and\n            // probably `enumerable`. Detect enumerability though.\n            descriptor = {\n                enumerable: isEnumerable(object, property),\n                configurable: true\n            };\n\n            // If JS engine supports accessor properties then property may be a\n            // getter or setter.\n            if (supportsAccessors) {\n                // Unfortunately `__lookupGetter__` will return a getter even\n                // if object has own non getter property along with a same named\n                // inherited getter. To avoid misbehavior we temporary remove\n                // `__proto__` so that `__lookupGetter__` will return getter only\n                // if it's owned by an object.\n                var prototype = object.__proto__;\n                var notPrototypeOfObject = object !== prototypeOfObject;\n                // avoid recursion problem, breaking in Opera Mini when\n                // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n                // or any other Object.prototype accessor\n                if (notPrototypeOfObject) {\n                    object.__proto__ = prototypeOfObject;\n                }\n\n                var getter = lookupGetter(object, property);\n                var setter = lookupSetter(object, property);\n\n                if (notPrototypeOfObject) {\n                    // Once we have getter and setter we can put values back.\n                    object.__proto__ = prototype;\n                }\n\n                if (getter || setter) {\n                    if (getter) {\n                        descriptor.get = getter;\n                    }\n                    if (setter) {\n                        descriptor.set = setter;\n                    }\n                    // If it was accessor property we're done and return here\n                    // in order to avoid adding `value` to the descriptor.\n                    return descriptor;\n                }\n            }\n\n            // If we got this far we know that object has an own property that is\n            // not an accessor so we set it as a value and return descriptor.\n            descriptor.value = object[property];\n            descriptor.writable = true;\n            return descriptor;\n        };\n        /* eslint-enable no-proto */\n    }\n\n    // ES5 15.2.3.4\n    // http://es5.github.com/#x15.2.3.4\n    if (!Object.getOwnPropertyNames) {\n        Object.getOwnPropertyNames = function getOwnPropertyNames(object) {\n            return Object.keys(object);\n        };\n    }\n\n    // ES5 15.2.3.5\n    // http://es5.github.com/#x15.2.3.5\n    if (!Object.create) {\n\n        // Contributed by Brandon Benvie, October, 2012\n        var createEmpty;\n        var supportsProto = !({ __proto__: null } instanceof Object);\n        // the following produces false positives\n        // in Opera Mini => not a reliable check\n        // Object.prototype.__proto__ === null\n\n        // Check for document.domain and active x support\n        // No need to use active x approach when document.domain is not set\n        // see https://github.com/es-shims/es5-shim/issues/150\n        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n        /* global ActiveXObject */\n        var shouldUseActiveX = function shouldUseActiveX() {\n            // return early if document.domain not set\n            if (!document.domain) {\n                return false;\n            }\n\n            try {\n                return !!new ActiveXObject('htmlfile');\n            } catch (exception) {\n                return false;\n            }\n        };\n\n        // This supports IE8 when document.domain is used\n        // see https://github.com/es-shims/es5-shim/issues/150\n        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n        var getEmptyViaActiveX = function getEmptyViaActiveX() {\n            var empty;\n            var xDoc;\n\n            xDoc = new ActiveXObject('htmlfile');\n\n            var script = 'script';\n            xDoc.write('<' + script + '></' + script + '>');\n            xDoc.close();\n\n            empty = xDoc.parentWindow.Object.prototype;\n            xDoc = null;\n\n            return empty;\n        };\n\n        // The original implementation using an iframe\n        // before the activex approach was added\n        // see https://github.com/es-shims/es5-shim/issues/150\n        var getEmptyViaIFrame = function getEmptyViaIFrame() {\n            var iframe = document.createElement('iframe');\n            var parent = document.body || document.documentElement;\n            var empty;\n\n            iframe.style.display = 'none';\n            parent.appendChild(iframe);\n            // eslint-disable-next-line no-script-url\n            iframe.src = 'javascript:';\n\n            empty = iframe.contentWindow.Object.prototype;\n            parent.removeChild(iframe);\n            iframe = null;\n\n            return empty;\n        };\n\n        /* global document */\n        if (supportsProto || typeof document === 'undefined') {\n            createEmpty = function () {\n                return { __proto__: null };\n            };\n        } else {\n            // In old IE __proto__ can't be used to manually set `null`, nor does\n            // any other method exist to make an object that inherits from nothing,\n            // aside from Object.prototype itself. Instead, create a new global\n            // object and *steal* its Object.prototype and strip it bare. This is\n            // used as the prototype to create nullary objects.\n            createEmpty = function () {\n                // Determine which approach to use\n                // see https://github.com/es-shims/es5-shim/issues/150\n                var empty = shouldUseActiveX() ? getEmptyViaActiveX() : getEmptyViaIFrame();\n\n                delete empty.constructor;\n                delete empty.hasOwnProperty;\n                delete empty.propertyIsEnumerable;\n                delete empty.isPrototypeOf;\n                delete empty.toLocaleString;\n                delete empty.toString;\n                delete empty.valueOf;\n\n                var Empty = function Empty() {};\n                Empty.prototype = empty;\n                // short-circuit future calls\n                createEmpty = function () {\n                    return new Empty();\n                };\n                return new Empty();\n            };\n        }\n\n        Object.create = function create(prototype, properties) {\n\n            var object;\n            var Type = function Type() {}; // An empty constructor.\n\n            if (prototype === null) {\n                object = createEmpty();\n            } else {\n                if (prototype !== null && isPrimitive(prototype)) {\n                    // In the native implementation `parent` can be `null`\n                    // OR *any* `instanceof Object`  (Object|Function|Array|RegExp|etc)\n                    // Use `typeof` tho, b/c in old IE, DOM elements are not `instanceof Object`\n                    // like they are in modern browsers. Using `Object.create` on DOM elements\n                    // is...err...probably inappropriate, but the native version allows for it.\n                    throw new TypeError('Object prototype may only be an Object or null'); // same msg as Chrome\n                }\n                Type.prototype = prototype;\n                object = new Type();\n                // IE has no built-in implementation of `Object.getPrototypeOf`\n                // neither `__proto__`, but this manually setting `__proto__` will\n                // guarantee that `Object.getPrototypeOf` will work as expected with\n                // objects created using `Object.create`\n                // eslint-disable-next-line no-proto\n                object.__proto__ = prototype;\n            }\n\n            if (properties !== void 0) {\n                Object.defineProperties(object, properties);\n            }\n\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.6\n    // http://es5.github.com/#x15.2.3.6\n\n    // Patch for WebKit and IE8 standard mode\n    // Designed by hax <hax.github.com>\n    // related issue: https://github.com/es-shims/es5-shim/issues#issue/5\n    // IE8 Reference:\n    //     http://msdn.microsoft.com/en-us/library/dd282900.aspx\n    //     http://msdn.microsoft.com/en-us/library/dd229916.aspx\n    // WebKit Bugs:\n    //     https://bugs.webkit.org/show_bug.cgi?id=36423\n\n    var doesDefinePropertyWork = function doesDefinePropertyWork(object) {\n        try {\n            Object.defineProperty(object, 'sentinel', {});\n            return 'sentinel' in object;\n        } catch (exception) {\n            return false;\n        }\n    };\n\n    // check whether defineProperty works if it's given. Otherwise,\n    // shim partially.\n    if (Object.defineProperty) {\n        var definePropertyWorksOnObject = doesDefinePropertyWork({});\n        var definePropertyWorksOnDom = typeof document === 'undefined'\n            || doesDefinePropertyWork(document.createElement('div'));\n        if (!definePropertyWorksOnObject || !definePropertyWorksOnDom) {\n            var definePropertyFallback = Object.defineProperty,\n                definePropertiesFallback = Object.defineProperties;\n        }\n    }\n\n    if (!Object.defineProperty || definePropertyFallback) {\n        var ERR_NON_OBJECT_DESCRIPTOR = 'Property description must be an object: ';\n        var ERR_NON_OBJECT_TARGET = 'Object.defineProperty called on non-object: ';\n        var ERR_ACCESSORS_NOT_SUPPORTED = 'getters & setters can not be defined on this javascript engine';\n\n        Object.defineProperty = function defineProperty(object, property, descriptor) {\n            if (isPrimitive(object)) {\n                throw new TypeError(ERR_NON_OBJECT_TARGET + object);\n            }\n            if (isPrimitive(descriptor)) {\n                throw new TypeError(ERR_NON_OBJECT_DESCRIPTOR + descriptor);\n            }\n            // make a valiant attempt to use the real defineProperty\n            // for I8's DOM elements.\n            if (definePropertyFallback) {\n                try {\n                    return definePropertyFallback.call(Object, object, property, descriptor);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            // If it's a data property.\n            if ('value' in descriptor) {\n                // fail silently if 'writable', 'enumerable', or 'configurable'\n                // are requested but not supported\n                /*\n                // alternate approach:\n                if ( // can't implement these features; allow false but not true\n                    ('writable' in descriptor && !descriptor.writable) ||\n                    ('enumerable' in descriptor && !descriptor.enumerable) ||\n                    ('configurable' in descriptor && !descriptor.configurable)\n                ))\n                    throw new RangeError(\n                        'This implementation of Object.defineProperty does not support configurable, enumerable, or writable.'\n                    );\n                */\n\n                if (supportsAccessors && (lookupGetter(object, property) || lookupSetter(object, property))) {\n                    // As accessors are supported only on engines implementing\n                    // `__proto__` we can safely override `__proto__` while defining\n                    // a property to make sure that we don't hit an inherited\n                    // accessor.\n                    /* eslint-disable no-proto */\n                    var prototype = object.__proto__;\n                    object.__proto__ = prototypeOfObject;\n                    // Deleting a property anyway since getter / setter may be\n                    // defined on object itself.\n                    delete object[property];\n                    object[property] = descriptor.value;\n                    // Setting original `__proto__` back now.\n                    object.__proto__ = prototype;\n                    /* eslint-enable no-proto */\n                } else {\n                    object[property] = descriptor.value;\n                }\n            } else {\n                var hasGetter = 'get' in descriptor;\n                var hasSetter = 'set' in descriptor;\n                if (!supportsAccessors && (hasGetter || hasSetter)) {\n                    throw new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n                }\n                // If we got that far then getters and setters can be defined !!\n                if (hasGetter) {\n                    defineGetter(object, property, descriptor.get);\n                }\n                if (hasSetter) {\n                    defineSetter(object, property, descriptor.set);\n                }\n            }\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.7\n    // http://es5.github.com/#x15.2.3.7\n    if (!Object.defineProperties || definePropertiesFallback) {\n        Object.defineProperties = function defineProperties(object, properties) {\n            // make a valiant attempt to use the real defineProperties\n            if (definePropertiesFallback) {\n                try {\n                    return definePropertiesFallback.call(Object, object, properties);\n                } catch (exception) {\n                    // try the shim if the real one doesn't work\n                }\n            }\n\n            Object.keys(properties).forEach(function (property) {\n                if (property !== '__proto__') {\n                    Object.defineProperty(object, property, properties[property]);\n                }\n            });\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.8\n    // http://es5.github.com/#x15.2.3.8\n    if (!Object.seal) {\n        Object.seal = function seal(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.seal can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.9\n    // http://es5.github.com/#x15.2.3.9\n    if (!Object.freeze) {\n        Object.freeze = function freeze(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.freeze can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // detect a Rhino bug and patch it\n    try {\n        Object.freeze(function () {});\n    } catch (exception) {\n        Object.freeze = (function (freezeObject) {\n            return function freeze(object) {\n                if (typeof object === 'function') {\n                    return object;\n                } else {\n                    return freezeObject(object);\n                }\n            };\n        }(Object.freeze));\n    }\n\n    // ES5 15.2.3.10\n    // http://es5.github.com/#x15.2.3.10\n    if (!Object.preventExtensions) {\n        Object.preventExtensions = function preventExtensions(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.preventExtensions can only be called on Objects.');\n            }\n            // this is misleading and breaks feature-detection, but\n            // allows \"securable\" code to \"gracefully\" degrade to working\n            // but insecure code.\n            return object;\n        };\n    }\n\n    // ES5 15.2.3.11\n    // http://es5.github.com/#x15.2.3.11\n    if (!Object.isSealed) {\n        Object.isSealed = function isSealed(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isSealed can only be called on Objects.');\n            }\n            return false;\n        };\n    }\n\n    // ES5 15.2.3.12\n    // http://es5.github.com/#x15.2.3.12\n    if (!Object.isFrozen) {\n        Object.isFrozen = function isFrozen(object) {\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isFrozen can only be called on Objects.');\n            }\n            return false;\n        };\n    }\n\n    // ES5 15.2.3.13\n    // http://es5.github.com/#x15.2.3.13\n    if (!Object.isExtensible) {\n        Object.isExtensible = function isExtensible(object) {\n            // 1. If Type(O) is not Object throw a TypeError exception.\n            if (Object(object) !== object) {\n                throw new TypeError('Object.isExtensible can only be called on Objects.');\n            }\n            // 2. Return the Boolean value of the [[Extensible]] internal property of O.\n            var name = '';\n            while (owns(object, name)) {\n                name += '?';\n            }\n            object[name] = true;\n            var returnValue = owns(object, name);\n            delete object[name];\n            return returnValue;\n        };\n    }\n\n}));\n"," /*!\n  * https://github.com/paulmillr/es6-shim\n  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\n  *   and contributors,  MIT License\n  * es6-shim: v0.35.1\n  * see https://github.com/paulmillr/es6-shim/blob/0.35.1/LICENSE\n  * Details and documentation:\n  * https://github.com/paulmillr/es6-shim/\n  */\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\n(function (root, factory) {\n  /*global define, module, exports */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory();\n  }\n}(this, function () {\n  'use strict';\n\n  var _apply = Function.call.bind(Function.apply);\n  var _call = Function.call.bind(Function.call);\n  var isArray = Array.isArray;\n  var keys = Object.keys;\n\n  var not = function notThunker(func) {\n    return function notThunk() {\n      return !_apply(func, this, arguments);\n    };\n  };\n  var throwsError = function (func) {\n    try {\n      func();\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {\n    try {\n      return func();\n    } catch (e) {\n      return false;\n    }\n  };\n\n  var isCallableWithoutNew = not(throwsError);\n  var arePropertyDescriptorsSupported = function () {\n    // if Object.defineProperty exists but throws, it's IE 8\n    return !throwsError(function () {\n      Object.defineProperty({}, 'x', { get: function () {} });\n    });\n  };\n  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();\n  var functionsHaveNames = (function foo() {}).name === 'foo'; // eslint-disable-line no-extra-parens\n\n  var _forEach = Function.call.bind(Array.prototype.forEach);\n  var _reduce = Function.call.bind(Array.prototype.reduce);\n  var _filter = Function.call.bind(Array.prototype.filter);\n  var _some = Function.call.bind(Array.prototype.some);\n\n  var defineProperty = function (object, name, value, force) {\n    if (!force && name in object) { return; }\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  // Define configurable, writable and non-enumerable props\n  // if they don’t exist.\n  var defineProperties = function (object, map, forceOverride) {\n    _forEach(keys(map), function (name) {\n      var method = map[name];\n      defineProperty(object, name, method, !!forceOverride);\n    });\n  };\n\n  var _toString = Function.call.bind(Object.prototype.toString);\n  var isCallable = typeof /abc/ === 'function' ? function IsCallableSlow(x) {\n    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'\n    return typeof x === 'function' && _toString(x) === '[object Function]';\n  } : function IsCallableFast(x) { return typeof x === 'function'; };\n\n  var Value = {\n    getter: function (object, name, getter) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        get: getter\n      });\n    },\n    proxy: function (originalObject, key, targetObject) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);\n      Object.defineProperty(targetObject, key, {\n        configurable: originalDescriptor.configurable,\n        enumerable: originalDescriptor.enumerable,\n        get: function getKey() { return originalObject[key]; },\n        set: function setKey(value) { originalObject[key] = value; }\n      });\n    },\n    redefine: function (object, property, newValue) {\n      if (supportsDescriptors) {\n        var descriptor = Object.getOwnPropertyDescriptor(object, property);\n        descriptor.value = newValue;\n        Object.defineProperty(object, property, descriptor);\n      } else {\n        object[property] = newValue;\n      }\n    },\n    defineByDescriptor: function (object, property, descriptor) {\n      if (supportsDescriptors) {\n        Object.defineProperty(object, property, descriptor);\n      } else if ('value' in descriptor) {\n        object[property] = descriptor.value;\n      }\n    },\n    preserveToString: function (target, source) {\n      if (source && isCallable(source.toString)) {\n        defineProperty(target, 'toString', source.toString.bind(source), true);\n      }\n    }\n  };\n\n  // Simple shim for Object.create on ES3 browsers\n  // (unlike real shim, no attempt to support `prototype === null`)\n  var create = Object.create || function (prototype, properties) {\n    var Prototype = function Prototype() {};\n    Prototype.prototype = prototype;\n    var object = new Prototype();\n    if (typeof properties !== 'undefined') {\n      keys(properties).forEach(function (key) {\n        Value.defineByDescriptor(object, key, properties[key]);\n      });\n    }\n    return object;\n  };\n\n  var supportsSubclassing = function (C, f) {\n    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }\n    return valueOrFalseIfThrows(function () {\n      var Sub = function Subclass(arg) {\n        var o = new C(arg);\n        Object.setPrototypeOf(o, Subclass.prototype);\n        return o;\n      };\n      Object.setPrototypeOf(Sub, C);\n      Sub.prototype = create(C.prototype, {\n        constructor: { value: Sub }\n      });\n      return f(Sub);\n    });\n  };\n\n  var getGlobal = function () {\n    /* global self, window, global */\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n  };\n\n  var globals = getGlobal();\n  var globalIsFinite = globals.isFinite;\n  var _indexOf = Function.call.bind(String.prototype.indexOf);\n  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);\n  var _concat = Function.call.bind(Array.prototype.concat);\n  // var _sort = Function.call.bind(Array.prototype.sort);\n  var _strSlice = Function.call.bind(String.prototype.slice);\n  var _push = Function.call.bind(Array.prototype.push);\n  var _pushApply = Function.apply.bind(Array.prototype.push);\n  var _shift = Function.call.bind(Array.prototype.shift);\n  var _max = Math.max;\n  var _min = Math.min;\n  var _floor = Math.floor;\n  var _abs = Math.abs;\n  var _exp = Math.exp;\n  var _log = Math.log;\n  var _sqrt = Math.sqrt;\n  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n  var ArrayIterator; // make our implementation private\n  var noop = function () {};\n\n  var OrigMap = globals.Map;\n  var origMapDelete = OrigMap && OrigMap.prototype['delete'];\n  var origMapGet = OrigMap && OrigMap.prototype.get;\n  var origMapHas = OrigMap && OrigMap.prototype.has;\n  var origMapSet = OrigMap && OrigMap.prototype.set;\n\n  var Symbol = globals.Symbol || {};\n  var symbolSpecies = Symbol.species || '@@species';\n\n  var numberIsNaN = Number.isNaN || function isNaN(value) {\n    // NaN !== NaN, but they are identical.\n    // NaNs are the only non-reflexive value, i.e., if x !== x,\n    // then x is NaN.\n    // isNaN is broken: it converts its argument to number, so\n    // isNaN('foo') => true\n    return value !== value;\n  };\n  var numberIsFinite = Number.isFinite || function isFinite(value) {\n    return typeof value === 'number' && globalIsFinite(value);\n  };\n  var _sign = isCallable(Math.sign) ? Math.sign : function sign(value) {\n    var number = Number(value);\n    if (number === 0) { return number; }\n    if (numberIsNaN(number)) { return number; }\n    return number < 0 ? -1 : 1;\n  };\n\n  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\n  // can be replaced with require('is-arguments') if we ever use a build process instead\n  var isStandardArguments = function isArguments(value) {\n    return _toString(value) === '[object Arguments]';\n  };\n  var isLegacyArguments = function isArguments(value) {\n    return value !== null &&\n      typeof value === 'object' &&\n      typeof value.length === 'number' &&\n      value.length >= 0 &&\n      _toString(value) !== '[object Array]' &&\n      _toString(value.callee) === '[object Function]';\n  };\n  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\n\n  var Type = {\n    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },\n    string: function (x) { return _toString(x) === '[object String]'; },\n    regex: function (x) { return _toString(x) === '[object RegExp]'; },\n    symbol: function (x) {\n      return typeof globals.Symbol === 'function' && typeof x === 'symbol';\n    }\n  };\n\n  var overrideNative = function overrideNative(object, property, replacement) {\n    var original = object[property];\n    defineProperty(object, property, replacement, true);\n    Value.preserveToString(object[property], original);\n  };\n\n  // eslint-disable-next-line no-restricted-properties\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());\n\n  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'\n  // we're going to use an arbitrary _-prefixed name to make our shims\n  // work properly with each other, even though we don't have full Iterator\n  // support.  That is, `Array.from(map.keys())` will work, but we don't\n  // pretend to export a \"real\" Iterator interface.\n  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';\n  // Firefox ships a partial implementation using the name @@iterator.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\n  // So use that name if we detect it.\n  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {\n    $iterator$ = '@@iterator';\n  }\n\n  // Reflect\n  if (!globals.Reflect) {\n    defineProperty(globals, 'Reflect', {}, true);\n  }\n  var Reflect = globals.Reflect;\n\n  var $String = String;\n\n  /* global document */\n  var domAll = (typeof document === 'undefined' || !document) ? null : document.all;\n  /* jshint eqnull:true */\n  var isNullOrUndefined = domAll == null ? function isNullOrUndefined(x) {\n    /* jshint eqnull:true */\n    return x == null;\n  } : function isNullOrUndefinedAndNotDocumentAll(x) {\n    /* jshint eqnull:true */\n    return x == null && x !== domAll;\n  };\n\n  var ES = {\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-call\n    Call: function Call(F, V) {\n      var args = arguments.length > 2 ? arguments[2] : [];\n      if (!ES.IsCallable(F)) {\n        throw new TypeError(F + ' is not a function');\n      }\n      return _apply(F, V, args);\n    },\n\n    RequireObjectCoercible: function (x, optMessage) {\n      if (isNullOrUndefined(x)) {\n        throw new TypeError(optMessage || 'Cannot call method on ' + x);\n      }\n      return x;\n    },\n\n    // This might miss the \"(non-standard exotic and does not implement\n    // [[Call]])\" case from\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation\n    // but we can't find any evidence these objects exist in practice.\n    // If we find some in the future, you could test `Object(x) === x`,\n    // which is reliable according to\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject\n    // but is not well optimized by runtimes and creates an object\n    // whenever it returns false, and thus is very slow.\n    TypeIsObject: function (x) {\n      if (x === void 0 || x === null || x === true || x === false) {\n        return false;\n      }\n      return typeof x === 'function' || typeof x === 'object' || x === domAll;\n    },\n\n    ToObject: function (o, optMessage) {\n      return Object(ES.RequireObjectCoercible(o, optMessage));\n    },\n\n    IsCallable: isCallable,\n\n    IsConstructor: function (x) {\n      // We can't tell callables from constructors in ES5\n      return ES.IsCallable(x);\n    },\n\n    ToInt32: function (x) {\n      return ES.ToNumber(x) >> 0;\n    },\n\n    ToUint32: function (x) {\n      return ES.ToNumber(x) >>> 0;\n    },\n\n    ToNumber: function (value) {\n      if (_toString(value) === '[object Symbol]') {\n        throw new TypeError('Cannot convert a Symbol value to a number');\n      }\n      return +value;\n    },\n\n    ToInteger: function (value) {\n      var number = ES.ToNumber(value);\n      if (numberIsNaN(number)) { return 0; }\n      if (number === 0 || !numberIsFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * _floor(_abs(number));\n    },\n\n    ToLength: function (value) {\n      var len = ES.ToInteger(value);\n      if (len <= 0) { return 0; } // includes converting -0 to +0\n      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }\n      return len;\n    },\n\n    SameValue: function (a, b) {\n      if (a === b) {\n        // 0 === -0, but they are not identical.\n        if (a === 0) { return 1 / a === 1 / b; }\n        return true;\n      }\n      return numberIsNaN(a) && numberIsNaN(b);\n    },\n\n    SameValueZero: function (a, b) {\n      // same as SameValue except for SameValueZero(+0, -0) == true\n      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));\n    },\n\n    IsIterable: function (o) {\n      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));\n    },\n\n    GetIterator: function (o) {\n      if (isArguments(o)) {\n        // special case support for `arguments`\n        return new ArrayIterator(o, 'value');\n      }\n      var itFn = ES.GetMethod(o, $iterator$);\n      if (!ES.IsCallable(itFn)) {\n        // Better diagnostics if itFn is null or undefined\n        throw new TypeError('value is not an iterable');\n      }\n      var it = ES.Call(itFn, o);\n      if (!ES.TypeIsObject(it)) {\n        throw new TypeError('bad iterator');\n      }\n      return it;\n    },\n\n    GetMethod: function (o, p) {\n      var func = ES.ToObject(o)[p];\n      if (isNullOrUndefined(func)) {\n        return void 0;\n      }\n      if (!ES.IsCallable(func)) {\n        throw new TypeError('Method not callable: ' + p);\n      }\n      return func;\n    },\n\n    IteratorComplete: function (iterResult) {\n      return !!iterResult.done;\n    },\n\n    IteratorClose: function (iterator, completionIsThrow) {\n      var returnMethod = ES.GetMethod(iterator, 'return');\n      if (returnMethod === void 0) {\n        return;\n      }\n      var innerResult, innerException;\n      try {\n        innerResult = ES.Call(returnMethod, iterator);\n      } catch (e) {\n        innerException = e;\n      }\n      if (completionIsThrow) {\n        return;\n      }\n      if (innerException) {\n        throw innerException;\n      }\n      if (!ES.TypeIsObject(innerResult)) {\n        throw new TypeError(\"Iterator's return method returned a non-object.\");\n      }\n    },\n\n    IteratorNext: function (it) {\n      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();\n      if (!ES.TypeIsObject(result)) {\n        throw new TypeError('bad iterator');\n      }\n      return result;\n    },\n\n    IteratorStep: function (it) {\n      var result = ES.IteratorNext(it);\n      var done = ES.IteratorComplete(result);\n      return done ? false : result;\n    },\n\n    Construct: function (C, args, newTarget, isES6internal) {\n      var target = typeof newTarget === 'undefined' ? C : newTarget;\n\n      if (!isES6internal && Reflect.construct) {\n        // Try to use Reflect.construct if available\n        return Reflect.construct(C, args, target);\n      }\n      // OK, we have to fake it.  This will only work if the\n      // C.[[ConstructorKind]] == \"base\" -- but that's the only\n      // kind we can make in ES5 code anyway.\n\n      // OrdinaryCreateFromConstructor(target, \"%ObjectPrototype%\")\n      var proto = target.prototype;\n      if (!ES.TypeIsObject(proto)) {\n        proto = Object.prototype;\n      }\n      var obj = create(proto);\n      // Call the constructor.\n      var result = ES.Call(C, obj, args);\n      return ES.TypeIsObject(result) ? result : obj;\n    },\n\n    SpeciesConstructor: function (O, defaultConstructor) {\n      var C = O.constructor;\n      if (C === void 0) {\n        return defaultConstructor;\n      }\n      if (!ES.TypeIsObject(C)) {\n        throw new TypeError('Bad constructor');\n      }\n      var S = C[symbolSpecies];\n      if (isNullOrUndefined(S)) {\n        return defaultConstructor;\n      }\n      if (!ES.IsConstructor(S)) {\n        throw new TypeError('Bad @@species');\n      }\n      return S;\n    },\n\n    CreateHTML: function (string, tag, attribute, value) {\n      var S = ES.ToString(string);\n      var p1 = '<' + tag;\n      if (attribute !== '') {\n        var V = ES.ToString(value);\n        var escapedV = V.replace(/\"/g, '&quot;');\n        p1 += ' ' + attribute + '=\"' + escapedV + '\"';\n      }\n      var p2 = p1 + '>';\n      var p3 = p2 + S;\n      return p3 + '</' + tag + '>';\n    },\n\n    IsRegExp: function IsRegExp(argument) {\n      if (!ES.TypeIsObject(argument)) {\n        return false;\n      }\n      var isRegExp = argument[Symbol.match];\n      if (typeof isRegExp !== 'undefined') {\n        return !!isRegExp;\n      }\n      return Type.regex(argument);\n    },\n\n    ToString: function ToString(string) {\n      return $String(string);\n    }\n  };\n\n  // Well-known Symbol shims\n  if (supportsDescriptors && hasSymbols) {\n    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {\n      if (Type.symbol(Symbol[name])) {\n        return Symbol[name];\n      }\n      // eslint-disable-next-line no-restricted-properties\n      var sym = Symbol['for']('Symbol.' + name);\n      Object.defineProperty(Symbol, name, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: sym\n      });\n      return sym;\n    };\n    if (!Type.symbol(Symbol.search)) {\n      var symbolSearch = defineWellKnownSymbol('search');\n      var originalSearch = String.prototype.search;\n      defineProperty(RegExp.prototype, symbolSearch, function search(string) {\n        return ES.Call(originalSearch, string, [this]);\n      });\n      var searchShim = function search(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var searcher = ES.GetMethod(regexp, symbolSearch);\n          if (typeof searcher !== 'undefined') {\n            return ES.Call(searcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'search', searchShim);\n    }\n    if (!Type.symbol(Symbol.replace)) {\n      var symbolReplace = defineWellKnownSymbol('replace');\n      var originalReplace = String.prototype.replace;\n      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {\n        return ES.Call(originalReplace, string, [this, replaceValue]);\n      });\n      var replaceShim = function replace(searchValue, replaceValue) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(searchValue)) {\n          var replacer = ES.GetMethod(searchValue, symbolReplace);\n          if (typeof replacer !== 'undefined') {\n            return ES.Call(replacer, searchValue, [O, replaceValue]);\n          }\n        }\n        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);\n      };\n      overrideNative(String.prototype, 'replace', replaceShim);\n    }\n    if (!Type.symbol(Symbol.split)) {\n      var symbolSplit = defineWellKnownSymbol('split');\n      var originalSplit = String.prototype.split;\n      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {\n        return ES.Call(originalSplit, string, [this, limit]);\n      });\n      var splitShim = function split(separator, limit) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(separator)) {\n          var splitter = ES.GetMethod(separator, symbolSplit);\n          if (typeof splitter !== 'undefined') {\n            return ES.Call(splitter, separator, [O, limit]);\n          }\n        }\n        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);\n      };\n      overrideNative(String.prototype, 'split', splitShim);\n    }\n    var symbolMatchExists = Type.symbol(Symbol.match);\n    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {\n      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.\n      // Firefox 40 and below have Symbol.match but String#match works fine.\n      var o = {};\n      o[Symbol.match] = function () { return 42; };\n      return 'a'.match(o) !== 42;\n    }());\n    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {\n      var symbolMatch = defineWellKnownSymbol('match');\n\n      var originalMatch = String.prototype.match;\n      defineProperty(RegExp.prototype, symbolMatch, function match(string) {\n        return ES.Call(originalMatch, string, [this]);\n      });\n\n      var matchShim = function match(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var matcher = ES.GetMethod(regexp, symbolMatch);\n          if (typeof matcher !== 'undefined') {\n            return ES.Call(matcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'match', matchShim);\n    }\n  }\n\n  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {\n    Value.preserveToString(replacement, original);\n    if (Object.setPrototypeOf) {\n      // sets up proper prototype chain where possible\n      Object.setPrototypeOf(original, replacement);\n    }\n    if (supportsDescriptors) {\n      _forEach(Object.getOwnPropertyNames(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        Value.proxy(original, key, replacement);\n      });\n    } else {\n      _forEach(Object.keys(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        replacement[key] = original[key];\n      });\n    }\n    replacement.prototype = original.prototype;\n    Value.redefine(original.prototype, 'constructor', replacement);\n  };\n\n  var defaultSpeciesGetter = function () { return this; };\n  var addDefaultSpecies = function (C) {\n    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {\n      Value.getter(C, symbolSpecies, defaultSpeciesGetter);\n    }\n  };\n\n  var addIterator = function (prototype, impl) {\n    var implementation = impl || function iterator() { return this; };\n    defineProperty(prototype, $iterator$, implementation);\n    if (!prototype[$iterator$] && Type.symbol($iterator$)) {\n      // implementations are buggy when $iterator$ is a Symbol\n      prototype[$iterator$] = implementation;\n    }\n  };\n\n  var createDataProperty = function createDataProperty(object, name, value) {\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {\n    createDataProperty(object, name, value);\n    if (!ES.SameValue(object[name], value)) {\n      throw new TypeError('property is nonconfigurable');\n    }\n  };\n\n  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {\n    // This is an es5 approximation to es6 construct semantics.  in es6,\n    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)\n    // just sets the internal variable NewTarget (in es6 syntax `new.target`)\n    // to Foo and then returns Foo().\n\n    // Many ES6 object then have constructors of the form:\n    // 1. If NewTarget is undefined, throw a TypeError exception\n    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)\n\n    // So we're going to emulate those first two steps.\n    if (!ES.TypeIsObject(o)) {\n      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);\n    }\n    var proto = defaultNewTarget.prototype;\n    if (!ES.TypeIsObject(proto)) {\n      proto = defaultProto;\n    }\n    var obj = create(proto);\n    for (var name in slots) {\n      if (_hasOwnProperty(slots, name)) {\n        var value = slots[name];\n        defineProperty(obj, name, value, true);\n      }\n    }\n    return obj;\n  };\n\n  // Firefox 31 reports this function's length as 0\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484\n  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {\n    var originalFromCodePoint = String.fromCodePoint;\n    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) {\n      return ES.Call(originalFromCodePoint, this, arguments);\n    });\n  }\n\n  var StringShims = {\n    fromCodePoint: function fromCodePoint(codePoints) {\n      var result = [];\n      var next;\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        next = Number(arguments[i]);\n        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {\n          throw new RangeError('Invalid code point ' + next);\n        }\n\n        if (next < 0x10000) {\n          _push(result, String.fromCharCode(next));\n        } else {\n          next -= 0x10000;\n          _push(result, String.fromCharCode((next >> 10) + 0xD800));\n          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));\n        }\n      }\n      return result.join('');\n    },\n\n    raw: function raw(callSite) {\n      var cooked = ES.ToObject(callSite, 'bad callSite');\n      var rawString = ES.ToObject(cooked.raw, 'bad raw value');\n      var len = rawString.length;\n      var literalsegments = ES.ToLength(len);\n      if (literalsegments <= 0) {\n        return '';\n      }\n\n      var stringElements = [];\n      var nextIndex = 0;\n      var nextKey, next, nextSeg, nextSub;\n      while (nextIndex < literalsegments) {\n        nextKey = ES.ToString(nextIndex);\n        nextSeg = ES.ToString(rawString[nextKey]);\n        _push(stringElements, nextSeg);\n        if (nextIndex + 1 >= literalsegments) {\n          break;\n        }\n        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';\n        nextSub = ES.ToString(next);\n        _push(stringElements, nextSub);\n        nextIndex += 1;\n      }\n      return stringElements.join('');\n    }\n  };\n  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {\n    // IE 11 TP has a broken String.raw implementation\n    overrideNative(String, 'raw', StringShims.raw);\n  }\n  defineProperties(String, StringShims);\n\n  // Fast repeat, uses the `Exponentiation by squaring` algorithm.\n  // Perf: http://jsperf.com/string-repeat2/2\n  var stringRepeat = function repeat(s, times) {\n    if (times < 1) { return ''; }\n    if (times % 2) { return repeat(s, times - 1) + s; }\n    var half = repeat(s, times / 2);\n    return half + half;\n  };\n  var stringMaxLength = Infinity;\n\n  var StringPrototypeShims = {\n    repeat: function repeat(times) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var numTimes = ES.ToInteger(times);\n      if (numTimes < 0 || numTimes >= stringMaxLength) {\n        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');\n      }\n      return stringRepeat(thisStr, numTimes);\n    },\n\n    startsWith: function startsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"startsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      var start = _max(ES.ToInteger(position), 0);\n      return _strSlice(S, start, start + searchStr.length) === searchStr;\n    },\n\n    endsWith: function endsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"endsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var len = S.length;\n      var endPosition;\n      if (arguments.length > 1) {\n        endPosition = arguments[1];\n      }\n      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);\n      var end = _min(_max(pos, 0), len);\n      return _strSlice(S, end - searchStr.length, end) === searchStr;\n    },\n\n    includes: function includes(searchString) {\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('\"includes\" does not accept a RegExp');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      // Somehow this trick makes method 100% compat with the spec.\n      return _indexOf(this, searchStr, position) !== -1;\n    },\n\n    codePointAt: function codePointAt(pos) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var position = ES.ToInteger(pos);\n      var length = thisStr.length;\n      if (position >= 0 && position < length) {\n        var first = thisStr.charCodeAt(position);\n        var isEnd = position + 1 === length;\n        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }\n        var second = thisStr.charCodeAt(position + 1);\n        if (second < 0xDC00 || second > 0xDFFF) { return first; }\n        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;\n      }\n    }\n  };\n  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {\n    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n  }\n\n  if (String.prototype.startsWith && String.prototype.endsWith) {\n    var startsWithRejectsRegex = throwsError(function () {\n      /* throws if spec-compliant */\n      '/a/'.startsWith(/a/);\n    });\n    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {\n      return 'abc'.startsWith('a', Infinity) === false;\n    });\n    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {\n      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n  }\n  if (hasSymbols) {\n    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.startsWith(re);\n    });\n    if (!startsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n    }\n    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.endsWith(re);\n    });\n    if (!endsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.includes(re);\n    });\n    if (!includesSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n    }\n  }\n\n  defineProperties(String.prototype, StringPrototypeShims);\n\n  // whitespace from: http://es5.github.io/#x15.5.4.20\n  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n  var ws = [\n    '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n    '\\u2029\\uFEFF'\n  ].join('');\n  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\n  var trimShim = function trim() {\n    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');\n  };\n  var nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\n  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');\n  var isBadHexRegex = /^[-+]0x[0-9a-f]+$/i;\n  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;\n  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);\n\n  // Given an argument x, it will return an IteratorResult object,\n  // with value set to x and done to false.\n  // Given no arguments, it will return an iterator completion object.\n  var iteratorResult = function (x) {\n    return { value: x, done: arguments.length === 0 };\n  };\n\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype-@@iterator\n  var StringIterator = function (s) {\n    ES.RequireObjectCoercible(s);\n    this._s = ES.ToString(s);\n    this._i = 0;\n  };\n  StringIterator.prototype.next = function () {\n    var s = this._s;\n    var i = this._i;\n    if (typeof s === 'undefined' || i >= s.length) {\n      this._s = void 0;\n      return iteratorResult();\n    }\n    var first = s.charCodeAt(i);\n    var second, len;\n    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {\n      len = 1;\n    } else {\n      second = s.charCodeAt(i + 1);\n      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;\n    }\n    this._i = i + len;\n    return iteratorResult(s.substr(i, len));\n  };\n  addIterator(StringIterator.prototype);\n  addIterator(String.prototype, function () {\n    return new StringIterator(this);\n  });\n\n  var ArrayShims = {\n    from: function from(items) {\n      var C = this;\n      var mapFn;\n      if (arguments.length > 1) {\n        mapFn = arguments[1];\n      }\n      var mapping, T;\n      if (typeof mapFn === 'undefined') {\n        mapping = false;\n      } else {\n        if (!ES.IsCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n        mapping = true;\n      }\n\n      // Note that that Arrays will use ArrayIterator:\n      // https://bugs.ecmascript.org/show_bug.cgi?id=2416\n      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';\n\n      var length, result, i;\n      if (usingIterator) {\n        result = ES.IsConstructor(C) ? Object(new C()) : [];\n        var iterator = ES.GetIterator(items);\n        var next, nextValue;\n\n        i = 0;\n        while (true) {\n          next = ES.IteratorStep(iterator);\n          if (next === false) {\n            break;\n          }\n          nextValue = next.value;\n          try {\n            if (mapping) {\n              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);\n            }\n            result[i] = nextValue;\n          } catch (e) {\n            ES.IteratorClose(iterator, true);\n            throw e;\n          }\n          i += 1;\n        }\n        length = i;\n      } else {\n        var arrayLike = ES.ToObject(items);\n        length = ES.ToLength(arrayLike.length);\n        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);\n        var value;\n        for (i = 0; i < length; ++i) {\n          value = arrayLike[i];\n          if (mapping) {\n            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);\n          }\n          createDataPropertyOrThrow(result, i, value);\n        }\n      }\n\n      result.length = length;\n      return result;\n    },\n\n    of: function of() {\n      var len = arguments.length;\n      var C = this;\n      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);\n      for (var k = 0; k < len; ++k) {\n        createDataPropertyOrThrow(A, k, arguments[k]);\n      }\n      A.length = len;\n      return A;\n    }\n  };\n  defineProperties(Array, ArrayShims);\n  addDefaultSpecies(Array);\n\n  // Our ArrayIterator is private; see\n  // https://github.com/paulmillr/es6-shim/issues/252\n  ArrayIterator = function (array, kind) {\n    this.i = 0;\n    this.array = array;\n    this.kind = kind;\n  };\n\n  defineProperties(ArrayIterator.prototype, {\n    next: function () {\n      var i = this.i;\n      var array = this.array;\n      if (!(this instanceof ArrayIterator)) {\n        throw new TypeError('Not an ArrayIterator');\n      }\n      if (typeof array !== 'undefined') {\n        var len = ES.ToLength(array.length);\n        for (; i < len; i++) {\n          var kind = this.kind;\n          var retval;\n          if (kind === 'key') {\n            retval = i;\n          } else if (kind === 'value') {\n            retval = array[i];\n          } else if (kind === 'entry') {\n            retval = [i, array[i]];\n          }\n          this.i = i + 1;\n          return iteratorResult(retval);\n        }\n      }\n      this.array = void 0;\n      return iteratorResult();\n    }\n  });\n  addIterator(ArrayIterator.prototype);\n\n/*\n  var orderKeys = function orderKeys(a, b) {\n    var aNumeric = String(ES.ToInteger(a)) === a;\n    var bNumeric = String(ES.ToInteger(b)) === b;\n    if (aNumeric && bNumeric) {\n      return b - a;\n    } else if (aNumeric && !bNumeric) {\n      return -1;\n    } else if (!aNumeric && bNumeric) {\n      return 1;\n    } else {\n      return a.localeCompare(b);\n    }\n  };\n\n  var getAllKeys = function getAllKeys(object) {\n    var ownKeys = [];\n    var keys = [];\n\n    for (var key in object) {\n      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);\n    }\n    _sort(ownKeys, orderKeys);\n    _sort(keys, orderKeys);\n\n    return _concat(ownKeys, keys);\n  };\n  */\n\n  // note: this is positioned here because it depends on ArrayIterator\n  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {\n    // Detects a bug in Webkit nightly r181886\n    var Foo = function Foo(len) { this.length = len; };\n    Foo.prototype = [];\n    var fooArr = Array.of.apply(Foo, [1, 2]);\n    return fooArr instanceof Foo && fooArr.length === 2;\n  }());\n  if (!arrayOfSupportsSubclassing) {\n    overrideNative(Array, 'of', ArrayShims.of);\n  }\n\n  var ArrayPrototypeShims = {\n    copyWithin: function copyWithin(target, start) {\n      var o = ES.ToObject(this);\n      var len = ES.ToLength(o.length);\n      var relativeTarget = ES.ToInteger(target);\n      var relativeStart = ES.ToInteger(start);\n      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);\n      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);\n      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);\n      var count = _min(finalItem - from, len - to);\n      var direction = 1;\n      if (from < to && to < (from + count)) {\n        direction = -1;\n        from += count - 1;\n        to += count - 1;\n      }\n      while (count > 0) {\n        if (from in o) {\n          o[to] = o[from];\n        } else {\n          delete o[to];\n        }\n        from += direction;\n        to += direction;\n        count -= 1;\n      }\n      return o;\n    },\n\n    fill: function fill(value) {\n      var start;\n      if (arguments.length > 1) {\n        start = arguments[1];\n      }\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var O = ES.ToObject(this);\n      var len = ES.ToLength(O.length);\n      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);\n      end = ES.ToInteger(typeof end === 'undefined' ? len : end);\n\n      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);\n      var relativeEnd = end < 0 ? len + end : end;\n\n      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {\n        O[i] = value;\n      }\n      return O;\n    },\n\n    find: function find(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#find: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0, value; i < length; i++) {\n        value = list[i];\n        if (thisArg) {\n          if (_call(predicate, thisArg, value, i, list)) {\n            return value;\n          }\n        } else if (predicate(value, i, list)) {\n          return value;\n        }\n      }\n    },\n\n    findIndex: function findIndex(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#findIndex: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0; i < length; i++) {\n        if (thisArg) {\n          if (_call(predicate, thisArg, list[i], i, list)) {\n            return i;\n          }\n        } else if (predicate(list[i], i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n\n    keys: function keys() {\n      return new ArrayIterator(this, 'key');\n    },\n\n    values: function values() {\n      return new ArrayIterator(this, 'value');\n    },\n\n    entries: function entries() {\n      return new ArrayIterator(this, 'entry');\n    }\n  };\n  // Safari 7.1 defines Array#keys and Array#entries natively,\n  // but the resulting ArrayIterator objects don't have a \"next\" method.\n  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {\n    delete Array.prototype.keys;\n  }\n  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {\n    delete Array.prototype.entries;\n  }\n\n  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values\n  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {\n    defineProperties(Array.prototype, {\n      values: Array.prototype[$iterator$]\n    });\n    if (Type.symbol(Symbol.unscopables)) {\n      Array.prototype[Symbol.unscopables].values = true;\n    }\n  }\n  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name\n  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {\n    var originalArrayPrototypeValues = Array.prototype.values;\n    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });\n    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);\n  }\n  defineProperties(Array.prototype, ArrayPrototypeShims);\n\n  if (1 / [true].indexOf(true, -0) < 0) {\n    // indexOf when given a position arg of -0 should return +0.\n    // https://github.com/tc39/ecma262/pull/316\n    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {\n      var value = _arrayIndexOfApply(this, arguments);\n      if (value === 0 && (1 / value) < 0) {\n        return 0;\n      }\n      return value;\n    }, true);\n  }\n\n  addIterator(Array.prototype, function () { return this.values(); });\n  // Chrome defines keys/values/entries on Array, but doesn't give us\n  // any way to identify its iterator.  So add our own shimmed field.\n  if (Object.getPrototypeOf) {\n    addIterator(Object.getPrototypeOf([].values()));\n  }\n\n  // note: this is positioned here because it relies on Array#entries\n  var arrayFromSwallowsNegativeLengths = (function () {\n    // Detects a Firefox bug in v32\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993\n    return valueOrFalseIfThrows(function () {\n      return Array.from({ length: -1 }).length === 0;\n    });\n  }());\n  var arrayFromHandlesIterables = (function () {\n    // Detects a bug in Webkit nightly r181886\n    var arr = Array.from([0].entries());\n    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;\n  }());\n  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {\n    overrideNative(Array, 'from', ArrayShims.from);\n  }\n  var arrayFromHandlesUndefinedMapFunction = (function () {\n    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,\n    // but the spec doesn't care if it's provided or not - undefined doesn't throw.\n    return valueOrFalseIfThrows(function () {\n      return Array.from([0], void 0);\n    });\n  }());\n  if (!arrayFromHandlesUndefinedMapFunction) {\n    var origArrayFrom = Array.from;\n    overrideNative(Array, 'from', function from(items) {\n      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {\n        return ES.Call(origArrayFrom, this, arguments);\n      } else {\n        return _call(origArrayFrom, this, items);\n      }\n    });\n  }\n\n  var int32sAsOne = -(Math.pow(2, 32) - 1);\n  var toLengthsCorrectly = function (method, reversed) {\n    var obj = { length: int32sAsOne };\n    obj[reversed ? (obj.length >>> 0) - 1 : 0] = true;\n    return valueOrFalseIfThrows(function () {\n      _call(method, obj, function () {\n        // note: in nonconforming browsers, this will be called\n        // -1 >>> 0 times, which is 4294967295, so the throw matters.\n        throw new RangeError('should not reach here');\n      }, []);\n      return true;\n    });\n  };\n  if (!toLengthsCorrectly(Array.prototype.forEach)) {\n    var originalForEach = Array.prototype.forEach;\n    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {\n      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.map)) {\n    var originalMap = Array.prototype.map;\n    overrideNative(Array.prototype, 'map', function map(callbackFn) {\n      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.filter)) {\n    var originalFilter = Array.prototype.filter;\n    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {\n      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.some)) {\n    var originalSome = Array.prototype.some;\n    overrideNative(Array.prototype, 'some', function some(callbackFn) {\n      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.every)) {\n    var originalEvery = Array.prototype.every;\n    overrideNative(Array.prototype, 'every', function every(callbackFn) {\n      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduce)) {\n    var originalReduce = Array.prototype.reduce;\n    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {\n      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {\n    var originalReduceRight = Array.prototype.reduceRight;\n    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {\n      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n\n  var lacksOctalSupport = Number('0o10') !== 8;\n  var lacksBinarySupport = Number('0b10') !== 2;\n  var trimsNonWhitespace = _some(nonWS, function (c) {\n    return Number(c + 0 + c) === 0;\n  });\n  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {\n    var OrigNumber = Number;\n    var binaryRegex = /^0b[01]+$/i;\n    var octalRegex = /^0o[0-7]+$/i;\n    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is an own property of regexes. wtf.\n    var isBinary = binaryRegex.test.bind(binaryRegex);\n    var isOctal = octalRegex.test.bind(octalRegex);\n    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`\n      var result;\n      if (typeof O.valueOf === 'function') {\n        result = O.valueOf();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      if (typeof O.toString === 'function') {\n        result = O.toString();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      throw new TypeError('No default value');\n    };\n    var hasNonWS = nonWSregex.test.bind(nonWSregex);\n    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);\n    var NumberShim = (function () {\n      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.\n      var NumberShim = function Number(value) {\n        var primValue;\n        if (arguments.length > 0) {\n          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');\n        } else {\n          primValue = 0;\n        }\n        if (typeof primValue === 'string') {\n          primValue = ES.Call(trimShim, primValue);\n          if (isBinary(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 2);\n          } else if (isOctal(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 8);\n          } else if (hasNonWS(primValue) || isBadHex(primValue)) {\n            primValue = NaN;\n          }\n        }\n        var receiver = this;\n        var valueOfSucceeds = valueOrFalseIfThrows(function () {\n          OrigNumber.prototype.valueOf.call(receiver);\n          return true;\n        });\n        if (receiver instanceof NumberShim && !valueOfSucceeds) {\n          return new OrigNumber(primValue);\n        }\n        /* jshint newcap: false */\n        return OrigNumber(primValue);\n        /* jshint newcap: true */\n      };\n      return NumberShim;\n    }());\n    wrapConstructor(OrigNumber, NumberShim, {});\n    // this is necessary for ES3 browsers, where these properties are non-enumerable.\n    defineProperties(NumberShim, {\n      NaN: OrigNumber.NaN,\n      MAX_VALUE: OrigNumber.MAX_VALUE,\n      MIN_VALUE: OrigNumber.MIN_VALUE,\n      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,\n      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY\n    });\n    /* globals Number: true */\n    /* eslint-disable no-undef, no-global-assign */\n    /* jshint -W020 */\n    Number = NumberShim;\n    Value.redefine(globals, 'Number', NumberShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef, no-global-assign */\n    /* globals Number: false */\n  }\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  defineProperties(Number, {\n    MAX_SAFE_INTEGER: maxSafeInteger,\n    MIN_SAFE_INTEGER: -maxSafeInteger,\n    EPSILON: 2.220446049250313e-16,\n\n    parseInt: globals.parseInt,\n    parseFloat: globals.parseFloat,\n\n    isFinite: numberIsFinite,\n\n    isInteger: function isInteger(value) {\n      return numberIsFinite(value) && ES.ToInteger(value) === value;\n    },\n\n    isSafeInteger: function isSafeInteger(value) {\n      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;\n    },\n\n    isNaN: numberIsNaN\n  });\n  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)\n  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);\n\n  // Work around bugs in Array#find and Array#findIndex -- early\n  // implementations skipped holes in sparse arrays. (Note that the\n  // implementations of find/findIndex indirectly use shimmed\n  // methods of Number, so this test has to happen down here.)\n  /*jshint elision: true */\n  /* eslint-disable no-sparse-arrays */\n  if ([, 1].find(function () { return true; }) === 1) {\n    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);\n  }\n  if ([, 1].findIndex(function () { return true; }) !== 0) {\n    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);\n  }\n  /* eslint-enable no-sparse-arrays */\n  /*jshint elision: false */\n\n  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);\n  var ensureEnumerable = function ensureEnumerable(obj, prop) {\n    if (supportsDescriptors && isEnumerableOn(obj, prop)) {\n      Object.defineProperty(obj, prop, { enumerable: false });\n    }\n  };\n  var sliceArgs = function sliceArgs() {\n    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29\n    var initial = Number(this);\n    var len = arguments.length;\n    var desiredArgCount = len - initial;\n    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);\n    for (var i = initial; i < len; ++i) {\n      args[i - initial] = arguments[i];\n    }\n    return args;\n  };\n  var assignTo = function assignTo(source) {\n    return function assignToSource(target, key) {\n      target[key] = source[key];\n      return target;\n    };\n  };\n  var assignReducer = function (target, source) {\n    var sourceKeys = keys(Object(source));\n    var symbols;\n    if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));\n    }\n    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);\n  };\n\n  var ObjectShims = {\n    // 19.1.3.1\n    assign: function (target, source) {\n      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');\n      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);\n    },\n\n    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865\n    is: function is(a, b) {\n      return ES.SameValue(a, b);\n    }\n  };\n  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {\n    // Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n    // which is 72% slower than our shim, and Firefox 40's native implementation.\n    var thrower = Object.preventExtensions({ 1: 2 });\n    try {\n      Object.assign(thrower, 'xy');\n    } catch (e) {\n      return thrower[1] === 'y';\n    }\n  }());\n  if (assignHasPendingExceptions) {\n    overrideNative(Object, 'assign', ObjectShims.assign);\n  }\n  defineProperties(Object, ObjectShims);\n\n  if (supportsDescriptors) {\n    var ES5ObjectShims = {\n      // 19.1.3.9\n      // shim from https://gist.github.com/WebReflection/5593554\n      setPrototypeOf: (function (Object, magic) {\n        var set;\n\n        var checkArgs = function (O, proto) {\n          if (!ES.TypeIsObject(O)) {\n            throw new TypeError('cannot set prototype on a non-object');\n          }\n          if (!(proto === null || ES.TypeIsObject(proto))) {\n            throw new TypeError('can only set prototype to an object or null' + proto);\n          }\n        };\n\n        var setPrototypeOf = function (O, proto) {\n          checkArgs(O, proto);\n          _call(set, O, proto);\n          return O;\n        };\n\n        try {\n          // this works already in Firefox and Safari\n          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;\n          _call(set, {}, null);\n        } catch (e) {\n          if (Object.prototype !== {}[magic]) {\n            // IE < 11 cannot be shimmed\n            return;\n          }\n          // probably Chrome or some old Mobile stock browser\n          set = function (proto) {\n            this[magic] = proto;\n          };\n          // please note that this will **not** work\n          // in those browsers that do not inherit\n          // __proto__ by mistake from Object.prototype\n          // in these cases we should probably throw an error\n          // or at least be informed about the issue\n          setPrototypeOf.polyfill = setPrototypeOf(\n            setPrototypeOf({}, null),\n            Object.prototype\n          ) instanceof Object;\n          // setPrototypeOf.polyfill === true means it works as meant\n          // setPrototypeOf.polyfill === false means it's not 100% reliable\n          // setPrototypeOf.polyfill === undefined\n          // or\n          // setPrototypeOf.polyfill ==  null means it's not a polyfill\n          // which means it works as expected\n          // we can even delete Object.prototype.__proto__;\n        }\n        return setPrototypeOf;\n      }(Object, '__proto__'))\n    };\n\n    defineProperties(Object, ES5ObjectShims);\n  }\n\n  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,\n  // but Object.create(null) does.\n  if (Object.setPrototypeOf && Object.getPrototypeOf &&\n      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&\n      Object.getPrototypeOf(Object.create(null)) === null) {\n    (function () {\n      var FAKENULL = Object.create(null);\n      var gpo = Object.getPrototypeOf;\n      var spo = Object.setPrototypeOf;\n      Object.getPrototypeOf = function (o) {\n        var result = gpo(o);\n        return result === FAKENULL ? null : result;\n      };\n      Object.setPrototypeOf = function (o, p) {\n        var proto = p === null ? FAKENULL : p;\n        return spo(o, proto);\n      };\n      Object.setPrototypeOf.polyfill = false;\n    }());\n  }\n\n  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });\n  if (!objectKeysAcceptsPrimitives) {\n    var originalObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      return originalObjectKeys(ES.ToObject(value));\n    });\n    keys = Object.keys;\n  }\n  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });\n  if (objectKeysRejectsRegex) {\n    var regexRejectingObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      if (Type.regex(value)) {\n        var regexKeys = [];\n        for (var k in value) {\n          if (_hasOwnProperty(value, k)) {\n            _push(regexKeys, k);\n          }\n        }\n        return regexKeys;\n      }\n      return regexRejectingObjectKeys(value);\n    });\n    keys = Object.keys;\n  }\n\n  if (Object.getOwnPropertyNames) {\n    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });\n    if (!objectGOPNAcceptsPrimitives) {\n      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\n      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {\n        var val = ES.ToObject(value);\n        if (_toString(val) === '[object Window]') {\n          try {\n            return originalObjectGetOwnPropertyNames(val);\n          } catch (e) {\n            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects\n            return _concat([], cachedWindowNames);\n          }\n        }\n        return originalObjectGetOwnPropertyNames(val);\n      });\n    }\n  }\n  if (Object.getOwnPropertyDescriptor) {\n    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });\n    if (!objectGOPDAcceptsPrimitives) {\n      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {\n        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);\n      });\n    }\n  }\n  if (Object.seal) {\n    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });\n    if (!objectSealAcceptsPrimitives) {\n      var originalObjectSeal = Object.seal;\n      overrideNative(Object, 'seal', function seal(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectSeal(value);\n      });\n    }\n  }\n  if (Object.isSealed) {\n    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });\n    if (!objectIsSealedAcceptsPrimitives) {\n      var originalObjectIsSealed = Object.isSealed;\n      overrideNative(Object, 'isSealed', function isSealed(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsSealed(value);\n      });\n    }\n  }\n  if (Object.freeze) {\n    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });\n    if (!objectFreezeAcceptsPrimitives) {\n      var originalObjectFreeze = Object.freeze;\n      overrideNative(Object, 'freeze', function freeze(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectFreeze(value);\n      });\n    }\n  }\n  if (Object.isFrozen) {\n    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });\n    if (!objectIsFrozenAcceptsPrimitives) {\n      var originalObjectIsFrozen = Object.isFrozen;\n      overrideNative(Object, 'isFrozen', function isFrozen(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsFrozen(value);\n      });\n    }\n  }\n  if (Object.preventExtensions) {\n    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });\n    if (!objectPreventExtensionsAcceptsPrimitives) {\n      var originalObjectPreventExtensions = Object.preventExtensions;\n      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectPreventExtensions(value);\n      });\n    }\n  }\n  if (Object.isExtensible) {\n    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });\n    if (!objectIsExtensibleAcceptsPrimitives) {\n      var originalObjectIsExtensible = Object.isExtensible;\n      overrideNative(Object, 'isExtensible', function isExtensible(value) {\n        if (!ES.TypeIsObject(value)) { return false; }\n        return originalObjectIsExtensible(value);\n      });\n    }\n  }\n  if (Object.getPrototypeOf) {\n    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });\n    if (!objectGetProtoAcceptsPrimitives) {\n      var originalGetProto = Object.getPrototypeOf;\n      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {\n        return originalGetProto(ES.ToObject(value));\n      });\n    }\n  }\n\n  var hasFlags = supportsDescriptors && (function () {\n    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n    return desc && ES.IsCallable(desc.get);\n  }());\n  if (supportsDescriptors && !hasFlags) {\n    var regExpFlagsGetter = function flags() {\n      if (!ES.TypeIsObject(this)) {\n        throw new TypeError('Method called on incompatible type: must be an object.');\n      }\n      var result = '';\n      if (this.global) {\n        result += 'g';\n      }\n      if (this.ignoreCase) {\n        result += 'i';\n      }\n      if (this.multiline) {\n        result += 'm';\n      }\n      if (this.unicode) {\n        result += 'u';\n      }\n      if (this.sticky) {\n        result += 'y';\n      }\n      return result;\n    };\n\n    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);\n  }\n\n  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {\n    return String(new RegExp(/a/g, 'i')) === '/a/i';\n  });\n  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {\n    // Edge 0.12 supports flags fully, but does not support Symbol.match\n    var regex = /./;\n    regex[Symbol.match] = false;\n    return RegExp(regex) === regex;\n  }());\n\n  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';\n  });\n  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';\n  });\n  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {\n    var origRegExpToString = RegExp.prototype.toString;\n    defineProperty(RegExp.prototype, 'toString', function toString() {\n      var R = ES.RequireObjectCoercible(this);\n      if (Type.regex(R)) {\n        return _call(origRegExpToString, R);\n      }\n      var pattern = $String(R.source);\n      var flags = $String(R.flags);\n      return '/' + pattern + '/' + flags;\n    }, true);\n    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);\n  }\n\n  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {\n    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;\n    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};\n    var legacySourceGetter = function () {\n      // prior to it being a getter, it's own + nonconfigurable\n      return this.source;\n    };\n    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;\n\n    var OrigRegExp = RegExp;\n    var RegExpShim = (function () {\n      return function RegExp(pattern, flags) {\n        var patternIsRegExp = ES.IsRegExp(pattern);\n        var calledWithNew = this instanceof RegExp;\n        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {\n          return pattern;\n        }\n\n        var P = pattern;\n        var F = flags;\n        if (Type.regex(pattern)) {\n          P = ES.Call(sourceGetter, pattern);\n          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;\n          return new RegExp(P, F);\n        } else if (patternIsRegExp) {\n          P = pattern.source;\n          F = typeof flags === 'undefined' ? pattern.flags : flags;\n        }\n        return new OrigRegExp(pattern, flags);\n      };\n    }());\n    wrapConstructor(OrigRegExp, RegExpShim, {\n      $input: true // Chrome < v39 & Opera < 26 have a nonstandard \"$input\" property\n    });\n    /* globals RegExp: true */\n    /* eslint-disable no-undef, no-global-assign */\n    /* jshint -W020 */\n    RegExp = RegExpShim;\n    Value.redefine(globals, 'RegExp', RegExpShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef, no-global-assign */\n    /* globals RegExp: false */\n  }\n\n  if (supportsDescriptors) {\n    var regexGlobals = {\n      input: '$_',\n      lastMatch: '$&',\n      lastParen: '$+',\n      leftContext: '$`',\n      rightContext: '$\\''\n    };\n    _forEach(keys(regexGlobals), function (prop) {\n      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {\n        Value.getter(RegExp, regexGlobals[prop], function get() {\n          return RegExp[prop];\n        });\n      }\n    });\n  }\n  addDefaultSpecies(RegExp);\n\n  var inverseEpsilon = 1 / Number.EPSILON;\n  var roundTiesToEven = function roundTiesToEven(n) {\n    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.\n    return (n + inverseEpsilon) - inverseEpsilon;\n  };\n  var BINARY_32_EPSILON = Math.pow(2, -23);\n  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);\n  var BINARY_32_MIN_VALUE = Math.pow(2, -126);\n  var E = Math.E;\n  var LOG2E = Math.LOG2E;\n  var LOG10E = Math.LOG10E;\n  var numberCLZ = Number.prototype.clz;\n  delete Number.prototype.clz; // Safari 8 has Number#clz\n\n  var MathShims = {\n    acosh: function acosh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || value < 1) { return NaN; }\n      if (x === 1) { return 0; }\n      if (x === Infinity) { return x; }\n      return _log((x / E) + (_sqrt(x + 1) * _sqrt(x - 1) / E)) + 1;\n    },\n\n    asinh: function asinh(value) {\n      var x = Number(value);\n      if (x === 0 || !globalIsFinite(x)) {\n        return x;\n      }\n      return x < 0 ? -asinh(-x) : _log(x + _sqrt((x * x) + 1));\n    },\n\n    atanh: function atanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x < -1 || x > 1) {\n        return NaN;\n      }\n      if (x === -1) { return -Infinity; }\n      if (x === 1) { return Infinity; }\n      if (x === 0) { return x; }\n      return 0.5 * _log((1 + x) / (1 - x));\n    },\n\n    cbrt: function cbrt(value) {\n      var x = Number(value);\n      if (x === 0) { return x; }\n      var negate = x < 0;\n      var result;\n      if (negate) { x = -x; }\n      if (x === Infinity) {\n        result = Infinity;\n      } else {\n        result = _exp(_log(x) / 3);\n        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n        result = ((x / (result * result)) + (2 * result)) / 3;\n      }\n      return negate ? -result : result;\n    },\n\n    clz32: function clz32(value) {\n      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465\n      var x = Number(value);\n      var number = ES.ToUint32(x);\n      if (number === 0) {\n        return 32;\n      }\n      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * LOG2E);\n    },\n\n    cosh: function cosh(value) {\n      var x = Number(value);\n      if (x === 0) { return 1; } // +0 or -0\n      if (numberIsNaN(x)) { return NaN; }\n      if (!globalIsFinite(x)) { return Infinity; }\n      if (x < 0) { x = -x; }\n      if (x > 21) { return _exp(x) / 2; }\n      return (_exp(x) + _exp(-x)) / 2;\n    },\n\n    expm1: function expm1(value) {\n      var x = Number(value);\n      if (x === -Infinity) { return -1; }\n      if (!globalIsFinite(x) || x === 0) { return x; }\n      if (_abs(x) > 0.5) {\n        return _exp(x) - 1;\n      }\n      // A more precise approximation using Taylor series expansion\n      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986\n      var t = x;\n      var sum = 0;\n      var n = 1;\n      while (sum + t !== sum) {\n        sum += t;\n        n += 1;\n        t *= x / n;\n      }\n      return sum;\n    },\n\n    hypot: function hypot(x, y) {\n      var result = 0;\n      var largest = 0;\n      for (var i = 0; i < arguments.length; ++i) {\n        var value = _abs(Number(arguments[i]));\n        if (largest < value) {\n          result *= (largest / value) * (largest / value);\n          result += 1;\n          largest = value;\n        } else {\n          result += value > 0 ? (value / largest) * (value / largest) : value;\n        }\n      }\n      return largest === Infinity ? Infinity : largest * _sqrt(result);\n    },\n\n    log2: function log2(value) {\n      return _log(value) * LOG2E;\n    },\n\n    log10: function log10(value) {\n      return _log(value) * LOG10E;\n    },\n\n    log1p: function log1p(value) {\n      var x = Number(value);\n      if (x < -1 || numberIsNaN(x)) { return NaN; }\n      if (x === 0 || x === Infinity) { return x; }\n      if (x === -1) { return -Infinity; }\n\n      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));\n    },\n\n    sign: _sign,\n\n    sinh: function sinh(value) {\n      var x = Number(value);\n      if (!globalIsFinite(x) || x === 0) { return x; }\n\n      if (_abs(x) < 1) {\n        return (Math.expm1(x) - Math.expm1(-x)) / 2;\n      }\n      return (_exp(x - 1) - _exp(-x - 1)) * E / 2;\n    },\n\n    tanh: function tanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x === 0) { return x; }\n      // can exit early at +-20 as JS loses precision for true value at this integer\n      if (x >= 20) { return 1; }\n      if (x <= -20) { return -1; }\n\n      return (Math.expm1(x) - Math.expm1(-x)) / (_exp(x) + _exp(-x));\n    },\n\n    trunc: function trunc(value) {\n      var x = Number(value);\n      return x < 0 ? -_floor(-x) : _floor(x);\n    },\n\n    imul: function imul(x, y) {\n      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n      var a = ES.ToUint32(x);\n      var b = ES.ToUint32(y);\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + ((((ah * bl) + (al * bh)) << 16) >>> 0) | 0;\n    },\n\n    fround: function fround(x) {\n      var v = Number(x);\n      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {\n        return v;\n      }\n      var sign = _sign(v);\n      var abs = _abs(v);\n      if (abs < BINARY_32_MIN_VALUE) {\n        return sign * roundTiesToEven(\n          abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON\n        ) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;\n      }\n      // Veltkamp's splitting (?)\n      var a = (1 + (BINARY_32_EPSILON / Number.EPSILON)) * abs;\n      var result = a - (a - abs);\n      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {\n        return sign * Infinity;\n      }\n      return sign * result;\n    }\n  };\n  defineProperties(Math, MathShims);\n  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0\n  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);\n  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)\n  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));\n  // Chrome 40 has an imprecise Math.tanh with very small numbers\n  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);\n  // Chrome 40 loses Math.acosh precision with high numbers\n  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);\n  // Firefox 38 on Windows\n  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - (Math.cbrt(1e-300) / 1e-100)) / Number.EPSILON > 8);\n  // node 0.11 has an imprecise Math.sinh with very small numbers\n  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);\n  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)\n  var expm1OfTen = Math.expm1(10);\n  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);\n\n  var origMathRound = Math.round;\n  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12\n  var roundHandlesBoundaryConditions = Math.round(0.5 - (Number.EPSILON / 4)) === 0 &&\n    Math.round(-0.5 + (Number.EPSILON / 3.99)) === 1;\n\n  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.\n  // This behavior should be governed by \"round to nearest, ties to even mode\"\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-terms-and-definitions-number-type\n  // These are the boundary cases where it breaks.\n  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;\n  var largestPositiveNumberWhereRoundBreaks = (2 * inverseEpsilon) - 1;\n  var roundDoesNotIncreaseIntegers = [\n    smallestPositiveNumberWhereRoundBreaks,\n    largestPositiveNumberWhereRoundBreaks\n  ].every(function (num) {\n    return Math.round(num) === num;\n  });\n  defineProperty(Math, 'round', function round(x) {\n    var floor = _floor(x);\n    var ceil = floor === -1 ? -0 : floor + 1;\n    return x - floor < 0.5 ? floor : ceil;\n  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);\n  Value.preserveToString(Math.round, origMathRound);\n\n  var origImul = Math.imul;\n  if (Math.imul(0xffffffff, 5) !== -5) {\n    // Safari 6.1, at least, reports \"0\" for this value\n    Math.imul = MathShims.imul;\n    Value.preserveToString(Math.imul, origImul);\n  }\n  if (Math.imul.length !== 2) {\n    // Safari 8.0.4 has a length of 1\n    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658\n    overrideNative(Math, 'imul', function imul(x, y) {\n      return ES.Call(origImul, Math, arguments);\n    });\n  }\n\n  // Promises\n  // Simplest possible implementation; use a 3rd-party library if you\n  // want the best possible speed and/or long stack traces.\n  var PromiseShim = (function () {\n    var setTimeout = globals.setTimeout;\n    // some environments don't have setTimeout - no way to shim here.\n    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }\n\n    ES.IsPromise = function (promise) {\n      if (!ES.TypeIsObject(promise)) {\n        return false;\n      }\n      if (typeof promise._promise === 'undefined') {\n        return false; // uninitialized, or missing our hidden field.\n      }\n      return true;\n    };\n\n    // \"PromiseCapability\" in the spec is what most promise implementations\n    // call a \"deferred\".\n    var PromiseCapability = function (C) {\n      if (!ES.IsConstructor(C)) {\n        throw new TypeError('Bad promise constructor');\n      }\n      var capability = this;\n      var resolver = function (resolve, reject) {\n        if (capability.resolve !== void 0 || capability.reject !== void 0) {\n          throw new TypeError('Bad Promise implementation!');\n        }\n        capability.resolve = resolve;\n        capability.reject = reject;\n      };\n      // Initialize fields to inform optimizers about the object shape.\n      capability.resolve = void 0;\n      capability.reject = void 0;\n      capability.promise = new C(resolver);\n      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {\n        throw new TypeError('Bad promise constructor');\n      }\n    };\n\n    // find an appropriate setImmediate-alike\n    var makeZeroTimeout;\n    /*global window */\n    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {\n      makeZeroTimeout = function () {\n        // from http://dbaron.org/log/20100309-faster-timeouts\n        var timeouts = [];\n        var messageName = 'zero-timeout-message';\n        var setZeroTimeout = function (fn) {\n          _push(timeouts, fn);\n          window.postMessage(messageName, '*');\n        };\n        var handleMessage = function (event) {\n          if (event.source === window && event.data === messageName) {\n            event.stopPropagation();\n            if (timeouts.length === 0) { return; }\n            var fn = _shift(timeouts);\n            fn();\n          }\n        };\n        window.addEventListener('message', handleMessage, true);\n        return setZeroTimeout;\n      };\n    }\n    var makePromiseAsap = function () {\n      // An efficient task-scheduler based on a pre-existing Promise\n      // implementation, which we can use even if we override the\n      // global Promise below (in order to workaround bugs)\n      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671\n      var P = globals.Promise;\n      var pr = P && P.resolve && P.resolve();\n      return pr && function (task) {\n        return pr.then(task);\n      };\n    };\n    /*global process */\n    /* jscs:disable disallowMultiLineTernary */\n    var enqueue = ES.IsCallable(globals.setImmediate) ?\n      globals.setImmediate :\n      typeof process === 'object' && process.nextTick ? process.nextTick :\n      makePromiseAsap() ||\n      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :\n      function (task) { setTimeout(task, 0); }); // fallback\n    /* jscs:enable disallowMultiLineTernary */\n\n    // Constants for Promise implementation\n    var PROMISE_IDENTITY = function (x) { return x; };\n    var PROMISE_THROWER = function (e) { throw e; };\n    var PROMISE_PENDING = 0;\n    var PROMISE_FULFILLED = 1;\n    var PROMISE_REJECTED = 2;\n    // We store fulfill/reject handlers and capabilities in a single array.\n    var PROMISE_FULFILL_OFFSET = 0;\n    var PROMISE_REJECT_OFFSET = 1;\n    var PROMISE_CAPABILITY_OFFSET = 2;\n    // This is used in an optimization for chaining promises via then.\n    var PROMISE_FAKE_CAPABILITY = {};\n\n    var enqueuePromiseReactionJob = function (handler, capability, argument) {\n      enqueue(function () {\n        promiseReactionJob(handler, capability, argument);\n      });\n    };\n\n    var promiseReactionJob = function (handler, promiseCapability, argument) {\n      var handlerResult, f;\n      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {\n        // Fast case, when we don't actually need to chain through to a\n        // (real) promiseCapability.\n        return handler(argument);\n      }\n      try {\n        handlerResult = handler(argument);\n        f = promiseCapability.resolve;\n      } catch (e) {\n        handlerResult = e;\n        f = promiseCapability.reject;\n      }\n      f(handlerResult);\n    };\n\n    var fulfillPromise = function (promise, value) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.fulfillReactionHandler0,\n          _promise.reactionCapability0,\n          value\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_FULFILL_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              value\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = value;\n      _promise.state = PROMISE_FULFILLED;\n      _promise.reactionLength = 0;\n    };\n\n    var rejectPromise = function (promise, reason) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.rejectReactionHandler0,\n          _promise.reactionCapability0,\n          reason\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_REJECT_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              reason\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = reason;\n      _promise.state = PROMISE_REJECTED;\n      _promise.reactionLength = 0;\n    };\n\n    var createResolvingFunctions = function (promise) {\n      var alreadyResolved = false;\n      var resolve = function (resolution) {\n        var then;\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        if (resolution === promise) {\n          return rejectPromise(promise, new TypeError('Self resolution'));\n        }\n        if (!ES.TypeIsObject(resolution)) {\n          return fulfillPromise(promise, resolution);\n        }\n        try {\n          then = resolution.then;\n        } catch (e) {\n          return rejectPromise(promise, e);\n        }\n        if (!ES.IsCallable(then)) {\n          return fulfillPromise(promise, resolution);\n        }\n        enqueue(function () {\n          promiseResolveThenableJob(promise, resolution, then);\n        });\n      };\n      var reject = function (reason) {\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        return rejectPromise(promise, reason);\n      };\n      return { resolve: resolve, reject: reject };\n    };\n\n    var optimizedThen = function (then, thenable, resolve, reject) {\n      // Optimization: since we discard the result, we can pass our\n      // own then implementation a special hint to let it know it\n      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY\n      // object is local to this implementation and unforgeable outside.)\n      if (then === Promise$prototype$then) {\n        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);\n      } else {\n        _call(then, thenable, resolve, reject);\n      }\n    };\n    var promiseResolveThenableJob = function (promise, thenable, then) {\n      var resolvingFunctions = createResolvingFunctions(promise);\n      var resolve = resolvingFunctions.resolve;\n      var reject = resolvingFunctions.reject;\n      try {\n        optimizedThen(then, thenable, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    var Promise$prototype, Promise$prototype$then;\n    var Promise = (function () {\n      var PromiseShim = function Promise(resolver) {\n        if (!(this instanceof PromiseShim)) {\n          throw new TypeError('Constructor Promise requires \"new\"');\n        }\n        if (this && this._promise) {\n          throw new TypeError('Bad construction');\n        }\n        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482\n        if (!ES.IsCallable(resolver)) {\n          throw new TypeError('not a valid resolver');\n        }\n        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {\n          _promise: {\n            result: void 0,\n            state: PROMISE_PENDING,\n            // The first member of the \"reactions\" array is inlined here,\n            // since most promises only have one reaction.\n            // We've also exploded the 'reaction' object to inline the\n            // \"handler\" and \"capability\" fields, since both fulfill and\n            // reject reactions share the same capability.\n            reactionLength: 0,\n            fulfillReactionHandler0: void 0,\n            rejectReactionHandler0: void 0,\n            reactionCapability0: void 0\n          }\n        });\n        var resolvingFunctions = createResolvingFunctions(promise);\n        var reject = resolvingFunctions.reject;\n        try {\n          resolver(resolvingFunctions.resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        return promise;\n      };\n      return PromiseShim;\n    }());\n    Promise$prototype = Promise.prototype;\n\n    var _promiseAllResolver = function (index, values, capability, remaining) {\n      var alreadyCalled = false;\n      return function (x) {\n        if (alreadyCalled) { return; }\n        alreadyCalled = true;\n        values[index] = x;\n        if ((--remaining.count) === 0) {\n          var resolve = capability.resolve;\n          resolve(values); // call w/ this===undefined\n        }\n      };\n    };\n\n    var performPromiseAll = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var values = [];\n      var remaining = { count: 1 };\n      var next, nextValue;\n      var index = 0;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        values[index] = void 0;\n        var nextPromise = C.resolve(nextValue);\n        var resolveElement = _promiseAllResolver(\n          index, values, resultCapability, remaining\n        );\n        remaining.count += 1;\n        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);\n        index += 1;\n      }\n      if ((--remaining.count) === 0) {\n        var resolve = resultCapability.resolve;\n        resolve(values); // call w/ this===undefined\n      }\n      return resultCapability.promise;\n    };\n\n    var performPromiseRace = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var next, nextValue, nextPromise;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            // NOTE: If iterable has no items, resulting promise will never\n            // resolve; see:\n            // https://github.com/domenic/promises-unwrapping/issues/75\n            // https://bugs.ecmascript.org/show_bug.cgi?id=2515\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        nextPromise = C.resolve(nextValue);\n        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);\n      }\n      return resultCapability.promise;\n    };\n\n    defineProperties(Promise, {\n      all: function all(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseAll(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      race: function race(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseRace(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      reject: function reject(reason) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        var capability = new PromiseCapability(C);\n        var rejectFunc = capability.reject;\n        rejectFunc(reason); // call with this===undefined\n        return capability.promise;\n      },\n\n      resolve: function resolve(v) {\n        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        if (ES.IsPromise(v)) {\n          var constructor = v.constructor;\n          if (constructor === C) {\n            return v;\n          }\n        }\n        var capability = new PromiseCapability(C);\n        var resolveFunc = capability.resolve;\n        resolveFunc(v); // call with this===undefined\n        return capability.promise;\n      }\n    });\n\n    defineProperties(Promise$prototype, {\n      'catch': function (onRejected) {\n        return this.then(null, onRejected);\n      },\n\n      then: function then(onFulfilled, onRejected) {\n        var promise = this;\n        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }\n        var C = ES.SpeciesConstructor(promise, Promise);\n        var resultCapability;\n        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;\n        if (returnValueIsIgnored && C === Promise) {\n          resultCapability = PROMISE_FAKE_CAPABILITY;\n        } else {\n          resultCapability = new PromiseCapability(C);\n        }\n        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)\n        // Note that we've split the 'reaction' object into its two\n        // components, \"capabilities\" and \"handler\"\n        // \"capabilities\" is always equal to `resultCapability`\n        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;\n        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;\n        var _promise = promise._promise;\n        var value;\n        if (_promise.state === PROMISE_PENDING) {\n          if (_promise.reactionLength === 0) {\n            _promise.fulfillReactionHandler0 = fulfillReactionHandler;\n            _promise.rejectReactionHandler0 = rejectReactionHandler;\n            _promise.reactionCapability0 = resultCapability;\n          } else {\n            var idx = 3 * (_promise.reactionLength - 1);\n            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;\n            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;\n            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;\n          }\n          _promise.reactionLength += 1;\n        } else if (_promise.state === PROMISE_FULFILLED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            fulfillReactionHandler, resultCapability, value\n          );\n        } else if (_promise.state === PROMISE_REJECTED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            rejectReactionHandler, resultCapability, value\n          );\n        } else {\n          throw new TypeError('unexpected Promise state');\n        }\n        return resultCapability.promise;\n      }\n    });\n    // This helps the optimizer by ensuring that methods which take\n    // capabilities aren't polymorphic.\n    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);\n    Promise$prototype$then = Promise$prototype.then;\n\n    return Promise;\n  }());\n\n  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.\n  if (globals.Promise) {\n    delete globals.Promise.accept;\n    delete globals.Promise.defer;\n    delete globals.Promise.prototype.chain;\n  }\n\n  if (typeof PromiseShim === 'function') {\n    // export the Promise constructor.\n    defineProperties(globals, { Promise: PromiseShim });\n    // In Chrome 33 (and thereabouts) Promise is defined, but the\n    // implementation is buggy in a number of ways.  Let's check subclassing\n    // support to see if we have a buggy implementation.\n    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {\n      return S.resolve(42).then(function () {}) instanceof S;\n    });\n    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () {\n      globals.Promise.reject(42).then(null, 5).then(null, noop);\n    });\n    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });\n    // Promise.resolve() was errata'ed late in the ES6 process.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742\n    //      https://code.google.com/p/v8/issues/detail?id=4161\n    // It serves as a proxy for a number of other bugs in early Promise\n    // implementations.\n    var promiseResolveBroken = (function (Promise) {\n      var p = Promise.resolve(5);\n      p.constructor = {};\n      var p2 = Promise.resolve(p);\n      try {\n        p2.then(null, noop).then(null, noop); // avoid \"uncaught rejection\" warnings in console\n      } catch (e) {\n        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314\n      }\n      return p === p2; // This *should* be false!\n    }(globals.Promise));\n\n    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously\n    var getsThenSynchronously = supportsDescriptors && (function () {\n      var count = 0;\n      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });\n      Promise.resolve(thenable);\n      return count === 1;\n    }());\n\n    var BadResolverPromise = function BadResolverPromise(executor) {\n      var p = new Promise(executor);\n      executor(3, function () {});\n      this.then = p.then;\n      this.constructor = BadResolverPromise;\n    };\n    BadResolverPromise.prototype = Promise.prototype;\n    BadResolverPromise.all = Promise.all;\n    // Chrome Canary 49 (probably older too) has some implementation bugs\n    var hasBadResolverPromise = valueOrFalseIfThrows(function () {\n      return !!BadResolverPromise.all([1, 2]);\n    });\n\n    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||\n        !promiseRequiresObjectContext || promiseResolveBroken ||\n        !getsThenSynchronously || hasBadResolverPromise) {\n      /* globals Promise: true */\n      /* eslint-disable no-undef, no-global-assign */\n      /* jshint -W020 */\n      Promise = PromiseShim;\n      /* jshint +W020 */\n      /* eslint-enable no-undef, no-global-assign */\n      /* globals Promise: false */\n      overrideNative(globals, 'Promise', PromiseShim);\n    }\n    if (Promise.all.length !== 1) {\n      var origAll = Promise.all;\n      overrideNative(Promise, 'all', function all(iterable) {\n        return ES.Call(origAll, this, arguments);\n      });\n    }\n    if (Promise.race.length !== 1) {\n      var origRace = Promise.race;\n      overrideNative(Promise, 'race', function race(iterable) {\n        return ES.Call(origRace, this, arguments);\n      });\n    }\n    if (Promise.resolve.length !== 1) {\n      var origResolve = Promise.resolve;\n      overrideNative(Promise, 'resolve', function resolve(x) {\n        return ES.Call(origResolve, this, arguments);\n      });\n    }\n    if (Promise.reject.length !== 1) {\n      var origReject = Promise.reject;\n      overrideNative(Promise, 'reject', function reject(r) {\n        return ES.Call(origReject, this, arguments);\n      });\n    }\n    ensureEnumerable(Promise, 'all');\n    ensureEnumerable(Promise, 'race');\n    ensureEnumerable(Promise, 'resolve');\n    ensureEnumerable(Promise, 'reject');\n    addDefaultSpecies(Promise);\n  }\n\n  // Map and Set require a true ES5 environment\n  // Their fast path also requires that the environment preserve\n  // property insertion order, which is not guaranteed by the spec.\n  var testOrder = function (a) {\n    var b = keys(_reduce(a, function (o, k) {\n      o[k] = true;\n      return o;\n    }, {}));\n    return a.join(':') === b.join(':');\n  };\n  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);\n  // some engines (eg, Chrome) only preserve insertion order for string keys\n  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);\n\n  if (supportsDescriptors) {\n\n    var fastkey = function fastkey(key, skipInsertionOrderCheck) {\n      if (!skipInsertionOrderCheck && !preservesInsertionOrder) {\n        return null;\n      }\n      if (isNullOrUndefined(key)) {\n        return '^' + ES.ToString(key);\n      } else if (typeof key === 'string') {\n        return '$' + key;\n      } else if (typeof key === 'number') {\n        // note that -0 will get coerced to \"0\" when used as a property key\n        if (!preservesNumericInsertionOrder) {\n          return 'n' + key;\n        }\n        return key;\n      } else if (typeof key === 'boolean') {\n        return 'b' + key;\n      }\n      return null;\n    };\n\n    var emptyObject = function emptyObject() {\n      // accomodate some older not-quite-ES5 browsers\n      return Object.create ? Object.create(null) : {};\n    };\n\n    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (entry) {\n          if (!ES.TypeIsObject(entry)) {\n            throw new TypeError('Iterator value ' + entry + ' is not an entry object');\n          }\n          map.set(entry[0], entry[1]);\n        });\n      } else if (iterable instanceof MapConstructor) {\n        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {\n          map.set(key, value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = map.set;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextItem = next.value;\n            try {\n              if (!ES.TypeIsObject(nextItem)) {\n                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');\n              }\n              _call(adder, map, nextItem[0], nextItem[1]);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (value) {\n          set.add(value);\n        });\n      } else if (iterable instanceof SetConstructor) {\n        _call(SetConstructor.prototype.forEach, iterable, function (value) {\n          set.add(value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = set.add;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextValue = next.value;\n            try {\n              _call(adder, set, nextValue);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n\n    var collectionShims = {\n      Map: (function () {\n\n        var empty = {};\n\n        var MapEntry = function MapEntry(key, value) {\n          this.key = key;\n          this.value = value;\n          this.next = null;\n          this.prev = null;\n        };\n\n        MapEntry.prototype.isRemoved = function isRemoved() {\n          return this.key === empty;\n        };\n\n        var isMap = function isMap(map) {\n          return !!map._es6map;\n        };\n\n        var requireMapSlot = function requireMapSlot(map, method) {\n          if (!ES.TypeIsObject(map) || !isMap(map)) {\n            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));\n          }\n        };\n\n        var MapIterator = function MapIterator(map, kind) {\n          requireMapSlot(map, '[[MapIterator]]');\n          this.head = map._head;\n          this.i = this.head;\n          this.kind = kind;\n        };\n\n        MapIterator.prototype = {\n          next: function next() {\n            var i = this.i;\n            var kind = this.kind;\n            var head = this.head;\n            if (typeof this.i === 'undefined') {\n              return iteratorResult();\n            }\n            while (i.isRemoved() && i !== head) {\n              // back up off of removed entries\n              i = i.prev;\n            }\n            // advance to next unreturned element.\n            var result;\n            while (i.next !== head) {\n              i = i.next;\n              if (!i.isRemoved()) {\n                if (kind === 'key') {\n                  result = i.key;\n                } else if (kind === 'value') {\n                  result = i.value;\n                } else {\n                  result = [i.key, i.value];\n                }\n                this.i = i;\n                return iteratorResult(result);\n              }\n            }\n            // once the iterator is done, it is done forever.\n            this.i = void 0;\n            return iteratorResult();\n          }\n        };\n        addIterator(MapIterator.prototype);\n\n        var Map$prototype;\n        var MapShim = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          if (this && this._es6map) {\n            throw new TypeError('Bad construction');\n          }\n          var map = emulateES6construct(this, Map, Map$prototype, {\n            _es6map: true,\n            _head: null,\n            _map: OrigMap ? new OrigMap() : null,\n            _size: 0,\n            _storage: emptyObject()\n          });\n\n          var head = new MapEntry(null, null);\n          // circular doubly-linked list.\n          /* eslint no-multi-assign: 1 */\n          head.next = head.prev = head;\n          map._head = head;\n\n          // Optionally initialize map from iterable\n          if (arguments.length > 0) {\n            addIterableToMap(Map, map, arguments[0]);\n          }\n          return map;\n        };\n        Map$prototype = MapShim.prototype;\n\n        Value.getter(Map$prototype, 'size', function () {\n          if (typeof this._size === 'undefined') {\n            throw new TypeError('size method called on incompatible Map');\n          }\n          return this._size;\n        });\n\n        defineProperties(Map$prototype, {\n          get: function get(key) {\n            requireMapSlot(this, 'get');\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              entry = this._storage[fkey];\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            if (this._map) {\n              // fast object key path\n              entry = origMapGet.call(this._map, key);\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return i.value;\n              }\n            }\n          },\n\n          has: function has(key) {\n            requireMapSlot(this, 'has');\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              return typeof this._storage[fkey] !== 'undefined';\n            }\n            if (this._map) {\n              // fast object key path\n              return origMapHas.call(this._map, key);\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return true;\n              }\n            }\n            return false;\n          },\n\n          set: function set(key, value) {\n            requireMapSlot(this, 'set');\n            var head = this._head;\n            var i = head;\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] !== 'undefined') {\n                this._storage[fkey].value = value;\n                return this;\n              } else {\n                entry = this._storage[fkey] = new MapEntry(key, value); /* eslint no-multi-assign: 1 */\n                i = head.prev;\n                // fall through\n              }\n            } else if (this._map) {\n              // fast object key path\n              if (origMapHas.call(this._map, key)) {\n                origMapGet.call(this._map, key).value = value;\n              } else {\n                entry = new MapEntry(key, value);\n                origMapSet.call(this._map, key, entry);\n                i = head.prev;\n                // fall through\n              }\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.value = value;\n                return this;\n              }\n            }\n            entry = entry || new MapEntry(key, value);\n            if (ES.SameValue(-0, key)) {\n              entry.key = +0; // coerce -0 to +0 in entry\n            }\n            entry.next = this._head;\n            entry.prev = this._head.prev;\n            entry.prev.next = entry;\n            entry.next.prev = entry;\n            this._size += 1;\n            return this;\n          },\n\n          'delete': function (key) {\n            requireMapSlot(this, 'delete');\n            var head = this._head;\n            var i = head;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] === 'undefined') {\n                return false;\n              }\n              i = this._storage[fkey].prev;\n              delete this._storage[fkey];\n              // fall through\n            } else if (this._map) {\n              // fast object key path\n              if (!origMapHas.call(this._map, key)) {\n                return false;\n              }\n              i = origMapGet.call(this._map, key).prev;\n              origMapDelete.call(this._map, key);\n              // fall through\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.key = empty;\n                i.value = empty;\n                i.prev.next = i.next;\n                i.next.prev = i.prev;\n                this._size -= 1;\n                return true;\n              }\n            }\n            return false;\n          },\n\n          clear: function clear() {\n             /* eslint no-multi-assign: 1 */\n            requireMapSlot(this, 'clear');\n            this._map = OrigMap ? new OrigMap() : null;\n            this._size = 0;\n            this._storage = emptyObject();\n            var head = this._head;\n            var i = head;\n            var p = i.next;\n            while ((i = p) !== head) {\n              i.key = empty;\n              i.value = empty;\n              p = i.next;\n              i.next = i.prev = head;\n            }\n            head.next = head.prev = head;\n          },\n\n          keys: function keys() {\n            requireMapSlot(this, 'keys');\n            return new MapIterator(this, 'key');\n          },\n\n          values: function values() {\n            requireMapSlot(this, 'values');\n            return new MapIterator(this, 'value');\n          },\n\n          entries: function entries() {\n            requireMapSlot(this, 'entries');\n            return new MapIterator(this, 'key+value');\n          },\n\n          forEach: function forEach(callback) {\n            requireMapSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var it = this.entries();\n            for (var entry = it.next(); !entry.done; entry = it.next()) {\n              if (context) {\n                _call(callback, context, entry.value[1], entry.value[0], this);\n              } else {\n                callback(entry.value[1], entry.value[0], this);\n              }\n            }\n          }\n        });\n        addIterator(Map$prototype, Map$prototype.entries);\n\n        return MapShim;\n      }()),\n\n      Set: (function () {\n        var isSet = function isSet(set) {\n          return set._es6set && typeof set._storage !== 'undefined';\n        };\n        var requireSetSlot = function requireSetSlot(set, method) {\n          if (!ES.TypeIsObject(set) || !isSet(set)) {\n            // https://github.com/paulmillr/es6-shim/issues/176\n            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));\n          }\n        };\n\n        // Creating a Map is expensive.  To speed up the common case of\n        // Sets containing only string or numeric keys, we use an object\n        // as backing storage and lazily create a full Map only when\n        // required.\n        var Set$prototype;\n        var SetShim = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          if (this && this._es6set) {\n            throw new TypeError('Bad construction');\n          }\n          var set = emulateES6construct(this, Set, Set$prototype, {\n            _es6set: true,\n            '[[SetData]]': null,\n            _storage: emptyObject()\n          });\n          if (!set._es6set) {\n            throw new TypeError('bad set');\n          }\n\n          // Optionally initialize Set from iterable\n          if (arguments.length > 0) {\n            addIterableToSet(Set, set, arguments[0]);\n          }\n          return set;\n        };\n        Set$prototype = SetShim.prototype;\n\n        var decodeKey = function (key) {\n          var k = key;\n          if (k === '^null') {\n            return null;\n          } else if (k === '^undefined') {\n            return void 0;\n          } else {\n            var first = k.charAt(0);\n            if (first === '$') {\n              return _strSlice(k, 1);\n            } else if (first === 'n') {\n              return +_strSlice(k, 1);\n            } else if (first === 'b') {\n              return k === 'btrue';\n            }\n          }\n          return +k;\n        };\n        // Switch from the object backing storage to a full Map.\n        var ensureMap = function ensureMap(set) {\n          if (!set['[[SetData]]']) {\n            var m = new collectionShims.Map();\n            set['[[SetData]]'] = m;\n            _forEach(keys(set._storage), function (key) {\n              var k = decodeKey(key);\n              m.set(k, k);\n            });\n            set['[[SetData]]'] = m;\n          }\n          set._storage = null; // free old backing storage\n        };\n\n        Value.getter(SetShim.prototype, 'size', function () {\n          requireSetSlot(this, 'size');\n          if (this._storage) {\n            return keys(this._storage).length;\n          }\n          ensureMap(this);\n          return this['[[SetData]]'].size;\n        });\n\n        defineProperties(SetShim.prototype, {\n          has: function has(key) {\n            requireSetSlot(this, 'has');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              return !!this._storage[fkey];\n            }\n            ensureMap(this);\n            return this['[[SetData]]'].has(key);\n          },\n\n          add: function add(key) {\n            requireSetSlot(this, 'add');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              this._storage[fkey] = true;\n              return this;\n            }\n            ensureMap(this);\n            this['[[SetData]]'].set(key, key);\n            return this;\n          },\n\n          'delete': function (key) {\n            requireSetSlot(this, 'delete');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              var hasFKey = _hasOwnProperty(this._storage, fkey);\n              return (delete this._storage[fkey]) && hasFKey;\n            }\n            ensureMap(this);\n            return this['[[SetData]]']['delete'](key);\n          },\n\n          clear: function clear() {\n            requireSetSlot(this, 'clear');\n            if (this._storage) {\n              this._storage = emptyObject();\n            }\n            if (this['[[SetData]]']) {\n              this['[[SetData]]'].clear();\n            }\n          },\n\n          values: function values() {\n            requireSetSlot(this, 'values');\n            ensureMap(this);\n            return this['[[SetData]]'].values();\n          },\n\n          entries: function entries() {\n            requireSetSlot(this, 'entries');\n            ensureMap(this);\n            return this['[[SetData]]'].entries();\n          },\n\n          forEach: function forEach(callback) {\n            requireSetSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var entireSet = this;\n            ensureMap(entireSet);\n            this['[[SetData]]'].forEach(function (value, key) {\n              if (context) {\n                _call(callback, context, key, key, entireSet);\n              } else {\n                callback(key, key, entireSet);\n              }\n            });\n          }\n        });\n        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);\n        addIterator(SetShim.prototype, SetShim.prototype.values);\n\n        return SetShim;\n      }())\n    };\n\n    if (globals.Map || globals.Set) {\n      // Safari 8, for example, doesn't accept an iterable.\n      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });\n      if (!mapAcceptsArguments) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, globals.Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = create(OrigMap.prototype);\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var testMap = new Map();\n      var mapUsesSameValueZero = (function () {\n        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\n        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);\n        m.set(-0, m);\n        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);\n      }());\n      var mapSupportsChaining = testMap.set(1, 2) === testMap;\n      if (!mapUsesSameValueZero || !mapSupportsChaining) {\n        overrideNative(Map.prototype, 'set', function set(k, v) {\n          _call(origMapSet, this, k === 0 ? 0 : k, v);\n          return this;\n        });\n      }\n      if (!mapUsesSameValueZero) {\n        defineProperties(Map.prototype, {\n          get: function get(k) {\n            return _call(origMapGet, this, k === 0 ? 0 : k);\n          },\n          has: function has(k) {\n            return _call(origMapHas, this, k === 0 ? 0 : k);\n          }\n        }, true);\n        Value.preserveToString(Map.prototype.get, origMapGet);\n        Value.preserveToString(Map.prototype.has, origMapHas);\n      }\n      var testSet = new Set();\n      var setUsesSameValueZero = (function (s) {\n        s['delete'](0);\n        s.add(-0);\n        return !s.has(0);\n      }(testSet));\n      var setSupportsChaining = testSet.add(1) === testSet;\n      if (!setUsesSameValueZero || !setSupportsChaining) {\n        var origSetAdd = Set.prototype.add;\n        Set.prototype.add = function add(v) {\n          _call(origSetAdd, this, v === 0 ? 0 : v);\n          return this;\n        };\n        Value.preserveToString(Set.prototype.add, origSetAdd);\n      }\n      if (!setUsesSameValueZero) {\n        var origSetHas = Set.prototype.has;\n        Set.prototype.has = function has(v) {\n          return _call(origSetHas, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype.has, origSetHas);\n        var origSetDel = Set.prototype['delete'];\n        Set.prototype['delete'] = function SetDelete(v) {\n          return _call(origSetDel, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype['delete'], origSetDel);\n      }\n      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {\n        var m = new M([]);\n        // Firefox 32 is ok with the instantiating the subclass but will\n        // throw when the map is used.\n        m.set(42, 42);\n        return m instanceof M;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing;\n      var mapRequiresNew = (function () {\n        try {\n          return !(globals.Map() instanceof globals.Map);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = OrigMap.prototype;\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {\n        var s = new S([]);\n        s.add(42, 42);\n        return s instanceof S;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing;\n      var setRequiresNew = (function () {\n        try {\n          return !(globals.Set() instanceof globals.Set);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {\n        var OrigSet = globals.Set;\n        globals.Set = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          var s = new OrigSet();\n          if (arguments.length > 0) {\n            addIterableToSet(Set, s, arguments[0]);\n          }\n          delete s.constructor;\n          Object.setPrototypeOf(s, Set.prototype);\n          return s;\n        };\n        globals.Set.prototype = OrigSet.prototype;\n        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);\n        Value.preserveToString(globals.Set, OrigSet);\n      }\n      var newMap = new globals.Map();\n      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {\n        return newMap.keys().next().done;\n      });\n      /*\n        - In Firefox < 23, Map#size is a function.\n        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\n        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\n        - In Firefox 24, Map and Set do not implement forEach\n        - In Firefox 25 at least, Map and Set are callable without \"new\"\n      */\n      if (\n        typeof globals.Map.prototype.clear !== 'function' ||\n        new globals.Set().size !== 0 ||\n        newMap.size !== 0 ||\n        typeof globals.Map.prototype.keys !== 'function' ||\n        typeof globals.Set.prototype.keys !== 'function' ||\n        typeof globals.Map.prototype.forEach !== 'function' ||\n        typeof globals.Set.prototype.forEach !== 'function' ||\n        isCallableWithoutNew(globals.Map) ||\n        isCallableWithoutNew(globals.Set) ||\n        typeof newMap.keys().next !== 'function' || // Safari 8\n        mapIterationThrowsStopIterator || // Firefox 25\n        !mapSupportsSubclassing\n      ) {\n        defineProperties(globals, {\n          Map: collectionShims.Map,\n          Set: collectionShims.Set\n        }, true);\n      }\n\n      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {\n        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190\n        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);\n      }\n\n      // Shim incomplete iterator implementations.\n      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));\n      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));\n\n      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {\n        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has\n        var anonymousSetHas = globals.Set.prototype.has;\n        overrideNative(globals.Set.prototype, 'has', function has(key) {\n          return _call(anonymousSetHas, this, key);\n        });\n      }\n    }\n    defineProperties(globals, collectionShims);\n    addDefaultSpecies(globals.Map);\n    addDefaultSpecies(globals.Set);\n  }\n\n  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {\n    if (!ES.TypeIsObject(target)) {\n      throw new TypeError('target must be an object');\n    }\n  };\n\n  // Some Reflect methods are basically the same as\n  // those on the Object global, except that a TypeError is thrown if\n  // target isn't an object. As well as returning a boolean indicating\n  // the success of the operation.\n  var ReflectShims = {\n    // Apply method in a functional form.\n    apply: function apply() {\n      return ES.Call(ES.Call, null, arguments);\n    },\n\n    // New operator in a functional form.\n    construct: function construct(constructor, args) {\n      if (!ES.IsConstructor(constructor)) {\n        throw new TypeError('First argument must be a constructor.');\n      }\n      var newTarget = arguments.length > 2 ? arguments[2] : constructor;\n      if (!ES.IsConstructor(newTarget)) {\n        throw new TypeError('new.target must be a constructor.');\n      }\n      return ES.Construct(constructor, args, newTarget, 'internal');\n    },\n\n    // When deleting a non-existent or configurable property,\n    // true is returned.\n    // When attempting to delete a non-configurable property,\n    // it will return false.\n    deleteProperty: function deleteProperty(target, key) {\n      throwUnlessTargetIsObject(target);\n      if (supportsDescriptors) {\n        var desc = Object.getOwnPropertyDescriptor(target, key);\n\n        if (desc && !desc.configurable) {\n          return false;\n        }\n      }\n\n      // Will return true.\n      return delete target[key];\n    },\n\n    has: function has(target, key) {\n      throwUnlessTargetIsObject(target);\n      return key in target;\n    }\n  };\n\n  if (Object.getOwnPropertyNames) {\n    Object.assign(ReflectShims, {\n      // Basically the result of calling the internal [[OwnPropertyKeys]].\n      // Concatenating propertyNames and propertySymbols should do the trick.\n      // This should continue to work together with a Symbol shim\n      // which overrides Object.getOwnPropertyNames and implements\n      // Object.getOwnPropertySymbols.\n      ownKeys: function ownKeys(target) {\n        throwUnlessTargetIsObject(target);\n        var keys = Object.getOwnPropertyNames(target);\n\n        if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n          _pushApply(keys, Object.getOwnPropertySymbols(target));\n        }\n\n        return keys;\n      }\n    });\n  }\n\n  var callAndCatchException = function ConvertExceptionToBoolean(func) {\n    return !throwsError(func);\n  };\n\n  if (Object.preventExtensions) {\n    Object.assign(ReflectShims, {\n      isExtensible: function isExtensible(target) {\n        throwUnlessTargetIsObject(target);\n        return Object.isExtensible(target);\n      },\n      preventExtensions: function preventExtensions(target) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.preventExtensions(target);\n        });\n      }\n    });\n  }\n\n  if (supportsDescriptors) {\n    var internalGet = function get(target, key, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent === null) {\n          return void 0;\n        }\n\n        return internalGet(parent, key, receiver);\n      }\n\n      if ('value' in desc) {\n        return desc.value;\n      }\n\n      if (desc.get) {\n        return ES.Call(desc.get, receiver);\n      }\n\n      return void 0;\n    };\n\n    var internalSet = function set(target, key, value, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return internalSet(parent, key, value, receiver);\n        }\n\n        desc = {\n          value: void 0,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        };\n      }\n\n      if ('value' in desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        if (!ES.TypeIsObject(receiver)) {\n          return false;\n        }\n\n        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);\n\n        if (existingDesc) {\n          return Reflect.defineProperty(receiver, key, {\n            value: value\n          });\n        } else {\n          return Reflect.defineProperty(receiver, key, {\n            value: value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        }\n      }\n\n      if (desc.set) {\n        _call(desc.set, receiver, value);\n        return true;\n      }\n\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      defineProperty: function defineProperty(target, propertyKey, attributes) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.defineProperty(target, propertyKey, attributes);\n        });\n      },\n\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n        throwUnlessTargetIsObject(target);\n        return Object.getOwnPropertyDescriptor(target, propertyKey);\n      },\n\n      // Syntax in a functional form.\n      get: function get(target, key) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 2 ? arguments[2] : target;\n\n        return internalGet(target, key, receiver);\n      },\n\n      set: function set(target, key, value) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 3 ? arguments[3] : target;\n\n        return internalSet(target, key, value, receiver);\n      }\n    });\n  }\n\n  if (Object.getPrototypeOf) {\n    var objectDotGetPrototypeOf = Object.getPrototypeOf;\n    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {\n      throwUnlessTargetIsObject(target);\n      return objectDotGetPrototypeOf(target);\n    };\n  }\n\n  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {\n    var willCreateCircularPrototype = function (object, lastProto) {\n      var proto = lastProto;\n      while (proto) {\n        if (object === proto) {\n          return true;\n        }\n        proto = ReflectShims.getPrototypeOf(proto);\n      }\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      // Sets the prototype of the given object.\n      // Returns true on success, otherwise false.\n      setPrototypeOf: function setPrototypeOf(object, proto) {\n        throwUnlessTargetIsObject(object);\n        if (proto !== null && !ES.TypeIsObject(proto)) {\n          throw new TypeError('proto must be an object or null');\n        }\n\n        // If they already are the same, we're done.\n        if (proto === Reflect.getPrototypeOf(object)) {\n          return true;\n        }\n\n        // Cannot alter prototype if object not extensible.\n        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {\n          return false;\n        }\n\n        // Ensure that we do not create a circular prototype chain.\n        if (willCreateCircularPrototype(object, proto)) {\n          return false;\n        }\n\n        Object.setPrototypeOf(object, proto);\n\n        return true;\n      }\n    });\n  }\n  var defineOrOverrideReflectProperty = function (key, shim) {\n    if (!ES.IsCallable(globals.Reflect[key])) {\n      defineProperty(globals.Reflect, key, shim);\n    } else {\n      var acceptsPrimitives = valueOrFalseIfThrows(function () {\n        globals.Reflect[key](1);\n        globals.Reflect[key](NaN);\n        globals.Reflect[key](true);\n        return true;\n      });\n      if (acceptsPrimitives) {\n        overrideNative(globals.Reflect, key, shim);\n      }\n    }\n  };\n  Object.keys(ReflectShims).forEach(function (key) {\n    defineOrOverrideReflectProperty(key, ReflectShims[key]);\n  });\n  var originalReflectGetProto = globals.Reflect.getPrototypeOf;\n  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {\n    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {\n      return _call(originalReflectGetProto, globals.Reflect, target);\n    });\n  }\n  if (globals.Reflect.setPrototypeOf) {\n    if (valueOrFalseIfThrows(function () {\n      globals.Reflect.setPrototypeOf(1, {});\n      return true;\n    })) {\n      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);\n    }\n  }\n  if (globals.Reflect.defineProperty) {\n    if (!valueOrFalseIfThrows(function () {\n      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });\n      // \"extensible\" fails on Edge 0.12\n      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});\n      return basic && extensible;\n    })) {\n      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);\n    }\n  }\n  if (globals.Reflect.construct) {\n    if (!valueOrFalseIfThrows(function () {\n      var F = function F() {};\n      return globals.Reflect.construct(function () {}, [], F) instanceof F;\n    })) {\n      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);\n    }\n  }\n\n  if (String(new Date(NaN)) !== 'Invalid Date') {\n    var dateToString = Date.prototype.toString;\n    var shimmedDateToString = function toString() {\n      var valueOf = +this;\n      if (valueOf !== valueOf) {\n        return 'Invalid Date';\n      }\n      return ES.Call(dateToString, this);\n    };\n    overrideNative(Date.prototype, 'toString', shimmedDateToString);\n  }\n\n  // Annex B HTML methods\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-additional-properties-of-the-string.prototype-object\n  var stringHTMLshims = {\n    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },\n    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },\n    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },\n    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },\n    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },\n    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },\n    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },\n    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },\n    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },\n    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },\n    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },\n    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },\n    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }\n  };\n  _forEach(Object.keys(stringHTMLshims), function (key) {\n    var method = String.prototype[key];\n    var shouldOverwrite = false;\n    if (ES.IsCallable(method)) {\n      var output = _call(method, '', ' \" ');\n      var quotesCount = _concat([], output.match(/\"/g)).length;\n      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;\n    } else {\n      shouldOverwrite = true;\n    }\n    if (shouldOverwrite) {\n      overrideNative(String.prototype, key, stringHTMLshims[key]);\n    }\n  });\n\n  var JSONstringifiesSymbols = (function () {\n    // Microsoft Edge v0.12 stringifies Symbols incorrectly\n    if (!hasSymbols) { return false; } // Symbols are not supported\n    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;\n    if (!stringify) { return false; } // JSON.stringify is not supported\n    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`\n    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`\n    var obj = { a: Symbol() };\n    obj[Symbol()] = true;\n    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted\n    return false;\n  }());\n  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {\n    // Chrome 45 throws on stringifying object symbols\n    if (!hasSymbols) { return true; } // Symbols are not supported\n    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';\n  });\n  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {\n    var origStringify = JSON.stringify;\n    overrideNative(JSON, 'stringify', function stringify(value) {\n      if (typeof value === 'symbol') { return; }\n      var replacer;\n      if (arguments.length > 1) {\n        replacer = arguments[1];\n      }\n      var args = [value];\n      if (!isArray(replacer)) {\n        var replaceFn = ES.IsCallable(replacer) ? replacer : null;\n        var wrappedReplacer = function (key, val) {\n          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;\n          if (typeof parsedValue !== 'symbol') {\n            if (Type.symbol(parsedValue)) {\n              return assignTo({})(parsedValue);\n            } else {\n              return parsedValue;\n            }\n          }\n        };\n        args.push(wrappedReplacer);\n      } else {\n        // create wrapped replacer that handles an array replacer?\n        args.push(replacer);\n      }\n      if (arguments.length > 2) {\n        args.push(arguments[2]);\n      }\n      return origStringify.apply(this, args);\n    });\n  }\n\n  return globals;\n}));\n","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,aa=n?Symbol.for(\"react.memo\"):\n60115,ba=n?Symbol.for(\"react.lazy\"):60116,A=\"function\"===typeof Symbol&&Symbol.iterator;function ca(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[d,c,e,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;k(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];e.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:J.current}}\nfunction da(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=A&&a[A]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ea(a,b){a.func.call(a.context,b,a.count++)}\nfunction fa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=da(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function V(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,fa,b);R(b)}function W(){var a=I.current;null===a?B(\"321\"):void 0;return a}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];V(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,ea,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:ba,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:aa,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,d){return W().useImperativeHandle(a,b,d)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,d){return W().useReducer(a,b,d)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,StrictMode:t,Suspense:z,createElement:M,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=\nb){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];e.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.8.6\",\nunstable_ConcurrentMode:x,unstable_Profiler:u,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentOwner:J,assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","/** @license React v16.8.4\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),r=require(\"scheduler\");function ba(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[c,d,e,f,g,h],k=0;a=Error(b.replace(/%s/g,function(){return l[k++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction x(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ba(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:x(\"227\");function ca(a,b,c,d,e,f,g,h,l){var k=Array.prototype.slice.call(arguments,3);try{b.apply(c,k)}catch(m){this.onError(m)}}\nvar da=!1,ea=null,fa=!1,ha=null,ia={onError:function(a){da=!0;ea=a}};function ja(a,b,c,d,e,f,g,h,l){da=!1;ea=null;ca.apply(ia,arguments)}function ka(a,b,c,d,e,f,g,h,l){ja.apply(this,arguments);if(da){if(da){var k=ea;da=!1;ea=null}else x(\"198\"),k=void 0;fa||(fa=!0,ha=k)}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:x(\"96\",a);if(!oa[c]){b.extractEvents?void 0:x(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?x(\"99\",h):void 0;pa[h]=f;var l=f.phasedRegistrationNames;if(l){for(e in l)l.hasOwnProperty(e)&&qa(l[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:x(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?x(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={},ta=null,ua=null,va=null;function wa(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=va(c);ka(d,b,void 0,a);a.currentTarget=null}function xa(a,b){null==b?x(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction ya(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var za=null;function Aa(a){if(a){var b=a._dispatchListeners,c=a._dispatchInstances;if(Array.isArray(b))for(var d=0;d<b.length&&!a.isPropagationStopped();d++)wa(a,b[d],c[d]);else b&&wa(a,b,c);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}\nvar Ba={injectEventPluginOrder:function(a){la?x(\"101\"):void 0;la=Array.prototype.slice.call(a);na()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?x(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}};\nfunction Ca(a,b){var c=a.stateNode;if(!c)return null;var d=ta(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?x(\"231\",b,typeof c):void 0;\nreturn c}function Da(a){null!==a&&(za=xa(za,a));a=za;za=null;if(a&&(ya(a,Aa),za?x(\"95\"):void 0,fa))throw a=ha,fa=!1,ha=null,a;}var Ea=Math.random().toString(36).slice(2),Fa=\"__reactInternalInstance$\"+Ea,Ga=\"__reactEventHandlers$\"+Ea;function Ha(a){if(a[Fa])return a[Fa];for(;!a[Fa];)if(a.parentNode)a=a.parentNode;else return null;a=a[Fa];return 5===a.tag||6===a.tag?a:null}function Ia(a){a=a[Fa];return!a||5!==a.tag&&6!==a.tag?null:a}\nfunction Ja(a){if(5===a.tag||6===a.tag)return a.stateNode;x(\"33\")}function Ka(a){return a[Ga]||null}function La(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ma(a,b,c){if(b=Ca(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a)}\nfunction Na(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=La(b);for(b=c.length;0<b--;)Ma(c[b],\"captured\",a);for(b=0;b<c.length;b++)Ma(c[b],\"bubbled\",a)}}function Oa(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ca(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=xa(c._dispatchListeners,b),c._dispatchInstances=xa(c._dispatchInstances,a))}function Pa(a){a&&a.dispatchConfig.registrationName&&Oa(a._targetInst,null,a)}\nfunction Qa(a){ya(a,Na)}var Ra=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Sa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ta={animationend:Sa(\"Animation\",\"AnimationEnd\"),animationiteration:Sa(\"Animation\",\"AnimationIteration\"),animationstart:Sa(\"Animation\",\"AnimationStart\"),transitionend:Sa(\"Transition\",\"TransitionEnd\")},Ua={},Va={};\nRa&&(Va=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ta.animationend.animation,delete Ta.animationiteration.animation,delete Ta.animationstart.animation),\"TransitionEvent\"in window||delete Ta.transitionend.transition);function Wa(a){if(Ua[a])return Ua[a];if(!Ta[a])return a;var b=Ta[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Va)return Ua[a]=b[c];return a}\nvar Xa=Wa(\"animationend\"),Ya=Wa(\"animationiteration\"),Za=Wa(\"animationstart\"),$a=Wa(\"transitionend\"),ab=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),bb=null,cb=null,db=null;\nfunction eb(){if(db)return db;var a,b=cb,c=b.length,d,e=\"value\"in bb?bb.value:bb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return db=e.slice(a,1<d?1-d:void 0)}function fb(){return!0}function gb(){return!1}\nfunction y(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?fb:gb;this.isPropagationStopped=gb;return this}\nn(y.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=fb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=fb)},persist:function(){this.isPersistent=fb},isPersistent:gb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=gb;this._dispatchInstances=this._dispatchListeners=null}});y.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\ny.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;hb(c);return c};hb(y);function ib(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function jb(a){a instanceof this?void 0:x(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction hb(a){a.eventPool=[];a.getPooled=ib;a.release=jb}var kb=y.extend({data:null}),lb=y.extend({data:null}),mb=[9,13,27,32],nb=Ra&&\"CompositionEvent\"in window,ob=null;Ra&&\"documentMode\"in document&&(ob=document.documentMode);\nvar pb=Ra&&\"TextEvent\"in window&&!ob,qb=Ra&&(!nb||ob&&8<ob&&11>=ob),rb=String.fromCharCode(32),sb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},tb=!1;\nfunction ub(a,b){switch(a){case \"keyup\":return-1!==mb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function vb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var wb=!1;function xb(a,b){switch(a){case \"compositionend\":return vb(b);case \"keypress\":if(32!==b.which)return null;tb=!0;return rb;case \"textInput\":return a=b.data,a===rb&&tb?null:a;default:return null}}\nfunction yb(a,b){if(wb)return\"compositionend\"===a||!nb&&ub(a,b)?(a=eb(),db=cb=bb=null,wb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return qb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar zb={eventTypes:sb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(nb)b:{switch(a){case \"compositionstart\":e=sb.compositionStart;break b;case \"compositionend\":e=sb.compositionEnd;break b;case \"compositionupdate\":e=sb.compositionUpdate;break b}e=void 0}else wb?ub(a,c)&&(e=sb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=sb.compositionStart);e?(qb&&\"ko\"!==c.locale&&(wb||e!==sb.compositionStart?e===sb.compositionEnd&&wb&&(f=eb()):(bb=d,cb=\"value\"in bb?bb.value:bb.textContent,wb=\n!0)),e=kb.getPooled(e,b,c,d),f?e.data=f:(f=vb(c),null!==f&&(e.data=f)),Qa(e),f=e):f=null;(a=pb?xb(a,c):yb(a,c))?(b=lb.getPooled(sb.beforeInput,b,c,d),b.data=a,Qa(b)):b=null;return null===f?b:null===b?f:[f,b]}},Ab=null,Bb=null,Cb=null;function Db(a){if(a=ua(a)){\"function\"!==typeof Ab?x(\"280\"):void 0;var b=ta(a.stateNode);Ab(a.stateNode,a.type,b)}}function Eb(a){Bb?Cb?Cb.push(a):Cb=[a]:Bb=a}function Fb(){if(Bb){var a=Bb,b=Cb;Cb=Bb=null;Db(a);if(b)for(a=0;a<b.length;a++)Db(b[a])}}\nfunction Gb(a,b){return a(b)}function Hb(a,b,c){return a(b,c)}function Ib(){}var Jb=!1;function Kb(a,b){if(Jb)return a(b);Jb=!0;try{return Gb(a,b)}finally{if(Jb=!1,null!==Bb||null!==Cb)Ib(),Fb()}}var Lb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Mb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Lb[a.type]:\"textarea\"===b?!0:!1}\nfunction Nb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Ob(a){if(!Ra)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Pb(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Qb(a){var b=Pb(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Rb(a){a._valueTracker||(a._valueTracker=Qb(a))}function Sb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Pb(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Tb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Tb.hasOwnProperty(\"ReactCurrentDispatcher\")||(Tb.ReactCurrentDispatcher={current:null});\nvar Ub=/^(.*)[\\\\\\/]/,z=\"function\"===typeof Symbol&&Symbol.for,Vb=z?Symbol.for(\"react.element\"):60103,Wb=z?Symbol.for(\"react.portal\"):60106,Xb=z?Symbol.for(\"react.fragment\"):60107,Yb=z?Symbol.for(\"react.strict_mode\"):60108,Zb=z?Symbol.for(\"react.profiler\"):60114,$b=z?Symbol.for(\"react.provider\"):60109,ac=z?Symbol.for(\"react.context\"):60110,bc=z?Symbol.for(\"react.concurrent_mode\"):60111,cc=z?Symbol.for(\"react.forward_ref\"):60112,dc=z?Symbol.for(\"react.suspense\"):60113,ec=z?Symbol.for(\"react.memo\"):\n60115,fc=z?Symbol.for(\"react.lazy\"):60116,gc=\"function\"===typeof Symbol&&Symbol.iterator;function hc(a){if(null===a||\"object\"!==typeof a)return null;a=gc&&a[gc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction ic(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case bc:return\"ConcurrentMode\";case Xb:return\"Fragment\";case Wb:return\"Portal\";case Zb:return\"Profiler\";case Yb:return\"StrictMode\";case dc:return\"Suspense\"}if(\"object\"===typeof a)switch(a.$$typeof){case ac:return\"Context.Consumer\";case $b:return\"Context.Provider\";case cc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\n\")\":\"ForwardRef\");case ec:return ic(a.type);case fc:if(a=1===a._status?a._result:null)return ic(a)}return null}function jc(a){var b=\"\";do{a:switch(a.tag){case 3:case 4:case 6:case 7:case 10:case 9:var c=\"\";break a;default:var d=a._debugOwner,e=a._debugSource,f=ic(a.type);c=null;d&&(c=ic(d.type));d=f;f=\"\";e?f=\" (at \"+e.fileName.replace(Ub,\"\")+\":\"+e.lineNumber+\")\":c&&(f=\" (created by \"+c+\")\");c=\"\\n    in \"+(d||\"Unknown\")+f}b+=c;a=a.return}while(a);return b}\nvar kc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,lc=Object.prototype.hasOwnProperty,mc={},nc={};\nfunction oc(a){if(lc.call(nc,a))return!0;if(lc.call(mc,a))return!1;if(kc.test(a))return nc[a]=!0;mc[a]=!0;return!1}function pc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qc(a,b,c,d){if(null===b||\"undefined\"===typeof b||pc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function C(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new C(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new C(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new C(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new C(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new C(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new C(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){D[a]=new C(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new C(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new C(a,5,!1,a.toLowerCase(),null)});var rc=/[\\-:]([a-z])/g;function sc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(rc,\nsc);D[b]=new C(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(rc,sc);D[b]=new C(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new C(a,1,!1,a.toLowerCase(),null)});\nfunction tc(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(qc(b,c,e,d)&&(c=null),d||null===e?oc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction uc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function vc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction wc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=uc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function xc(a,b){b=b.checked;null!=b&&tc(a,\"checked\",b,!1)}\nfunction yc(a,b){xc(a,b);var c=uc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?zc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&zc(a,b.type,uc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Ac(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction zc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Bc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Cc(a,b,c){a=y.getPooled(Bc.change,a,b,c);a.type=\"change\";Eb(c);Qa(a);return a}var Dc=null,Ec=null;function Fc(a){Da(a)}\nfunction Gc(a){var b=Ja(a);if(Sb(b))return a}function Hc(a,b){if(\"change\"===a)return b}var Ic=!1;Ra&&(Ic=Ob(\"input\")&&(!document.documentMode||9<document.documentMode));function Jc(){Dc&&(Dc.detachEvent(\"onpropertychange\",Kc),Ec=Dc=null)}function Kc(a){\"value\"===a.propertyName&&Gc(Ec)&&(a=Cc(Ec,a,Nb(a)),Kb(Fc,a))}function Lc(a,b,c){\"focus\"===a?(Jc(),Dc=b,Ec=c,Dc.attachEvent(\"onpropertychange\",Kc)):\"blur\"===a&&Jc()}function Mc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Gc(Ec)}\nfunction Nc(a,b){if(\"click\"===a)return Gc(b)}function Oc(a,b){if(\"input\"===a||\"change\"===a)return Gc(b)}\nvar Pc={eventTypes:Bc,_isInputEventSupported:Ic,extractEvents:function(a,b,c,d){var e=b?Ja(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Hc:Mb(e)?Ic?f=Oc:(f=Mc,g=Lc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Nc);if(f&&(f=f(a,b)))return Cc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&zc(e,\"number\",e.value)}},Qc=y.extend({view:null,detail:null}),Rc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Sc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Rc[a])?!!b[a]:!1}function Tc(){return Sc}\nvar Uc=0,Vc=0,Wc=!1,Xc=!1,Yc=Qc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Tc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Uc;Uc=a.screenX;return Wc?\"mousemove\"===a.type?a.screenX-b:0:(Wc=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=Vc;Vc=a.screenY;return Xc?\"mousemove\"===a.type?a.screenY-b:0:(Xc=!0,0)}}),Zc=Yc.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),$c={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},ad={eventTypes:$c,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ha(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,l=void 0,k=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=Yc,h=$c.mouseLeave,l=$c.mouseEnter,k=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=Zc,h=$c.pointerLeave,l=$c.pointerEnter,k=\"pointer\";var m=null==f?e:Ja(f);e=null==b?e:Ja(b);a=g.getPooled(h,f,c,d);a.type=k+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(l,b,c,d);c.type=k+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;k=0;for(g=b;g;g=La(g))k++;g=0;for(l=e;l;l=La(l))g++;for(;0<k-g;)b=La(b),k--;for(;0<g-k;)e=La(e),g--;for(;k--;){if(b===e||b===e.alternate)break a;b=La(b);e=La(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){k=\nf.alternate;if(null!==k&&k===e)break;b.push(f);f=La(f)}for(f=[];d&&d!==e;){k=d.alternate;if(null!==k&&k===e)break;f.push(d);d=La(d)}for(d=0;d<b.length;d++)Oa(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Oa(f[d],\"captured\",c);return[a,c]}};function bd(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var cd=Object.prototype.hasOwnProperty;\nfunction dd(a,b){if(bd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!cd.call(b,c[d])||!bd(a[c[d]],b[c[d]]))return!1;return!0}function ed(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function fd(a){2!==ed(a)?x(\"188\"):void 0}\nfunction gd(a){var b=a.alternate;if(!b)return b=ed(a),3===b?x(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return fd(e),a;if(g===d)return fd(e),b;g=g.sibling}x(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:x(\"189\")}}c.alternate!==d?x(\"190\"):void 0}3!==c.tag?x(\"188\"):void 0;return c.stateNode.current===c?a:b}function hd(a){a=gd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar id=y.extend({animationName:null,elapsedTime:null,pseudoElement:null}),jd=y.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),kd=Qc.extend({relatedTarget:null});function ld(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar md={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},od=Qc.extend({key:function(a){if(a.key){var b=md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=ld(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?nd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Tc,charCode:function(a){return\"keypress\"===\na.type?ld(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?ld(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),pd=Yc.extend({dataTransfer:null}),qd=Qc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Tc}),rd=y.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sd=Yc.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),td=[[\"abort\",\"abort\"],[Xa,\"animationEnd\"],[Ya,\"animationIteration\"],[Za,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[$a,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],ud={},vd={};function wd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};ud[a]=b;vd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){wd(a,!0)});td.forEach(function(a){wd(a,!1)});\nvar xd={eventTypes:ud,isInteractiveTopLevelEventType:function(a){a=vd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=vd[a];if(!e)return null;switch(a){case \"keypress\":if(0===ld(c))return null;case \"keydown\":case \"keyup\":a=od;break;case \"blur\":case \"focus\":a=kd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=Yc;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\npd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=qd;break;case Xa:case Ya:case Za:a=id;break;case $a:a=rd;break;case \"scroll\":a=Qc;break;case \"wheel\":a=sd;break;case \"copy\":case \"cut\":case \"paste\":a=jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=Zc;break;default:a=y}b=a.getPooled(e,b,c,d);Qa(b);return b}},yd=xd.isInteractiveTopLevelEventType,\nzd=[];function Ad(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=3!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ha(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Nb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<oa.length;h++){var l=oa[h];l&&(l=l.extractEvents(d,b,f,e))&&(g=xa(g,l))}Da(g)}}var Bd=!0;\nfunction E(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!1)}function Ed(a,b){if(!b)return null;var c=(yd(a)?Cd:Dd).bind(null,a);b.addEventListener(a,c,!0)}function Cd(a,b){Hb(Dd,a,b)}\nfunction Dd(a,b){if(Bd){var c=Nb(b);c=Ha(c);null===c||\"number\"!==typeof c.tag||2===ed(c)||(c=null);if(zd.length){var d=zd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Kb(Ad,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>zd.length&&zd.push(a)}}}var Fd={},Gd=0,Hd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Id(a){Object.prototype.hasOwnProperty.call(a,Hd)||(a[Hd]=Gd++,Fd[a[Hd]]={});return Fd[a[Hd]]}function Jd(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Kd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ld(a,b){var c=Kd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Kd(c)}}function Md(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Md(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Nd(){for(var a=window,b=Jd();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Jd(a.document)}return b}function Od(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Pd(){var a=Nd();if(Od(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{b=(b=a.ownerDocument)&&b.defaultView||window;var c=b.getSelection&&b.getSelection();if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(A){b=null;break a}var f=0,g=-1,h=-1,l=0,k=0,m=a,p=null;b:for(;;){for(var t;;){m!==b||0!==d&&3!==m.nodeType||(g=f+d);m!==e||0!==c&&3!==m.nodeType||(h=f+c);3===m.nodeType&&(f+=m.nodeValue.length);\nif(null===(t=m.firstChild))break;p=m;m=t}for(;;){if(m===a)break b;p===b&&++l===d&&(g=f);p===e&&++k===c&&(h=f);if(null!==(t=m.nextSibling))break;m=p;p=m.parentNode}m=t}b=-1===g||-1===h?null:{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;return{focusedElem:a,selectionRange:b}}\nfunction Qd(a){var b=Nd(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Md(c.ownerDocument.documentElement,c)){if(null!==d&&Od(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ld(c,f);var g=Ld(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Rd=Ra&&\"documentMode\"in document&&11>=document.documentMode,Sd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Td=null,Ud=null,Vd=null,Wd=!1;\nfunction Xd(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if(Wd||null==Td||Td!==Jd(c))return null;c=Td;\"selectionStart\"in c&&Od(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Vd&&dd(Vd,c)?null:(Vd=c,a=y.getPooled(Sd.select,Ud,a,b),a.type=\"select\",a.target=Td,Qa(a),a)}\nvar Yd={eventTypes:Sd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Id(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ja(b):window;switch(a){case \"focus\":if(Mb(e)||\"true\"===e.contentEditable)Td=e,Ud=b,Vd=null;break;case \"blur\":Vd=Ud=Td=null;break;case \"mousedown\":Wd=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return Wd=!1,Xd(c,d);case \"selectionchange\":if(Rd)break;\ncase \"keydown\":case \"keyup\":return Xd(c,d)}return null}};Ba.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ta=Ka;ua=Ia;va=Ja;Ba.injectEventPluginsByName({SimpleEventPlugin:xd,EnterLeaveEventPlugin:ad,ChangeEventPlugin:Pc,SelectEventPlugin:Yd,BeforeInputEventPlugin:zb});function Zd(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction $d(a,b){a=n({children:void 0},b);if(b=Zd(b.children))a.children=b;return a}function ae(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+uc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction be(a,b){null!=b.dangerouslySetInnerHTML?x(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?x(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:x(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:uc(c)}}\nfunction de(a,b){var c=uc(b.value),d=uc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function he(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ie=void 0,je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{ie=ie||document.createElement(\"div\");ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(le).forEach(function(a){me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);le[b]=le[a]})});function ne(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||le.hasOwnProperty(a)&&le[a]?(\"\"+b).trim():b+\"px\"}\nfunction oe(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=ne(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var pe=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction qe(a,b){b&&(pe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?x(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?x(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:x(\"61\")),null!=b.style&&\"object\"!==typeof b.style?x(\"62\",\"\"):void 0)}\nfunction re(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Id(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Ed(\"scroll\",a);break;case \"focus\":case \"blur\":Ed(\"focus\",a);Ed(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Ob(e)&&Ed(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===ab.indexOf(e)&&E(e,a)}c[e]=!0}}}function te(){}var ue=null,ve=null;\nfunction we(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function xe(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar ye=\"function\"===typeof setTimeout?setTimeout:void 0,ze=\"function\"===typeof clearTimeout?clearTimeout:void 0,Ae=r.unstable_scheduleCallback,Be=r.unstable_cancelCallback;\nfunction Ce(a,b,c,d,e){a[Ga]=e;\"input\"===c&&\"radio\"===e.type&&null!=e.name&&xc(a,e);re(c,d);d=re(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?oe(a,h):\"dangerouslySetInnerHTML\"===g?je(a,h):\"children\"===g?ke(a,h):tc(a,g,h,d)}switch(c){case \"input\":yc(a,e);break;case \"textarea\":de(a,e);break;case \"select\":b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ae(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?ae(a,!!e.multiple,e.defaultValue,\n!0):ae(a,!!e.multiple,e.multiple?[]:\"\",!1))}}function De(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function Ee(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var Fe=[],Ge=-1;function F(a){0>Ge||(a.current=Fe[Ge],Fe[Ge]=null,Ge--)}function G(a,b){Ge++;Fe[Ge]=a.current;a.current=b}var He={},H={current:He},I={current:!1},Ie=He;\nfunction Je(a,b){var c=a.type.contextTypes;if(!c)return He;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function J(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ke(a){F(I,a);F(H,a)}function Le(a){F(I,a);F(H,a)}\nfunction Me(a,b,c){H.current!==He?x(\"168\"):void 0;G(H,b,a);G(I,c,a)}function Ne(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:x(\"108\",ic(b)||\"Unknown\",e);return n({},c,d)}function Oe(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||He;Ie=H.current;G(H,b,a);G(I,I.current,a);return!0}\nfunction Pe(a,b,c){var d=a.stateNode;d?void 0:x(\"169\");c?(b=Ne(a,b,Ie),d.__reactInternalMemoizedMergedChildContext=b,F(I,a),F(H,a),G(H,b,a)):F(I,a);G(I,c,a)}var Qe=null,Re=null;function Se(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Te(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Qe=Se(function(a){return b.onCommitFiberRoot(c,a)});Re=Se(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Ue(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function K(a,b,c,d){return new Ue(a,b,c,d)}\nfunction Ve(a){a=a.prototype;return!(!a||!a.isReactComponent)}function We(a){if(\"function\"===typeof a)return Ve(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===cc)return 11;if(a===ec)return 14}return 2}\nfunction Xe(a,b){var c=a.alternate;null===c?(c=K(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.effectTag=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childExpirationTime=a.childExpirationTime;c.expirationTime=a.expirationTime;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;c.contextDependencies=a.contextDependencies;c.sibling=a.sibling;\nc.index=a.index;c.ref=a.ref;return c}\nfunction Ye(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Ve(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case Xb:return Ze(c.children,e,f,b);case bc:return $e(c,e|3,f,b);case Yb:return $e(c,e|2,f,b);case Zb:return a=K(12,c,b,e|4),a.elementType=Zb,a.type=Zb,a.expirationTime=f,a;case dc:return a=K(13,c,b,e),a.elementType=dc,a.type=dc,a.expirationTime=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case $b:g=10;break a;case ac:g=9;break a;case cc:g=11;break a;case ec:g=\n14;break a;case fc:g=16;d=null;break a}x(\"130\",null==a?a:typeof a,\"\")}b=K(g,c,b,e);b.elementType=a;b.type=d;b.expirationTime=f;return b}function Ze(a,b,c,d){a=K(7,a,d,b);a.expirationTime=c;return a}function $e(a,b,c,d){a=K(8,a,d,b);b=0===(b&1)?Yb:bc;a.elementType=b;a.type=b;a.expirationTime=c;return a}function af(a,b,c){a=K(6,a,null,b);a.expirationTime=c;return a}\nfunction bf(a,b,c){b=K(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function cf(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c<b?a.earliestPendingTime=b:a.latestPendingTime>b&&(a.latestPendingTime=b);df(b,a)}\nfunction ef(a,b){a.didError=!1;if(0===b)a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0;else{b<a.latestPingedTime&&(a.latestPingedTime=0);var c=a.latestPendingTime;0!==c&&(c>b?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime>b&&(a.earliestPendingTime=a.latestPendingTime));c=a.earliestSuspendedTime;0===c?cf(a,b):b<a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,cf(a,b)):\nb>c&&cf(a,b)}df(0,a)}function ff(a,b){a.didError=!1;a.latestPingedTime>=b&&(a.latestPingedTime=0);var c=a.earliestPendingTime,d=a.latestPendingTime;c===b?a.earliestPendingTime=d===b?a.latestPendingTime=0:d:d===b&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;d=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=b:c<b?a.earliestSuspendedTime=b:d>b&&(a.latestSuspendedTime=b);df(b,a)}\nfunction gf(a,b){var c=a.earliestPendingTime;a=a.earliestSuspendedTime;c>b&&(b=c);a>b&&(b=a);return b}function df(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d<a)&&(e=d);a=e;0!==a&&c>a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}function L(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction hf(a){var b=a._result;switch(a._status){case 1:return b;case 2:throw b;case 0:throw b;default:a._status=0;b=a._ctor;b=b();b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)});switch(a._status){case 1:return a._result;case 2:throw a._result;}a._result=b;throw b;}}var jf=(new aa.Component).refs;\nfunction kf(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar tf={isMounted:function(a){return(a=a._reactInternalFiber)?2===ed(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=lf();d=mf(d,a);var e=nf(d);e.tag=rf;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);of();pf(a,e);qf(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=lf();c=mf(c,a);var d=nf(c);d.tag=\nsf;void 0!==b&&null!==b&&(d.callback=b);of();pf(a,d);qf(a,c)}};function uf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!dd(c,d)||!dd(e,f):!0}\nfunction vf(a,b,c){var d=!1,e=He;var f=b.contextType;\"object\"===typeof f&&null!==f?f=M(f):(e=J(b)?Ie:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Je(a,e):He);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=tf;a.stateNode=b;b._reactInternalFiber=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction wf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&tf.enqueueReplaceState(b,b.state,null)}\nfunction xf(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jf;var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=M(f):(f=J(b)?Ie:H.current,e.context=Je(a,f));f=a.updateQueue;null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kf(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==\ntypeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&tf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(yf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var zf=Array.isArray;\nfunction Af(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(1!==c.tag?x(\"309\"):void 0,d=c.stateNode);d?void 0:x(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===jf&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?x(\"284\"):void 0;c._owner?void 0:x(\"290\",a)}return a}\nfunction Bf(a,b){\"textarea\"!==a.type&&x(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Cf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Xe(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=af(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function l(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props,d),d.ref=Af(a,b,c),d.return=a,d;d=Ye(c.type,c.key,c.props,null,a.mode,d);d.ref=Af(a,b,c);d.return=a;return d}function k(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==\nc.implementation)return b=bf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ze(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function p(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=af(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Vb:return c=Ye(b.type,b.key,b.props,null,a.mode,c),c.ref=Af(a,null,b),c.return=a,c;case Wb:return b=bf(b,a.mode,c),b.return=a,b}if(zf(b)||\nhc(b))return b=Ze(b,a.mode,c,null),b.return=a,b;Bf(a,b)}return null}function t(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Vb:return c.key===e?c.type===Xb?m(a,b,c.props.children,d,e):l(a,b,c,d):null;case Wb:return c.key===e?k(a,b,c,d):null}if(zf(c)||hc(c))return null!==e?null:m(a,b,c,d,null);Bf(a,c)}return null}function A(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=\na.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Vb:return a=a.get(null===d.key?c:d.key)||null,d.type===Xb?m(b,a,d.props.children,e,d.key):l(b,a,d,e);case Wb:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e)}if(zf(d)||hc(d))return a=a.get(c)||null,m(b,a,d,e,null);Bf(b,d)}return null}function v(e,g,h,k){for(var l=null,m=null,q=g,u=g=0,B=null;null!==q&&u<h.length;u++){q.index>u?(B=q,q=null):B=q.sibling;var w=t(e,q,h[u],k);if(null===w){null===q&&(q=B);break}a&&\nq&&null===w.alternate&&b(e,q);g=f(w,g,u);null===m?l=w:m.sibling=w;m=w;q=B}if(u===h.length)return c(e,q),l;if(null===q){for(;u<h.length;u++)if(q=p(e,h[u],k))g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;return l}for(q=d(e,q);u<h.length;u++)if(B=A(q,e,u,h[u],k))a&&null!==B.alternate&&q.delete(null===B.key?u:B.key),g=f(B,g,u),null===m?l=B:m.sibling=B,m=B;a&&q.forEach(function(a){return b(e,a)});return l}function R(e,g,h,k){var l=hc(h);\"function\"!==typeof l?x(\"150\"):void 0;h=l.call(h);null==h?x(\"151\"):void 0;\nfor(var m=l=null,q=g,u=g=0,B=null,w=h.next();null!==q&&!w.done;u++,w=h.next()){q.index>u?(B=q,q=null):B=q.sibling;var v=t(e,q,w.value,k);if(null===v){q||(q=B);break}a&&q&&null===v.alternate&&b(e,q);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;q=B}if(w.done)return c(e,q),l;if(null===q){for(;!w.done;u++,w=h.next())w=p(e,w.value,k),null!==w&&(g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);return l}for(q=d(e,q);!w.done;u++,w=h.next())w=A(q,e,u,w.value,k),null!==w&&(a&&null!==w.alternate&&q.delete(null===w.key?u:\nw.key),g=f(w,g,u),null===m?l=w:m.sibling=w,m=w);a&&q.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===Xb&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case Vb:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(7===k.tag?f.type===Xb:k.elementType===f.type){c(a,k.sibling);d=e(k,f.type===Xb?f.props.children:f.props,h);d.ref=Af(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=\nk.sibling}f.type===Xb?(d=Ze(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Ye(f.type,f.key,f.props,null,a.mode,h),h.ref=Af(a,d,f),h.return=a,a=h)}return g(a);case Wb:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=bf(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\n\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=a,a=d):(c(a,d),d=af(f,a.mode,h),d.return=a,a=d),g(a);if(zf(f))return v(a,d,f,h);if(hc(f))return R(a,d,f,h);l&&Bf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 0:h=a.type,x(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Df=Cf(!0),Ef=Cf(!1),Ff={},N={current:Ff},Gf={current:Ff},Hf={current:Ff};function If(a){a===Ff?x(\"174\"):void 0;return a}\nfunction Jf(a,b){G(Hf,b,a);G(Gf,a,a);G(N,Ff,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:he(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=he(b,c)}F(N,a);G(N,b,a)}function Kf(a){F(N,a);F(Gf,a);F(Hf,a)}function Lf(a){If(Hf.current);var b=If(N.current);var c=he(b,a.type);b!==c&&(G(Gf,a,a),G(N,c,a))}function Mf(a){Gf.current===a&&(F(N,a),F(Gf,a))}\nvar Nf=0,Of=2,Pf=4,Qf=8,Rf=16,Sf=32,Tf=64,Uf=128,Vf=Tb.ReactCurrentDispatcher,Wf=0,Xf=null,O=null,P=null,Yf=null,Q=null,Zf=null,$f=0,ag=null,bg=0,cg=!1,dg=null,eg=0;function fg(){x(\"321\")}function gg(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!bd(a[c],b[c]))return!1;return!0}\nfunction hg(a,b,c,d,e,f){Wf=f;Xf=b;P=null!==a?a.memoizedState:null;Vf.current=null===P?ig:jg;b=c(d,e);if(cg){do cg=!1,eg+=1,P=null!==a?a.memoizedState:null,Zf=Yf,ag=Q=O=null,Vf.current=jg,b=c(d,e);while(cg);dg=null;eg=0}Vf.current=kg;a=Xf;a.memoizedState=Yf;a.expirationTime=$f;a.updateQueue=ag;a.effectTag|=bg;a=null!==O&&null!==O.next;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;a?x(\"300\"):void 0;return b}function lg(){Vf.current=kg;Wf=0;Zf=Q=Yf=P=O=Xf=null;$f=0;ag=null;bg=0;cg=!1;dg=null;eg=0}\nfunction mg(){var a={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};null===Q?Yf=Q=a:Q=Q.next=a;return Q}function ng(){if(null!==Zf)Q=Zf,Zf=Q.next,O=P,P=null!==O?O.next:null;else{null===P?x(\"310\"):void 0;O=P;var a={memoizedState:O.memoizedState,baseState:O.baseState,queue:O.queue,baseUpdate:O.baseUpdate,next:null};Q=null===Q?Yf=a:Q.next=a;P=O.next}return Q}function og(a,b){return\"function\"===typeof b?b(a):b}\nfunction pg(a){var b=ng(),c=b.queue;null===c?x(\"311\"):void 0;c.lastRenderedReducer=a;if(0<eg){var d=c.dispatch;if(null!==dg){var e=dg.get(c);if(void 0!==e){dg.delete(c);var f=b.memoizedState;do f=a(f,e.action),e=e.next;while(null!==e);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate===c.last&&(b.baseState=f);c.lastRenderedState=f;return[f,d]}}return[b.memoizedState,d]}d=c.last;var g=b.baseUpdate;f=b.baseState;null!==g?(null!==d&&(d.next=null),d=g.next):d=null!==d?d.next:null;if(null!==\nd){var h=e=null,l=d,k=!1;do{var m=l.expirationTime;m<Wf?(k||(k=!0,h=g,e=f),m>$f&&($f=m)):f=l.eagerReducer===a?l.eagerState:a(f,l.action);g=l;l=l.next}while(null!==l&&l!==d);k||(h=g,e=f);bd(f,b.memoizedState)||(qg=!0);b.memoizedState=f;b.baseUpdate=h;b.baseState=e;c.lastRenderedState=f}return[b.memoizedState,c.dispatch]}\nfunction rg(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};null===ag?(ag={lastEffect:null},ag.lastEffect=a.next=a):(b=ag.lastEffect,null===b?ag.lastEffect=a.next=a:(c=b.next,b.next=a,a.next=c,ag.lastEffect=a));return a}function sg(a,b,c,d){var e=mg();bg|=a;e.memoizedState=rg(b,c,void 0,void 0===d?null:d)}\nfunction tg(a,b,c,d){var e=ng();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&gg(d,g.deps)){rg(Nf,c,f,d);return}}bg|=a;e.memoizedState=rg(b,c,f,d)}function ug(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vg(){}\nfunction wg(a,b,c){25>eg?void 0:x(\"301\");var d=a.alternate;if(a===Xf||null!==d&&d===Xf)if(cg=!0,a={expirationTime:Wf,action:c,eagerReducer:null,eagerState:null,next:null},null===dg&&(dg=new Map),c=dg.get(b),void 0===c)dg.set(b,a);else{for(b=c;null!==b.next;)b=b.next;b.next=a}else{of();var e=lf();e=mf(e,a);var f={expirationTime:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.last;if(null===g)f.next=f;else{var h=g.next;null!==h&&(f.next=h);g.next=f}b.last=f;if(0===a.expirationTime&&(null===\nd||0===d.expirationTime)&&(d=b.lastRenderedReducer,null!==d))try{var l=b.lastRenderedState,k=d(l,c);f.eagerReducer=d;f.eagerState=k;if(bd(k,l))return}catch(m){}finally{}qf(a,e)}}\nvar kg={readContext:M,useCallback:fg,useContext:fg,useEffect:fg,useImperativeHandle:fg,useLayoutEffect:fg,useMemo:fg,useReducer:fg,useRef:fg,useState:fg,useDebugValue:fg},ig={readContext:M,useCallback:function(a,b){mg().memoizedState=[a,void 0===b?null:b];return a},useContext:M,useEffect:function(a,b){return sg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return sg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,b){return sg(4,Pf|Sf,a,b)},\nuseMemo:function(a,b){var c=mg();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=mg();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={last:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=wg.bind(null,Xf,a);return[d.memoizedState,a]},useRef:function(a){var b=mg();a={current:a};return b.memoizedState=a},useState:function(a){var b=mg();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={last:null,dispatch:null,\nlastRenderedReducer:og,lastRenderedState:a};a=a.dispatch=wg.bind(null,Xf,a);return[b.memoizedState,a]},useDebugValue:vg},jg={readContext:M,useCallback:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];c.memoizedState=[a,b];return a},useContext:M,useEffect:function(a,b){return tg(516,Uf|Tf,a,b)},useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return tg(4,Pf|Sf,ug.bind(null,b,a),c)},useLayoutEffect:function(a,\nb){return tg(4,Pf|Sf,a,b)},useMemo:function(a,b){var c=ng();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&gg(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a},useReducer:pg,useRef:function(){return ng().memoizedState},useState:function(a){return pg(og,a)},useDebugValue:vg},xg=null,yg=null,zg=!1;\nfunction Ag(a,b){var c=K(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function Bg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction Cg(a){if(zg){var b=yg;if(b){var c=b;if(!Bg(a,b)){b=De(c);if(!b||!Bg(a,b)){a.effectTag|=2;zg=!1;xg=a;return}Ag(xg,c)}xg=a;yg=Ee(b)}else a.effectTag|=2,zg=!1,xg=a}}function Dg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&18!==a.tag;)a=a.return;xg=a}function Eg(a){if(a!==xg)return!1;if(!zg)return Dg(a),zg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!xe(b,a.memoizedProps))for(b=yg;b;)Ag(a,b),b=De(b);Dg(a);yg=xg?De(a.stateNode):null;return!0}function Fg(){yg=xg=null;zg=!1}\nvar Gg=Tb.ReactCurrentOwner,qg=!1;function S(a,b,c,d){b.child=null===a?Ef(b,null,c,d):Df(b,a.child,c,d)}function Hg(a,b,c,d,e){c=c.render;var f=b.ref;Ig(b,e);d=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,d,e);return b.child}\nfunction Kg(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Ve(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Lg(a,b,g,d,e,f);a=Ye(c.type,null,d,null,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(e<f&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:dd,c(e,d)&&a.ref===b.ref))return Jg(a,b,f);b.effectTag|=1;a=Xe(g,d,f);a.ref=b.ref;a.return=b;return b.child=a}\nfunction Lg(a,b,c,d,e,f){return null!==a&&dd(a.memoizedProps,d)&&a.ref===b.ref&&(qg=!1,e<f)?Jg(a,b,f):Mg(a,b,c,d,f)}function Ng(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Mg(a,b,c,d,e){var f=J(c)?Ie:H.current;f=Je(b,f);Ig(b,e);c=hg(a,b,c,d,f,e);if(null!==a&&!qg)return b.updateQueue=a.updateQueue,b.effectTag&=-517,a.expirationTime<=e&&(a.expirationTime=0),Jg(a,b,e);b.effectTag|=1;S(a,b,c,e);return b.child}\nfunction Og(a,b,c,d,e){if(J(c)){var f=!0;Oe(b)}else f=!1;Ig(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),vf(b,c,d,e),xf(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var l=g.context,k=c.contextType;\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k));var m=c.getDerivedStateFromProps,p=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;p||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k);Pg=!1;var t=b.memoizedState;l=g.state=t;var A=b.updateQueue;null!==A&&(yf(b,A,d,g,e),l=b.memoizedState);h!==d||t!==l||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),l=b.memoizedState),(h=Pg||uf(b,c,h,d,t,l,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&\ng.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=l),g.props=d,g.state=l,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=b.memoizedProps,g.props=b.type===b.elementType?h:L(b.type,h),l=g.context,k=c.contextType,\"object\"===typeof k&&null!==k?k=M(k):(k=J(c)?Ie:H.current,k=Je(b,k)),m=c.getDerivedStateFromProps,(p=\"function\"===\ntypeof m||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||l!==k)&&wf(b,g,d,k),Pg=!1,l=b.memoizedState,t=g.state=l,A=b.updateQueue,null!==A&&(yf(b,A,d,g,e),t=b.memoizedState),h!==d||l!==t||I.current||Pg?(\"function\"===typeof m&&(kf(b,c,m,d),t=b.memoizedState),(m=Pg||uf(b,c,h,d,l,t,k))?(p||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===\ntypeof g.componentWillUpdate&&g.componentWillUpdate(d,t,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,t,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=\nt),g.props=d,g.state=t,g.context=k,d=m):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&l===a.memoizedState||(b.effectTag|=256),d=!1);return Qg(a,b,c,d,f,e)}\nfunction Qg(a,b,c,d,e,f){Ng(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Pe(b,c,!1),Jg(a,b,f);d=b.stateNode;Gg.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.effectTag|=1;null!==a&&g?(b.child=Df(b,a.child,null,f),b.child=Df(b,null,h,f)):S(a,b,h,f);b.memoizedState=d.state;e&&Pe(b,c,!0);return b.child}function Rg(a){var b=a.stateNode;b.pendingContext?Me(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Me(a,b.context,!1);Jf(a,b.containerInfo)}\nfunction Sg(a,b,c){var d=b.mode,e=b.pendingProps,f=b.memoizedState;if(0===(b.effectTag&64)){f=null;var g=!1}else f={timedOutAt:null!==f?f.timedOutAt:0},g=!0,b.effectTag&=-65;if(null===a)if(g){var h=e.fallback;a=Ze(null,d,0,null);0===(b.mode&1)&&(a.child=null!==b.memoizedState?b.child.child:b.child);d=Ze(h,d,c,null);a.sibling=d;c=a;c.return=d.return=b}else c=d=Ef(b,null,e.children,c);else null!==a.memoizedState?(d=a.child,h=d.sibling,g?(c=e.fallback,e=Xe(d,d.pendingProps,0),0===(b.mode&1)&&(g=null!==\nb.memoizedState?b.child.child:b.child,g!==d.child&&(e.child=g)),d=e.sibling=Xe(h,c,h.expirationTime),c=e,e.childExpirationTime=0,c.return=d.return=b):c=d=Df(b,d.child,e.children,c)):(h=a.child,g?(g=e.fallback,e=Ze(null,d,0,null),e.child=h,0===(b.mode&1)&&(e.child=null!==b.memoizedState?b.child.child:b.child),d=e.sibling=Ze(g,d,c,null),d.effectTag|=2,c=e,e.childExpirationTime=0,c.return=d.return=b):d=c=Df(b,h,e.children,c)),b.stateNode=a.stateNode;b.memoizedState=f;b.child=c;return d}\nfunction Jg(a,b,c){null!==a&&(b.contextDependencies=a.contextDependencies);if(b.childExpirationTime<c)return null;null!==a&&b.child!==a.child?x(\"153\"):void 0;if(null!==b.child){a=b.child;c=Xe(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Xe(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Tg(a,b,c){var d=b.expirationTime;if(null!==a)if(a.memoizedProps!==b.pendingProps||I.current)qg=!0;else{if(d<c){qg=!1;switch(b.tag){case 3:Rg(b);Fg();break;case 5:Lf(b);break;case 1:J(b.type)&&Oe(b);break;case 4:Jf(b,b.stateNode.containerInfo);break;case 10:Ug(b,b.memoizedProps.value);break;case 13:if(null!==b.memoizedState){d=b.child.childExpirationTime;if(0!==d&&d>=c)return Sg(a,b,c);b=Jg(a,b,c);return null!==b?b.sibling:null}}return Jg(a,b,c)}}else qg=!1;b.expirationTime=0;switch(b.tag){case 2:d=\nb.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);a=b.pendingProps;var e=Je(b,H.current);Ig(b,c);e=hg(null,b,d,a,e,c);b.effectTag|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;lg();if(J(d)){var f=!0;Oe(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;var g=d.getDerivedStateFromProps;\"function\"===typeof g&&kf(b,d,g,a);e.updater=tf;b.stateNode=e;e._reactInternalFiber=b;xf(b,d,a,c);b=Qg(null,b,d,!0,f,\nc)}else b.tag=0,S(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2);f=b.pendingProps;a=hf(e);b.type=a;e=b.tag=We(a);f=L(a,f);g=void 0;switch(e){case 0:g=Mg(null,b,a,f,c);break;case 1:g=Og(null,b,a,f,c);break;case 11:g=Hg(null,b,a,f,c);break;case 14:g=Kg(null,b,a,L(a.type,f),d,c);break;default:x(\"306\",a,\"\")}return g;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Mg(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,\ne=b.elementType===d?e:L(d,e),Og(a,b,d,e,c);case 3:Rg(b);d=b.updateQueue;null===d?x(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;yf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)Fg(),b=Jg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)yg=Ee(b.stateNode.containerInfo),xg=b,e=zg=!0;e?(b.effectTag|=2,b.child=Ef(b,null,d,c)):(S(a,b,d,c),Fg());b=b.child}return b;case 5:return Lf(b),null===a&&Cg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,\ng=e.children,xe(d,e)?g=null:null!==f&&xe(d,f)&&(b.effectTag|=16),Ng(a,b),1!==c&&b.mode&1&&e.hidden?(b.expirationTime=b.childExpirationTime=1,b=null):(S(a,b,g,c),b=b.child),b;case 6:return null===a&&Cg(b),null;case 13:return Sg(a,b,c);case 4:return Jf(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Df(b,null,d,c):S(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:L(d,e),Hg(a,b,d,e,c);case 7:return S(a,b,b.pendingProps,c),b.child;case 8:return S(a,b,b.pendingProps.children,\nc),b.child;case 12:return S(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;Ug(b,f);if(null!==g){var h=g.value;f=bd(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!I.current){b=Jg(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var l=h.contextDependencies;if(null!==l){g=h.child;for(var k=l.first;null!==k;){if(k.context===d&&0!==\n(k.observedBits&f)){1===h.tag&&(k=nf(c),k.tag=sf,pf(h,k));h.expirationTime<c&&(h.expirationTime=c);k=h.alternate;null!==k&&k.expirationTime<c&&(k.expirationTime=c);k=c;for(var m=h.return;null!==m;){var p=m.alternate;if(m.childExpirationTime<k)m.childExpirationTime=k,null!==p&&p.childExpirationTime<k&&(p.childExpirationTime=k);else if(null!==p&&p.childExpirationTime<k)p.childExpirationTime=k;else break;m=m.return}l.expirationTime<c&&(l.expirationTime=c);break}k=k.next}}else g=10===h.tag?h.type===b.type?\nnull:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}}S(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,Ig(b,c),e=M(e,f.unstable_observedBits),d=d(e),b.effectTag|=1,S(a,b,d,c),b.child;case 14:return e=b.type,f=L(e,b.pendingProps),f=L(e.type,f),Kg(a,b,e,f,d,c);case 15:return Lg(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===\nd?e:L(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.effectTag|=2),b.tag=1,J(d)?(a=!0,Oe(b)):a=!1,Ig(b,c),vf(b,d,e,c),xf(b,d,e,c),Qg(null,b,d,!0,a,c)}x(\"156\")}var Vg={current:null},Wg=null,Xg=null,Yg=null;function Ug(a,b){var c=a.type._context;G(Vg,c._currentValue,a);c._currentValue=b}function Zg(a){var b=Vg.current;F(Vg,a);a.type._context._currentValue=b}function Ig(a,b){Wg=a;Yg=Xg=null;var c=a.contextDependencies;null!==c&&c.expirationTime>=b&&(qg=!0);a.contextDependencies=null}\nfunction M(a,b){if(Yg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)Yg=a,b=1073741823;b={context:a,observedBits:b,next:null};null===Xg?(null===Wg?x(\"308\"):void 0,Xg=b,Wg.contextDependencies={first:b,expirationTime:0}):Xg=Xg.next=b}return a._currentValue}var $g=0,rf=1,sf=2,ah=3,Pg=!1;function bh(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction ch(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function nf(a){return{expirationTime:a,tag:$g,payload:null,callback:null,next:null,nextEffect:null}}function dh(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction pf(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bh(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bh(a.memoizedState),e=c.updateQueue=bh(c.memoizedState)):d=a.updateQueue=ch(e):null===e&&(e=c.updateQueue=ch(d));null===e||d===e?dh(d,b):null===d.lastUpdate||null===e.lastUpdate?(dh(d,b),dh(e,b)):(dh(d,b),e.lastUpdate=b)}\nfunction eh(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bh(a.memoizedState):fh(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function fh(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=ch(b));return b}\nfunction gh(a,b,c,d,e,f){switch(c.tag){case rf:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case ah:a.effectTag=a.effectTag&-2049|64;case $g:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case sf:Pg=!0}return d}\nfunction yf(a,b,c,d,e){Pg=!1;b=fh(a,b);for(var f=b.baseState,g=null,h=0,l=b.firstUpdate,k=f;null!==l;){var m=l.expirationTime;m<e?(null===g&&(g=l,f=k),h<m&&(h=m)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=32,l.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=l:(b.lastEffect.nextEffect=l,b.lastEffect=l)));l=l.next}m=null;for(l=b.firstCapturedUpdate;null!==l;){var p=l.expirationTime;p<e?(null===m&&(m=l,null===g&&(f=k)),h<p&&(h=p)):(k=gh(a,b,l,k,c,d),null!==l.callback&&(a.effectTag|=\n32,l.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=l:(b.lastCapturedEffect.nextEffect=l,b.lastCapturedEffect=l)));l=l.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=k);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=k}\nfunction hh(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);ih(b.firstEffect,c);b.firstEffect=b.lastEffect=null;ih(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function ih(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?x(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction jh(a,b){return{value:a,source:b,stack:jc(b)}}function kh(a){a.effectTag|=4}var lh=void 0,mh=void 0,nh=void 0,oh=void 0;lh=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};mh=function(){};\nnh=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;If(N.current);a=null;switch(c){case \"input\":f=vc(g,f);d=vc(g,d);a=[];break;case \"option\":f=$d(g,f);d=$d(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=be(g,f);d=be(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=te)}qe(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var l=f[c];for(g in l)l.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(ra.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var k=d[c];l=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&k!==l&&(null!=k||null!=l))if(\"style\"===c)if(l){for(g in l)!l.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in k)k.hasOwnProperty(g)&&l[g]!==k[g]&&(h||\n(h={}),h[g]=k[g])}else h||(a||(a=[]),a.push(c,h)),h=k;else\"dangerouslySetInnerHTML\"===c?(k=k?k.__html:void 0,l=l?l.__html:void 0,null!=k&&l!==k&&(a=a||[]).push(c,\"\"+k)):\"children\"===c?l===k||\"string\"!==typeof k&&\"number\"!==typeof k||(a=a||[]).push(c,\"\"+k):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(ra.hasOwnProperty(c)?(null!=k&&se(e,c),a||l===k||(a=[])):(a=a||[]).push(c,k))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&kh(b)}};oh=function(a,b,c,d){c!==d&&kh(b)};\nvar ph=\"function\"===typeof WeakSet?WeakSet:Set;function qh(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=jc(c));null!==c&&ic(c.type);b=b.value;null!==a&&1===a.tag&&ic(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function rh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){sh(a,c)}else b.current=null}\nfunction th(a,b,c){c=c.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do{if((d.tag&a)!==Nf){var e=d.destroy;d.destroy=void 0;void 0!==e&&e()}(d.tag&b)!==Nf&&(e=d.create,d.destroy=e());d=d.next}while(d!==c)}}\nfunction uh(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d.style.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=ne(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if(13===c.tag&&null!==c.memoizedState){d=c.child.sibling;d.return=c;c=d;continue}else if(null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===c.return||\nc.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction vh(a){\"function\"===typeof Re&&Re(a);switch(a.tag){case 0:case 11:case 14:case 15:var b=a.updateQueue;if(null!==b&&(b=b.lastEffect,null!==b)){var c=b=b.next;do{var d=c.destroy;if(void 0!==d){var e=a;try{d()}catch(f){sh(e,f)}}c=c.next}while(c!==b)}break;case 1:rh(a);b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(f){sh(a,f)}break;case 5:rh(a);break;case 4:wh(a)}}\nfunction xh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction yh(a){a:{for(var b=a.return;null!==b;){if(xh(b)){var c=b;break a}b=b.return}x(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:x(\"161\")}c.effectTag&16&&(ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||xh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.effectTag&\n2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(g=b,h=e.stateNode,8===g.nodeType?(f=g.parentNode,f.insertBefore(h,g)):(f=g,f.appendChild(h)),g=g._reactRootContainer,null!==g&&void 0!==g||null!==f.onclick||(f.onclick=te)):b.appendChild(e.stateNode);\nelse if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction wh(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?x(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if(vh(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag){if(null!==b.child){d=b.stateNode.containerInfo;e=!0;b.child.return=b;b=b.child;continue}}else if(vh(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction zh(a,b){switch(b.tag){case 0:case 11:case 14:case 15:th(Pf,Qf,b);break;case 1:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&Ce(c,f,e,a,d,b)}break;case 6:null===b.stateNode?x(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 12:break;case 13:c=b.memoizedState;d=void 0;a=b;null===c?d=!1:(d=!0,a=b.child,0===c.timedOutAt&&(c.timedOutAt=lf()));null!==a&&uh(a,d);c=\nb.updateQueue;if(null!==c){b.updateQueue=null;var g=b.stateNode;null===g&&(g=b.stateNode=new ph);c.forEach(function(a){var c=Ah.bind(null,b,a);g.has(a)||(g.add(a),a.then(c,c))})}break;case 17:break;default:x(\"163\")}}var Bh=\"function\"===typeof WeakMap?WeakMap:Map;function Ch(a,b,c){c=nf(c);c.tag=ah;c.payload={element:null};var d=b.value;c.callback=function(){Dh(d);qh(a,b)};return c}\nfunction Eh(a,b,c){c=nf(c);c.tag=ah;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Fh?Fh=new Set([this]):Fh.add(this));var c=b.value,e=b.stack;qh(a,b);this.componentDidCatch(c,{componentStack:null!==e?e:\"\"})});return c}\nfunction Gh(a){switch(a.tag){case 1:J(a.type)&&Ke(a);var b=a.effectTag;return b&2048?(a.effectTag=b&-2049|64,a):null;case 3:return Kf(a),Le(a),b=a.effectTag,0!==(b&64)?x(\"285\"):void 0,a.effectTag=b&-2049|64,a;case 5:return Mf(a),null;case 13:return b=a.effectTag,b&2048?(a.effectTag=b&-2049|64,a):null;case 18:return null;case 4:return Kf(a),null;case 10:return Zg(a),null;default:return null}}\nvar Hh=Tb.ReactCurrentDispatcher,Ih=Tb.ReactCurrentOwner,Jh=1073741822,Kh=!1,T=null,Lh=null,U=0,Mh=-1,Nh=!1,V=null,Oh=!1,Ph=null,Qh=null,Rh=null,Fh=null;function Sh(){if(null!==T)for(var a=T.return;null!==a;){var b=a;switch(b.tag){case 1:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ke(b);break;case 3:Kf(b);Le(b);break;case 5:Mf(b);break;case 4:Kf(b);break;case 10:Zg(b)}a=a.return}Lh=null;U=0;Mh=-1;Nh=!1;T=null}\nfunction Th(){for(;null!==V;){var a=V.effectTag;a&16&&ke(V.stateNode,\"\");if(a&128){var b=V.alternate;null!==b&&(b=b.ref,null!==b&&(\"function\"===typeof b?b(null):b.current=null))}switch(a&14){case 2:yh(V);V.effectTag&=-3;break;case 6:yh(V);V.effectTag&=-3;zh(V.alternate,V);break;case 4:zh(V.alternate,V);break;case 8:a=V,wh(a),a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null,a=a.alternate,null!==a&&(a.return=null,a.child=null,a.memoizedState=null,a.updateQueue=null)}V=V.nextEffect}}\nfunction Uh(){for(;null!==V;){if(V.effectTag&256)a:{var a=V.alternate,b=V;switch(b.tag){case 0:case 11:case 15:th(Of,Nf,b);break a;case 1:if(b.effectTag&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:L(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}break a;case 3:case 5:case 6:case 4:case 17:break a;default:x(\"163\")}}V=V.nextEffect}}\nfunction Vh(a,b){for(;null!==V;){var c=V.effectTag;if(c&36){var d=V.alternate,e=V,f=b;switch(e.tag){case 0:case 11:case 15:th(Rf,Sf,e);break;case 1:var g=e.stateNode;if(e.effectTag&4)if(null===d)g.componentDidMount();else{var h=e.elementType===e.type?d.memoizedProps:L(e.type,d.memoizedProps);g.componentDidUpdate(h,d.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}d=e.updateQueue;null!==d&&hh(e,d,g,f);break;case 3:d=e.updateQueue;if(null!==d){g=null;if(null!==e.child)switch(e.child.tag){case 5:g=\ne.child.stateNode;break;case 1:g=e.child.stateNode}hh(e,d,g,f)}break;case 5:f=e.stateNode;null===d&&e.effectTag&4&&we(e.type,e.memoizedProps)&&f.focus();break;case 6:break;case 4:break;case 12:break;case 13:break;case 17:break;default:x(\"163\")}}c&128&&(e=V.ref,null!==e&&(f=V.stateNode,\"function\"===typeof e?e(f):e.current=f));c&512&&(Ph=a);V=V.nextEffect}}\nfunction Wh(a,b){Rh=Qh=Ph=null;var c=W;W=!0;do{if(b.effectTag&512){var d=!1,e=void 0;try{var f=b;th(Uf,Nf,f);th(Nf,Tf,f)}catch(g){d=!0,e=g}d&&sh(b,e)}b=b.nextEffect}while(null!==b);W=c;c=a.expirationTime;0!==c&&Xh(a,c);X||W||Yh(1073741823,!1)}function of(){null!==Qh&&Be(Qh);null!==Rh&&Rh()}\nfunction Zh(a,b){Oh=Kh=!0;a.current===b?x(\"177\"):void 0;var c=a.pendingCommitExpirationTime;0===c?x(\"261\"):void 0;a.pendingCommitExpirationTime=0;var d=b.expirationTime,e=b.childExpirationTime;ef(a,e>d?e:d);Ih.current=null;d=void 0;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;ue=Bd;ve=Pd();Bd=!1;for(V=d;null!==V;){e=!1;var f=void 0;try{Uh()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}for(V=d;null!==V;){e=!1;\nf=void 0;try{Th()}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}Qd(ve);ve=null;Bd=!!ue;ue=null;a.current=b;for(V=d;null!==V;){e=!1;f=void 0;try{Vh(a,c)}catch(h){e=!0,f=h}e&&(null===V?x(\"178\"):void 0,sh(V,f),null!==V&&(V=V.nextEffect))}if(null!==d&&null!==Ph){var g=Wh.bind(null,a,d);Qh=r.unstable_runWithPriority(r.unstable_NormalPriority,function(){return Ae(g)});Rh=g}Kh=Oh=!1;\"function\"===typeof Qe&&Qe(b.stateNode);c=b.expirationTime;b=b.childExpirationTime;b=\nb>c?b:c;0===b&&(Fh=null);$h(a,b)}\nfunction ai(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&1024)){T=a;a:{var e=b;b=a;var f=U;var g=b.pendingProps;switch(b.tag){case 2:break;case 16:break;case 15:case 0:break;case 1:J(b.type)&&Ke(b);break;case 3:Kf(b);Le(b);g=b.stateNode;g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null);if(null===e||null===e.child)Eg(b),b.effectTag&=-3;mh(b);break;case 5:Mf(b);var h=If(Hf.current);f=b.type;if(null!==e&&null!=b.stateNode)nh(e,b,f,g,h),e.ref!==b.ref&&(b.effectTag|=\n128);else if(g){var l=If(N.current);if(Eg(b)){g=b;e=g.stateNode;var k=g.type,m=g.memoizedProps,p=h;e[Fa]=g;e[Ga]=m;f=void 0;h=k;switch(h){case \"iframe\":case \"object\":E(\"load\",e);break;case \"video\":case \"audio\":for(k=0;k<ab.length;k++)E(ab[k],e);break;case \"source\":E(\"error\",e);break;case \"img\":case \"image\":case \"link\":E(\"error\",e);E(\"load\",e);break;case \"form\":E(\"reset\",e);E(\"submit\",e);break;case \"details\":E(\"toggle\",e);break;case \"input\":wc(e,m);E(\"invalid\",e);se(p,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};E(\"invalid\",e);se(p,\"onChange\");break;case \"textarea\":ce(e,m),E(\"invalid\",e),se(p,\"onChange\")}qe(h,m);k=null;for(f in m)m.hasOwnProperty(f)&&(l=m[f],\"children\"===f?\"string\"===typeof l?e.textContent!==l&&(k=[\"children\",l]):\"number\"===typeof l&&e.textContent!==\"\"+l&&(k=[\"children\",\"\"+l]):ra.hasOwnProperty(f)&&null!=l&&se(p,f));switch(h){case \"input\":Rb(e);Ac(e,m,!0);break;case \"textarea\":Rb(e);ee(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=te)}f=k;g.updateQueue=f;g=null!==f?!0:!1;g&&kh(b)}else{m=b;p=f;e=g;k=9===h.nodeType?h:h.ownerDocument;l===fe.html&&(l=ge(p));l===fe.html?\"script\"===p?(e=k.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",k=e.removeChild(e.firstChild)):\"string\"===typeof e.is?k=k.createElement(p,{is:e.is}):(k=k.createElement(p),\"select\"===p&&(p=k,e.multiple?p.multiple=!0:e.size&&(p.size=e.size))):k=k.createElementNS(l,p);e=k;e[Fa]=m;e[Ga]=g;lh(e,b,!1,!1);p=e;k=f;m=g;var t=h,A=re(k,m);switch(k){case \"iframe\":case \"object\":E(\"load\",\np);h=m;break;case \"video\":case \"audio\":for(h=0;h<ab.length;h++)E(ab[h],p);h=m;break;case \"source\":E(\"error\",p);h=m;break;case \"img\":case \"image\":case \"link\":E(\"error\",p);E(\"load\",p);h=m;break;case \"form\":E(\"reset\",p);E(\"submit\",p);h=m;break;case \"details\":E(\"toggle\",p);h=m;break;case \"input\":wc(p,m);h=vc(p,m);E(\"invalid\",p);se(t,\"onChange\");break;case \"option\":h=$d(p,m);break;case \"select\":p._wrapperState={wasMultiple:!!m.multiple};h=n({},m,{value:void 0});E(\"invalid\",p);se(t,\"onChange\");break;case \"textarea\":ce(p,\nm);h=be(p,m);E(\"invalid\",p);se(t,\"onChange\");break;default:h=m}qe(k,h);l=void 0;var v=k,R=p,u=h;for(l in u)if(u.hasOwnProperty(l)){var q=u[l];\"style\"===l?oe(R,q):\"dangerouslySetInnerHTML\"===l?(q=q?q.__html:void 0,null!=q&&je(R,q)):\"children\"===l?\"string\"===typeof q?(\"textarea\"!==v||\"\"!==q)&&ke(R,q):\"number\"===typeof q&&ke(R,\"\"+q):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ra.hasOwnProperty(l)?null!=q&&se(t,l):null!=q&&tc(R,l,q,A))}switch(k){case \"input\":Rb(p);\nAc(p,m,!1);break;case \"textarea\":Rb(p);ee(p,m);break;case \"option\":null!=m.value&&p.setAttribute(\"value\",\"\"+uc(m.value));break;case \"select\":h=p;h.multiple=!!m.multiple;p=m.value;null!=p?ae(h,!!m.multiple,p,!1):null!=m.defaultValue&&ae(h,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof h.onClick&&(p.onclick=te)}(g=we(f,g))&&kh(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?x(\"166\"):void 0;break;case 6:e&&null!=b.stateNode?oh(e,b,e.memoizedProps,g):(\"string\"!==\ntypeof g&&(null===b.stateNode?x(\"166\"):void 0),e=If(Hf.current),If(N.current),Eg(b)?(g=b,f=g.stateNode,e=g.memoizedProps,f[Fa]=g,(g=f.nodeValue!==e)&&kh(b)):(f=b,g=(9===e.nodeType?e:e.ownerDocument).createTextNode(g),g[Fa]=b,f.stateNode=g));break;case 11:break;case 13:g=b.memoizedState;if(0!==(b.effectTag&64)){b.expirationTime=f;T=b;break a}g=null!==g;f=null!==e&&null!==e.memoizedState;null!==e&&!g&&f&&(e=e.child.sibling,null!==e&&(h=b.firstEffect,null!==h?(b.firstEffect=e,e.nextEffect=h):(b.firstEffect=\nb.lastEffect=e,e.nextEffect=null),e.effectTag=8));if(g||f)b.effectTag|=4;break;case 7:break;case 8:break;case 12:break;case 4:Kf(b);mh(b);break;case 10:Zg(b);break;case 9:break;case 14:break;case 17:J(b.type)&&Ke(b);break;case 18:break;default:x(\"156\")}T=null}b=a;if(1===U||1!==b.childExpirationTime){g=0;for(f=b.child;null!==f;)e=f.expirationTime,h=f.childExpirationTime,e>g&&(g=e),h>g&&(g=h),f=f.sibling;b.childExpirationTime=g}if(null!==T)return T;null!==c&&0===(c.effectTag&1024)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gh(a,U);if(null!==a)return a.effectTag&=1023,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=1024)}if(null!==d)return d;if(null!==c)a=c;else break}return null}\nfunction bi(a){var b=Tg(a.alternate,a,U);a.memoizedProps=a.pendingProps;null===b&&(b=ai(a));Ih.current=null;return b}\nfunction ci(a,b){Kh?x(\"243\"):void 0;of();Kh=!0;var c=Hh.current;Hh.current=kg;var d=a.nextExpirationTimeToWorkOn;if(d!==U||a!==Lh||null===T)Sh(),Lh=a,U=d,T=Xe(Lh.current,null,U),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==T&&!di();)T=bi(T);else for(;null!==T;)T=bi(T)}catch(u){if(Yg=Xg=Wg=null,lg(),null===T)e=!0,Dh(u);else{null===T?x(\"271\"):void 0;var f=T,g=f.return;if(null===g)e=!0,Dh(u);else{a:{var h=a,l=g,k=f,m=u;g=U;k.effectTag|=1024;k.firstEffect=k.lastEffect=null;if(null!==\nm&&\"object\"===typeof m&&\"function\"===typeof m.then){var p=m;m=l;var t=-1,A=-1;do{if(13===m.tag){var v=m.alternate;if(null!==v&&(v=v.memoizedState,null!==v)){A=10*(1073741822-v.timedOutAt);break}v=m.pendingProps.maxDuration;if(\"number\"===typeof v)if(0>=v)t=0;else if(-1===t||v<t)t=v}m=m.return}while(null!==m);m=l;do{if(v=13===m.tag)v=void 0===m.memoizedProps.fallback?!1:null===m.memoizedState;if(v){l=m.updateQueue;null===l?(l=new Set,l.add(p),m.updateQueue=l):l.add(p);if(0===(m.mode&1)){m.effectTag|=\n64;k.effectTag&=-1957;1===k.tag&&(null===k.alternate?k.tag=17:(g=nf(1073741823),g.tag=sf,pf(k,g)));k.expirationTime=1073741823;break a}k=h;l=g;var R=k.pingCache;null===R?(R=k.pingCache=new Bh,v=new Set,R.set(p,v)):(v=R.get(p),void 0===v&&(v=new Set,R.set(p,v)));v.has(l)||(v.add(l),k=ei.bind(null,k,p,l),p.then(k,k));-1===t?h=1073741823:(-1===A&&(A=10*(1073741822-gf(h,g))-5E3),h=A+t);0<=h&&Mh<h&&(Mh=h);m.effectTag|=2048;m.expirationTime=g;break a}m=m.return}while(null!==m);m=Error((ic(k.type)||\"A React component\")+\n\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\"+jc(k))}Nh=!0;m=jh(m,k);h=l;do{switch(h.tag){case 3:h.effectTag|=2048;h.expirationTime=g;g=Ch(h,m,g);eh(h,g);break a;case 1:if(t=m,A=h.type,k=h.stateNode,0===(h.effectTag&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==k&&\"function\"===typeof k.componentDidCatch&&(null===Fh||!Fh.has(k)))){h.effectTag|=2048;\nh.expirationTime=g;g=Eh(h,t,g);eh(h,g);break a}}h=h.return}while(null!==h)}T=ai(f);continue}}}break}while(1);Kh=!1;Hh.current=c;Yg=Xg=Wg=null;lg();if(e)Lh=null,a.finishedWork=null;else if(null!==T)a.finishedWork=null;else{c=a.current.alternate;null===c?x(\"281\"):void 0;Lh=null;if(Nh){e=a.latestPendingTime;f=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e<d||0!==f&&f<d||0!==g&&g<d){ff(a,d);fi(a,c,d,a.expirationTime,-1);return}if(!a.didError&&b){a.didError=!0;d=a.nextExpirationTimeToWorkOn=d;\nb=a.expirationTime=1073741823;fi(a,c,d,b,-1);return}}b&&-1!==Mh?(ff(a,d),b=10*(1073741822-gf(a,d)),b<Mh&&(Mh=b),b=10*(1073741822-lf()),b=Mh-b,fi(a,c,d,a.expirationTime,0>b?0:b)):(a.pendingCommitExpirationTime=d,a.finishedWork=c)}}\nfunction sh(a,b){for(var c=a.return;null!==c;){switch(c.tag){case 1:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Fh||!Fh.has(d))){a=jh(b,a);a=Eh(c,a,1073741823);pf(c,a);qf(c,1073741823);return}break;case 3:a=jh(b,a);a=Ch(c,a,1073741823);pf(c,a);qf(c,1073741823);return}c=c.return}3===a.tag&&(c=jh(b,a),c=Ch(a,c,1073741823),pf(a,c),qf(a,1073741823))}\nfunction mf(a,b){var c=r.unstable_getCurrentPriorityLevel(),d=void 0;if(0===(b.mode&1))d=1073741823;else if(Kh&&!Oh)d=U;else{switch(c){case r.unstable_ImmediatePriority:d=1073741823;break;case r.unstable_UserBlockingPriority:d=1073741822-10*(((1073741822-a+15)/10|0)+1);break;case r.unstable_NormalPriority:d=1073741822-25*(((1073741822-a+500)/25|0)+1);break;case r.unstable_LowPriority:case r.unstable_IdlePriority:d=1;break;default:x(\"313\")}null!==Lh&&d===U&&--d}c===r.unstable_UserBlockingPriority&&\n(0===gi||d<gi)&&(gi=d);return d}function ei(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);if(null!==Lh&&U===c)Lh=null;else if(b=a.earliestSuspendedTime,d=a.latestSuspendedTime,0!==b&&c<=b&&c>=d){a.didError=!1;b=a.latestPingedTime;if(0===b||b>c)a.latestPingedTime=c;df(c,a);c=a.expirationTime;0!==c&&Xh(a,c)}}function Ah(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=lf();b=mf(b,a);a=hi(a,b);null!==a&&(cf(a,b),b=a.expirationTime,0!==b&&Xh(a,b))}\nfunction hi(a,b){a.expirationTime<b&&(a.expirationTime=b);var c=a.alternate;null!==c&&c.expirationTime<b&&(c.expirationTime=b);var d=a.return,e=null;if(null===d&&3===a.tag)e=a.stateNode;else for(;null!==d;){c=d.alternate;d.childExpirationTime<b&&(d.childExpirationTime=b);null!==c&&c.childExpirationTime<b&&(c.childExpirationTime=b);if(null===d.return&&3===d.tag){e=d.stateNode;break}d=d.return}return e}\nfunction qf(a,b){a=hi(a,b);null!==a&&(!Kh&&0!==U&&b>U&&Sh(),cf(a,b),Kh&&!Oh&&Lh===a||Xh(a,a.expirationTime),ii>ji&&(ii=0,x(\"185\")))}function ki(a,b,c,d,e){return r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){return a(b,c,d,e)})}var li=null,Y=null,mi=0,ni=void 0,W=!1,oi=null,Z=0,gi=0,pi=!1,qi=null,X=!1,ri=!1,si=null,ti=r.unstable_now(),ui=1073741822-(ti/10|0),vi=ui,ji=50,ii=0,wi=null;function xi(){ui=1073741822-((r.unstable_now()-ti)/10|0)}\nfunction yi(a,b){if(0!==mi){if(b<mi)return;null!==ni&&r.unstable_cancelCallback(ni)}mi=b;a=r.unstable_now()-ti;ni=r.unstable_scheduleCallback(zi,{timeout:10*(1073741822-b)-a})}function fi(a,b,c,d,e){a.expirationTime=d;0!==e||di()?0<e&&(a.timeoutHandle=ye(Ai.bind(null,a,b,c),e)):(a.pendingCommitExpirationTime=c,a.finishedWork=b)}function Ai(a,b,c){a.pendingCommitExpirationTime=c;a.finishedWork=b;xi();vi=ui;Bi(a,c)}function $h(a,b){a.expirationTime=b;a.finishedWork=null}\nfunction lf(){if(W)return vi;Ci();if(0===Z||1===Z)xi(),vi=ui;return vi}function Xh(a,b){null===a.nextScheduledRoot?(a.expirationTime=b,null===Y?(li=Y=a,a.nextScheduledRoot=a):(Y=Y.nextScheduledRoot=a,Y.nextScheduledRoot=li)):b>a.expirationTime&&(a.expirationTime=b);W||(X?ri&&(oi=a,Z=1073741823,Di(a,1073741823,!1)):1073741823===b?Yh(1073741823,!1):yi(a,b))}\nfunction Ci(){var a=0,b=null;if(null!==Y)for(var c=Y,d=li;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===Y?x(\"244\"):void 0;if(d===d.nextScheduledRoot){li=Y=d.nextScheduledRoot=null;break}else if(d===li)li=e=d.nextScheduledRoot,Y.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===Y){Y=c;Y.nextScheduledRoot=li;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{e>a&&(a=e,b=d);if(d===Y)break;if(1073741823===\na)break;c=d;d=d.nextScheduledRoot}}oi=b;Z=a}var Ei=!1;function di(){return Ei?!0:r.unstable_shouldYield()?Ei=!0:!1}function zi(){try{if(!di()&&null!==li){xi();var a=li;do{var b=a.expirationTime;0!==b&&ui<=b&&(a.nextExpirationTimeToWorkOn=ui);a=a.nextScheduledRoot}while(a!==li)}Yh(0,!0)}finally{Ei=!1}}\nfunction Yh(a,b){Ci();if(b)for(xi(),vi=ui;null!==oi&&0!==Z&&a<=Z&&!(Ei&&ui>Z);)Di(oi,Z,ui>Z),Ci(),xi(),vi=ui;else for(;null!==oi&&0!==Z&&a<=Z;)Di(oi,Z,!1),Ci();b&&(mi=0,ni=null);0!==Z&&yi(oi,Z);ii=0;wi=null;if(null!==si)for(a=si,si=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){pi||(pi=!0,qi=d)}}if(pi)throw a=qi,qi=null,pi=!1,a;}function Bi(a,b){W?x(\"253\"):void 0;oi=a;Z=b;Di(a,b,!1);Yh(1073741823,!1)}\nfunction Di(a,b,c){W?x(\"245\"):void 0;W=!0;if(c){var d=a.finishedWork;null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&(di()?a.finishedWork=d:Fi(a,d,b)))}else d=a.finishedWork,null!==d?Fi(a,d,b):(a.finishedWork=null,d=a.timeoutHandle,-1!==d&&(a.timeoutHandle=-1,ze(d)),ci(a,c),d=a.finishedWork,null!==d&&Fi(a,d,b));W=!1}\nfunction Fi(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime>=c&&(null===si?si=[d]:si.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===wi?ii++:(wi=a,ii=0);r.unstable_runWithPriority(r.unstable_ImmediatePriority,function(){Zh(a,b)})}function Dh(a){null===oi?x(\"246\"):void 0;oi.expirationTime=0;pi||(pi=!0,qi=a)}function Gi(a,b){var c=X;X=!0;try{return a(b)}finally{(X=c)||W||Yh(1073741823,!1)}}\nfunction Hi(a,b){if(X&&!ri){ri=!0;try{return a(b)}finally{ri=!1}}return a(b)}function Ii(a,b,c){X||W||0===gi||(Yh(gi,!1),gi=0);var d=X;X=!0;try{return r.unstable_runWithPriority(r.unstable_UserBlockingPriority,function(){return a(b,c)})}finally{(X=d)||W||Yh(1073741823,!1)}}\nfunction Ji(a,b,c,d,e){var f=b.current;a:if(c){c=c._reactInternalFiber;b:{2===ed(c)&&1===c.tag?void 0:x(\"170\");var g=c;do{switch(g.tag){case 3:g=g.stateNode.context;break b;case 1:if(J(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}}g=g.return}while(null!==g);x(\"171\");g=void 0}if(1===c.tag){var h=c.type;if(J(h)){c=Ne(c,h,g);break a}}c=g}else c=He;null===b.context?b.context=c:b.pendingContext=c;b=e;e=nf(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);\nof();pf(f,e);qf(f,d);return d}function Ki(a,b,c,d){var e=b.current,f=lf();e=mf(f,e);return Ji(a,b,c,e,d)}function Li(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function Mi(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Wb,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nAb=function(a,b,c){switch(b){case \"input\":yc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Ka(d);e?void 0:x(\"90\");Sb(d);yc(d,e)}}}break;case \"textarea\":de(a,c);break;case \"select\":b=c.value,null!=b&&ae(a,!!c.multiple,b,!1)}};\nfunction Ni(a){var b=1073741822-25*(((1073741822-lf()+500)/25|0)+1);b>=Jh&&(b=Jh-1);this._expirationTime=Jh=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Ni.prototype.render=function(a){this._defer?void 0:x(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Oi;Ji(a,b,null,c,d._onCommit);return d};\nNi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nNi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:x(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?x(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;Bi(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};Ni.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Oi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Oi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nOi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?x(\"191\",c):void 0;c()}}};\nfunction Pi(a,b,c){b=K(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nPi.prototype.render=function(a,b){var c=this._internalRoot,d=new Oi;b=void 0===b?null:b;null!==b&&d.then(b);Ki(a,c,null,d._onCommit);return d};Pi.prototype.unmount=function(a){var b=this._internalRoot,c=new Oi;a=void 0===a?null:a;null!==a&&c.then(a);Ki(null,b,null,c._onCommit);return c};Pi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Oi;c=void 0===c?null:c;null!==c&&e.then(c);Ki(b,d,a,e._onCommit);return e};\nPi.prototype.createBatch=function(){var a=new Ni(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime>=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Qi(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Gb=Gi;Hb=Ii;Ib=function(){W||0===gi||(Yh(gi,!1),gi=0)};\nfunction Ri(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Pi(a,!1,b)}\nfunction Si(a,b,c,d,e){var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=Li(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Ri(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=Li(f._internalRoot);h.call(a)}}Hi(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return Li(f._internalRoot)}\nfunction Ti(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Qi(b)?void 0:x(\"200\");return Mi(a,b,null,c)}\nvar Vi={createPortal:Ti,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?x(\"188\"):x(\"268\",Object.keys(a)));a=hd(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!0,c)},render:function(a,b,c){Qi(b)?void 0:x(\"200\");return Si(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){Qi(c)?void 0:x(\"200\");null==a||void 0===a._reactInternalFiber?\nx(\"38\"):void 0;return Si(a,b,c,!1,d)},unmountComponentAtNode:function(a){Qi(a)?void 0:x(\"40\");return a._reactRootContainer?(Hi(function(){Si(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Ti.apply(void 0,arguments)},unstable_batchedUpdates:Gi,unstable_interactiveUpdates:Ii,flushSync:function(a,b){W?x(\"187\"):void 0;var c=X;X=!0;try{return ki(a,b)}finally{X=c,Yh(1073741823,!1)}},unstable_createRoot:Ui,unstable_flushControlled:function(a){var b=\nX;X=!0;try{ki(a)}finally{(X=b)||W||Yh(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[Ia,Ja,Ka,Ba.injectEventPluginsByName,pa,Qa,function(a){ya(a,Pa)},Eb,Fb,Dd,Da]}};function Ui(a,b){Qi(a)?void 0:x(\"299\",\"unstable_createRoot\");return new Pi(a,!0,null!=b&&!0===b.hydrate)}\n(function(a){var b=a.findFiberByHostInstance;return Te(n({},a,{overrideProps:null,currentDispatcherRef:Tb.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=hd(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ha,bundleType:0,version:\"16.8.6\",rendererPackageName:\"react-dom\"});var Wi={default:Vi},Xi=Wi&&Vi||Wi;module.exports=Xi.default||Xi;\n","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var d=null,e=!1,g=3,k=-1,l=-1,m=!1,n=!1;function p(){if(!m){var a=d.expirationTime;n?q():n=!0;r(t,a)}}\nfunction u(){var a=d,b=d.next;if(d===b)d=null;else{var c=d.previous;d=c.next=b;b.previous=c}a.next=a.previous=null;c=a.callback;b=a.expirationTime;a=a.priorityLevel;var f=g,Q=l;g=a;l=b;try{var h=c()}finally{g=f,l=Q}if(\"function\"===typeof h)if(h={callback:h,priorityLevel:a,expirationTime:b,next:null,previous:null},null===d)d=h.next=h.previous=h;else{c=null;a=d;do{if(a.expirationTime>=b){c=a;break}a=a.next}while(a!==d);null===c?c=d:c===d&&(d=h,p());b=c.previous;b.next=c.previous=h;h.next=c;h.previous=\nb}}function v(){if(-1===k&&null!==d&&1===d.priorityLevel){m=!0;try{do u();while(null!==d&&1===d.priorityLevel)}finally{m=!1,null!==d?p():n=!1}}}function t(a){m=!0;var b=e;e=a;try{if(a)for(;null!==d;){var c=exports.unstable_now();if(d.expirationTime<=c){do u();while(null!==d&&d.expirationTime<=c)}else break}else if(null!==d){do u();while(null!==d&&!w())}}finally{m=!1,e=b,null!==d?p():n=!1,v()}}\nvar x=Date,y=\"function\"===typeof setTimeout?setTimeout:void 0,z=\"function\"===typeof clearTimeout?clearTimeout:void 0,A=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,B=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,C,D;function E(a){C=A(function(b){z(D);a(b)});D=y(function(){B(C);a(exports.unstable_now())},100)}\nif(\"object\"===typeof performance&&\"function\"===typeof performance.now){var F=performance;exports.unstable_now=function(){return F.now()}}else exports.unstable_now=function(){return x.now()};var r,q,w,G=null;\"undefined\"!==typeof window?G=window:\"undefined\"!==typeof global&&(G=global);\nif(G&&G._schedMock){var H=G._schedMock;r=H[0];q=H[1];w=H[2];exports.unstable_now=H[3]}else if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var I=null,J=function(a){if(null!==I)try{I(a)}finally{I=null}};r=function(a){null!==I?setTimeout(r,0,a):(I=a,setTimeout(J,0,!1))};q=function(){I=null};w=function(){return!1}}else{\"undefined\"!==typeof console&&(\"function\"!==typeof A&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\n\"function\"!==typeof B&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));var K=null,L=!1,M=-1,N=!1,O=!1,P=0,R=33,S=33;w=function(){return P<=exports.unstable_now()};var T=new MessageChannel,U=T.port2;T.port1.onmessage=function(){L=!1;var a=K,b=M;K=null;M=-1;var c=exports.unstable_now(),f=!1;if(0>=P-c)if(-1!==b&&b<=c)f=!0;else{N||(N=!0,E(V));K=a;M=b;return}if(null!==a){O=!0;try{a(f)}finally{O=!1}}};\nvar V=function(a){if(null!==K){E(V);var b=a-P+S;b<S&&R<S?(8>b&&(b=8),S=b<R?R:b):R=b;P=a+S;L||(L=!0,U.postMessage(void 0))}else N=!1};r=function(a,b){K=a;M=b;O||0>b?U.postMessage(void 0):N||(N=!0,E(V))};q=function(){K=null;L=!1;M=-1}}exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;\nexports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=g,f=k;g=a;k=exports.unstable_now();try{return b()}finally{g=c,k=f,v()}};exports.unstable_next=function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g,f=k;g=b;k=exports.unstable_now();try{return a()}finally{g=c,k=f,v()}};\nexports.unstable_scheduleCallback=function(a,b){var c=-1!==k?k:exports.unstable_now();if(\"object\"===typeof b&&null!==b&&\"number\"===typeof b.timeout)b=c+b.timeout;else switch(g){case 1:b=c+-1;break;case 2:b=c+250;break;case 5:b=c+1073741823;break;case 4:b=c+1E4;break;default:b=c+5E3}a={callback:a,priorityLevel:g,expirationTime:b,next:null,previous:null};if(null===d)d=a.next=a.previous=a,p();else{c=null;var f=d;do{if(f.expirationTime>b){c=f;break}f=f.next}while(f!==d);null===c?c=d:c===d&&(d=a,p());\nb=c.previous;b.next=c.previous=a;a.next=c;a.previous=b}return a};exports.unstable_cancelCallback=function(a){var b=a.next;if(null!==b){if(b===a)d=null;else{a===d&&(d=b);var c=a.previous;c.next=b;b.previous=c}a.next=a.previous=null}};exports.unstable_wrapCallback=function(a){var b=g;return function(){var c=g,f=k;g=b;k=exports.unstable_now();try{return a.apply(this,arguments)}finally{g=c,k=f,v()}}};exports.unstable_getCurrentPriorityLevel=function(){return g};\nexports.unstable_shouldYield=function(){return!e&&(null!==d&&d.expirationTime<l||w())};exports.unstable_continueExecution=function(){null!==d&&p()};exports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return d};\n","/*! aXe v3.2.2\n * Copyright (c) 2019 Deque Systems, Inc.\n *\n * Your use of this Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n * This entire copyright notice must appear in every copy of this file you\n * distribute or in any file that contains substantial portions of this source\n * code.\n */\n(function axeFunction(window) {\n  var global = window;\n  var document = window.document;\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  var axe = axe || {};\n  axe.version = '3.2.2';\n  if (typeof define === 'function' && define.amd) {\n    define('axe-core', [], function() {\n      'use strict';\n      return axe;\n    });\n  }\n  if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports && typeof axeFunction.toString === 'function') {\n    axe.source = '(' + axeFunction.toString() + ')(typeof window === \"object\" ? window : this);';\n    module.exports = axe;\n  }\n  if (typeof window.getComputedStyle === 'function') {\n    window.axe = axe;\n  }\n  var commons;\n  function SupportError(error) {\n    this.name = 'SupportError';\n    this.cause = error.cause;\n    this.message = '`' + error.cause + '` - feature unsupported in your environment.';\n    if (error.ruleId) {\n      this.ruleId = error.ruleId;\n      this.message += ' Skipping ' + this.ruleId + ' rule.';\n    }\n    this.stack = new Error().stack;\n  }\n  SupportError.prototype = Object.create(Error.prototype);\n  SupportError.prototype.constructor = SupportError;\n  (function() {\n    function r(e, n, t) {\n      function o(i, f) {\n        if (!n[i]) {\n          if (!e[i]) {\n            var c = 'function' == typeof require && require;\n            if (!f && c) {\n              return c(i, !0);\n            }\n            if (u) {\n              return u(i, !0);\n            }\n            var a = new Error('Cannot find module \\'' + i + '\\'');\n            throw a.code = 'MODULE_NOT_FOUND', a;\n          }\n          var p = n[i] = {\n            exports: {}\n          };\n          e[i][0].call(p.exports, function(r) {\n            var n = e[i][1][r];\n            return o(n || r);\n          }, p, p.exports, r, e, n, t);\n        }\n        return n[i].exports;\n      }\n      for (var u = 'function' == typeof require && require, i = 0; i < t.length; i++) {\n        o(t[i]);\n      }\n      return o;\n    }\n    return r;\n  })()({\n    1: [ function(_dereq_, module, exports) {\n      _dereq_('es6-promise').polyfill();\n      axe.imports = {\n        axios: _dereq_('axios'),\n        CssSelectorParser: _dereq_('css-selector-parser').CssSelectorParser,\n        doT: _dereq_('dot'),\n        emojiRegexText: _dereq_('emoji-regex')\n      };\n    }, {\n      axios: 2,\n      'css-selector-parser': 27,\n      dot: 29,\n      'emoji-regex': 30,\n      'es6-promise': 31\n    } ],\n    2: [ function(_dereq_, module, exports) {\n      module.exports = _dereq_('./lib/axios');\n    }, {\n      './lib/axios': 4\n    } ],\n    3: [ function(_dereq_, module, exports) {\n      (function(process) {\n        'use strict';\n        var utils = _dereq_('./../utils');\n        var settle = _dereq_('./../core/settle');\n        var buildURL = _dereq_('./../helpers/buildURL');\n        var parseHeaders = _dereq_('./../helpers/parseHeaders');\n        var isURLSameOrigin = _dereq_('./../helpers/isURLSameOrigin');\n        var createError = _dereq_('../core/createError');\n        var btoa = typeof window !== 'undefined' && window.btoa && window.btoa.bind(window) || _dereq_('./../helpers/btoa');\n        module.exports = function xhrAdapter(config) {\n          return new Promise(function dispatchXhrRequest(resolve, reject) {\n            var requestData = config.data;\n            var requestHeaders = config.headers;\n            if (utils.isFormData(requestData)) {\n              delete requestHeaders['Content-Type'];\n            }\n            var request = new XMLHttpRequest();\n            var loadEvent = 'onreadystatechange';\n            var xDomain = false;\n            if (process.env.NODE_ENV !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n              request = new window.XDomainRequest();\n              loadEvent = 'onload';\n              xDomain = true;\n              request.onprogress = function handleProgress() {};\n              request.ontimeout = function handleTimeout() {};\n            }\n            if (config.auth) {\n              var username = config.auth.username || '';\n              var password = config.auth.password || '';\n              requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n            }\n            request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n            request.timeout = config.timeout;\n            request[loadEvent] = function handleLoad() {\n              if (!request || request.readyState !== 4 && !xDomain) {\n                return;\n              }\n              if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n                return;\n              }\n              var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n              var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n              var response = {\n                data: responseData,\n                status: request.status === 1223 ? 204 : request.status,\n                statusText: request.status === 1223 ? 'No Content' : request.statusText,\n                headers: responseHeaders,\n                config: config,\n                request: request\n              };\n              settle(resolve, reject, response);\n              request = null;\n            };\n            request.onerror = function handleError() {\n              reject(createError('Network Error', config, null, request));\n              request = null;\n            };\n            request.ontimeout = function handleTimeout() {\n              reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request));\n              request = null;\n            };\n            if (utils.isStandardBrowserEnv()) {\n              var cookies = _dereq_('./../helpers/cookies');\n              var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n              if (xsrfValue) {\n                requestHeaders[config.xsrfHeaderName] = xsrfValue;\n              }\n            }\n            if ('setRequestHeader' in request) {\n              utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n                if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n                  delete requestHeaders[key];\n                } else {\n                  request.setRequestHeader(key, val);\n                }\n              });\n            }\n            if (config.withCredentials) {\n              request.withCredentials = true;\n            }\n            if (config.responseType) {\n              try {\n                request.responseType = config.responseType;\n              } catch (e) {\n                if (config.responseType !== 'json') {\n                  throw e;\n                }\n              }\n            }\n            if (typeof config.onDownloadProgress === 'function') {\n              request.addEventListener('progress', config.onDownloadProgress);\n            }\n            if (typeof config.onUploadProgress === 'function' && request.upload) {\n              request.upload.addEventListener('progress', config.onUploadProgress);\n            }\n            if (config.cancelToken) {\n              config.cancelToken.promise.then(function onCanceled(cancel) {\n                if (!request) {\n                  return;\n                }\n                request.abort();\n                reject(cancel);\n                request = null;\n              });\n            }\n            if (requestData === undefined) {\n              requestData = null;\n            }\n            request.send(requestData);\n          });\n        };\n      }).call(this, _dereq_('_process'));\n    }, {\n      '../core/createError': 10,\n      './../core/settle': 13,\n      './../helpers/btoa': 17,\n      './../helpers/buildURL': 18,\n      './../helpers/cookies': 20,\n      './../helpers/isURLSameOrigin': 22,\n      './../helpers/parseHeaders': 24,\n      './../utils': 26,\n      _process: 33\n    } ],\n    4: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('./utils');\n      var bind = _dereq_('./helpers/bind');\n      var Axios = _dereq_('./core/Axios');\n      var defaults = _dereq_('./defaults');\n      function createInstance(defaultConfig) {\n        var context = new Axios(defaultConfig);\n        var instance = bind(Axios.prototype.request, context);\n        utils.extend(instance, Axios.prototype, context);\n        utils.extend(instance, context);\n        return instance;\n      }\n      var axios = createInstance(defaults);\n      axios.Axios = Axios;\n      axios.create = function create(instanceConfig) {\n        return createInstance(utils.merge(defaults, instanceConfig));\n      };\n      axios.Cancel = _dereq_('./cancel/Cancel');\n      axios.CancelToken = _dereq_('./cancel/CancelToken');\n      axios.isCancel = _dereq_('./cancel/isCancel');\n      axios.all = function all(promises) {\n        return Promise.all(promises);\n      };\n      axios.spread = _dereq_('./helpers/spread');\n      module.exports = axios;\n      module.exports.default = axios;\n    }, {\n      './cancel/Cancel': 5,\n      './cancel/CancelToken': 6,\n      './cancel/isCancel': 7,\n      './core/Axios': 8,\n      './defaults': 15,\n      './helpers/bind': 16,\n      './helpers/spread': 25,\n      './utils': 26\n    } ],\n    5: [ function(_dereq_, module, exports) {\n      'use strict';\n      function Cancel(message) {\n        this.message = message;\n      }\n      Cancel.prototype.toString = function toString() {\n        return 'Cancel' + (this.message ? ': ' + this.message : '');\n      };\n      Cancel.prototype.__CANCEL__ = true;\n      module.exports = Cancel;\n    }, {} ],\n    6: [ function(_dereq_, module, exports) {\n      'use strict';\n      var Cancel = _dereq_('./Cancel');\n      function CancelToken(executor) {\n        if (typeof executor !== 'function') {\n          throw new TypeError('executor must be a function.');\n        }\n        var resolvePromise;\n        this.promise = new Promise(function promiseExecutor(resolve) {\n          resolvePromise = resolve;\n        });\n        var token = this;\n        executor(function cancel(message) {\n          if (token.reason) {\n            return;\n          }\n          token.reason = new Cancel(message);\n          resolvePromise(token.reason);\n        });\n      }\n      CancelToken.prototype.throwIfRequested = function throwIfRequested() {\n        if (this.reason) {\n          throw this.reason;\n        }\n      };\n      CancelToken.source = function source() {\n        var cancel;\n        var token = new CancelToken(function executor(c) {\n          cancel = c;\n        });\n        return {\n          token: token,\n          cancel: cancel\n        };\n      };\n      module.exports = CancelToken;\n    }, {\n      './Cancel': 5\n    } ],\n    7: [ function(_dereq_, module, exports) {\n      'use strict';\n      module.exports = function isCancel(value) {\n        return !!(value && value.__CANCEL__);\n      };\n    }, {} ],\n    8: [ function(_dereq_, module, exports) {\n      'use strict';\n      var defaults = _dereq_('./../defaults');\n      var utils = _dereq_('./../utils');\n      var InterceptorManager = _dereq_('./InterceptorManager');\n      var dispatchRequest = _dereq_('./dispatchRequest');\n      function Axios(instanceConfig) {\n        this.defaults = instanceConfig;\n        this.interceptors = {\n          request: new InterceptorManager(),\n          response: new InterceptorManager()\n        };\n      }\n      Axios.prototype.request = function request(config) {\n        if (typeof config === 'string') {\n          config = utils.merge({\n            url: arguments[0]\n          }, arguments[1]);\n        }\n        config = utils.merge(defaults, {\n          method: 'get'\n        }, this.defaults, config);\n        config.method = config.method.toLowerCase();\n        var chain = [ dispatchRequest, undefined ];\n        var promise = Promise.resolve(config);\n        this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n          chain.unshift(interceptor.fulfilled, interceptor.rejected);\n        });\n        this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n          chain.push(interceptor.fulfilled, interceptor.rejected);\n        });\n        while (chain.length) {\n          promise = promise.then(chain.shift(), chain.shift());\n        }\n        return promise;\n      };\n      utils.forEach([ 'delete', 'get', 'head', 'options' ], function forEachMethodNoData(method) {\n        Axios.prototype[method] = function(url, config) {\n          return this.request(utils.merge(config || {}, {\n            method: method,\n            url: url\n          }));\n        };\n      });\n      utils.forEach([ 'post', 'put', 'patch' ], function forEachMethodWithData(method) {\n        Axios.prototype[method] = function(url, data, config) {\n          return this.request(utils.merge(config || {}, {\n            method: method,\n            url: url,\n            data: data\n          }));\n        };\n      });\n      module.exports = Axios;\n    }, {\n      './../defaults': 15,\n      './../utils': 26,\n      './InterceptorManager': 9,\n      './dispatchRequest': 11\n    } ],\n    9: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('./../utils');\n      function InterceptorManager() {\n        this.handlers = [];\n      }\n      InterceptorManager.prototype.use = function use(fulfilled, rejected) {\n        this.handlers.push({\n          fulfilled: fulfilled,\n          rejected: rejected\n        });\n        return this.handlers.length - 1;\n      };\n      InterceptorManager.prototype.eject = function eject(id) {\n        if (this.handlers[id]) {\n          this.handlers[id] = null;\n        }\n      };\n      InterceptorManager.prototype.forEach = function forEach(fn) {\n        utils.forEach(this.handlers, function forEachHandler(h) {\n          if (h !== null) {\n            fn(h);\n          }\n        });\n      };\n      module.exports = InterceptorManager;\n    }, {\n      './../utils': 26\n    } ],\n    10: [ function(_dereq_, module, exports) {\n      'use strict';\n      var enhanceError = _dereq_('./enhanceError');\n      module.exports = function createError(message, config, code, request, response) {\n        var error = new Error(message);\n        return enhanceError(error, config, code, request, response);\n      };\n    }, {\n      './enhanceError': 12\n    } ],\n    11: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('./../utils');\n      var transformData = _dereq_('./transformData');\n      var isCancel = _dereq_('../cancel/isCancel');\n      var defaults = _dereq_('../defaults');\n      var isAbsoluteURL = _dereq_('./../helpers/isAbsoluteURL');\n      var combineURLs = _dereq_('./../helpers/combineURLs');\n      function throwIfCancellationRequested(config) {\n        if (config.cancelToken) {\n          config.cancelToken.throwIfRequested();\n        }\n      }\n      module.exports = function dispatchRequest(config) {\n        throwIfCancellationRequested(config);\n        if (config.baseURL && !isAbsoluteURL(config.url)) {\n          config.url = combineURLs(config.baseURL, config.url);\n        }\n        config.headers = config.headers || {};\n        config.data = transformData(config.data, config.headers, config.transformRequest);\n        config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n        utils.forEach([ 'delete', 'get', 'head', 'post', 'put', 'patch', 'common' ], function cleanHeaderConfig(method) {\n          delete config.headers[method];\n        });\n        var adapter = config.adapter || defaults.adapter;\n        return adapter(config).then(function onAdapterResolution(response) {\n          throwIfCancellationRequested(config);\n          response.data = transformData(response.data, response.headers, config.transformResponse);\n          return response;\n        }, function onAdapterRejection(reason) {\n          if (!isCancel(reason)) {\n            throwIfCancellationRequested(config);\n            if (reason && reason.response) {\n              reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);\n            }\n          }\n          return Promise.reject(reason);\n        });\n      };\n    }, {\n      '../cancel/isCancel': 7,\n      '../defaults': 15,\n      './../helpers/combineURLs': 19,\n      './../helpers/isAbsoluteURL': 21,\n      './../utils': 26,\n      './transformData': 14\n    } ],\n    12: [ function(_dereq_, module, exports) {\n      'use strict';\n      module.exports = function enhanceError(error, config, code, request, response) {\n        error.config = config;\n        if (code) {\n          error.code = code;\n        }\n        error.request = request;\n        error.response = response;\n        return error;\n      };\n    }, {} ],\n    13: [ function(_dereq_, module, exports) {\n      'use strict';\n      var createError = _dereq_('./createError');\n      module.exports = function settle(resolve, reject, response) {\n        var validateStatus = response.config.validateStatus;\n        if (!response.status || !validateStatus || validateStatus(response.status)) {\n          resolve(response);\n        } else {\n          reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));\n        }\n      };\n    }, {\n      './createError': 10\n    } ],\n    14: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('./../utils');\n      module.exports = function transformData(data, headers, fns) {\n        utils.forEach(fns, function transform(fn) {\n          data = fn(data, headers);\n        });\n        return data;\n      };\n    }, {\n      './../utils': 26\n    } ],\n    15: [ function(_dereq_, module, exports) {\n      (function(process) {\n        'use strict';\n        var utils = _dereq_('./utils');\n        var normalizeHeaderName = _dereq_('./helpers/normalizeHeaderName');\n        var DEFAULT_CONTENT_TYPE = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        function setContentTypeIfUnset(headers, value) {\n          if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n            headers['Content-Type'] = value;\n          }\n        }\n        function getDefaultAdapter() {\n          var adapter;\n          if (typeof XMLHttpRequest !== 'undefined') {\n            adapter = _dereq_('./adapters/xhr');\n          } else if (typeof process !== 'undefined') {\n            adapter = _dereq_('./adapters/http');\n          }\n          return adapter;\n        }\n        var defaults = {\n          adapter: getDefaultAdapter(),\n          transformRequest: [ function transformRequest(data, headers) {\n            normalizeHeaderName(headers, 'Content-Type');\n            if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n              return data;\n            }\n            if (utils.isArrayBufferView(data)) {\n              return data.buffer;\n            }\n            if (utils.isURLSearchParams(data)) {\n              setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n              return data.toString();\n            }\n            if (utils.isObject(data)) {\n              setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n              return JSON.stringify(data);\n            }\n            return data;\n          } ],\n          transformResponse: [ function transformResponse(data) {\n            if (typeof data === 'string') {\n              try {\n                data = JSON.parse(data);\n              } catch (e) {}\n            }\n            return data;\n          } ],\n          timeout: 0,\n          xsrfCookieName: 'XSRF-TOKEN',\n          xsrfHeaderName: 'X-XSRF-TOKEN',\n          maxContentLength: -1,\n          validateStatus: function validateStatus(status) {\n            return status >= 200 && status < 300;\n          }\n        };\n        defaults.headers = {\n          common: {\n            Accept: 'application/json, text/plain, */*'\n          }\n        };\n        utils.forEach([ 'delete', 'get', 'head' ], function forEachMethodNoData(method) {\n          defaults.headers[method] = {};\n        });\n        utils.forEach([ 'post', 'put', 'patch' ], function forEachMethodWithData(method) {\n          defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n        });\n        module.exports = defaults;\n      }).call(this, _dereq_('_process'));\n    }, {\n      './adapters/http': 3,\n      './adapters/xhr': 3,\n      './helpers/normalizeHeaderName': 23,\n      './utils': 26,\n      _process: 33\n    } ],\n    16: [ function(_dereq_, module, exports) {\n      'use strict';\n      module.exports = function bind(fn, thisArg) {\n        return function wrap() {\n          var args = new Array(arguments.length);\n          for (var i = 0; i < args.length; i++) {\n            args[i] = arguments[i];\n          }\n          return fn.apply(thisArg, args);\n        };\n      };\n    }, {} ],\n    17: [ function(_dereq_, module, exports) {\n      'use strict';\n      var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n      function E() {\n        this.message = 'String contains an invalid character';\n      }\n      E.prototype = new Error();\n      E.prototype.code = 5;\n      E.prototype.name = 'InvalidCharacterError';\n      function btoa(input) {\n        var str = String(input);\n        var output = '';\n        for (var block, charCode, idx = 0, map = chars; str.charAt(idx | 0) || (map = '=', \n        idx % 1); output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n          charCode = str.charCodeAt(idx += 3 / 4);\n          if (charCode > 255) {\n            throw new E();\n          }\n          block = block << 8 | charCode;\n        }\n        return output;\n      }\n      module.exports = btoa;\n    }, {} ],\n    18: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('./../utils');\n      function encode(val) {\n        return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n      }\n      module.exports = function buildURL(url, params, paramsSerializer) {\n        if (!params) {\n          return url;\n        }\n        var serializedParams;\n        if (paramsSerializer) {\n          serializedParams = paramsSerializer(params);\n        } else if (utils.isURLSearchParams(params)) {\n          serializedParams = params.toString();\n        } else {\n          var parts = [];\n          utils.forEach(params, function serialize(val, key) {\n            if (val === null || typeof val === 'undefined') {\n              return;\n            }\n            if (utils.isArray(val)) {\n              key = key + '[]';\n            } else {\n              val = [ val ];\n            }\n            utils.forEach(val, function parseValue(v) {\n              if (utils.isDate(v)) {\n                v = v.toISOString();\n              } else if (utils.isObject(v)) {\n                v = JSON.stringify(v);\n              }\n              parts.push(encode(key) + '=' + encode(v));\n            });\n          });\n          serializedParams = parts.join('&');\n        }\n        if (serializedParams) {\n          url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n        }\n        return url;\n      };\n    }, {\n      './../utils': 26\n    } ],\n    19: [ function(_dereq_, module, exports) {\n      'use strict';\n      module.exports = function combineURLs(baseURL, relativeURL) {\n        return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n      };\n    }, {} ],\n    20: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('./../utils');\n      module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {\n        return {\n          write: function write(name, value, expires, path, domain, secure) {\n            var cookie = [];\n            cookie.push(name + '=' + encodeURIComponent(value));\n            if (utils.isNumber(expires)) {\n              cookie.push('expires=' + new Date(expires).toGMTString());\n            }\n            if (utils.isString(path)) {\n              cookie.push('path=' + path);\n            }\n            if (utils.isString(domain)) {\n              cookie.push('domain=' + domain);\n            }\n            if (secure === true) {\n              cookie.push('secure');\n            }\n            document.cookie = cookie.join('; ');\n          },\n          read: function read(name) {\n            var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n            return match ? decodeURIComponent(match[3]) : null;\n          },\n          remove: function remove(name) {\n            this.write(name, '', Date.now() - 864e5);\n          }\n        };\n      }() : function nonStandardBrowserEnv() {\n        return {\n          write: function write() {},\n          read: function read() {\n            return null;\n          },\n          remove: function remove() {}\n        };\n      }();\n    }, {\n      './../utils': 26\n    } ],\n    21: [ function(_dereq_, module, exports) {\n      'use strict';\n      module.exports = function isAbsoluteURL(url) {\n        return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n      };\n    }, {} ],\n    22: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('./../utils');\n      module.exports = utils.isStandardBrowserEnv() ? function standardBrowserEnv() {\n        var msie = /(msie|trident)/i.test(navigator.userAgent);\n        var urlParsingNode = document.createElement('a');\n        var originURL;\n        function resolveURL(url) {\n          var href = url;\n          if (msie) {\n            urlParsingNode.setAttribute('href', href);\n            href = urlParsingNode.href;\n          }\n          urlParsingNode.setAttribute('href', href);\n          return {\n            href: urlParsingNode.href,\n            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n            host: urlParsingNode.host,\n            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n            hostname: urlParsingNode.hostname,\n            port: urlParsingNode.port,\n            pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n          };\n        }\n        originURL = resolveURL(window.location.href);\n        return function isURLSameOrigin(requestURL) {\n          var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n          return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n        };\n      }() : function nonStandardBrowserEnv() {\n        return function isURLSameOrigin() {\n          return true;\n        };\n      }();\n    }, {\n      './../utils': 26\n    } ],\n    23: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('../utils');\n      module.exports = function normalizeHeaderName(headers, normalizedName) {\n        utils.forEach(headers, function processHeader(value, name) {\n          if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n            headers[normalizedName] = value;\n            delete headers[name];\n          }\n        });\n      };\n    }, {\n      '../utils': 26\n    } ],\n    24: [ function(_dereq_, module, exports) {\n      'use strict';\n      var utils = _dereq_('./../utils');\n      var ignoreDuplicateOf = [ 'age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent' ];\n      module.exports = function parseHeaders(headers) {\n        var parsed = {};\n        var key;\n        var val;\n        var i;\n        if (!headers) {\n          return parsed;\n        }\n        utils.forEach(headers.split('\\n'), function parser(line) {\n          i = line.indexOf(':');\n          key = utils.trim(line.substr(0, i)).toLowerCase();\n          val = utils.trim(line.substr(i + 1));\n          if (key) {\n            if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n              return;\n            }\n            if (key === 'set-cookie') {\n              parsed[key] = (parsed[key] ? parsed[key] : []).concat([ val ]);\n            } else {\n              parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n          }\n        });\n        return parsed;\n      };\n    }, {\n      './../utils': 26\n    } ],\n    25: [ function(_dereq_, module, exports) {\n      'use strict';\n      module.exports = function spread(callback) {\n        return function wrap(arr) {\n          return callback.apply(null, arr);\n        };\n      };\n    }, {} ],\n    26: [ function(_dereq_, module, exports) {\n      'use strict';\n      var bind = _dereq_('./helpers/bind');\n      var isBuffer = _dereq_('is-buffer');\n      var toString = Object.prototype.toString;\n      function isArray(val) {\n        return toString.call(val) === '[object Array]';\n      }\n      function isArrayBuffer(val) {\n        return toString.call(val) === '[object ArrayBuffer]';\n      }\n      function isFormData(val) {\n        return typeof FormData !== 'undefined' && val instanceof FormData;\n      }\n      function isArrayBufferView(val) {\n        var result;\n        if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n          result = ArrayBuffer.isView(val);\n        } else {\n          result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n        }\n        return result;\n      }\n      function isString(val) {\n        return typeof val === 'string';\n      }\n      function isNumber(val) {\n        return typeof val === 'number';\n      }\n      function isUndefined(val) {\n        return typeof val === 'undefined';\n      }\n      function isObject(val) {\n        return val !== null && typeof val === 'object';\n      }\n      function isDate(val) {\n        return toString.call(val) === '[object Date]';\n      }\n      function isFile(val) {\n        return toString.call(val) === '[object File]';\n      }\n      function isBlob(val) {\n        return toString.call(val) === '[object Blob]';\n      }\n      function isFunction(val) {\n        return toString.call(val) === '[object Function]';\n      }\n      function isStream(val) {\n        return isObject(val) && isFunction(val.pipe);\n      }\n      function isURLSearchParams(val) {\n        return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n      }\n      function trim(str) {\n        return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n      }\n      function isStandardBrowserEnv() {\n        if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n          return false;\n        }\n        return typeof window !== 'undefined' && typeof document !== 'undefined';\n      }\n      function forEach(obj, fn) {\n        if (obj === null || typeof obj === 'undefined') {\n          return;\n        }\n        if (typeof obj !== 'object') {\n          obj = [ obj ];\n        }\n        if (isArray(obj)) {\n          for (var i = 0, l = obj.length; i < l; i++) {\n            fn.call(null, obj[i], i, obj);\n          }\n        } else {\n          for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n              fn.call(null, obj[key], key, obj);\n            }\n          }\n        }\n      }\n      function merge() {\n        var result = {};\n        function assignValue(val, key) {\n          if (typeof result[key] === 'object' && typeof val === 'object') {\n            result[key] = merge(result[key], val);\n          } else {\n            result[key] = val;\n          }\n        }\n        for (var i = 0, l = arguments.length; i < l; i++) {\n          forEach(arguments[i], assignValue);\n        }\n        return result;\n      }\n      function extend(a, b, thisArg) {\n        forEach(b, function assignValue(val, key) {\n          if (thisArg && typeof val === 'function') {\n            a[key] = bind(val, thisArg);\n          } else {\n            a[key] = val;\n          }\n        });\n        return a;\n      }\n      module.exports = {\n        isArray: isArray,\n        isArrayBuffer: isArrayBuffer,\n        isBuffer: isBuffer,\n        isFormData: isFormData,\n        isArrayBufferView: isArrayBufferView,\n        isString: isString,\n        isNumber: isNumber,\n        isObject: isObject,\n        isUndefined: isUndefined,\n        isDate: isDate,\n        isFile: isFile,\n        isBlob: isBlob,\n        isFunction: isFunction,\n        isStream: isStream,\n        isURLSearchParams: isURLSearchParams,\n        isStandardBrowserEnv: isStandardBrowserEnv,\n        forEach: forEach,\n        merge: merge,\n        extend: extend,\n        trim: trim\n      };\n    }, {\n      './helpers/bind': 16,\n      'is-buffer': 32\n    } ],\n    27: [ function(_dereq_, module, exports) {\n      module.exports = {\n        CssSelectorParser: _dereq_('./lib/css-selector-parser.js').CssSelectorParser\n      };\n    }, {\n      './lib/css-selector-parser.js': 28\n    } ],\n    28: [ function(_dereq_, module, exports) {\n      function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n      }\n      CssSelectorParser.prototype.registerSelectorPseudos = function(name) {\n        for (var j = 0, len = arguments.length; j < len; j++) {\n          name = arguments[j];\n          this.pseudos[name] = 'selector';\n        }\n        return this;\n      };\n      CssSelectorParser.prototype.unregisterSelectorPseudos = function(name) {\n        for (var j = 0, len = arguments.length; j < len; j++) {\n          name = arguments[j];\n          delete this.pseudos[name];\n        }\n        return this;\n      };\n      CssSelectorParser.prototype.registerNumericPseudos = function(name) {\n        for (var j = 0, len = arguments.length; j < len; j++) {\n          name = arguments[j];\n          this.pseudos[name] = 'numeric';\n        }\n        return this;\n      };\n      CssSelectorParser.prototype.unregisterNumericPseudos = function(name) {\n        for (var j = 0, len = arguments.length; j < len; j++) {\n          name = arguments[j];\n          delete this.pseudos[name];\n        }\n        return this;\n      };\n      CssSelectorParser.prototype.registerNestingOperators = function(operator) {\n        for (var j = 0, len = arguments.length; j < len; j++) {\n          operator = arguments[j];\n          this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n      };\n      CssSelectorParser.prototype.unregisterNestingOperators = function(operator) {\n        for (var j = 0, len = arguments.length; j < len; j++) {\n          operator = arguments[j];\n          delete this.ruleNestingOperators[operator];\n        }\n        return this;\n      };\n      CssSelectorParser.prototype.registerAttrEqualityMods = function(mod) {\n        for (var j = 0, len = arguments.length; j < len; j++) {\n          mod = arguments[j];\n          this.attrEqualityMods[mod] = true;\n        }\n        return this;\n      };\n      CssSelectorParser.prototype.unregisterAttrEqualityMods = function(mod) {\n        for (var j = 0, len = arguments.length; j < len; j++) {\n          mod = arguments[j];\n          delete this.attrEqualityMods[mod];\n        }\n        return this;\n      };\n      CssSelectorParser.prototype.enableSubstitutes = function() {\n        this.substitutesEnabled = true;\n        return this;\n      };\n      CssSelectorParser.prototype.disableSubstitutes = function() {\n        this.substitutesEnabled = false;\n        return this;\n      };\n      function isIdentStart(c) {\n        return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c === '-' || c === '_';\n      }\n      function isIdent(c) {\n        return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9' || c === '-' || c === '_';\n      }\n      function isHex(c) {\n        return c >= 'a' && c <= 'f' || c >= 'A' && c <= 'F' || c >= '0' && c <= '9';\n      }\n      function isDecimal(c) {\n        return c >= '0' && c <= '9';\n      }\n      function isAttrMatchOperator(chr) {\n        return chr === '=' || chr === '^' || chr === '$' || chr === '*' || chr === '~';\n      }\n      var identSpecialChars = {\n        '!': true,\n        '\"': true,\n        '#': true,\n        $: true,\n        '%': true,\n        '&': true,\n        '\\'': true,\n        '(': true,\n        ')': true,\n        '*': true,\n        '+': true,\n        ',': true,\n        '.': true,\n        '/': true,\n        ';': true,\n        '<': true,\n        '=': true,\n        '>': true,\n        '?': true,\n        '@': true,\n        '[': true,\n        '\\\\': true,\n        ']': true,\n        '^': true,\n        '`': true,\n        '{': true,\n        '|': true,\n        '}': true,\n        '~': true\n      };\n      var strReplacementsRev = {\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\f': '\\\\f',\n        '\\v': '\\\\v'\n      };\n      var singleQuoteEscapeChars = {\n        n: '\\n',\n        r: '\\r',\n        t: '\\t',\n        f: '\\f',\n        '\\\\': '\\\\',\n        '\\'': '\\''\n      };\n      var doubleQuotesEscapeChars = {\n        n: '\\n',\n        r: '\\r',\n        t: '\\t',\n        f: '\\f',\n        '\\\\': '\\\\',\n        '\"': '\"'\n      };\n      function ParseContext(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n        var chr, getIdent, getStr, l, skipWhitespace;\n        l = str.length;\n        chr = null;\n        getStr = function(quote, escapeTable) {\n          var esc, hex, result;\n          result = '';\n          pos++;\n          chr = str.charAt(pos);\n          while (pos < l) {\n            if (chr === quote) {\n              pos++;\n              return result;\n            } else if (chr === '\\\\') {\n              pos++;\n              chr = str.charAt(pos);\n              if (chr === quote) {\n                result += quote;\n              } else if (esc = escapeTable[chr]) {\n                result += esc;\n              } else if (isHex(chr)) {\n                hex = chr;\n                pos++;\n                chr = str.charAt(pos);\n                while (isHex(chr)) {\n                  hex += chr;\n                  pos++;\n                  chr = str.charAt(pos);\n                }\n                if (chr === ' ') {\n                  pos++;\n                  chr = str.charAt(pos);\n                }\n                result += String.fromCharCode(parseInt(hex, 16));\n                continue;\n              } else {\n                result += chr;\n              }\n            } else {\n              result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n          }\n          return result;\n        };\n        getIdent = function() {\n          var result = '';\n          chr = str.charAt(pos);\n          while (pos < l) {\n            if (isIdent(chr)) {\n              result += chr;\n            } else if (chr === '\\\\') {\n              pos++;\n              if (pos >= l) {\n                throw Error('Expected symbol but end of file reached.');\n              }\n              chr = str.charAt(pos);\n              if (identSpecialChars[chr]) {\n                result += chr;\n              } else if (isHex(chr)) {\n                var hex = chr;\n                pos++;\n                chr = str.charAt(pos);\n                while (isHex(chr)) {\n                  hex += chr;\n                  pos++;\n                  chr = str.charAt(pos);\n                }\n                if (chr === ' ') {\n                  pos++;\n                  chr = str.charAt(pos);\n                }\n                result += String.fromCharCode(parseInt(hex, 16));\n                continue;\n              } else {\n                result += chr;\n              }\n            } else {\n              return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n          }\n          return result;\n        };\n        skipWhitespace = function() {\n          chr = str.charAt(pos);\n          var result = false;\n          while (chr === ' ' || chr === '\\t' || chr === '\\n' || chr === '\\r' || chr === '\\f') {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n          }\n          return result;\n        };\n        this.parse = function() {\n          var res = this.parseSelector();\n          if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n          }\n          return res;\n        };\n        this.parseSelector = function() {\n          var res;\n          var selector = res = this.parseSingleSelector();\n          chr = str.charAt(pos);\n          while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n              res = {\n                type: 'selectors',\n                selectors: [ selector ]\n              };\n            }\n            selector = this.parseSingleSelector();\n            if (!selector) {\n              throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n          }\n          return res;\n        };\n        this.parseSingleSelector = function() {\n          skipWhitespace();\n          var selector = {\n            type: 'ruleSet'\n          };\n          var rule = this.parseRule();\n          if (!rule) {\n            return null;\n          }\n          var currentRule = selector;\n          while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n              break;\n            }\n            if (ruleNestingOperators[chr]) {\n              var op = chr;\n              pos++;\n              skipWhitespace();\n              rule = this.parseRule();\n              if (!rule) {\n                throw Error('Rule expected after \"' + op + '\".');\n              }\n              rule.nestingOperator = op;\n            } else {\n              rule = this.parseRule();\n              if (rule) {\n                rule.nestingOperator = null;\n              }\n            }\n          }\n          return selector;\n        };\n        this.parseRule = function() {\n          var rule = null;\n          while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n              pos++;\n              (rule = rule || {}).tagName = '*';\n            } else if (isIdentStart(chr) || chr === '\\\\') {\n              (rule = rule || {}).tagName = getIdent();\n            } else if (chr === '.') {\n              pos++;\n              rule = rule || {};\n              (rule.classNames = rule.classNames || []).push(getIdent());\n            } else if (chr === '#') {\n              pos++;\n              (rule = rule || {}).id = getIdent();\n            } else if (chr === '[') {\n              pos++;\n              skipWhitespace();\n              var attr = {\n                name: getIdent()\n              };\n              skipWhitespace();\n              if (chr === ']') {\n                pos++;\n              } else {\n                var operator = '';\n                if (attrEqualityMods[chr]) {\n                  operator = chr;\n                  pos++;\n                  chr = str.charAt(pos);\n                }\n                if (pos >= l) {\n                  throw Error('Expected \"=\" but end of file reached.');\n                }\n                if (chr !== '=') {\n                  throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                }\n                attr.operator = operator + '=';\n                pos++;\n                skipWhitespace();\n                var attrValue = '';\n                attr.valueType = 'string';\n                if (chr === '\"') {\n                  attrValue = getStr('\"', doubleQuotesEscapeChars);\n                } else if (chr === '\\'') {\n                  attrValue = getStr('\\'', singleQuoteEscapeChars);\n                } else if (substitutesEnabled && chr === '$') {\n                  pos++;\n                  attrValue = getIdent();\n                  attr.valueType = 'substitute';\n                } else {\n                  while (pos < l) {\n                    if (chr === ']') {\n                      break;\n                    }\n                    attrValue += chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                  }\n                  attrValue = attrValue.trim();\n                }\n                skipWhitespace();\n                if (pos >= l) {\n                  throw Error('Expected \"]\" but end of file reached.');\n                }\n                if (chr !== ']') {\n                  throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                }\n                pos++;\n                attr.value = attrValue;\n              }\n              rule = rule || {};\n              (rule.attrs = rule.attrs || []).push(attr);\n            } else if (chr === ':') {\n              pos++;\n              var pseudoName = getIdent();\n              var pseudo = {\n                name: pseudoName\n              };\n              if (chr === '(') {\n                pos++;\n                var value = '';\n                skipWhitespace();\n                if (pseudos[pseudoName] === 'selector') {\n                  pseudo.valueType = 'selector';\n                  value = this.parseSelector();\n                } else {\n                  pseudo.valueType = pseudos[pseudoName] || 'string';\n                  if (chr === '\"') {\n                    value = getStr('\"', doubleQuotesEscapeChars);\n                  } else if (chr === '\\'') {\n                    value = getStr('\\'', singleQuoteEscapeChars);\n                  } else if (substitutesEnabled && chr === '$') {\n                    pos++;\n                    value = getIdent();\n                    pseudo.valueType = 'substitute';\n                  } else {\n                    while (pos < l) {\n                      if (chr === ')') {\n                        break;\n                      }\n                      value += chr;\n                      pos++;\n                      chr = str.charAt(pos);\n                    }\n                    value = value.trim();\n                  }\n                  skipWhitespace();\n                }\n                if (pos >= l) {\n                  throw Error('Expected \")\" but end of file reached.');\n                }\n                if (chr !== ')') {\n                  throw Error('Expected \")\" but \"' + chr + '\" found.');\n                }\n                pos++;\n                pseudo.value = value;\n              }\n              rule = rule || {};\n              (rule.pseudos = rule.pseudos || []).push(pseudo);\n            } else {\n              break;\n            }\n          }\n          return rule;\n        };\n        return this;\n      }\n      CssSelectorParser.prototype.parse = function(str) {\n        var context = new ParseContext(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n        return context.parse();\n      };\n      CssSelectorParser.prototype.escapeIdentifier = function(s) {\n        var result = '';\n        var i = 0;\n        var len = s.length;\n        while (i < len) {\n          var chr = s.charAt(i);\n          if (identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n          } else {\n            if (!(chr === '_' || chr === '-' || chr >= 'A' && chr <= 'Z' || chr >= 'a' && chr <= 'z' || i !== 0 && chr >= '0' && chr <= '9')) {\n              var charCode = chr.charCodeAt(0);\n              if ((charCode & 63488) === 55296) {\n                var extraCharCode = s.charCodeAt(i++);\n                if ((charCode & 64512) !== 55296 || (extraCharCode & 64512) !== 56320) {\n                  throw Error('UCS-2(decode): illegal sequence');\n                }\n                charCode = ((charCode & 1023) << 10) + (extraCharCode & 1023) + 65536;\n              }\n              result += '\\\\' + charCode.toString(16) + ' ';\n            } else {\n              result += chr;\n            }\n          }\n          i++;\n        }\n        return result;\n      };\n      CssSelectorParser.prototype.escapeStr = function(s) {\n        var result = '';\n        var i = 0;\n        var len = s.length;\n        var chr, replacement;\n        while (i < len) {\n          chr = s.charAt(i);\n          if (chr === '\"') {\n            chr = '\\\\\"';\n          } else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n          } else if (replacement = strReplacementsRev[chr]) {\n            chr = replacement;\n          }\n          result += chr;\n          i++;\n        }\n        return '\"' + result + '\"';\n      };\n      CssSelectorParser.prototype.render = function(path) {\n        return this._renderEntity(path).trim();\n      };\n      CssSelectorParser.prototype._renderEntity = function(entity) {\n        var currentEntity, parts, res;\n        res = '';\n        switch (entity.type) {\n         case 'ruleSet':\n          currentEntity = entity.rule;\n          parts = [];\n          while (currentEntity) {\n            if (currentEntity.nestingOperator) {\n              parts.push(currentEntity.nestingOperator);\n            }\n            parts.push(this._renderEntity(currentEntity));\n            currentEntity = currentEntity.rule;\n          }\n          res = parts.join(' ');\n          break;\n\n         case 'selectors':\n          res = entity.selectors.map(this._renderEntity, this).join(', ');\n          break;\n\n         case 'rule':\n          if (entity.tagName) {\n            if (entity.tagName === '*') {\n              res = '*';\n            } else {\n              res = this.escapeIdentifier(entity.tagName);\n            }\n          }\n          if (entity.id) {\n            res += '#' + this.escapeIdentifier(entity.id);\n          }\n          if (entity.classNames) {\n            res += entity.classNames.map(function(cn) {\n              return '.' + this.escapeIdentifier(cn);\n            }, this).join('');\n          }\n          if (entity.attrs) {\n            res += entity.attrs.map(function(attr) {\n              if (attr.operator) {\n                if (attr.valueType === 'substitute') {\n                  return '[' + this.escapeIdentifier(attr.name) + attr.operator + '$' + attr.value + ']';\n                } else {\n                  return '[' + this.escapeIdentifier(attr.name) + attr.operator + this.escapeStr(attr.value) + ']';\n                }\n              } else {\n                return '[' + this.escapeIdentifier(attr.name) + ']';\n              }\n            }, this).join('');\n          }\n          if (entity.pseudos) {\n            res += entity.pseudos.map(function(pseudo) {\n              if (pseudo.valueType) {\n                if (pseudo.valueType === 'selector') {\n                  return ':' + this.escapeIdentifier(pseudo.name) + '(' + this._renderEntity(pseudo.value) + ')';\n                } else if (pseudo.valueType === 'substitute') {\n                  return ':' + this.escapeIdentifier(pseudo.name) + '($' + pseudo.value + ')';\n                } else if (pseudo.valueType === 'numeric') {\n                  return ':' + this.escapeIdentifier(pseudo.name) + '(' + pseudo.value + ')';\n                } else {\n                  return ':' + this.escapeIdentifier(pseudo.name) + '(' + this.escapeIdentifier(pseudo.value) + ')';\n                }\n              } else {\n                return ':' + this.escapeIdentifier(pseudo.name);\n              }\n            }, this).join('');\n          }\n          break;\n\n         default:\n          throw Error('Unknown entity type: \"' + entity.type(+'\".'));\n        }\n        return res;\n      };\n      exports.CssSelectorParser = CssSelectorParser;\n    }, {} ],\n    29: [ function(_dereq_, module, exports) {\n      (function() {\n        'use strict';\n        var doT = {\n          name: 'doT',\n          version: '1.1.1',\n          templateSettings: {\n            evaluate: /\\{\\{([\\s\\S]+?(\\}?)+)\\}\\}/g,\n            interpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n            encode: /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n            use: /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n            useParams: /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n            define: /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n            defineParams: /^\\s*([\\w$]+):([\\s\\S]+)/,\n            conditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n            iterate: /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n            varname: 'it',\n            strip: true,\n            append: true,\n            selfcontained: false,\n            doNotSkipEncoded: false\n          },\n          template: undefined,\n          compile: undefined,\n          log: true\n        }, _globals;\n        doT.encodeHTMLSource = function(doNotSkipEncoded) {\n          var encodeHTMLRules = {\n            '&': '&#38;',\n            '<': '&#60;',\n            '>': '&#62;',\n            '\"': '&#34;',\n            '\\'': '&#39;',\n            '/': '&#47;'\n          }, matchHTML = doNotSkipEncoded ? /[&<>\"'\\/]/g : /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n          return function(code) {\n            return code ? code.toString().replace(matchHTML, function(m) {\n              return encodeHTMLRules[m] || m;\n            }) : '';\n          };\n        };\n        _globals = function() {\n          return this || (0, eval)('this');\n        }();\n        if (typeof module !== 'undefined' && module.exports) {\n          module.exports = doT;\n        } else if (typeof define === 'function' && define.amd) {\n          define(function() {\n            return doT;\n          });\n        } else {\n          _globals.doT = doT;\n        }\n        var startend = {\n          append: {\n            start: '\\'+(',\n            end: ')+\\'',\n            startencode: '\\'+encodeHTML('\n          },\n          split: {\n            start: '\\';out+=(',\n            end: ');out+=\\'',\n            startencode: '\\';out+=encodeHTML('\n          }\n        }, skip = /$^/;\n        function resolveDefs(c, block, def) {\n          return (typeof block === 'string' ? block : block.toString()).replace(c.define || skip, function(m, code, assign, value) {\n            if (code.indexOf('def.') === 0) {\n              code = code.substring(4);\n            }\n            if (!(code in def)) {\n              if (assign === ':') {\n                if (c.defineParams) {\n                  value.replace(c.defineParams, function(m, param, v) {\n                    def[code] = {\n                      arg: param,\n                      text: v\n                    };\n                  });\n                }\n                if (!(code in def)) {\n                  def[code] = value;\n                }\n              } else {\n                new Function('def', 'def[\\'' + code + '\\']=' + value)(def);\n              }\n            }\n            return '';\n          }).replace(c.use || skip, function(m, code) {\n            if (c.useParams) {\n              code = code.replace(c.useParams, function(m, s, d, param) {\n                if (def[d] && def[d].arg && param) {\n                  var rw = (d + ':' + param).replace(/'|\\\\/g, '_');\n                  def.__exp = def.__exp || {};\n                  def.__exp[rw] = def[d].text.replace(new RegExp('(^|[^\\\\w$])' + def[d].arg + '([^\\\\w$])', 'g'), '$1' + param + '$2');\n                  return s + 'def.__exp[\\'' + rw + '\\']';\n                }\n              });\n            }\n            var v = new Function('def', 'return ' + code)(def);\n            return v ? resolveDefs(c, v, def) : v;\n          });\n        }\n        function unescape(code) {\n          return code.replace(/\\\\('|\\\\)/g, '$1').replace(/[\\r\\t\\n]/g, ' ');\n        }\n        doT.template = function(tmpl, c, def) {\n          c = c || doT.templateSettings;\n          var cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv, str = c.use || c.define ? resolveDefs(c, tmpl, def || {}) : tmpl;\n          str = ('var out=\\'' + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g, ' ').replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g, '') : str).replace(/'|\\\\/g, '\\\\$&').replace(c.interpolate || skip, function(m, code) {\n            return cse.start + unescape(code) + cse.end;\n          }).replace(c.encode || skip, function(m, code) {\n            needhtmlencode = true;\n            return cse.startencode + unescape(code) + cse.end;\n          }).replace(c.conditional || skip, function(m, elsecase, code) {\n            return elsecase ? code ? '\\';}else if(' + unescape(code) + '){out+=\\'' : '\\';}else{out+=\\'' : code ? '\\';if(' + unescape(code) + '){out+=\\'' : '\\';}out+=\\'';\n          }).replace(c.iterate || skip, function(m, iterate, vname, iname) {\n            if (!iterate) {\n              return '\\';} } out+=\\'';\n            }\n            sid += 1;\n            indv = iname || 'i' + sid;\n            iterate = unescape(iterate);\n            return '\\';var arr' + sid + '=' + iterate + ';if(arr' + sid + '){var ' + vname + ',' + indv + '=-1,l' + sid + '=arr' + sid + '.length-1;while(' + indv + '<l' + sid + '){' + vname + '=arr' + sid + '[' + indv + '+=1];out+=\\'';\n          }).replace(c.evaluate || skip, function(m, code) {\n            return '\\';' + unescape(code) + 'out+=\\'';\n          }) + '\\';return out;').replace(/\\n/g, '\\\\n').replace(/\\t/g, '\\\\t').replace(/\\r/g, '\\\\r').replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, '');\n          if (needhtmlencode) {\n            if (!c.selfcontained && _globals && !_globals._encodeHTML) {\n              _globals._encodeHTML = doT.encodeHTMLSource(c.doNotSkipEncoded);\n            }\n            str = 'var encodeHTML = typeof _encodeHTML !== \\'undefined\\' ? _encodeHTML : (' + doT.encodeHTMLSource.toString() + '(' + (c.doNotSkipEncoded || '') + '));' + str;\n          }\n          try {\n            return new Function(c.varname, str);\n          } catch (e) {\n            if (typeof console !== 'undefined') {\n              console.log('Could not create a template function: ' + str);\n            }\n            throw e;\n          }\n        };\n        doT.compile = function(tmpl, def) {\n          return doT.template(tmpl, null, def);\n        };\n      })();\n    }, {} ],\n    30: [ function(_dereq_, module, exports) {\n      'use strict';\n      module.exports = function() {\n        return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n      };\n    }, {} ],\n    31: [ function(_dereq_, module, exports) {\n      (function(process, global) {\n        (function(global, factory) {\n          typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.ES6Promise = factory();\n        })(this, function() {\n          'use strict';\n          function objectOrFunction(x) {\n            var type = typeof x;\n            return x !== null && (type === 'object' || type === 'function');\n          }\n          function isFunction(x) {\n            return typeof x === 'function';\n          }\n          var _isArray = void 0;\n          if (Array.isArray) {\n            _isArray = Array.isArray;\n          } else {\n            _isArray = function(x) {\n              return Object.prototype.toString.call(x) === '[object Array]';\n            };\n          }\n          var isArray = _isArray;\n          var len = 0;\n          var vertxNext = void 0;\n          var customSchedulerFn = void 0;\n          var asap = function asap(callback, arg) {\n            queue[len] = callback;\n            queue[len + 1] = arg;\n            len += 2;\n            if (len === 2) {\n              if (customSchedulerFn) {\n                customSchedulerFn(flush);\n              } else {\n                scheduleFlush();\n              }\n            }\n          };\n          function setScheduler(scheduleFn) {\n            customSchedulerFn = scheduleFn;\n          }\n          function setAsap(asapFn) {\n            asap = asapFn;\n          }\n          var browserWindow = typeof window !== 'undefined' ? window : undefined;\n          var browserGlobal = browserWindow || {};\n          var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\n          var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n          var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n          function useNextTick() {\n            return function() {\n              return process.nextTick(flush);\n            };\n          }\n          function useVertxTimer() {\n            if (typeof vertxNext !== 'undefined') {\n              return function() {\n                vertxNext(flush);\n              };\n            }\n            return useSetTimeout();\n          }\n          function useMutationObserver() {\n            var iterations = 0;\n            var observer = new BrowserMutationObserver(flush);\n            var node = document.createTextNode('');\n            observer.observe(node, {\n              characterData: true\n            });\n            return function() {\n              node.data = iterations = ++iterations % 2;\n            };\n          }\n          function useMessageChannel() {\n            var channel = new MessageChannel();\n            channel.port1.onmessage = flush;\n            return function() {\n              return channel.port2.postMessage(0);\n            };\n          }\n          function useSetTimeout() {\n            var globalSetTimeout = setTimeout;\n            return function() {\n              return globalSetTimeout(flush, 1);\n            };\n          }\n          var queue = new Array(1e3);\n          function flush() {\n            for (var i = 0; i < len; i += 2) {\n              var callback = queue[i];\n              var arg = queue[i + 1];\n              callback(arg);\n              queue[i] = undefined;\n              queue[i + 1] = undefined;\n            }\n            len = 0;\n          }\n          function attemptVertx() {\n            try {\n              var vertx = Function('return this')().require('vertx');\n              vertxNext = vertx.runOnLoop || vertx.runOnContext;\n              return useVertxTimer();\n            } catch (e) {\n              return useSetTimeout();\n            }\n          }\n          var scheduleFlush = void 0;\n          if (isNode) {\n            scheduleFlush = useNextTick();\n          } else if (BrowserMutationObserver) {\n            scheduleFlush = useMutationObserver();\n          } else if (isWorker) {\n            scheduleFlush = useMessageChannel();\n          } else if (browserWindow === undefined && typeof _dereq_ === 'function') {\n            scheduleFlush = attemptVertx();\n          } else {\n            scheduleFlush = useSetTimeout();\n          }\n          function then(onFulfillment, onRejection) {\n            var parent = this;\n            var child = new this.constructor(noop);\n            if (child[PROMISE_ID] === undefined) {\n              makePromise(child);\n            }\n            var _state = parent._state;\n            if (_state) {\n              var callback = arguments[_state - 1];\n              asap(function() {\n                return invokeCallback(_state, child, callback, parent._result);\n              });\n            } else {\n              subscribe(parent, child, onFulfillment, onRejection);\n            }\n            return child;\n          }\n          function resolve$1(object) {\n            var Constructor = this;\n            if (object && typeof object === 'object' && object.constructor === Constructor) {\n              return object;\n            }\n            var promise = new Constructor(noop);\n            resolve(promise, object);\n            return promise;\n          }\n          var PROMISE_ID = Math.random().toString(36).substring(2);\n          function noop() {}\n          var PENDING = void 0;\n          var FULFILLED = 1;\n          var REJECTED = 2;\n          var TRY_CATCH_ERROR = {\n            error: null\n          };\n          function selfFulfillment() {\n            return new TypeError('You cannot resolve a promise with itself');\n          }\n          function cannotReturnOwn() {\n            return new TypeError('A promises callback cannot return that same promise.');\n          }\n          function getThen(promise) {\n            try {\n              return promise.then;\n            } catch (error) {\n              TRY_CATCH_ERROR.error = error;\n              return TRY_CATCH_ERROR;\n            }\n          }\n          function tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n            try {\n              then$$1.call(value, fulfillmentHandler, rejectionHandler);\n            } catch (e) {\n              return e;\n            }\n          }\n          function handleForeignThenable(promise, thenable, then$$1) {\n            asap(function(promise) {\n              var sealed = false;\n              var error = tryThen(then$$1, thenable, function(value) {\n                if (sealed) {\n                  return;\n                }\n                sealed = true;\n                if (thenable !== value) {\n                  resolve(promise, value);\n                } else {\n                  fulfill(promise, value);\n                }\n              }, function(reason) {\n                if (sealed) {\n                  return;\n                }\n                sealed = true;\n                reject(promise, reason);\n              }, 'Settle: ' + (promise._label || ' unknown promise'));\n              if (!sealed && error) {\n                sealed = true;\n                reject(promise, error);\n              }\n            }, promise);\n          }\n          function handleOwnThenable(promise, thenable) {\n            if (thenable._state === FULFILLED) {\n              fulfill(promise, thenable._result);\n            } else if (thenable._state === REJECTED) {\n              reject(promise, thenable._result);\n            } else {\n              subscribe(thenable, undefined, function(value) {\n                return resolve(promise, value);\n              }, function(reason) {\n                return reject(promise, reason);\n              });\n            }\n          }\n          function handleMaybeThenable(promise, maybeThenable, then$$1) {\n            if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n              handleOwnThenable(promise, maybeThenable);\n            } else {\n              if (then$$1 === TRY_CATCH_ERROR) {\n                reject(promise, TRY_CATCH_ERROR.error);\n                TRY_CATCH_ERROR.error = null;\n              } else if (then$$1 === undefined) {\n                fulfill(promise, maybeThenable);\n              } else if (isFunction(then$$1)) {\n                handleForeignThenable(promise, maybeThenable, then$$1);\n              } else {\n                fulfill(promise, maybeThenable);\n              }\n            }\n          }\n          function resolve(promise, value) {\n            if (promise === value) {\n              reject(promise, selfFulfillment());\n            } else if (objectOrFunction(value)) {\n              handleMaybeThenable(promise, value, getThen(value));\n            } else {\n              fulfill(promise, value);\n            }\n          }\n          function publishRejection(promise) {\n            if (promise._onerror) {\n              promise._onerror(promise._result);\n            }\n            publish(promise);\n          }\n          function fulfill(promise, value) {\n            if (promise._state !== PENDING) {\n              return;\n            }\n            promise._result = value;\n            promise._state = FULFILLED;\n            if (promise._subscribers.length !== 0) {\n              asap(publish, promise);\n            }\n          }\n          function reject(promise, reason) {\n            if (promise._state !== PENDING) {\n              return;\n            }\n            promise._state = REJECTED;\n            promise._result = reason;\n            asap(publishRejection, promise);\n          }\n          function subscribe(parent, child, onFulfillment, onRejection) {\n            var _subscribers = parent._subscribers;\n            var length = _subscribers.length;\n            parent._onerror = null;\n            _subscribers[length] = child;\n            _subscribers[length + FULFILLED] = onFulfillment;\n            _subscribers[length + REJECTED] = onRejection;\n            if (length === 0 && parent._state) {\n              asap(publish, parent);\n            }\n          }\n          function publish(promise) {\n            var subscribers = promise._subscribers;\n            var settled = promise._state;\n            if (subscribers.length === 0) {\n              return;\n            }\n            var child = void 0, callback = void 0, detail = promise._result;\n            for (var i = 0; i < subscribers.length; i += 3) {\n              child = subscribers[i];\n              callback = subscribers[i + settled];\n              if (child) {\n                invokeCallback(settled, child, callback, detail);\n              } else {\n                callback(detail);\n              }\n            }\n            promise._subscribers.length = 0;\n          }\n          function tryCatch(callback, detail) {\n            try {\n              return callback(detail);\n            } catch (e) {\n              TRY_CATCH_ERROR.error = e;\n              return TRY_CATCH_ERROR;\n            }\n          }\n          function invokeCallback(settled, promise, callback, detail) {\n            var hasCallback = isFunction(callback), value = void 0, error = void 0, succeeded = void 0, failed = void 0;\n            if (hasCallback) {\n              value = tryCatch(callback, detail);\n              if (value === TRY_CATCH_ERROR) {\n                failed = true;\n                error = value.error;\n                value.error = null;\n              } else {\n                succeeded = true;\n              }\n              if (promise === value) {\n                reject(promise, cannotReturnOwn());\n                return;\n              }\n            } else {\n              value = detail;\n              succeeded = true;\n            }\n            if (promise._state !== PENDING) {} else if (hasCallback && succeeded) {\n              resolve(promise, value);\n            } else if (failed) {\n              reject(promise, error);\n            } else if (settled === FULFILLED) {\n              fulfill(promise, value);\n            } else if (settled === REJECTED) {\n              reject(promise, value);\n            }\n          }\n          function initializePromise(promise, resolver) {\n            try {\n              resolver(function resolvePromise(value) {\n                resolve(promise, value);\n              }, function rejectPromise(reason) {\n                reject(promise, reason);\n              });\n            } catch (e) {\n              reject(promise, e);\n            }\n          }\n          var id = 0;\n          function nextId() {\n            return id++;\n          }\n          function makePromise(promise) {\n            promise[PROMISE_ID] = id++;\n            promise._state = undefined;\n            promise._result = undefined;\n            promise._subscribers = [];\n          }\n          function validationError() {\n            return new Error('Array Methods must be provided an Array');\n          }\n          var Enumerator = function() {\n            function Enumerator(Constructor, input) {\n              this._instanceConstructor = Constructor;\n              this.promise = new Constructor(noop);\n              if (!this.promise[PROMISE_ID]) {\n                makePromise(this.promise);\n              }\n              if (isArray(input)) {\n                this.length = input.length;\n                this._remaining = input.length;\n                this._result = new Array(this.length);\n                if (this.length === 0) {\n                  fulfill(this.promise, this._result);\n                } else {\n                  this.length = this.length || 0;\n                  this._enumerate(input);\n                  if (this._remaining === 0) {\n                    fulfill(this.promise, this._result);\n                  }\n                }\n              } else {\n                reject(this.promise, validationError());\n              }\n            }\n            Enumerator.prototype._enumerate = function _enumerate(input) {\n              for (var i = 0; this._state === PENDING && i < input.length; i++) {\n                this._eachEntry(input[i], i);\n              }\n            };\n            Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n              var c = this._instanceConstructor;\n              var resolve$$1 = c.resolve;\n              if (resolve$$1 === resolve$1) {\n                var _then = getThen(entry);\n                if (_then === then && entry._state !== PENDING) {\n                  this._settledAt(entry._state, i, entry._result);\n                } else if (typeof _then !== 'function') {\n                  this._remaining--;\n                  this._result[i] = entry;\n                } else if (c === Promise$1) {\n                  var promise = new c(noop);\n                  handleMaybeThenable(promise, entry, _then);\n                  this._willSettleAt(promise, i);\n                } else {\n                  this._willSettleAt(new c(function(resolve$$1) {\n                    return resolve$$1(entry);\n                  }), i);\n                }\n              } else {\n                this._willSettleAt(resolve$$1(entry), i);\n              }\n            };\n            Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n              var promise = this.promise;\n              if (promise._state === PENDING) {\n                this._remaining--;\n                if (state === REJECTED) {\n                  reject(promise, value);\n                } else {\n                  this._result[i] = value;\n                }\n              }\n              if (this._remaining === 0) {\n                fulfill(promise, this._result);\n              }\n            };\n            Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n              var enumerator = this;\n              subscribe(promise, undefined, function(value) {\n                return enumerator._settledAt(FULFILLED, i, value);\n              }, function(reason) {\n                return enumerator._settledAt(REJECTED, i, reason);\n              });\n            };\n            return Enumerator;\n          }();\n          function all(entries) {\n            return new Enumerator(this, entries).promise;\n          }\n          function race(entries) {\n            var Constructor = this;\n            if (!isArray(entries)) {\n              return new Constructor(function(_, reject) {\n                return reject(new TypeError('You must pass an array to race.'));\n              });\n            } else {\n              return new Constructor(function(resolve, reject) {\n                var length = entries.length;\n                for (var i = 0; i < length; i++) {\n                  Constructor.resolve(entries[i]).then(resolve, reject);\n                }\n              });\n            }\n          }\n          function reject$1(reason) {\n            var Constructor = this;\n            var promise = new Constructor(noop);\n            reject(promise, reason);\n            return promise;\n          }\n          function needsResolver() {\n            throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n          }\n          function needsNew() {\n            throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n          }\n          var Promise$1 = function() {\n            function Promise(resolver) {\n              this[PROMISE_ID] = nextId();\n              this._result = this._state = undefined;\n              this._subscribers = [];\n              if (noop !== resolver) {\n                typeof resolver !== 'function' && needsResolver();\n                this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n              }\n            }\n            Promise.prototype.catch = function _catch(onRejection) {\n              return this.then(null, onRejection);\n            };\n            Promise.prototype.finally = function _finally(callback) {\n              var promise = this;\n              var constructor = promise.constructor;\n              if (isFunction(callback)) {\n                return promise.then(function(value) {\n                  return constructor.resolve(callback()).then(function() {\n                    return value;\n                  });\n                }, function(reason) {\n                  return constructor.resolve(callback()).then(function() {\n                    throw reason;\n                  });\n                });\n              }\n              return promise.then(callback, callback);\n            };\n            return Promise;\n          }();\n          Promise$1.prototype.then = then;\n          Promise$1.all = all;\n          Promise$1.race = race;\n          Promise$1.resolve = resolve$1;\n          Promise$1.reject = reject$1;\n          Promise$1._setScheduler = setScheduler;\n          Promise$1._setAsap = setAsap;\n          Promise$1._asap = asap;\n          function polyfill() {\n            var local = void 0;\n            if (typeof global !== 'undefined') {\n              local = global;\n            } else if (typeof self !== 'undefined') {\n              local = self;\n            } else {\n              try {\n                local = Function('return this')();\n              } catch (e) {\n                throw new Error('polyfill failed because global object is unavailable in this environment');\n              }\n            }\n            var P = local.Promise;\n            if (P) {\n              var promiseToString = null;\n              try {\n                promiseToString = Object.prototype.toString.call(P.resolve());\n              } catch (e) {}\n              if (promiseToString === '[object Promise]' && !P.cast) {\n                return;\n              }\n            }\n            local.Promise = Promise$1;\n          }\n          Promise$1.polyfill = polyfill;\n          Promise$1.Promise = Promise$1;\n          return Promise$1;\n        });\n      }).call(this, _dereq_('_process'), typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {});\n    }, {\n      _process: 33\n    } ],\n    32: [ function(_dereq_, module, exports) {\n      module.exports = function(obj) {\n        return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);\n      };\n      function isBuffer(obj) {\n        return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n      }\n      function isSlowBuffer(obj) {\n        return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0));\n      }\n    }, {} ],\n    33: [ function(_dereq_, module, exports) {\n      var process = module.exports = {};\n      var cachedSetTimeout;\n      var cachedClearTimeout;\n      function defaultSetTimout() {\n        throw new Error('setTimeout has not been defined');\n      }\n      function defaultClearTimeout() {\n        throw new Error('clearTimeout has not been defined');\n      }\n      (function() {\n        try {\n          if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n          } else {\n            cachedSetTimeout = defaultSetTimout;\n          }\n        } catch (e) {\n          cachedSetTimeout = defaultSetTimout;\n        }\n        try {\n          if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n          } else {\n            cachedClearTimeout = defaultClearTimeout;\n          }\n        } catch (e) {\n          cachedClearTimeout = defaultClearTimeout;\n        }\n      })();\n      function runTimeout(fun) {\n        if (cachedSetTimeout === setTimeout) {\n          return setTimeout(fun, 0);\n        }\n        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n        }\n        try {\n          return cachedSetTimeout(fun, 0);\n        } catch (e) {\n          try {\n            return cachedSetTimeout.call(null, fun, 0);\n          } catch (e) {\n            return cachedSetTimeout.call(this, fun, 0);\n          }\n        }\n      }\n      function runClearTimeout(marker) {\n        if (cachedClearTimeout === clearTimeout) {\n          return clearTimeout(marker);\n        }\n        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n        }\n        try {\n          return cachedClearTimeout(marker);\n        } catch (e) {\n          try {\n            return cachedClearTimeout.call(null, marker);\n          } catch (e) {\n            return cachedClearTimeout.call(this, marker);\n          }\n        }\n      }\n      var queue = [];\n      var draining = false;\n      var currentQueue;\n      var queueIndex = -1;\n      function cleanUpNextTick() {\n        if (!draining || !currentQueue) {\n          return;\n        }\n        draining = false;\n        if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n        } else {\n          queueIndex = -1;\n        }\n        if (queue.length) {\n          drainQueue();\n        }\n      }\n      function drainQueue() {\n        if (draining) {\n          return;\n        }\n        var timeout = runTimeout(cleanUpNextTick);\n        draining = true;\n        var len = queue.length;\n        while (len) {\n          currentQueue = queue;\n          queue = [];\n          while (++queueIndex < len) {\n            if (currentQueue) {\n              currentQueue[queueIndex].run();\n            }\n          }\n          queueIndex = -1;\n          len = queue.length;\n        }\n        currentQueue = null;\n        draining = false;\n        runClearTimeout(timeout);\n      }\n      process.nextTick = function(fun) {\n        var args = new Array(arguments.length - 1);\n        if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n          }\n        }\n        queue.push(new Item(fun, args));\n        if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n        }\n      };\n      function Item(fun, array) {\n        this.fun = fun;\n        this.array = array;\n      }\n      Item.prototype.run = function() {\n        this.fun.apply(null, this.array);\n      };\n      process.title = 'browser';\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n      process.version = '';\n      process.versions = {};\n      function noop() {}\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n      process.prependListener = noop;\n      process.prependOnceListener = noop;\n      process.listeners = function(name) {\n        return [];\n      };\n      process.binding = function(name) {\n        throw new Error('process.binding is not supported');\n      };\n      process.cwd = function() {\n        return '/';\n      };\n      process.chdir = function(dir) {\n        throw new Error('process.chdir is not supported');\n      };\n      process.umask = function() {\n        return 0;\n      };\n    }, {} ]\n  }, {}, [ 1 ]);\n  'use strict';\n  var utils = axe.utils = {};\n  'use strict';\n  var helpers = {};\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  var _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  function getDefaultConfiguration(audit) {\n    'use strict';\n    var config;\n    if (audit) {\n      config = axe.utils.clone(audit);\n      config.commons = audit.commons;\n    } else {\n      config = {};\n    }\n    config.reporter = config.reporter || null;\n    config.rules = config.rules || [];\n    config.checks = config.checks || [];\n    config.data = _extends({\n      checks: {},\n      rules: {}\n    }, config.data);\n    return config;\n  }\n  function unpackToObject(collection, audit, method) {\n    'use strict';\n    var i, l;\n    for (i = 0, l = collection.length; i < l; i++) {\n      audit[method](collection[i]);\n    }\n  }\n  function Audit(audit) {\n    this.brand = 'axe';\n    this.application = 'axeAPI';\n    this.tagExclude = [ 'experimental' ];\n    this.defaultConfig = audit;\n    this._init();\n    this._defaultLocale = null;\n  }\n  Audit.prototype._setDefaultLocale = function() {\n    if (this._defaultLocale) {\n      return;\n    }\n    var locale = {\n      checks: {},\n      rules: {}\n    };\n    var checkIDs = Object.keys(this.data.checks);\n    for (var i = 0; i < checkIDs.length; i++) {\n      var id = checkIDs[i];\n      var check = this.data.checks[id];\n      var _check$messages = check.messages, pass = _check$messages.pass, fail = _check$messages.fail, incomplete = _check$messages.incomplete;\n      locale.checks[id] = {\n        pass: pass,\n        fail: fail,\n        incomplete: incomplete\n      };\n    }\n    var ruleIDs = Object.keys(this.data.rules);\n    for (var _i = 0; _i < ruleIDs.length; _i++) {\n      var _id = ruleIDs[_i];\n      var rule = this.data.rules[_id];\n      var description = rule.description, help = rule.help;\n      locale.rules[_id] = {\n        description: description,\n        help: help\n      };\n    }\n    this._defaultLocale = locale;\n  };\n  Audit.prototype._resetLocale = function() {\n    var defaultLocale = this._defaultLocale;\n    if (!defaultLocale) {\n      return;\n    }\n    this.applyLocale(defaultLocale);\n  };\n  var mergeCheckLocale = function mergeCheckLocale(a, b) {\n    var pass = b.pass, fail = b.fail;\n    if (typeof pass === 'string') {\n      pass = axe.imports.doT.compile(pass);\n    }\n    if (typeof fail === 'string') {\n      fail = axe.imports.doT.compile(fail);\n    }\n    return _extends({}, a, {\n      messages: {\n        pass: pass || a.messages.pass,\n        fail: fail || a.messages.fail,\n        incomplete: _typeof(a.messages.incomplete) === 'object' ? _extends({}, a.messages.incomplete, b.incomplete) : b.incomplete\n      }\n    });\n  };\n  var mergeRuleLocale = function mergeRuleLocale(a, b) {\n    var help = b.help, description = b.description;\n    if (typeof help === 'string') {\n      help = axe.imports.doT.compile(help);\n    }\n    if (typeof description === 'string') {\n      description = axe.imports.doT.compile(description);\n    }\n    return _extends({}, a, {\n      help: help || a.help,\n      description: description || a.description\n    });\n  };\n  Audit.prototype._applyCheckLocale = function(checks) {\n    var keys = Object.keys(checks);\n    for (var i = 0; i < keys.length; i++) {\n      var id = keys[i];\n      if (!this.data.checks[id]) {\n        throw new Error('Locale provided for unknown check: \"' + id + '\"');\n      }\n      this.data.checks[id] = mergeCheckLocale(this.data.checks[id], checks[id]);\n    }\n  };\n  Audit.prototype._applyRuleLocale = function(rules) {\n    var keys = Object.keys(rules);\n    for (var i = 0; i < keys.length; i++) {\n      var id = keys[i];\n      if (!this.data.rules[id]) {\n        throw new Error('Locale provided for unknown rule: \"' + id + '\"');\n      }\n      this.data.rules[id] = mergeRuleLocale(this.data.rules[id], rules[id]);\n    }\n  };\n  Audit.prototype.applyLocale = function(locale) {\n    this._setDefaultLocale();\n    if (locale.checks) {\n      this._applyCheckLocale(locale.checks);\n    }\n    if (locale.rules) {\n      this._applyRuleLocale(locale.rules);\n    }\n  };\n  Audit.prototype._init = function() {\n    var audit = getDefaultConfiguration(this.defaultConfig);\n    axe.commons = commons = audit.commons;\n    this.reporter = audit.reporter;\n    this.commands = {};\n    this.rules = [];\n    this.checks = {};\n    unpackToObject(audit.rules, this, 'addRule');\n    unpackToObject(audit.checks, this, 'addCheck');\n    this.data = {};\n    this.data.checks = audit.data && audit.data.checks || {};\n    this.data.rules = audit.data && audit.data.rules || {};\n    this.data.failureSummaries = audit.data && audit.data.failureSummaries || {};\n    this.data.incompleteFallbackMessage = audit.data && audit.data.incompleteFallbackMessage || '';\n    this._constructHelpUrls();\n  };\n  Audit.prototype.registerCommand = function(command) {\n    'use strict';\n    this.commands[command.id] = command.callback;\n  };\n  Audit.prototype.addRule = function(spec) {\n    'use strict';\n    if (spec.metadata) {\n      this.data.rules[spec.id] = spec.metadata;\n    }\n    var rule = this.getRule(spec.id);\n    if (rule) {\n      rule.configure(spec);\n    } else {\n      this.rules.push(new Rule(spec, this));\n    }\n  };\n  Audit.prototype.addCheck = function(spec) {\n    'use strict';\n    var metadata = spec.metadata;\n    if ((typeof metadata === 'undefined' ? 'undefined' : _typeof(metadata)) === 'object') {\n      this.data.checks[spec.id] = metadata;\n      if (_typeof(metadata.messages) === 'object') {\n        Object.keys(metadata.messages).filter(function(prop) {\n          return metadata.messages.hasOwnProperty(prop) && typeof metadata.messages[prop] === 'string';\n        }).forEach(function(prop) {\n          if (metadata.messages[prop].indexOf('function') === 0) {\n            metadata.messages[prop] = new Function('return ' + metadata.messages[prop] + ';')();\n          }\n        });\n      }\n    }\n    if (this.checks[spec.id]) {\n      this.checks[spec.id].configure(spec);\n    } else {\n      this.checks[spec.id] = new Check(spec);\n    }\n  };\n  function getRulesToRun(rules, context, options) {\n    var base = {\n      now: [],\n      later: []\n    };\n    var splitRules = rules.reduce(function(out, rule) {\n      if (!axe.utils.ruleShouldRun(rule, context, options)) {\n        return out;\n      }\n      if (rule.preload) {\n        out.later.push(rule);\n        return out;\n      }\n      out.now.push(rule);\n      return out;\n    }, base);\n    return splitRules;\n  }\n  function getDefferedRule(rule, context, options) {\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.mark('mark_rule_start_' + rule.id);\n    }\n    return function(resolve, reject) {\n      rule.run(context, options, function(ruleResult) {\n        resolve(ruleResult);\n      }, function(err) {\n        if (!options.debug) {\n          var errResult = Object.assign(new RuleResult(rule), {\n            result: axe.constants.CANTTELL,\n            description: 'An error occured while running this rule',\n            message: err.message,\n            stack: err.stack,\n            error: err,\n            errorNode: err.errorNode\n          });\n          resolve(errResult);\n        } else {\n          reject(err);\n        }\n      });\n    };\n  }\n  Audit.prototype.run = function(context, options, resolve, reject) {\n    'use strict';\n    this.normalizeOptions(options);\n    axe._selectCache = [];\n    var allRulesToRun = getRulesToRun(this.rules, context, options);\n    var runNowRules = allRulesToRun.now;\n    var runLaterRules = allRulesToRun.later;\n    var nowRulesQueue = axe.utils.queue();\n    runNowRules.forEach(function(rule) {\n      nowRulesQueue.defer(getDefferedRule(rule, context, options));\n    });\n    var preloaderQueue = axe.utils.queue();\n    if (runLaterRules.length) {\n      preloaderQueue.defer(function(res, rej) {\n        axe.utils.preload(options).then(function(preloadResults) {\n          var assets = preloadResults[0];\n          res(assets);\n        }).catch(function(err) {\n          console.warn('Couldn\\'t load preload assets: ', err);\n          var assets = undefined;\n          res(assets);\n        });\n      });\n    }\n    var queueForNowRulesAndPreloader = axe.utils.queue();\n    queueForNowRulesAndPreloader.defer(nowRulesQueue);\n    queueForNowRulesAndPreloader.defer(preloaderQueue);\n    queueForNowRulesAndPreloader.then(function(nowRulesAndPreloaderResults) {\n      var assetsFromQueue = nowRulesAndPreloaderResults.pop();\n      if (assetsFromQueue && assetsFromQueue.length) {\n        var assets = assetsFromQueue[0];\n        if (assets) {\n          context = _extends({}, context, assets);\n        }\n      }\n      var nowRulesResults = nowRulesAndPreloaderResults[0];\n      if (!runLaterRules.length) {\n        axe._selectCache = undefined;\n        resolve(nowRulesResults.filter(function(result) {\n          return !!result;\n        }));\n        return;\n      }\n      var laterRulesQueue = axe.utils.queue();\n      runLaterRules.forEach(function(rule) {\n        var deferredRule = getDefferedRule(rule, context, options);\n        laterRulesQueue.defer(deferredRule);\n      });\n      laterRulesQueue.then(function(laterRuleResults) {\n        axe._selectCache = undefined;\n        resolve(nowRulesResults.concat(laterRuleResults).filter(function(result) {\n          return !!result;\n        }));\n      }).catch(reject);\n    }).catch(reject);\n  };\n  Audit.prototype.after = function(results, options) {\n    'use strict';\n    var rules = this.rules;\n    return results.map(function(ruleResult) {\n      var rule = axe.utils.findBy(rules, 'id', ruleResult.id);\n      if (!rule) {\n        throw new Error('Result for unknown rule. You may be running mismatch aXe-core versions');\n      }\n      return rule.after(ruleResult, options);\n    });\n  };\n  Audit.prototype.getRule = function(ruleId) {\n    return this.rules.find(function(rule) {\n      return rule.id === ruleId;\n    });\n  };\n  Audit.prototype.normalizeOptions = function(options) {\n    'use strict';\n    var audit = this;\n    if (_typeof(options.runOnly) === 'object') {\n      if (Array.isArray(options.runOnly)) {\n        options.runOnly = {\n          type: 'tag',\n          values: options.runOnly\n        };\n      }\n      var only = options.runOnly;\n      if (only.value && !only.values) {\n        only.values = only.value;\n        delete only.value;\n      }\n      if (!Array.isArray(only.values) || only.values.length === 0) {\n        throw new Error('runOnly.values must be a non-empty array');\n      }\n      if ([ 'rule', 'rules' ].includes(only.type)) {\n        only.type = 'rule';\n        only.values.forEach(function(ruleId) {\n          if (!audit.getRule(ruleId)) {\n            throw new Error('unknown rule `' + ruleId + '` in options.runOnly');\n          }\n        });\n      } else if ([ 'tag', 'tags', undefined ].includes(only.type)) {\n        only.type = 'tag';\n        var unmatchedTags = audit.rules.reduce(function(unmatchedTags, rule) {\n          return unmatchedTags.length ? unmatchedTags.filter(function(tag) {\n            return !rule.tags.includes(tag);\n          }) : unmatchedTags;\n        }, only.values);\n        if (unmatchedTags.length !== 0) {\n          axe.log('Could not find tags `' + unmatchedTags.join('`, `') + '`');\n        }\n      } else {\n        throw new Error('Unknown runOnly type \\'' + only.type + '\\'');\n      }\n    }\n    if (_typeof(options.rules) === 'object') {\n      Object.keys(options.rules).forEach(function(ruleId) {\n        if (!audit.getRule(ruleId)) {\n          throw new Error('unknown rule `' + ruleId + '` in options.rules');\n        }\n      });\n    }\n    return options;\n  };\n  Audit.prototype.setBranding = function(branding) {\n    'use strict';\n    var previous = {\n      brand: this.brand,\n      application: this.application\n    };\n    if (branding && branding.hasOwnProperty('brand') && branding.brand && typeof branding.brand === 'string') {\n      this.brand = branding.brand;\n    }\n    if (branding && branding.hasOwnProperty('application') && branding.application && typeof branding.application === 'string') {\n      this.application = branding.application;\n    }\n    this._constructHelpUrls(previous);\n  };\n  function getHelpUrl(_ref, ruleId, version) {\n    var brand = _ref.brand, application = _ref.application;\n    return axe.constants.helpUrlBase + brand + '/' + (version || axe.version.substring(0, axe.version.lastIndexOf('.'))) + '/' + ruleId + '?application=' + application;\n  }\n  Audit.prototype._constructHelpUrls = function() {\n    var _this = this;\n    var previous = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var version = (axe.version.match(/^[1-9][0-9]*\\.[0-9]+/) || [ 'x.y' ])[0];\n    this.rules.forEach(function(rule) {\n      if (!_this.data.rules[rule.id]) {\n        _this.data.rules[rule.id] = {};\n      }\n      var metaData = _this.data.rules[rule.id];\n      if (typeof metaData.helpUrl !== 'string' || previous && metaData.helpUrl === getHelpUrl(previous, rule.id, version)) {\n        metaData.helpUrl = getHelpUrl(_this, rule.id, version);\n      }\n    });\n  };\n  Audit.prototype.resetRulesAndChecks = function() {\n    'use strict';\n    this._init();\n    this._resetLocale();\n  };\n  'use strict';\n  function CheckResult(check) {\n    'use strict';\n    this.id = check.id;\n    this.data = null;\n    this.relatedNodes = [];\n    this.result = null;\n  }\n  'use strict';\n  function createExecutionContext(spec) {\n    'use strict';\n    if (typeof spec === 'string') {\n      return new Function('return ' + spec + ';')();\n    }\n    return spec;\n  }\n  function Check(spec) {\n    if (spec) {\n      this.id = spec.id;\n      this.configure(spec);\n    }\n  }\n  Check.prototype.enabled = true;\n  Check.prototype.run = function(node, options, context, resolve, reject) {\n    'use strict';\n    options = options || {};\n    var enabled = options.hasOwnProperty('enabled') ? options.enabled : this.enabled, checkOptions = options.options || this.options;\n    if (enabled) {\n      var checkResult = new CheckResult(this);\n      var checkHelper = axe.utils.checkHelper(checkResult, options, resolve, reject);\n      var result;\n      try {\n        result = this.evaluate.call(checkHelper, node.actualNode, checkOptions, node, context);\n      } catch (e) {\n        if (node && node.actualNode) {\n          e.errorNode = new DqElement(node.actualNode).toJSON();\n        }\n        reject(e);\n        return;\n      }\n      if (!checkHelper.isAsync) {\n        checkResult.result = result;\n        resolve(checkResult);\n      }\n    } else {\n      resolve(null);\n    }\n  };\n  Check.prototype.configure = function(spec) {\n    var _this = this;\n    [ 'options', 'enabled' ].filter(function(prop) {\n      return spec.hasOwnProperty(prop);\n    }).forEach(function(prop) {\n      return _this[prop] = spec[prop];\n    });\n    [ 'evaluate', 'after' ].filter(function(prop) {\n      return spec.hasOwnProperty(prop);\n    }).forEach(function(prop) {\n      return _this[prop] = createExecutionContext(spec[prop]);\n    });\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function pushUniqueFrame(collection, frame) {\n    'use strict';\n    if (axe.utils.isHidden(frame)) {\n      return;\n    }\n    var fr = axe.utils.findBy(collection, 'node', frame);\n    if (!fr) {\n      collection.push({\n        node: frame,\n        include: [],\n        exclude: []\n      });\n    }\n  }\n  function pushUniqueFrameSelector(context, type, selectorArray) {\n    'use strict';\n    context.frames = context.frames || [];\n    var result, frame;\n    var frames = document.querySelectorAll(selectorArray.shift());\n    frameloop: for (var i = 0, l = frames.length; i < l; i++) {\n      frame = frames[i];\n      for (var j = 0, l2 = context.frames.length; j < l2; j++) {\n        if (context.frames[j].node === frame) {\n          context.frames[j][type].push(selectorArray);\n          break frameloop;\n        }\n      }\n      result = {\n        node: frame,\n        include: [],\n        exclude: []\n      };\n      if (selectorArray) {\n        result[type].push(selectorArray);\n      }\n      context.frames.push(result);\n    }\n  }\n  function normalizeContext(context) {\n    'use strict';\n    if (context && (typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' || context instanceof NodeList) {\n      if (context instanceof Node) {\n        return {\n          include: [ context ],\n          exclude: []\n        };\n      }\n      if (context.hasOwnProperty('include') || context.hasOwnProperty('exclude')) {\n        return {\n          include: context.include && +context.include.length ? context.include : [ document ],\n          exclude: context.exclude || []\n        };\n      }\n      if (context.length === +context.length) {\n        return {\n          include: context,\n          exclude: []\n        };\n      }\n    }\n    if (typeof context === 'string') {\n      return {\n        include: [ context ],\n        exclude: []\n      };\n    }\n    return {\n      include: [ document ],\n      exclude: []\n    };\n  }\n  function parseSelectorArray(context, type) {\n    'use strict';\n    var item, result = [], nodeList;\n    for (var i = 0, l = context[type].length; i < l; i++) {\n      item = context[type][i];\n      if (typeof item === 'string') {\n        nodeList = Array.from(document.querySelectorAll(item));\n        result = result.concat(nodeList.map(function(node) {\n          return axe.utils.getNodeFromTree(context.flatTree[0], node);\n        }));\n        break;\n      } else if (item && item.length && !(item instanceof Node)) {\n        if (item.length > 1) {\n          pushUniqueFrameSelector(context, type, item);\n        } else {\n          nodeList = Array.from(document.querySelectorAll(item[0]));\n          result = result.concat(nodeList.map(function(node) {\n            return axe.utils.getNodeFromTree(context.flatTree[0], node);\n          }));\n        }\n      } else if (item instanceof Node) {\n        if (item.documentElement instanceof Node) {\n          result.push(context.flatTree[0]);\n        } else {\n          result.push(axe.utils.getNodeFromTree(context.flatTree[0], item));\n        }\n      }\n    }\n    return result.filter(function(r) {\n      return r;\n    });\n  }\n  function validateContext(context) {\n    'use strict';\n    if (context.include.length === 0) {\n      if (context.frames.length === 0) {\n        var env = axe.utils.respondable.isInFrame() ? 'frame' : 'page';\n        return new Error('No elements found for include in ' + env + ' Context');\n      }\n      context.frames.forEach(function(frame, i) {\n        if (frame.include.length === 0) {\n          return new Error('No elements found for include in Context of frame ' + i);\n        }\n      });\n    }\n  }\n  function getRootNode(_ref) {\n    var include = _ref.include, exclude = _ref.exclude;\n    var selectors = Array.from(include).concat(Array.from(exclude));\n    var localDocument = selectors.reduce(function(result, item) {\n      if (result) {\n        return result;\n      } else if (item instanceof Element) {\n        return item.ownerDocument;\n      } else if (item instanceof Document) {\n        return item;\n      }\n    }, null);\n    return (localDocument || document).documentElement;\n  }\n  function Context(spec) {\n    'use strict';\n    var _this = this;\n    this.frames = [];\n    this.initiator = spec && typeof spec.initiator === 'boolean' ? spec.initiator : true;\n    this.page = false;\n    spec = normalizeContext(spec);\n    this.flatTree = axe.utils.getFlattenedTree(getRootNode(spec));\n    this.exclude = spec.exclude;\n    this.include = spec.include;\n    this.include = parseSelectorArray(this, 'include');\n    this.exclude = parseSelectorArray(this, 'exclude');\n    axe.utils.select('frame, iframe', this).forEach(function(frame) {\n      if (isNodeInContext(frame, _this)) {\n        pushUniqueFrame(_this.frames, frame.actualNode);\n      }\n    });\n    if (this.include.length === 1 && this.include[0].actualNode === document.documentElement) {\n      this.page = true;\n    }\n    var err = validateContext(this);\n    if (err instanceof Error) {\n      throw err;\n    }\n    if (!Array.isArray(this.include)) {\n      this.include = Array.from(this.include);\n    }\n    this.include.sort(axe.utils.nodeSorter);\n  }\n  'use strict';\n  function RuleResult(rule) {\n    'use strict';\n    this.id = rule.id;\n    this.result = axe.constants.NA;\n    this.pageLevel = rule.pageLevel;\n    this.impact = null;\n    this.nodes = [];\n  }\n  'use strict';\n  function Rule(spec, parentAudit) {\n    'use strict';\n    this._audit = parentAudit;\n    this.id = spec.id;\n    this.selector = spec.selector || '*';\n    this.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n    this.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n    this.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n    this.any = spec.any || [];\n    this.all = spec.all || [];\n    this.none = spec.none || [];\n    this.tags = spec.tags || [];\n    this.preload = spec.preload ? true : false;\n    if (spec.matches) {\n      this.matches = createExecutionContext(spec.matches);\n    }\n  }\n  Rule.prototype.matches = function() {\n    'use strict';\n    return true;\n  };\n  Rule.prototype.gather = function(context) {\n    'use strict';\n    var elements = axe.utils.select(this.selector, context);\n    if (this.excludeHidden) {\n      return elements.filter(function(element) {\n        return !axe.utils.isHidden(element.actualNode);\n      });\n    }\n    return elements;\n  };\n  Rule.prototype.runChecks = function(type, node, options, context, resolve, reject) {\n    'use strict';\n    var self = this;\n    var checkQueue = axe.utils.queue();\n    this[type].forEach(function(c) {\n      var check = self._audit.checks[c.id || c];\n      var option = axe.utils.getCheckOption(check, self.id, options);\n      checkQueue.defer(function(res, rej) {\n        check.run(node, option, context, res, rej);\n      });\n    });\n    checkQueue.then(function(results) {\n      results = results.filter(function(check) {\n        return check;\n      });\n      resolve({\n        type: type,\n        results: results\n      });\n    }).catch(reject);\n  };\n  Rule.prototype.run = function(context, options, resolve, reject) {\n    var _this = this;\n    var q = axe.utils.queue();\n    var ruleResult = new RuleResult(this);\n    var markStart = 'mark_rule_start_' + this.id;\n    var markEnd = 'mark_rule_end_' + this.id;\n    var markChecksStart = 'mark_runchecks_start_' + this.id;\n    var markChecksEnd = 'mark_runchecks_end_' + this.id;\n    var nodes = void 0;\n    try {\n      nodes = this.gather(context).filter(function(node) {\n        return _this.matches(node.actualNode, node, context);\n      });\n    } catch (error) {\n      reject(new SupportError({\n        cause: error,\n        ruleId: this.id\n      }));\n      return;\n    }\n    if (options.performanceTimer) {\n      axe.log('gather (', nodes.length, '):', axe.utils.performanceTimer.timeElapsed() + 'ms');\n      axe.utils.performanceTimer.mark(markChecksStart);\n    }\n    nodes.forEach(function(node) {\n      q.defer(function(resolveNode, rejectNode) {\n        var checkQueue = axe.utils.queue();\n        [ 'any', 'all', 'none' ].forEach(function(type) {\n          checkQueue.defer(function(res, rej) {\n            _this.runChecks(type, node, options, context, res, rej);\n          });\n        });\n        checkQueue.then(function(results) {\n          if (results.length) {\n            var hasResults = false, result = {};\n            results.forEach(function(r) {\n              var res = r.results.filter(function(result) {\n                return result;\n              });\n              result[r.type] = res;\n              if (res.length) {\n                hasResults = true;\n              }\n            });\n            if (hasResults) {\n              result.node = new axe.utils.DqElement(node.actualNode, options);\n              ruleResult.nodes.push(result);\n            }\n          }\n          resolveNode();\n        }).catch(function(err) {\n          return rejectNode(err);\n        });\n      });\n    });\n    q.defer(function(resolve) {\n      return setTimeout(resolve, 0);\n    });\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.mark(markChecksEnd);\n      axe.utils.performanceTimer.mark(markEnd);\n      axe.utils.performanceTimer.measure('runchecks_' + this.id, markChecksStart, markChecksEnd);\n      axe.utils.performanceTimer.measure('rule_' + this.id, markStart, markEnd);\n    }\n    q.then(function() {\n      return resolve(ruleResult);\n    }).catch(function(error) {\n      return reject(error);\n    });\n  };\n  function findAfterChecks(rule) {\n    'use strict';\n    return axe.utils.getAllChecks(rule).map(function(c) {\n      var check = rule._audit.checks[c.id || c];\n      return check && typeof check.after === 'function' ? check : null;\n    }).filter(Boolean);\n  }\n  function findCheckResults(nodes, checkID) {\n    'use strict';\n    var checkResults = [];\n    nodes.forEach(function(nodeResult) {\n      var checks = axe.utils.getAllChecks(nodeResult);\n      checks.forEach(function(checkResult) {\n        if (checkResult.id === checkID) {\n          checkResults.push(checkResult);\n        }\n      });\n    });\n    return checkResults;\n  }\n  function filterChecks(checks) {\n    'use strict';\n    return checks.filter(function(check) {\n      return check.filtered !== true;\n    });\n  }\n  function sanitizeNodes(result) {\n    'use strict';\n    var checkTypes = [ 'any', 'all', 'none' ];\n    var nodes = result.nodes.filter(function(detail) {\n      var length = 0;\n      checkTypes.forEach(function(type) {\n        detail[type] = filterChecks(detail[type]);\n        length += detail[type].length;\n      });\n      return length > 0;\n    });\n    if (result.pageLevel && nodes.length) {\n      nodes = [ nodes.reduce(function(a, b) {\n        if (a) {\n          checkTypes.forEach(function(type) {\n            a[type].push.apply(a[type], b[type]);\n          });\n          return a;\n        }\n      }) ];\n    }\n    return nodes;\n  }\n  Rule.prototype.after = function(result, options) {\n    'use strict';\n    var afterChecks = findAfterChecks(this);\n    var ruleID = this.id;\n    afterChecks.forEach(function(check) {\n      var beforeResults = findCheckResults(result.nodes, check.id);\n      var option = axe.utils.getCheckOption(check, ruleID, options);\n      var afterResults = check.after(beforeResults, option);\n      beforeResults.forEach(function(item) {\n        if (afterResults.indexOf(item) === -1) {\n          item.filtered = true;\n        }\n      });\n    });\n    result.nodes = sanitizeNodes(result);\n    return result;\n  };\n  Rule.prototype.configure = function(spec) {\n    'use strict';\n    if (spec.hasOwnProperty('selector')) {\n      this.selector = spec.selector;\n    }\n    if (spec.hasOwnProperty('excludeHidden')) {\n      this.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n    }\n    if (spec.hasOwnProperty('enabled')) {\n      this.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n    }\n    if (spec.hasOwnProperty('pageLevel')) {\n      this.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n    }\n    if (spec.hasOwnProperty('any')) {\n      this.any = spec.any;\n    }\n    if (spec.hasOwnProperty('all')) {\n      this.all = spec.all;\n    }\n    if (spec.hasOwnProperty('none')) {\n      this.none = spec.none;\n    }\n    if (spec.hasOwnProperty('tags')) {\n      this.tags = spec.tags;\n    }\n    if (spec.hasOwnProperty('matches')) {\n      if (typeof spec.matches === 'string') {\n        this.matches = new Function('return ' + spec.matches + ';')();\n      } else {\n        this.matches = spec.matches;\n      }\n    }\n  };\n  'use strict';\n  (function(axe) {\n    var definitions = [ {\n      name: 'NA',\n      value: 'inapplicable',\n      priority: 0,\n      group: 'inapplicable'\n    }, {\n      name: 'PASS',\n      value: 'passed',\n      priority: 1,\n      group: 'passes'\n    }, {\n      name: 'CANTTELL',\n      value: 'cantTell',\n      priority: 2,\n      group: 'incomplete'\n    }, {\n      name: 'FAIL',\n      value: 'failed',\n      priority: 3,\n      group: 'violations'\n    } ];\n    var constants = {\n      helpUrlBase: 'https://dequeuniversity.com/rules/',\n      results: [],\n      resultGroups: [],\n      resultGroupMap: {},\n      impact: Object.freeze([ 'minor', 'moderate', 'serious', 'critical' ]),\n      preloadAssets: Object.freeze([ 'cssom' ]),\n      preloadAssetsTimeout: 1e4\n    };\n    definitions.forEach(function(definition) {\n      var name = definition.name;\n      var value = definition.value;\n      var priority = definition.priority;\n      var group = definition.group;\n      constants[name] = value;\n      constants[name + '_PRIO'] = priority;\n      constants[name + '_GROUP'] = group;\n      constants.results[priority] = value;\n      constants.resultGroups[priority] = group;\n      constants.resultGroupMap[value] = group;\n    });\n    Object.freeze(constants.results);\n    Object.freeze(constants.resultGroups);\n    Object.freeze(constants.resultGroupMap);\n    Object.freeze(constants);\n    Object.defineProperty(axe, 'constants', {\n      value: constants,\n      enumerable: true,\n      configurable: false,\n      writable: false\n    });\n  })(axe);\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.log = function() {\n    'use strict';\n    if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object' && console.log) {\n      Function.prototype.apply.call(console.log, console, arguments);\n    }\n  };\n  'use strict';\n  function cleanupPlugins(resolve, reject) {\n    'use strict';\n    resolve = resolve || function() {};\n    reject = reject || axe.log;\n    if (!axe._audit) {\n      throw new Error('No audit configured');\n    }\n    var q = axe.utils.queue();\n    var cleanupErrors = [];\n    Object.keys(axe.plugins).forEach(function(key) {\n      q.defer(function(res) {\n        var rej = function rej(err) {\n          cleanupErrors.push(err);\n          res();\n        };\n        try {\n          axe.plugins[key].cleanup(res, rej);\n        } catch (err) {\n          rej(err);\n        }\n      });\n    });\n    var flattenedTree = axe.utils.getFlattenedTree(document.body);\n    axe.utils.querySelectorAll(flattenedTree, 'iframe, frame').forEach(function(node) {\n      q.defer(function(res, rej) {\n        return axe.utils.sendCommandToFrame(node.actualNode, {\n          command: 'cleanup-plugin'\n        }, res, rej);\n      });\n    });\n    q.then(function(results) {\n      if (cleanupErrors.length === 0) {\n        resolve(results);\n      } else {\n        reject(cleanupErrors);\n      }\n    }).catch(reject);\n  }\n  axe.cleanup = cleanupPlugins;\n  'use strict';\n  function configureChecksRulesAndBranding(spec) {\n    'use strict';\n    var audit;\n    audit = axe._audit;\n    if (!audit) {\n      throw new Error('No audit configured');\n    }\n    if (spec.reporter && (typeof spec.reporter === 'function' || reporters[spec.reporter])) {\n      audit.reporter = spec.reporter;\n    }\n    if (spec.checks) {\n      spec.checks.forEach(function(check) {\n        audit.addCheck(check);\n      });\n    }\n    var modifiedRules = [];\n    if (spec.rules) {\n      spec.rules.forEach(function(rule) {\n        modifiedRules.push(rule.id);\n        audit.addRule(rule);\n      });\n    }\n    if (spec.disableOtherRules) {\n      audit.rules.forEach(function(rule) {\n        if (modifiedRules.includes(rule.id) === false) {\n          rule.enabled = false;\n        }\n      });\n    }\n    if (typeof spec.branding !== 'undefined') {\n      audit.setBranding(spec.branding);\n    } else {\n      audit._constructHelpUrls();\n    }\n    if (spec.tagExclude) {\n      audit.tagExclude = spec.tagExclude;\n    }\n    if (spec.locale) {\n      audit.applyLocale(spec.locale);\n    }\n  }\n  axe.configure = configureChecksRulesAndBranding;\n  'use strict';\n  axe.getRules = function(tags) {\n    'use strict';\n    tags = tags || [];\n    var matchingRules = !tags.length ? axe._audit.rules : axe._audit.rules.filter(function(item) {\n      return !!tags.filter(function(tag) {\n        return item.tags.indexOf(tag) !== -1;\n      }).length;\n    });\n    var ruleData = axe._audit.data.rules || {};\n    return matchingRules.map(function(matchingRule) {\n      var rd = ruleData[matchingRule.id] || {};\n      return {\n        ruleId: matchingRule.id,\n        description: rd.description,\n        help: rd.help,\n        helpUrl: rd.helpUrl,\n        tags: matchingRule.tags\n      };\n    });\n  };\n  'use strict';\n  function runCommand(data, keepalive, callback) {\n    'use strict';\n    var resolve = callback;\n    var reject = function reject(err) {\n      if (err instanceof Error === false) {\n        err = new Error(err);\n      }\n      callback(err);\n    };\n    var context = data && data.context || {};\n    if (context.hasOwnProperty('include') && !context.include.length) {\n      context.include = [ document ];\n    }\n    var options = data && data.options || {};\n    switch (data.command) {\n     case 'rules':\n      return runRules(context, options, function(results, cleanup) {\n        resolve(results);\n        cleanup();\n      }, reject);\n\n     case 'cleanup-plugin':\n      return cleanupPlugins(resolve, reject);\n\n     default:\n      if (axe._audit && axe._audit.commands && axe._audit.commands[data.command]) {\n        return axe._audit.commands[data.command](data, callback);\n      }\n    }\n  }\n  axe._load = function(audit) {\n    'use strict';\n    axe.utils.respondable.subscribe('axe.ping', function(data, keepalive, respond) {\n      respond({\n        axe: true\n      });\n    });\n    axe.utils.respondable.subscribe('axe.start', runCommand);\n    axe._audit = new Audit(audit);\n  };\n  'use strict';\n  var axe = axe || {};\n  axe.plugins = {};\n  function Plugin(spec) {\n    'use strict';\n    this._run = spec.run;\n    this._collect = spec.collect;\n    this._registry = {};\n    spec.commands.forEach(function(command) {\n      axe._audit.registerCommand(command);\n    });\n  }\n  Plugin.prototype.run = function() {\n    'use strict';\n    return this._run.apply(this, arguments);\n  };\n  Plugin.prototype.collect = function() {\n    'use strict';\n    return this._collect.apply(this, arguments);\n  };\n  Plugin.prototype.cleanup = function(done) {\n    'use strict';\n    var q = axe.utils.queue();\n    var that = this;\n    Object.keys(this._registry).forEach(function(key) {\n      q.defer(function(done) {\n        that._registry[key].cleanup(done);\n      });\n    });\n    q.then(function() {\n      done();\n    });\n  };\n  Plugin.prototype.add = function(impl) {\n    'use strict';\n    this._registry[impl.id] = impl;\n  };\n  axe.registerPlugin = function(plugin) {\n    'use strict';\n    axe.plugins[plugin.id] = new Plugin(plugin);\n  };\n  'use strict';\n  var reporters = {};\n  var defaultReporter;\n  axe.getReporter = function(reporter) {\n    'use strict';\n    if (typeof reporter === 'string' && reporters[reporter]) {\n      return reporters[reporter];\n    }\n    if (typeof reporter === 'function') {\n      return reporter;\n    }\n    return defaultReporter;\n  };\n  axe.addReporter = function registerReporter(name, cb, isDefault) {\n    'use strict';\n    reporters[name] = cb;\n    if (isDefault) {\n      defaultReporter = cb;\n    }\n  };\n  'use strict';\n  function resetConfiguration() {\n    'use strict';\n    var audit = axe._audit;\n    if (!audit) {\n      throw new Error('No audit configured');\n    }\n    audit.resetRulesAndChecks();\n  }\n  axe.reset = resetConfiguration;\n  'use strict';\n  function cleanup() {\n    axe._tree = undefined;\n    axe._selectorData = undefined;\n  }\n  function runRules(context, options, resolve, reject) {\n    'use strict';\n    try {\n      context = new Context(context);\n      axe._tree = context.flatTree;\n      axe._selectorData = axe.utils.getSelectorData(context.flatTree);\n    } catch (e) {\n      cleanup();\n      return reject(e);\n    }\n    var q = axe.utils.queue();\n    var audit = axe._audit;\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.auditStart();\n    }\n    if (context.frames.length && options.iframes !== false) {\n      q.defer(function(res, rej) {\n        axe.utils.collectResultsFromFrames(context, options, 'rules', null, res, rej);\n      });\n    }\n    var scrollState = void 0;\n    q.defer(function(res, rej) {\n      if (options.restoreScroll) {\n        scrollState = axe.utils.getScrollState();\n      }\n      audit.run(context, options, res, rej);\n    });\n    q.then(function(data) {\n      try {\n        if (scrollState) {\n          axe.utils.setScrollState(scrollState);\n        }\n        if (options.performanceTimer) {\n          axe.utils.performanceTimer.auditEnd();\n        }\n        var results = axe.utils.mergeResults(data.map(function(results) {\n          return {\n            results: results\n          };\n        }));\n        if (context.initiator) {\n          results = audit.after(results, options);\n          results.forEach(axe.utils.publishMetaData);\n          results = results.map(axe.utils.finalizeRuleResult);\n        }\n        try {\n          resolve(results, cleanup);\n        } catch (e) {\n          cleanup();\n          axe.log(e);\n        }\n      } catch (e) {\n        cleanup();\n        reject(e);\n      }\n    }).catch(function(e) {\n      cleanup();\n      reject(e);\n    });\n  }\n  axe._runRules = runRules;\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function isContext(potential) {\n    'use strict';\n    switch (true) {\n     case typeof potential === 'string':\n     case Array.isArray(potential):\n     case Node && potential instanceof Node:\n     case NodeList && potential instanceof NodeList:\n      return true;\n\n     case (typeof potential === 'undefined' ? 'undefined' : _typeof(potential)) !== 'object':\n      return false;\n\n     case potential.include !== undefined:\n     case potential.exclude !== undefined:\n     case typeof potential.length === 'number':\n      return true;\n\n     default:\n      return false;\n    }\n  }\n  var noop = function noop() {};\n  function normalizeRunParams(context, options, callback) {\n    'use strict';\n    var typeErr = new TypeError('axe.run arguments are invalid');\n    if (!isContext(context)) {\n      if (callback !== undefined) {\n        throw typeErr;\n      }\n      callback = options;\n      options = context;\n      context = document;\n    }\n    if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n      if (callback !== undefined) {\n        throw typeErr;\n      }\n      callback = options;\n      options = {};\n    }\n    if (typeof callback !== 'function' && callback !== undefined) {\n      throw typeErr;\n    }\n    return {\n      context: context,\n      options: options,\n      callback: callback || noop\n    };\n  }\n  axe.run = function(context, options, callback) {\n    'use strict';\n    if (!axe._audit) {\n      throw new Error('No audit configured');\n    }\n    var args = normalizeRunParams(context, options, callback);\n    context = args.context;\n    options = args.options;\n    callback = args.callback;\n    options.reporter = options.reporter || axe._audit.reporter || 'v1';\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.start();\n    }\n    var p = void 0;\n    var reject = noop;\n    var resolve = noop;\n    if (typeof Promise === 'function' && callback === noop) {\n      p = new Promise(function(_resolve, _reject) {\n        reject = _reject;\n        resolve = _resolve;\n      });\n    }\n    axe._runRules(context, options, function(rawResults, cleanup) {\n      var respond = function respond(results) {\n        cleanup();\n        try {\n          callback(null, results);\n        } catch (e) {\n          axe.log(e);\n        }\n        resolve(results);\n      };\n      if (options.performanceTimer) {\n        axe.utils.performanceTimer.end();\n      }\n      try {\n        var reporter = axe.getReporter(options.reporter);\n        var results = reporter(rawResults, options, respond);\n        if (results !== undefined) {\n          respond(results);\n        }\n      } catch (err) {\n        cleanup();\n        callback(err);\n        reject(err);\n      }\n    }, function(err) {\n      callback(err);\n      reject(err);\n    });\n    return p;\n  };\n  'use strict';\n  helpers.failureSummary = function failureSummary(nodeData) {\n    'use strict';\n    var failingChecks = {};\n    failingChecks.none = nodeData.none.concat(nodeData.all);\n    failingChecks.any = nodeData.any;\n    return Object.keys(failingChecks).map(function(key) {\n      if (!failingChecks[key].length) {\n        return;\n      }\n      var sum = axe._audit.data.failureSummaries[key];\n      if (sum && typeof sum.failureMessage === 'function') {\n        return sum.failureMessage(failingChecks[key].map(function(check) {\n          return check.message || '';\n        }));\n      }\n    }).filter(function(i) {\n      return i !== undefined;\n    }).join('\\n\\n');\n  };\n  'use strict';\n  helpers.getEnvironmentData = function getEnvironmentData() {\n    var win = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n    var _win$screen = win.screen, screen = _win$screen === undefined ? {} : _win$screen, _win$navigator = win.navigator, navigator = _win$navigator === undefined ? {} : _win$navigator, _win$location = win.location, location = _win$location === undefined ? {} : _win$location, innerHeight = win.innerHeight, innerWidth = win.innerWidth;\n    var orientation = screen.msOrientation || screen.orientation || screen.mozOrientation || {};\n    return {\n      testEngine: {\n        name: 'axe-core',\n        version: axe.version\n      },\n      testRunner: {\n        name: axe._audit.brand\n      },\n      testEnvironment: {\n        userAgent: navigator.userAgent,\n        windowWidth: innerWidth,\n        windowHeight: innerHeight,\n        orientationAngle: orientation.angle,\n        orientationType: orientation.type\n      },\n      timestamp: new Date().toISOString(),\n      url: location.href\n    };\n  };\n  'use strict';\n  helpers.incompleteFallbackMessage = function incompleteFallbackMessage() {\n    'use strict';\n    return axe._audit.data.incompleteFallbackMessage();\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function normalizeRelatedNodes(node, options) {\n    'use strict';\n    [ 'any', 'all', 'none' ].forEach(function(type) {\n      if (!Array.isArray(node[type])) {\n        return;\n      }\n      node[type].filter(function(checkRes) {\n        return Array.isArray(checkRes.relatedNodes);\n      }).forEach(function(checkRes) {\n        checkRes.relatedNodes = checkRes.relatedNodes.map(function(relatedNode) {\n          var res = {\n            html: relatedNode.source\n          };\n          if (options.elementRef && !relatedNode.fromFrame) {\n            res.element = relatedNode.element;\n          }\n          if (options.selectors !== false || relatedNode.fromFrame) {\n            res.target = relatedNode.selector;\n          }\n          if (options.xpath) {\n            res.xpath = relatedNode.xpath;\n          }\n          return res;\n        });\n      });\n    });\n  }\n  var resultKeys = axe.constants.resultGroups;\n  helpers.processAggregate = function(results, options) {\n    var resultObject = axe.utils.aggregateResult(results);\n    resultKeys.forEach(function(key) {\n      if (options.resultTypes && !options.resultTypes.includes(key)) {\n        (resultObject[key] || []).forEach(function(ruleResult) {\n          if (Array.isArray(ruleResult.nodes) && ruleResult.nodes.length > 0) {\n            ruleResult.nodes = [ ruleResult.nodes[0] ];\n          }\n        });\n      }\n      resultObject[key] = (resultObject[key] || []).map(function(ruleResult) {\n        ruleResult = Object.assign({}, ruleResult);\n        if (Array.isArray(ruleResult.nodes) && ruleResult.nodes.length > 0) {\n          ruleResult.nodes = ruleResult.nodes.map(function(subResult) {\n            if (_typeof(subResult.node) === 'object') {\n              subResult.html = subResult.node.source;\n              if (options.elementRef && !subResult.node.fromFrame) {\n                subResult.element = subResult.node.element;\n              }\n              if (options.selectors !== false || subResult.node.fromFrame) {\n                subResult.target = subResult.node.selector;\n              }\n              if (options.xpath) {\n                subResult.xpath = subResult.node.xpath;\n              }\n            }\n            delete subResult.result;\n            delete subResult.node;\n            normalizeRelatedNodes(subResult, options);\n            return subResult;\n          });\n        }\n        resultKeys.forEach(function(key) {\n          return delete ruleResult[key];\n        });\n        delete ruleResult.pageLevel;\n        delete ruleResult.result;\n        return ruleResult;\n      });\n    });\n    return resultObject;\n  };\n  'use strict';\n  var _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  axe.addReporter('na', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    callback(_extends({}, helpers.getEnvironmentData(), {\n      toolOptions: options,\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable\n    }));\n  });\n  'use strict';\n  var _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  axe.addReporter('no-passes', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    options.resultTypes = [ 'violations' ];\n    var out = helpers.processAggregate(results, options);\n    callback(_extends({}, helpers.getEnvironmentData(), {\n      toolOptions: options,\n      violations: out.violations\n    }));\n  });\n  'use strict';\n  axe.addReporter('raw', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    callback(results);\n  });\n  'use strict';\n  var _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  axe.addReporter('v1', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    out.violations.forEach(function(result) {\n      return result.nodes.forEach(function(nodeResult) {\n        nodeResult.failureSummary = helpers.failureSummary(nodeResult);\n      });\n    });\n    callback(_extends({}, helpers.getEnvironmentData(), {\n      toolOptions: options,\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable\n    }));\n  });\n  'use strict';\n  var _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  axe.addReporter('v2', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    callback(_extends({}, helpers.getEnvironmentData(), {\n      toolOptions: options,\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable\n    }));\n  }, true);\n  'use strict';\n  axe.utils.aggregate = function(map, values, initial) {\n    values = values.slice();\n    if (initial) {\n      values.push(initial);\n    }\n    var sorting = values.map(function(val) {\n      return map.indexOf(val);\n    }).sort();\n    return map[sorting.pop()];\n  };\n  'use strict';\n  var _axe$constants = axe.constants, CANTTELL_PRIO = _axe$constants.CANTTELL_PRIO, FAIL_PRIO = _axe$constants.FAIL_PRIO;\n  var checkMap = [];\n  checkMap[axe.constants.PASS_PRIO] = true;\n  checkMap[axe.constants.CANTTELL_PRIO] = null;\n  checkMap[axe.constants.FAIL_PRIO] = false;\n  var checkTypes = [ 'any', 'all', 'none' ];\n  function anyAllNone(obj, functor) {\n    return checkTypes.reduce(function(out, type) {\n      out[type] = (obj[type] || []).map(function(val) {\n        return functor(val, type);\n      });\n      return out;\n    }, {});\n  }\n  axe.utils.aggregateChecks = function(nodeResOriginal) {\n    var nodeResult = Object.assign({}, nodeResOriginal);\n    anyAllNone(nodeResult, function(check, type) {\n      var i = typeof check.result === 'undefined' ? -1 : checkMap.indexOf(check.result);\n      check.priority = i !== -1 ? i : axe.constants.CANTTELL_PRIO;\n      if (type === 'none') {\n        if (check.priority === axe.constants.PASS_PRIO) {\n          check.priority = axe.constants.FAIL_PRIO;\n        } else if (check.priority === axe.constants.FAIL_PRIO) {\n          check.priority = axe.constants.PASS_PRIO;\n        }\n      }\n    });\n    var priorities = {\n      all: nodeResult.all.reduce(function(a, b) {\n        return Math.max(a, b.priority);\n      }, 0),\n      none: nodeResult.none.reduce(function(a, b) {\n        return Math.max(a, b.priority);\n      }, 0),\n      any: nodeResult.any.reduce(function(a, b) {\n        return Math.min(a, b.priority);\n      }, 4) % 4\n    };\n    nodeResult.priority = Math.max(priorities.all, priorities.none, priorities.any);\n    var impacts = [];\n    checkTypes.forEach(function(type) {\n      nodeResult[type] = nodeResult[type].filter(function(check) {\n        return check.priority === nodeResult.priority && check.priority === priorities[type];\n      });\n      nodeResult[type].forEach(function(check) {\n        return impacts.push(check.impact);\n      });\n    });\n    if ([ CANTTELL_PRIO, FAIL_PRIO ].includes(nodeResult.priority)) {\n      nodeResult.impact = axe.utils.aggregate(axe.constants.impact, impacts);\n    } else {\n      nodeResult.impact = null;\n    }\n    anyAllNone(nodeResult, function(c) {\n      delete c.result;\n      delete c.priority;\n    });\n    nodeResult.result = axe.constants.results[nodeResult.priority];\n    delete nodeResult.priority;\n    return nodeResult;\n  };\n  'use strict';\n  (function() {\n    axe.utils.aggregateNodeResults = function(nodeResults) {\n      var ruleResult = {};\n      nodeResults = nodeResults.map(function(nodeResult) {\n        if (nodeResult.any && nodeResult.all && nodeResult.none) {\n          return axe.utils.aggregateChecks(nodeResult);\n        } else if (Array.isArray(nodeResult.node)) {\n          return axe.utils.finalizeRuleResult(nodeResult);\n        } else {\n          throw new TypeError('Invalid Result type');\n        }\n      });\n      if (nodeResults && nodeResults.length) {\n        var resultList = nodeResults.map(function(node) {\n          return node.result;\n        });\n        ruleResult.result = axe.utils.aggregate(axe.constants.results, resultList, ruleResult.result);\n      } else {\n        ruleResult.result = 'inapplicable';\n      }\n      axe.constants.resultGroups.forEach(function(group) {\n        return ruleResult[group] = [];\n      });\n      nodeResults.forEach(function(nodeResult) {\n        var groupName = axe.constants.resultGroupMap[nodeResult.result];\n        ruleResult[groupName].push(nodeResult);\n      });\n      var impactGroup = axe.constants.FAIL_GROUP;\n      if (ruleResult[impactGroup].length === 0) {\n        impactGroup = axe.constants.CANTTELL_GROUP;\n      }\n      if (ruleResult[impactGroup].length > 0) {\n        var impactList = ruleResult[impactGroup].map(function(failure) {\n          return failure.impact;\n        });\n        ruleResult.impact = axe.utils.aggregate(axe.constants.impact, impactList) || null;\n      } else {\n        ruleResult.impact = null;\n      }\n      return ruleResult;\n    };\n  })();\n  'use strict';\n  function copyToGroup(resultObject, subResult, group) {\n    var resultCopy = Object.assign({}, subResult);\n    resultCopy.nodes = (resultCopy[group] || []).concat();\n    axe.constants.resultGroups.forEach(function(group) {\n      delete resultCopy[group];\n    });\n    resultObject[group].push(resultCopy);\n  }\n  axe.utils.aggregateResult = function(results) {\n    var resultObject = {};\n    axe.constants.resultGroups.forEach(function(groupName) {\n      return resultObject[groupName] = [];\n    });\n    results.forEach(function(subResult) {\n      if (subResult.error) {\n        copyToGroup(resultObject, subResult, axe.constants.CANTTELL_GROUP);\n      } else if (subResult.result === axe.constants.NA) {\n        copyToGroup(resultObject, subResult, axe.constants.NA_GROUP);\n      } else {\n        axe.constants.resultGroups.forEach(function(group) {\n          if (Array.isArray(subResult[group]) && subResult[group].length > 0) {\n            copyToGroup(resultObject, subResult, group);\n          }\n        });\n      }\n    });\n    return resultObject;\n  };\n  'use strict';\n  function areStylesSet(el, styles, stopAt) {\n    'use strict';\n    var styl = window.getComputedStyle(el, null);\n    var set = false;\n    if (!styl) {\n      return false;\n    }\n    styles.forEach(function(att) {\n      if (styl.getPropertyValue(att.property) === att.value) {\n        set = true;\n      }\n    });\n    if (set) {\n      return true;\n    }\n    if (el.nodeName.toUpperCase() === stopAt.toUpperCase() || !el.parentNode) {\n      return false;\n    }\n    return areStylesSet(el.parentNode, styles, stopAt);\n  }\n  axe.utils.areStylesSet = areStylesSet;\n  'use strict';\n  axe.utils.checkHelper = function checkHelper(checkResult, options, resolve, reject) {\n    'use strict';\n    return {\n      isAsync: false,\n      async: function async() {\n        this.isAsync = true;\n        return function(result) {\n          if (result instanceof Error === false) {\n            checkResult.result = result;\n            resolve(checkResult);\n          } else {\n            reject(result);\n          }\n        };\n      },\n      data: function data(_data) {\n        checkResult.data = _data;\n      },\n      relatedNodes: function relatedNodes(nodes) {\n        nodes = nodes instanceof Node ? [ nodes ] : axe.utils.toArray(nodes);\n        checkResult.relatedNodes = nodes.map(function(element) {\n          return new axe.utils.DqElement(element, options);\n        });\n      }\n    };\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.utils.clone = function(obj) {\n    'use strict';\n    var index, length, out = obj;\n    if (obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n      if (Array.isArray(obj)) {\n        out = [];\n        for (index = 0, length = obj.length; index < length; index++) {\n          out[index] = axe.utils.clone(obj[index]);\n        }\n      } else {\n        out = {};\n        for (index in obj) {\n          out[index] = axe.utils.clone(obj[index]);\n        }\n      }\n    }\n    return out;\n  };\n  'use strict';\n  function err(message, node) {\n    'use strict';\n    var selector;\n    if (axe._tree) {\n      selector = axe.utils.getSelector(node);\n    }\n    return new Error(message + ': ' + (selector || node));\n  }\n  axe.utils.sendCommandToFrame = function(node, parameters, resolve, reject) {\n    'use strict';\n    var win = node.contentWindow;\n    if (!win) {\n      axe.log('Frame does not have a content window', node);\n      resolve(null);\n      return;\n    }\n    var timeout = setTimeout(function() {\n      timeout = setTimeout(function() {\n        if (!parameters.debug) {\n          resolve(null);\n        } else {\n          reject(err('No response from frame', node));\n        }\n      }, 0);\n    }, 500);\n    axe.utils.respondable(win, 'axe.ping', null, undefined, function() {\n      clearTimeout(timeout);\n      var frameWaitTime = parameters.options && parameters.options.frameWaitTime || 6e4;\n      timeout = setTimeout(function() {\n        reject(err('Axe in frame timed out', node));\n      }, frameWaitTime);\n      axe.utils.respondable(win, 'axe.start', parameters, undefined, function(data) {\n        clearTimeout(timeout);\n        if (data instanceof Error === false) {\n          resolve(data);\n        } else {\n          reject(data);\n        }\n      });\n    });\n  };\n  function collectResultsFromFrames(context, options, command, parameter, resolve, reject) {\n    'use strict';\n    var q = axe.utils.queue();\n    var frames = context.frames;\n    frames.forEach(function(frame) {\n      var params = {\n        options: options,\n        command: command,\n        parameter: parameter,\n        context: {\n          initiator: false,\n          page: context.page,\n          include: frame.include || [],\n          exclude: frame.exclude || []\n        }\n      };\n      q.defer(function(res, rej) {\n        var node = frame.node;\n        axe.utils.sendCommandToFrame(node, params, function(data) {\n          if (data) {\n            return res({\n              results: data,\n              frameElement: node,\n              frame: axe.utils.getSelector(node)\n            });\n          }\n          res(null);\n        }, rej);\n      });\n    });\n    q.then(function(data) {\n      resolve(axe.utils.mergeResults(data, options));\n    }).catch(reject);\n  }\n  axe.utils.collectResultsFromFrames = collectResultsFromFrames;\n  'use strict';\n  axe.utils.contains = function(node, otherNode) {\n    'use strict';\n    function containsShadowChild(node, otherNode) {\n      if (node.shadowId === otherNode.shadowId) {\n        return true;\n      }\n      return !!node.children.find(function(child) {\n        return containsShadowChild(child, otherNode);\n      });\n    }\n    if (node.shadowId || otherNode.shadowId) {\n      return containsShadowChild(node, otherNode);\n    }\n    if (typeof node.actualNode.contains === 'function') {\n      return node.actualNode.contains(otherNode.actualNode);\n    }\n    return !!(node.actualNode.compareDocumentPosition(otherNode.actualNode) & 16);\n  };\n  'use strict';\n  (function(axe) {\n    var parser = new axe.imports.CssSelectorParser();\n    parser.registerNestingOperators('>');\n    axe.utils.cssParser = parser;\n  })(axe);\n  'use strict';\n  function truncate(str, maxLength) {\n    maxLength = maxLength || 300;\n    if (str.length > maxLength) {\n      var index = str.indexOf('>');\n      str = str.substring(0, index + 1);\n    }\n    return str;\n  }\n  function getSource(element) {\n    var source = element.outerHTML;\n    if (!source && typeof XMLSerializer === 'function') {\n      source = new XMLSerializer().serializeToString(element);\n    }\n    return truncate(source || '');\n  }\n  function DqElement(element, options, spec) {\n    this._fromFrame = !!spec;\n    this.spec = spec || {};\n    if (options && options.absolutePaths) {\n      this._options = {\n        toRoot: true\n      };\n    }\n    this.source = this.spec.source !== undefined ? this.spec.source : getSource(element);\n    this._element = element;\n  }\n  DqElement.prototype = {\n    get selector() {\n      return this.spec.selector || [ axe.utils.getSelector(this.element, this._options) ];\n    },\n    get xpath() {\n      return this.spec.xpath || [ axe.utils.getXpath(this.element) ];\n    },\n    get element() {\n      return this._element;\n    },\n    get fromFrame() {\n      return this._fromFrame;\n    },\n    toJSON: function toJSON() {\n      'use strict';\n      return {\n        selector: this.selector,\n        source: this.source,\n        xpath: this.xpath\n      };\n    }\n  };\n  DqElement.fromFrame = function(node, options, frame) {\n    node.selector.unshift(frame.selector);\n    node.xpath.unshift(frame.xpath);\n    return new axe.utils.DqElement(frame.element, options, node);\n  };\n  axe.utils.DqElement = DqElement;\n  'use strict';\n  axe.utils.matchesSelector = function() {\n    'use strict';\n    var method;\n    function getMethod(node) {\n      var index, candidate, candidates = [ 'matches', 'matchesSelector', 'mozMatchesSelector', 'webkitMatchesSelector', 'msMatchesSelector' ], length = candidates.length;\n      for (index = 0; index < length; index++) {\n        candidate = candidates[index];\n        if (node[candidate]) {\n          return candidate;\n        }\n      }\n    }\n    return function(node, selector) {\n      if (!method || !node[method]) {\n        method = getMethod(node);\n      }\n      return node[method](selector);\n    };\n  }();\n  'use strict';\n  axe.utils.escapeSelector = function(value) {\n    'use strict';\n    var string = String(value);\n    var length = string.length;\n    var index = -1;\n    var codeUnit;\n    var result = '';\n    var firstCodeUnit = string.charCodeAt(0);\n    while (++index < length) {\n      codeUnit = string.charCodeAt(index);\n      if (codeUnit == 0) {\n        result += '�';\n        continue;\n      }\n      if (codeUnit >= 1 && codeUnit <= 31 || codeUnit == 127 || index == 0 && codeUnit >= 48 && codeUnit <= 57 || index == 1 && codeUnit >= 48 && codeUnit <= 57 && firstCodeUnit == 45) {\n        result += '\\\\' + codeUnit.toString(16) + ' ';\n        continue;\n      }\n      if (index == 0 && length == 1 && codeUnit == 45) {\n        result += '\\\\' + string.charAt(index);\n        continue;\n      }\n      if (codeUnit >= 128 || codeUnit == 45 || codeUnit == 95 || codeUnit >= 48 && codeUnit <= 57 || codeUnit >= 65 && codeUnit <= 90 || codeUnit >= 97 && codeUnit <= 122) {\n        result += string.charAt(index);\n        continue;\n      }\n      result += '\\\\' + string.charAt(index);\n    }\n    return result;\n  };\n  'use strict';\n  axe.utils.extendMetaData = function(to, from) {\n    Object.assign(to, from);\n    Object.keys(from).filter(function(prop) {\n      return typeof from[prop] === 'function';\n    }).forEach(function(prop) {\n      to[prop] = null;\n      try {\n        to[prop] = from[prop](to);\n      } catch (e) {}\n    });\n  };\n  'use strict';\n  axe.utils.finalizeRuleResult = function(ruleResult) {\n    Object.assign(ruleResult, axe.utils.aggregateNodeResults(ruleResult.nodes));\n    delete ruleResult.nodes;\n    return ruleResult;\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.utils.findBy = function(array, key, value) {\n    if (Array.isArray(array)) {\n      return array.find(function(obj) {\n        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj[key] === value;\n      });\n    }\n  };\n  'use strict';\n  var axe = axe || {\n    utils: {}\n  };\n  function virtualDOMfromNode(node, shadowId) {\n    var vNodeCache = {};\n    return {\n      shadowId: shadowId,\n      children: [],\n      actualNode: node,\n      get isFocusable() {\n        if (!vNodeCache._isFocusable) {\n          vNodeCache._isFocusable = axe.commons.dom.isFocusable(node);\n        }\n        return vNodeCache._isFocusable;\n      },\n      get tabbableElements() {\n        if (!vNodeCache._tabbableElements) {\n          vNodeCache._tabbableElements = axe.commons.dom.getTabbableElements(this);\n        }\n        return vNodeCache._tabbableElements;\n      }\n    };\n  }\n  function getSlotChildren(node) {\n    var retVal = [];\n    node = node.firstChild;\n    while (node) {\n      retVal.push(node);\n      node = node.nextSibling;\n    }\n    return retVal;\n  }\n  axe.utils.getFlattenedTree = function(node, shadowId) {\n    var retVal, realArray, nodeName;\n    function reduceShadowDOM(res, child) {\n      var replacements = axe.utils.getFlattenedTree(child, shadowId);\n      if (replacements) {\n        res = res.concat(replacements);\n      }\n      return res;\n    }\n    if (node.documentElement) {\n      node = node.documentElement;\n    }\n    nodeName = node.nodeName.toLowerCase();\n    if (axe.utils.isShadowRoot(node)) {\n      retVal = virtualDOMfromNode(node, shadowId);\n      shadowId = 'a' + Math.random().toString().substring(2);\n      realArray = Array.from(node.shadowRoot.childNodes);\n      retVal.children = realArray.reduce(reduceShadowDOM, []);\n      return [ retVal ];\n    } else {\n      if (nodeName === 'content') {\n        realArray = Array.from(node.getDistributedNodes());\n        return realArray.reduce(reduceShadowDOM, []);\n      } else if (nodeName === 'slot' && typeof node.assignedNodes === 'function') {\n        realArray = Array.from(node.assignedNodes());\n        if (!realArray.length) {\n          realArray = getSlotChildren(node);\n        }\n        var styl = window.getComputedStyle(node);\n        if (false && styl.display !== 'contents') {\n          retVal = virtualDOMfromNode(node, shadowId);\n          retVal.children = realArray.reduce(reduceShadowDOM, []);\n          return [ retVal ];\n        } else {\n          return realArray.reduce(reduceShadowDOM, []);\n        }\n      } else {\n        if (node.nodeType === 1) {\n          retVal = virtualDOMfromNode(node, shadowId);\n          realArray = Array.from(node.childNodes);\n          retVal.children = realArray.reduce(reduceShadowDOM, []);\n          return [ retVal ];\n        } else if (node.nodeType === 3) {\n          return [ virtualDOMfromNode(node) ];\n        }\n        return undefined;\n      }\n    }\n  };\n  axe.utils.getNodeFromTree = function(vNode, node) {\n    var found;\n    if (vNode.actualNode === node) {\n      return vNode;\n    }\n    vNode.children.forEach(function(candidate) {\n      if (found) {\n        return;\n      }\n      if (candidate.actualNode === node) {\n        found = candidate;\n      } else {\n        found = axe.utils.getNodeFromTree(candidate, node);\n      }\n    });\n    return found;\n  };\n  'use strict';\n  axe.utils.getAllChecks = function getAllChecks(object) {\n    'use strict';\n    var result = [];\n    return result.concat(object.any || []).concat(object.all || []).concat(object.none || []);\n  };\n  'use strict';\n  axe.utils.getBaseLang = function getBaseLang(lang) {\n    if (!lang) {\n      return '';\n    }\n    return lang.trim().split('-')[0].toLowerCase();\n  };\n  'use strict';\n  axe.utils.getCheckOption = function(check, ruleID, options) {\n    var ruleCheckOption = ((options.rules && options.rules[ruleID] || {}).checks || {})[check.id];\n    var checkOption = (options.checks || {})[check.id];\n    var enabled = check.enabled;\n    var opts = check.options;\n    if (checkOption) {\n      if (checkOption.hasOwnProperty('enabled')) {\n        enabled = checkOption.enabled;\n      }\n      if (checkOption.hasOwnProperty('options')) {\n        opts = checkOption.options;\n      }\n    }\n    if (ruleCheckOption) {\n      if (ruleCheckOption.hasOwnProperty('enabled')) {\n        enabled = ruleCheckOption.enabled;\n      }\n      if (ruleCheckOption.hasOwnProperty('options')) {\n        opts = ruleCheckOption.options;\n      }\n    }\n    return {\n      enabled: enabled,\n      options: opts,\n      absolutePaths: options.absolutePaths\n    };\n  };\n  'use strict';\n  var _slicedToArray = function() {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) {\n            break;\n          }\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i['return']) {\n            _i['return']();\n          }\n        } finally {\n          if (_d) {\n            throw _e;\n          }\n        }\n      }\n      return _arr;\n    }\n    return function(arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError('Invalid attempt to destructure non-iterable instance');\n      }\n    };\n  }();\n  function isMostlyNumbers() {\n    var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return str.length !== 0 && (str.match(/[0-9]/g) || '').length >= str.length / 2;\n  }\n  function splitString(str, splitIndex) {\n    return [ str.substring(0, splitIndex), str.substring(splitIndex) ];\n  }\n  function trimRight(str) {\n    return str.replace(/\\s+$/, '');\n  }\n  function uriParser(url) {\n    var original = url;\n    var protocol = '', domain = '', port = '', path = '', query = '', hash = '';\n    if (url.includes('#')) {\n      var _splitString = splitString(url, url.indexOf('#'));\n      var _splitString2 = _slicedToArray(_splitString, 2);\n      url = _splitString2[0];\n      hash = _splitString2[1];\n    }\n    if (url.includes('?')) {\n      var _splitString3 = splitString(url, url.indexOf('?'));\n      var _splitString4 = _slicedToArray(_splitString3, 2);\n      url = _splitString4[0];\n      query = _splitString4[1];\n    }\n    if (url.includes('://')) {\n      var _url$split = url.split('://');\n      var _url$split2 = _slicedToArray(_url$split, 2);\n      protocol = _url$split2[0];\n      url = _url$split2[1];\n      var _splitString5 = splitString(url, url.indexOf('/'));\n      var _splitString6 = _slicedToArray(_splitString5, 2);\n      domain = _splitString6[0];\n      url = _splitString6[1];\n    } else if (url.substr(0, 2) === '//') {\n      url = url.substr(2);\n      var _splitString7 = splitString(url, url.indexOf('/'));\n      var _splitString8 = _slicedToArray(_splitString7, 2);\n      domain = _splitString8[0];\n      url = _splitString8[1];\n    }\n    if (domain.substr(0, 4) === 'www.') {\n      domain = domain.substr(4);\n    }\n    if (domain && domain.includes(':')) {\n      var _splitString9 = splitString(domain, domain.indexOf(':'));\n      var _splitString10 = _slicedToArray(_splitString9, 2);\n      domain = _splitString10[0];\n      port = _splitString10[1];\n    }\n    path = url;\n    return {\n      original: original,\n      protocol: protocol,\n      domain: domain,\n      port: port,\n      path: path,\n      query: query,\n      hash: hash\n    };\n  }\n  axe.utils.getFriendlyUriEnd = function getFriendlyUriEnd() {\n    var uri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (uri.length <= 1 || uri.substr(0, 5) === 'data:' || uri.substr(0, 11) === 'javascript:' || uri.includes('?')) {\n      return;\n    }\n    var currentDomain = options.currentDomain, _options$maxLength = options.maxLength, maxLength = _options$maxLength === undefined ? 25 : _options$maxLength;\n    var _uriParser = uriParser(uri), path = _uriParser.path, domain = _uriParser.domain, hash = _uriParser.hash;\n    var pathEnd = path.substr(path.substr(0, path.length - 2).lastIndexOf('/') + 1);\n    if (hash) {\n      if (pathEnd && (pathEnd + hash).length <= maxLength) {\n        return trimRight(pathEnd + hash);\n      } else if (pathEnd.length < 2 && hash.length > 2 && hash.length <= maxLength) {\n        return trimRight(hash);\n      } else {\n        return;\n      }\n    } else if (domain && domain.length < maxLength && path.length <= 1) {\n      return trimRight(domain + path);\n    }\n    if (path === '/' + pathEnd && domain && currentDomain && domain !== currentDomain && (domain + path).length <= maxLength) {\n      return trimRight(domain + path);\n    }\n    var lastDotIndex = pathEnd.lastIndexOf('.');\n    if ((lastDotIndex === -1 || lastDotIndex > 1) && (lastDotIndex !== -1 || pathEnd.length > 2) && pathEnd.length <= maxLength && !pathEnd.match(/index(\\.[a-zA-Z]{2-4})?/) && !isMostlyNumbers(pathEnd)) {\n      return trimRight(pathEnd);\n    }\n  };\n  'use strict';\n  axe.utils.getRootNode = function getRootNode(node) {\n    var doc = node.getRootNode && node.getRootNode() || document;\n    if (doc === node) {\n      doc = document;\n    }\n    return doc;\n  };\n  'use strict';\n  var escapeSelector = axe.utils.escapeSelector;\n  var isXHTML = void 0;\n  var ignoredAttributes = [ 'class', 'style', 'id', 'selected', 'checked', 'disabled', 'tabindex', 'aria-checked', 'aria-selected', 'aria-invalid', 'aria-activedescendant', 'aria-busy', 'aria-disabled', 'aria-expanded', 'aria-grabbed', 'aria-pressed', 'aria-valuenow' ];\n  var MAXATTRIBUTELENGTH = 31;\n  function getAttributeNameValue(node, at) {\n    var name = at.name;\n    var atnv = void 0;\n    if (name.indexOf('href') !== -1 || name.indexOf('src') !== -1) {\n      var friendly = axe.utils.getFriendlyUriEnd(node.getAttribute(name));\n      if (friendly) {\n        var value = encodeURI(friendly);\n        if (value) {\n          atnv = escapeSelector(at.name) + '$=\"' + escapeSelector(value) + '\"';\n        } else {\n          return;\n        }\n      } else {\n        atnv = escapeSelector(at.name) + '=\"' + escapeSelector(node.getAttribute(name)) + '\"';\n      }\n    } else {\n      atnv = escapeSelector(name) + '=\"' + escapeSelector(at.value) + '\"';\n    }\n    return atnv;\n  }\n  function countSort(a, b) {\n    return a.count < b.count ? -1 : a.count === b.count ? 0 : 1;\n  }\n  function filterAttributes(at) {\n    return !ignoredAttributes.includes(at.name) && at.name.indexOf(':') === -1 && (!at.value || at.value.length < MAXATTRIBUTELENGTH);\n  }\n  axe.utils.getSelectorData = function(domTree) {\n    var data = {\n      classes: {},\n      tags: {},\n      attributes: {}\n    };\n    domTree = Array.isArray(domTree) ? domTree : [ domTree ];\n    var currentLevel = domTree.slice();\n    var stack = [];\n    var _loop = function _loop() {\n      var current = currentLevel.pop();\n      var node = current.actualNode;\n      if (!!node.querySelectorAll) {\n        var tag = node.nodeName;\n        if (data.tags[tag]) {\n          data.tags[tag]++;\n        } else {\n          data.tags[tag] = 1;\n        }\n        if (node.classList) {\n          Array.from(node.classList).forEach(function(cl) {\n            var ind = escapeSelector(cl);\n            if (data.classes[ind]) {\n              data.classes[ind]++;\n            } else {\n              data.classes[ind] = 1;\n            }\n          });\n        }\n        if (node.attributes) {\n          Array.from(node.attributes).filter(filterAttributes).forEach(function(at) {\n            var atnv = getAttributeNameValue(node, at);\n            if (atnv) {\n              if (data.attributes[atnv]) {\n                data.attributes[atnv]++;\n              } else {\n                data.attributes[atnv] = 1;\n              }\n            }\n          });\n        }\n      }\n      if (current.children.length) {\n        stack.push(currentLevel);\n        currentLevel = current.children.slice();\n      }\n      while (!currentLevel.length && stack.length) {\n        currentLevel = stack.pop();\n      }\n    };\n    while (currentLevel.length) {\n      _loop();\n    }\n    return data;\n  };\n  function uncommonClasses(node, selectorData) {\n    var retVal = [];\n    var classData = selectorData.classes;\n    var tagData = selectorData.tags;\n    if (node.classList) {\n      Array.from(node.classList).forEach(function(cl) {\n        var ind = escapeSelector(cl);\n        if (classData[ind] < tagData[node.nodeName]) {\n          retVal.push({\n            name: ind,\n            count: classData[ind],\n            species: 'class'\n          });\n        }\n      });\n    }\n    return retVal.sort(countSort);\n  }\n  function getNthChildString(elm, selector) {\n    var siblings = elm.parentNode && Array.from(elm.parentNode.children || '') || [];\n    var hasMatchingSiblings = siblings.find(function(sibling) {\n      return sibling !== elm && axe.utils.matchesSelector(sibling, selector);\n    });\n    if (hasMatchingSiblings) {\n      var nthChild = 1 + siblings.indexOf(elm);\n      return ':nth-child(' + nthChild + ')';\n    } else {\n      return '';\n    }\n  }\n  function getElmId(elm) {\n    if (!elm.getAttribute('id')) {\n      return;\n    }\n    var doc = elm.getRootNode && elm.getRootNode() || document;\n    var id = '#' + escapeSelector(elm.getAttribute('id') || '');\n    if (!id.match(/player_uid_/) && doc.querySelectorAll(id).length === 1) {\n      return id;\n    }\n  }\n  function getBaseSelector(elm) {\n    if (typeof isXHTML === 'undefined') {\n      isXHTML = axe.utils.isXHTML(document);\n    }\n    return escapeSelector(isXHTML ? elm.localName : elm.nodeName.toLowerCase());\n  }\n  function uncommonAttributes(node, selectorData) {\n    var retVal = [];\n    var attData = selectorData.attributes;\n    var tagData = selectorData.tags;\n    if (node.attributes) {\n      Array.from(node.attributes).filter(filterAttributes).forEach(function(at) {\n        var atnv = getAttributeNameValue(node, at);\n        if (atnv && attData[atnv] < tagData[node.nodeName]) {\n          retVal.push({\n            name: atnv,\n            count: attData[atnv],\n            species: 'attribute'\n          });\n        }\n      });\n    }\n    return retVal.sort(countSort);\n  }\n  function getThreeLeastCommonFeatures(elm, selectorData) {\n    var selector = '';\n    var features = void 0;\n    var clss = uncommonClasses(elm, selectorData);\n    var atts = uncommonAttributes(elm, selectorData);\n    if (clss.length && clss[0].count === 1) {\n      features = [ clss[0] ];\n    } else if (atts.length && atts[0].count === 1) {\n      features = [ atts[0] ];\n      selector = getBaseSelector(elm);\n    } else {\n      features = clss.concat(atts);\n      features.sort(countSort);\n      features = features.slice(0, 3);\n      if (!features.some(function(feat) {\n        return feat.species === 'class';\n      })) {\n        selector = getBaseSelector(elm);\n      } else {\n        features.sort(function(a, b) {\n          return a.species !== b.species && a.species === 'class' ? -1 : a.species === b.species ? 0 : 1;\n        });\n      }\n    }\n    return selector += features.reduce(function(val, feat) {\n      switch (feat.species) {\n       case 'class':\n        return val + '.' + feat.name;\n\n       case 'attribute':\n        return val + '[' + feat.name + ']';\n      }\n      return val;\n    }, '');\n  }\n  function generateSelector(elm, options, doc) {\n    if (!axe._selectorData) {\n      throw new Error('Expect axe._selectorData to be set up');\n    }\n    var _options$toRoot = options.toRoot, toRoot = _options$toRoot === undefined ? false : _options$toRoot;\n    var selector = void 0;\n    var similar = void 0;\n    do {\n      var features = getElmId(elm);\n      if (!features) {\n        features = getThreeLeastCommonFeatures(elm, axe._selectorData);\n        features += getNthChildString(elm, features);\n      }\n      if (selector) {\n        selector = features + ' > ' + selector;\n      } else {\n        selector = features;\n      }\n      if (!similar) {\n        similar = Array.from(doc.querySelectorAll(selector));\n      } else {\n        similar = similar.filter(function(item) {\n          return axe.utils.matchesSelector(item, selector);\n        });\n      }\n      elm = elm.parentElement;\n    } while ((similar.length > 1 || toRoot) && elm && elm.nodeType !== 11);\n    if (similar.length === 1) {\n      return selector;\n    } else if (selector.indexOf(' > ') !== -1) {\n      return ':root' + selector.substring(selector.indexOf(' > '));\n    }\n    return ':root';\n  }\n  axe.utils.getSelector = function createUniqueSelector(elm) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!elm) {\n      return '';\n    }\n    var doc = elm.getRootNode && elm.getRootNode() || document;\n    if (doc.nodeType === 11) {\n      var stack = [];\n      while (doc.nodeType === 11) {\n        stack.push({\n          elm: elm,\n          doc: doc\n        });\n        elm = doc.host;\n        doc = elm.getRootNode();\n      }\n      stack.push({\n        elm: elm,\n        doc: doc\n      });\n      return stack.reverse().map(function(comp) {\n        return generateSelector(comp.elm, options, comp.doc);\n      });\n    } else {\n      return generateSelector(elm, options, doc);\n    }\n  };\n  'use strict';\n  function getXPathArray(node, path) {\n    var sibling, count;\n    if (!node) {\n      return [];\n    }\n    if (!path && node.nodeType === 9) {\n      path = [ {\n        str: 'html'\n      } ];\n      return path;\n    }\n    path = path || [];\n    if (node.parentNode && node.parentNode !== node) {\n      path = getXPathArray(node.parentNode, path);\n    }\n    if (node.previousSibling) {\n      count = 1;\n      sibling = node.previousSibling;\n      do {\n        if (sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n          count++;\n        }\n        sibling = sibling.previousSibling;\n      } while (sibling);\n      if (count === 1) {\n        count = null;\n      }\n    } else if (node.nextSibling) {\n      sibling = node.nextSibling;\n      do {\n        if (sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n          count = 1;\n          sibling = null;\n        } else {\n          count = null;\n          sibling = sibling.previousSibling;\n        }\n      } while (sibling);\n    }\n    if (node.nodeType === 1) {\n      var element = {};\n      element.str = node.nodeName.toLowerCase();\n      var id = node.getAttribute && axe.utils.escapeSelector(node.getAttribute('id'));\n      if (id && node.ownerDocument.querySelectorAll('#' + id).length === 1) {\n        element.id = node.getAttribute('id');\n      }\n      if (count > 1) {\n        element.count = count;\n      }\n      path.push(element);\n    }\n    return path;\n  }\n  function xpathToString(xpathArray) {\n    return xpathArray.reduce(function(str, elm) {\n      if (elm.id) {\n        return '/' + elm.str + '[@id=\\'' + elm.id + '\\']';\n      } else {\n        return str + ('/' + elm.str) + (elm.count > 0 ? '[' + elm.count + ']' : '');\n      }\n    }, '');\n  }\n  axe.utils.getXpath = function getXpath(node) {\n    var xpathArray = getXPathArray(node);\n    return xpathToString(xpathArray);\n  };\n  'use strict';\n  var styleSheet;\n  function injectStyle(style) {\n    'use strict';\n    if (styleSheet && styleSheet.parentNode) {\n      if (styleSheet.styleSheet === undefined) {\n        styleSheet.appendChild(document.createTextNode(style));\n      } else {\n        styleSheet.styleSheet.cssText += style;\n      }\n      return styleSheet;\n    }\n    if (!style) {\n      return;\n    }\n    var head = document.head || document.getElementsByTagName('head')[0];\n    styleSheet = document.createElement('style');\n    styleSheet.type = 'text/css';\n    if (styleSheet.styleSheet === undefined) {\n      styleSheet.appendChild(document.createTextNode(style));\n    } else {\n      styleSheet.styleSheet.cssText = style;\n    }\n    head.appendChild(styleSheet);\n    return styleSheet;\n  }\n  axe.utils.injectStyle = injectStyle;\n  'use strict';\n  axe.utils.isHidden = function isHidden(el, recursed) {\n    'use strict';\n    var parent;\n    if (el.nodeType === 9) {\n      return false;\n    }\n    if (el.nodeType === 11) {\n      el = el.host;\n    }\n    var style = window.getComputedStyle(el, null);\n    if (!style || !el.parentNode || style.getPropertyValue('display') === 'none' || !recursed && style.getPropertyValue('visibility') === 'hidden' || el.getAttribute('aria-hidden') === 'true') {\n      return true;\n    }\n    parent = el.assignedSlot ? el.assignedSlot : el.parentNode;\n    return axe.utils.isHidden(parent, true);\n  };\n  'use strict';\n  var htmlTags = [ 'a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'math', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rb', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'script', 'section', 'select', 'slot', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'svg', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr' ];\n  axe.utils.isHtmlElement = function isHtmlElement(node) {\n    var tagName = node.nodeName.toLowerCase();\n    return htmlTags.includes(tagName) && node.namespaceURI !== 'http://www.w3.org/2000/svg';\n  };\n  'use strict';\n  var possibleShadowRoots = [ 'article', 'aside', 'blockquote', 'body', 'div', 'footer', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'main', 'nav', 'p', 'section', 'span' ];\n  axe.utils.isShadowRoot = function isShadowRoot(node) {\n    var nodeName = node.nodeName.toLowerCase();\n    if (node.shadowRoot) {\n      if (/^[a-z][a-z0-9_.-]*-[a-z0-9_.-]*$/.test(nodeName) || possibleShadowRoots.includes(nodeName)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  'use strict';\n  axe.utils.isXHTML = function(doc) {\n    'use strict';\n    if (!doc.createElement) {\n      return false;\n    }\n    return doc.createElement('A').localName === 'A';\n  };\n  'use strict';\n  function pushFrame(resultSet, options, frameElement, frameSelector) {\n    'use strict';\n    var frameXpath = axe.utils.getXpath(frameElement);\n    var frameSpec = {\n      element: frameElement,\n      selector: frameSelector,\n      xpath: frameXpath\n    };\n    resultSet.forEach(function(res) {\n      res.node = axe.utils.DqElement.fromFrame(res.node, options, frameSpec);\n      var checks = axe.utils.getAllChecks(res);\n      if (checks.length) {\n        checks.forEach(function(check) {\n          check.relatedNodes = check.relatedNodes.map(function(node) {\n            return axe.utils.DqElement.fromFrame(node, options, frameSpec);\n          });\n        });\n      }\n    });\n  }\n  function spliceNodes(target, to) {\n    'use strict';\n    var firstFromFrame = to[0].node, sorterResult, t;\n    for (var i = 0, l = target.length; i < l; i++) {\n      t = target[i].node;\n      sorterResult = axe.utils.nodeSorter({\n        actualNode: t.element\n      }, {\n        actualNode: firstFromFrame.element\n      });\n      if (sorterResult > 0 || sorterResult === 0 && firstFromFrame.selector.length < t.selector.length) {\n        target.splice.apply(target, [ i, 0 ].concat(to));\n        return;\n      }\n    }\n    target.push.apply(target, to);\n  }\n  function normalizeResult(result) {\n    'use strict';\n    if (!result || !result.results) {\n      return null;\n    }\n    if (!Array.isArray(result.results)) {\n      return [ result.results ];\n    }\n    if (!result.results.length) {\n      return null;\n    }\n    return result.results;\n  }\n  axe.utils.mergeResults = function mergeResults(frameResults, options) {\n    'use strict';\n    var result = [];\n    frameResults.forEach(function(frameResult) {\n      var results = normalizeResult(frameResult);\n      if (!results || !results.length) {\n        return;\n      }\n      results.forEach(function(ruleResult) {\n        if (ruleResult.nodes && frameResult.frame) {\n          pushFrame(ruleResult.nodes, options, frameResult.frameElement, frameResult.frame);\n        }\n        var res = axe.utils.findBy(result, 'id', ruleResult.id);\n        if (!res) {\n          result.push(ruleResult);\n        } else {\n          if (ruleResult.nodes.length) {\n            spliceNodes(res.nodes, ruleResult.nodes);\n          }\n        }\n      });\n    });\n    return result;\n  };\n  'use strict';\n  axe.utils.nodeSorter = function nodeSorter(nodeA, nodeB) {\n    nodeA = nodeA.actualNode || nodeA;\n    nodeB = nodeB.actualNode || nodeB;\n    if (nodeA === nodeB) {\n      return 0;\n    }\n    if (nodeA.compareDocumentPosition(nodeB) & 4) {\n      return -1;\n    } else {\n      return 1;\n    }\n  };\n  'use strict';\n  utils.performanceTimer = function() {\n    'use strict';\n    function now() {\n      if (window.performance && window.performance) {\n        return window.performance.now();\n      }\n    }\n    var originalTime = null;\n    var lastRecordedTime = now();\n    return {\n      start: function start() {\n        this.mark('mark_axe_start');\n      },\n      end: function end() {\n        this.mark('mark_axe_end');\n        this.measure('axe', 'mark_axe_start', 'mark_axe_end');\n        this.logMeasures('axe');\n      },\n      auditStart: function auditStart() {\n        this.mark('mark_audit_start');\n      },\n      auditEnd: function auditEnd() {\n        this.mark('mark_audit_end');\n        this.measure('audit_start_to_end', 'mark_audit_start', 'mark_audit_end');\n        this.logMeasures();\n      },\n      mark: function mark(markName) {\n        if (window.performance && window.performance.mark !== undefined) {\n          window.performance.mark(markName);\n        }\n      },\n      measure: function measure(measureName, startMark, endMark) {\n        if (window.performance && window.performance.measure !== undefined) {\n          window.performance.measure(measureName, startMark, endMark);\n        }\n      },\n      logMeasures: function logMeasures(measureName) {\n        function log(req) {\n          axe.log('Measure ' + req.name + ' took ' + req.duration + 'ms');\n        }\n        if (window.performance && window.performance.getEntriesByType !== undefined) {\n          var measures = window.performance.getEntriesByType('measure');\n          for (var i = 0; i < measures.length; ++i) {\n            var req = measures[i];\n            if (req.name === measureName) {\n              log(req);\n              return;\n            }\n            log(req);\n          }\n        }\n      },\n      timeElapsed: function timeElapsed() {\n        return now() - lastRecordedTime;\n      },\n      reset: function reset() {\n        if (!originalTime) {\n          originalTime = now();\n        }\n        lastRecordedTime = now();\n      }\n    };\n  }();\n  'use strict';\n  if (typeof Object.assign !== 'function') {\n    (function() {\n      Object.assign = function(target) {\n        'use strict';\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (source.hasOwnProperty(nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n        return output;\n      };\n    })();\n  }\n  if (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n      value: function value(predicate) {\n        if (this === null) {\n          throw new TypeError('Array.prototype.find called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n          throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n        for (var i = 0; i < length; i++) {\n          value = list[i];\n          if (predicate.call(thisArg, value, i, list)) {\n            return value;\n          }\n        }\n        return undefined;\n      }\n    });\n  }\n  axe.utils.pollyfillElementsFromPoint = function() {\n    if (document.elementsFromPoint) {\n      return document.elementsFromPoint;\n    }\n    if (document.msElementsFromPoint) {\n      return document.msElementsFromPoint;\n    }\n    var usePointer = function() {\n      var element = document.createElement('x');\n      element.style.cssText = 'pointer-events:auto';\n      return element.style.pointerEvents === 'auto';\n    }();\n    var cssProp = usePointer ? 'pointer-events' : 'visibility';\n    var cssDisableVal = usePointer ? 'none' : 'hidden';\n    var style = document.createElement('style');\n    style.innerHTML = usePointer ? '* { pointer-events: all }' : '* { visibility: visible }';\n    return function(x, y) {\n      var current, i, d;\n      var elements = [];\n      var previousPointerEvents = [];\n      document.head.appendChild(style);\n      while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1) {\n        elements.push(current);\n        previousPointerEvents.push({\n          value: current.style.getPropertyValue(cssProp),\n          priority: current.style.getPropertyPriority(cssProp)\n        });\n        current.style.setProperty(cssProp, cssDisableVal, 'important');\n      }\n      if (elements.indexOf(document.documentElement) < elements.length - 1) {\n        elements.splice(elements.indexOf(document.documentElement), 1);\n        elements.push(document.documentElement);\n      }\n      for (i = previousPointerEvents.length; !!(d = previousPointerEvents[--i]); ) {\n        elements[i].style.setProperty(cssProp, d.value ? d.value : '', d.priority);\n      }\n      document.head.removeChild(style);\n      return elements;\n    };\n  };\n  if (typeof window.addEventListener === 'function') {\n    document.elementsFromPoint = axe.utils.pollyfillElementsFromPoint();\n  }\n  if (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, 'includes', {\n      value: function value(searchElement) {\n        'use strict';\n        var O = Object(this);\n        var len = parseInt(O.length, 10) || 0;\n        if (len === 0) {\n          return false;\n        }\n        var n = parseInt(arguments[1], 10) || 0;\n        var k;\n        if (n >= 0) {\n          k = n;\n        } else {\n          k = len + n;\n          if (k < 0) {\n            k = 0;\n          }\n        }\n        var currentElement;\n        while (k < len) {\n          currentElement = O[k];\n          if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {\n            return true;\n          }\n          k++;\n        }\n        return false;\n      }\n    });\n  }\n  if (!Array.prototype.some) {\n    Object.defineProperty(Array.prototype, 'some', {\n      value: function value(fun) {\n        'use strict';\n        if (this == null) {\n          throw new TypeError('Array.prototype.some called on null or undefined');\n        }\n        if (typeof fun !== 'function') {\n          throw new TypeError();\n        }\n        var t = Object(this);\n        var len = t.length >>> 0;\n        var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n        for (var i = 0; i < len; i++) {\n          if (i in t && fun.call(thisArg, t[i], i, t)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    });\n  }\n  if (!Array.from) {\n    Object.defineProperty(Array, 'from', {\n      value: function() {\n        var toStr = Object.prototype.toString;\n        var isCallable = function isCallable(fn) {\n          return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n        };\n        var toInteger = function toInteger(value) {\n          var number = Number(value);\n          if (isNaN(number)) {\n            return 0;\n          }\n          if (number === 0 || !isFinite(number)) {\n            return number;\n          }\n          return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n        };\n        var maxSafeInteger = Math.pow(2, 53) - 1;\n        var toLength = function toLength(value) {\n          var len = toInteger(value);\n          return Math.min(Math.max(len, 0), maxSafeInteger);\n        };\n        return function from(arrayLike) {\n          var C = this;\n          var items = Object(arrayLike);\n          if (arrayLike == null) {\n            throw new TypeError('Array.from requires an array-like object - not null or undefined');\n          }\n          var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n          var T;\n          if (typeof mapFn !== 'undefined') {\n            if (!isCallable(mapFn)) {\n              throw new TypeError('Array.from: when provided, the second argument must be a function');\n            }\n            if (arguments.length > 2) {\n              T = arguments[2];\n            }\n          }\n          var len = toLength(items.length);\n          var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n          var k = 0;\n          var kValue;\n          while (k < len) {\n            kValue = items[k];\n            if (mapFn) {\n              A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n            } else {\n              A[k] = kValue;\n            }\n            k += 1;\n          }\n          A.length = len;\n          return A;\n        };\n      }()\n    });\n  }\n  if (!String.prototype.includes) {\n    String.prototype.includes = function(search, start) {\n      if (typeof start !== 'number') {\n        start = 0;\n      }\n      if (start + search.length > this.length) {\n        return false;\n      } else {\n        return this.indexOf(search, start) !== -1;\n      }\n    };\n  }\n  'use strict';\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n  axe.utils.preloadCssom = function preloadCssom(_ref) {\n    var timeout = _ref.timeout, _ref$treeRoot = _ref.treeRoot, treeRoot = _ref$treeRoot === undefined ? axe._tree[0] : _ref$treeRoot;\n    var rootNodes = getAllRootNodesInTree(treeRoot);\n    var q = axe.utils.queue();\n    if (!rootNodes.length) {\n      return q;\n    }\n    var dynamicDoc = document.implementation.createHTMLDocument();\n    var convertDataToStylesheet = getStyleSheetFactory(dynamicDoc);\n    q.defer(function(resolve, reject) {\n      getCssomForAllRootNodes(rootNodes, convertDataToStylesheet, timeout).then(function(assets) {\n        var cssom = processCssomAssets(assets);\n        resolve(cssom);\n      }).catch(reject);\n    });\n    return q;\n  };\n  function getAllRootNodesInTree(tree) {\n    var ids = [];\n    var rootNodes = axe.utils.querySelectorAllFilter(tree, '*', function(node) {\n      if (ids.includes(node.shadowId)) {\n        return false;\n      }\n      ids.push(node.shadowId);\n      return true;\n    }).map(function(node) {\n      return {\n        shadowId: node.shadowId,\n        rootNode: axe.utils.getRootNode(node.actualNode)\n      };\n    });\n    return axe.utils.uniqueArray(rootNodes, []);\n  }\n  var getStyleSheetFactory = function getStyleSheetFactory(dynamicDoc) {\n    return function(_ref2) {\n      var data = _ref2.data, isExternal = _ref2.isExternal, shadowId = _ref2.shadowId, root = _ref2.root, priority = _ref2.priority, _ref2$isLink = _ref2.isLink, isLink = _ref2$isLink === undefined ? false : _ref2$isLink;\n      var style = dynamicDoc.createElement('style');\n      if (isLink) {\n        var text = dynamicDoc.createTextNode('@import \"' + data.href + '\"');\n        style.appendChild(text);\n      } else {\n        style.appendChild(dynamicDoc.createTextNode(data));\n      }\n      dynamicDoc.head.appendChild(style);\n      return {\n        sheet: style.sheet,\n        isExternal: isExternal,\n        shadowId: shadowId,\n        root: root,\n        priority: priority\n      };\n    };\n  };\n  function getCssomForAllRootNodes(rootNodes, convertDataToStylesheet, timeout) {\n    var q = axe.utils.queue();\n    rootNodes.forEach(function(_ref3, index) {\n      var rootNode = _ref3.rootNode, shadowId = _ref3.shadowId;\n      return q.defer(function(resolve, reject) {\n        return loadCssom({\n          rootNode: rootNode,\n          shadowId: shadowId,\n          timeout: timeout,\n          convertDataToStylesheet: convertDataToStylesheet,\n          rootIndex: index + 1\n        }).then(resolve).catch(reject);\n      });\n    });\n    return q;\n  }\n  function processCssomAssets(nestedAssets) {\n    var result = [];\n    nestedAssets.forEach(function(item) {\n      if (Array.isArray(item)) {\n        result.push.apply(result, _toConsumableArray(processCssomAssets(item)));\n      } else {\n        result.push(item);\n      }\n    });\n    return result;\n  }\n  function loadCssom(options) {\n    var rootIndex = options.rootIndex;\n    var q = axe.utils.queue();\n    var sheets = getStylesheetsOfRootNode(options);\n    if (!sheets) {\n      return q;\n    }\n    sheets.forEach(function(sheet, sheetIndex) {\n      var priority = [ rootIndex, sheetIndex ];\n      try {\n        var deferredQ = parseNonCrossOriginStylesheet(sheet, options, priority);\n        q.defer(deferredQ);\n      } catch (e) {\n        var _deferredQ = parseCrossOriginStylesheet(sheet.href, options, priority);\n        q.defer(_deferredQ);\n      }\n    });\n    return q;\n  }\n  function parseNonCrossOriginStylesheet(sheet, options, priority) {\n    var q = axe.utils.queue();\n    var cssRules = sheet.cssRules;\n    var rules = Array.from(cssRules);\n    if (!rules) {\n      return q;\n    }\n    var cssImportRules = rules.filter(function(r) {\n      return r.type === 3;\n    });\n    if (!cssImportRules.length) {\n      q.defer(function(resolve) {\n        return resolve({\n          isExternal: false,\n          priority: priority,\n          root: options.rootNode,\n          shadowId: options.shadowId,\n          sheet: sheet\n        });\n      });\n      return q;\n    }\n    cssImportRules.forEach(function(importRule, cssRuleIndex) {\n      return q.defer(function(resolve, reject) {\n        var importUrl = importRule.href;\n        var newPriority = [].concat(_toConsumableArray(priority), [ cssRuleIndex ]);\n        var axiosOptions = {\n          method: 'get',\n          url: importUrl,\n          timeout: options.timeout\n        };\n        axe.imports.axios(axiosOptions).then(function(_ref4) {\n          var data = _ref4.data;\n          return resolve(options.convertDataToStylesheet({\n            data: data,\n            isExternal: true,\n            priority: newPriority,\n            root: options.rootNode,\n            shadowId: options.shadowId\n          }));\n        }).catch(reject);\n      });\n    });\n    var nonImportCSSRules = rules.filter(function(r) {\n      return r.type !== 3;\n    });\n    if (!nonImportCSSRules.length) {\n      return q;\n    }\n    q.defer(function(resolve) {\n      return resolve(options.convertDataToStylesheet({\n        data: nonImportCSSRules.map(function(rule) {\n          return rule.cssText;\n        }).join(),\n        isExternal: false,\n        priority: priority,\n        root: options.rootNode,\n        shadowId: options.shadowId\n      }));\n    });\n    return q;\n  }\n  function parseCrossOriginStylesheet(url, options, priority) {\n    var q = axe.utils.queue();\n    if (!url) {\n      return q;\n    }\n    var axiosOptions = {\n      method: 'get',\n      url: url,\n      timeout: options.timeout\n    };\n    q.defer(function(resolve, reject) {\n      axe.imports.axios(axiosOptions).then(function(_ref5) {\n        var data = _ref5.data;\n        return resolve(options.convertDataToStylesheet({\n          data: data,\n          isExternal: true,\n          priority: priority,\n          root: options.rootNode,\n          shadowId: options.shadowId\n        }));\n      }).catch(reject);\n    });\n    return q;\n  }\n  function getStylesheetsOfRootNode(options) {\n    var rootNode = options.rootNode, shadowId = options.shadowId;\n    var sheets = void 0;\n    if (rootNode.nodeType === 11 && shadowId) {\n      sheets = getStylesheetsFromDocumentFragment(options);\n    } else {\n      sheets = getStylesheetsFromDocument(rootNode);\n    }\n    return filterStylesheetsWithSameHref(sheets);\n  }\n  function getStylesheetsFromDocumentFragment(options) {\n    var rootNode = options.rootNode, convertDataToStylesheet = options.convertDataToStylesheet;\n    return Array.from(rootNode.children).filter(filerStyleAndLinkAttributesInDocumentFragment).reduce(function(out, node) {\n      var nodeName = node.nodeName.toUpperCase();\n      var data = nodeName === 'STYLE' ? node.textContent : node;\n      var isLink = nodeName === 'LINK';\n      var stylesheet = convertDataToStylesheet({\n        data: data,\n        isLink: isLink,\n        root: rootNode\n      });\n      out.push(stylesheet.sheet);\n      return out;\n    }, []);\n  }\n  function getStylesheetsFromDocument(rootNode) {\n    return Array.from(rootNode.styleSheets).filter(function(sheet) {\n      return filterMediaIsPrint(sheet.media.mediaText);\n    });\n  }\n  function filerStyleAndLinkAttributesInDocumentFragment(node) {\n    var nodeName = node.nodeName.toUpperCase();\n    var linkHref = node.getAttribute('href');\n    var linkRel = node.getAttribute('rel');\n    var isLink = nodeName === 'LINK' && linkHref && linkRel && node.rel.toUpperCase().includes('STYLESHEET');\n    var isStyle = nodeName === 'STYLE';\n    return isStyle || isLink && filterMediaIsPrint(node.media);\n  }\n  function filterMediaIsPrint(media) {\n    if (!media) {\n      return true;\n    }\n    return !media.toUpperCase().includes('PRINT');\n  }\n  function filterStylesheetsWithSameHref(sheets) {\n    var hrefs = [];\n    return sheets.filter(function(sheet) {\n      if (!sheet.href) {\n        return true;\n      }\n      if (hrefs.includes(sheet.href)) {\n        return false;\n      }\n      hrefs.push(sheet.href);\n      return true;\n    });\n  }\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function isValidPreloadObject(preload) {\n    return (typeof preload === 'undefined' ? 'undefined' : _typeof(preload)) === 'object' && Array.isArray(preload.assets);\n  }\n  axe.utils.shouldPreload = function shouldPreload(options) {\n    if (!options || options.preload === undefined || options.preload === null) {\n      return true;\n    }\n    if (typeof options.preload === 'boolean') {\n      return options.preload;\n    }\n    return isValidPreloadObject(options.preload);\n  };\n  axe.utils.getPreloadConfig = function getPreloadConfig(options) {\n    var config = {\n      assets: axe.constants.preloadAssets,\n      timeout: axe.constants.preloadAssetsTimeout\n    };\n    if (!options.preload) {\n      return config;\n    }\n    if (typeof options.preload === 'boolean') {\n      return config;\n    }\n    var areRequestedAssetsValid = options.preload.assets.every(function(a) {\n      return axe.constants.preloadAssets.includes(a.toLowerCase());\n    });\n    if (!areRequestedAssetsValid) {\n      throw new Error('Requested assets, not supported. ' + ('Supported assets are: ' + axe.constants.preloadAssets.join(', ') + '.'));\n    }\n    config.assets = axe.utils.uniqueArray(options.preload.assets.map(function(a) {\n      return a.toLowerCase();\n    }), []);\n    if (options.preload.timeout && typeof options.preload.timeout === 'number' && !Number.isNaN(options.preload.timeout)) {\n      config.timeout = options.preload.timeout;\n    }\n    return config;\n  };\n  axe.utils.preload = function preload(options) {\n    var preloadFunctionsMap = {\n      cssom: axe.utils.preloadCssom\n    };\n    var q = axe.utils.queue();\n    var shouldPreload = axe.utils.shouldPreload(options);\n    if (!shouldPreload) {\n      return q;\n    }\n    var preloadConfig = axe.utils.getPreloadConfig(options);\n    preloadConfig.assets.forEach(function(asset) {\n      q.defer(function(resolve, reject) {\n        preloadFunctionsMap[asset](preloadConfig).then(function(results) {\n          resolve(_defineProperty({}, asset, results[0]));\n        }).catch(reject);\n      });\n    });\n    return q;\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function getIncompleteReason(checkData, messages) {\n    function getDefaultMsg(messages) {\n      if (messages.incomplete && messages.incomplete.default) {\n        return messages.incomplete.default;\n      } else {\n        return helpers.incompleteFallbackMessage();\n      }\n    }\n    if (checkData && checkData.missingData) {\n      try {\n        var msg = messages.incomplete[checkData.missingData[0].reason];\n        if (!msg) {\n          throw new Error();\n        }\n        return msg;\n      } catch (e) {\n        if (typeof checkData.missingData === 'string') {\n          return messages.incomplete[checkData.missingData];\n        } else {\n          return getDefaultMsg(messages);\n        }\n      }\n    } else {\n      return getDefaultMsg(messages);\n    }\n  }\n  function extender(checksData, shouldBeTrue) {\n    'use strict';\n    return function(check) {\n      var sourceData = checksData[check.id] || {};\n      var messages = sourceData.messages || {};\n      var data = Object.assign({}, sourceData);\n      delete data.messages;\n      if (check.result === undefined) {\n        if (_typeof(messages.incomplete) === 'object') {\n          data.message = function() {\n            return getIncompleteReason(check.data, messages);\n          };\n        } else {\n          data.message = messages.incomplete;\n        }\n      } else {\n        data.message = check.result === shouldBeTrue ? messages.pass : messages.fail;\n      }\n      axe.utils.extendMetaData(check, data);\n    };\n  }\n  axe.utils.publishMetaData = function(ruleResult) {\n    'use strict';\n    var checksData = axe._audit.data.checks || {};\n    var rulesData = axe._audit.data.rules || {};\n    var rule = axe.utils.findBy(axe._audit.rules, 'id', ruleResult.id) || {};\n    ruleResult.tags = axe.utils.clone(rule.tags || []);\n    var shouldBeTrue = extender(checksData, true);\n    var shouldBeFalse = extender(checksData, false);\n    ruleResult.nodes.forEach(function(detail) {\n      detail.any.forEach(shouldBeTrue);\n      detail.all.forEach(shouldBeTrue);\n      detail.none.forEach(shouldBeFalse);\n    });\n    axe.utils.extendMetaData(ruleResult, axe.utils.clone(rulesData[ruleResult.id] || {}));\n  };\n  'use strict';\n  var convertExpressions = function convertExpressions() {};\n  var matchExpressions = function matchExpressions() {};\n  function matchesTag(node, exp) {\n    return node.nodeType === 1 && (exp.tag === '*' || node.nodeName.toLowerCase() === exp.tag);\n  }\n  function matchesClasses(node, exp) {\n    return !exp.classes || exp.classes.reduce(function(result, cl) {\n      return result && node.className && node.className.match(cl.regexp);\n    }, true);\n  }\n  function matchesAttributes(node, exp) {\n    return !exp.attributes || exp.attributes.reduce(function(result, att) {\n      var nodeAtt = node.getAttribute(att.key);\n      return result && nodeAtt !== null && (!att.value || att.test(nodeAtt));\n    }, true);\n  }\n  function matchesId(node, exp) {\n    return !exp.id || node.id === exp.id;\n  }\n  function matchesPseudos(target, exp) {\n    if (!exp.pseudos || exp.pseudos.reduce(function(result, pseudo) {\n      if (pseudo.name === 'not') {\n        return result && !matchExpressions([ target ], pseudo.expressions, false).length;\n      }\n      throw new Error('the pseudo selector ' + pseudo.name + ' has not yet been implemented');\n    }, true)) {\n      return true;\n    }\n    return false;\n  }\n  var escapeRegExp = function() {\n    var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g;\n    var to = '\\\\';\n    return function(string) {\n      return string.replace(from, to);\n    };\n  }();\n  var reUnescape = /\\\\/g;\n  function convertAttributes(atts) {\n    if (!atts) {\n      return;\n    }\n    return atts.map(function(att) {\n      var attributeKey = att.name.replace(reUnescape, '');\n      var attributeValue = (att.value || '').replace(reUnescape, '');\n      var test, regexp;\n      switch (att.operator) {\n       case '^=':\n        regexp = new RegExp('^' + escapeRegExp(attributeValue));\n        break;\n\n       case '$=':\n        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\n        break;\n\n       case '~=':\n        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\n        break;\n\n       case '|=':\n        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\n        break;\n\n       case '=':\n        test = function test(value) {\n          return attributeValue === value;\n        };\n        break;\n\n       case '*=':\n        test = function test(value) {\n          return value && value.includes(attributeValue);\n        };\n        break;\n\n       case '!=':\n        test = function test(value) {\n          return attributeValue !== value;\n        };\n        break;\n\n       default:\n        test = function test(value) {\n          return !!value;\n        };\n      }\n      if (attributeValue === '' && /^[*$^]=$/.test(att.operator)) {\n        test = function test() {\n          return false;\n        };\n      }\n      if (!test) {\n        test = function test(value) {\n          return value && regexp.test(value);\n        };\n      }\n      return {\n        key: attributeKey,\n        value: attributeValue,\n        test: test\n      };\n    });\n  }\n  function convertClasses(classes) {\n    if (!classes) {\n      return;\n    }\n    return classes.map(function(className) {\n      className = className.replace(reUnescape, '');\n      return {\n        value: className,\n        regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\n      };\n    });\n  }\n  function convertPseudos(pseudos) {\n    if (!pseudos) {\n      return;\n    }\n    return pseudos.map(function(p) {\n      var expressions;\n      if (p.name === 'not') {\n        expressions = axe.utils.cssParser.parse(p.value);\n        expressions = expressions.selectors ? expressions.selectors : [ expressions ];\n        expressions = convertExpressions(expressions);\n      }\n      return {\n        name: p.name,\n        expressions: expressions,\n        value: p.value\n      };\n    });\n  }\n  convertExpressions = function convertExpressions(expressions) {\n    return expressions.map(function(exp) {\n      var newExp = [];\n      var rule = exp.rule;\n      while (rule) {\n        newExp.push({\n          tag: rule.tagName ? rule.tagName.toLowerCase() : '*',\n          combinator: rule.nestingOperator ? rule.nestingOperator : ' ',\n          id: rule.id,\n          attributes: convertAttributes(rule.attrs),\n          classes: convertClasses(rule.classNames),\n          pseudos: convertPseudos(rule.pseudos)\n        });\n        rule = rule.rule;\n      }\n      return newExp;\n    });\n  };\n  function createLocalVariables(nodes, anyLevel, thisLevel, parentShadowId) {\n    var retVal = {\n      nodes: nodes.slice(),\n      anyLevel: anyLevel,\n      thisLevel: thisLevel,\n      parentShadowId: parentShadowId\n    };\n    retVal.nodes.reverse();\n    return retVal;\n  }\n  function matchesSelector(node, exp) {\n    return matchesTag(node.actualNode, exp[0]) && matchesClasses(node.actualNode, exp[0]) && matchesAttributes(node.actualNode, exp[0]) && matchesId(node.actualNode, exp[0]) && matchesPseudos(node, exp[0]);\n  }\n  matchExpressions = function matchExpressions(domTree, expressions, recurse, filter) {\n    var stack = [];\n    var nodes = Array.isArray(domTree) ? domTree : [ domTree ];\n    var currentLevel = createLocalVariables(nodes, expressions, [], domTree[0].shadowId);\n    var result = [];\n    while (currentLevel.nodes.length) {\n      var node = currentLevel.nodes.pop();\n      var childOnly = [];\n      var childAny = [];\n      var combined = currentLevel.anyLevel.slice().concat(currentLevel.thisLevel);\n      var added = false;\n      for (var i = 0; i < combined.length; i++) {\n        var exp = combined[i];\n        if (matchesSelector(node, exp) && (!exp[0].id || node.shadowId === currentLevel.parentShadowId)) {\n          if (exp.length === 1) {\n            if (!added && (!filter || filter(node))) {\n              result.push(node);\n              added = true;\n            }\n          } else {\n            var rest = exp.slice(1);\n            if ([ ' ', '>' ].includes(rest[0].combinator) === false) {\n              throw new Error('axe.utils.querySelectorAll does not support the combinator: ' + exp[1].combinator);\n            }\n            if (rest[0].combinator === '>') {\n              childOnly.push(rest);\n            } else {\n              childAny.push(rest);\n            }\n          }\n        }\n        if (currentLevel.anyLevel.includes(exp) && (!exp[0].id || node.shadowId === currentLevel.parentShadowId)) {\n          childAny.push(exp);\n        }\n      }\n      if (node.children && node.children.length && recurse) {\n        stack.push(currentLevel);\n        currentLevel = createLocalVariables(node.children, childAny, childOnly, node.shadowId);\n      }\n      while (!currentLevel.nodes.length && stack.length) {\n        currentLevel = stack.pop();\n      }\n    }\n    return result;\n  };\n  axe.utils.querySelectorAll = function(domTree, selector) {\n    return axe.utils.querySelectorAllFilter(domTree, selector);\n  };\n  axe.utils.querySelectorAllFilter = function(domTree, selector, filter) {\n    domTree = Array.isArray(domTree) ? domTree : [ domTree ];\n    var expressions = axe.utils.cssParser.parse(selector);\n    expressions = expressions.selectors ? expressions.selectors : [ expressions ];\n    expressions = convertExpressions(expressions);\n    return matchExpressions(domTree, expressions, true, filter);\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  (function() {\n    'use strict';\n    function noop() {}\n    function funcGuard(f) {\n      if (typeof f !== 'function') {\n        throw new TypeError('Queue methods require functions as arguments');\n      }\n    }\n    function queue() {\n      var tasks = [];\n      var started = 0;\n      var remaining = 0;\n      var completeQueue = noop;\n      var complete = false;\n      var err;\n      var defaultFail = function defaultFail(e) {\n        err = e;\n        setTimeout(function() {\n          if (err !== undefined && err !== null) {\n            axe.log('Uncaught error (of queue)', err);\n          }\n        }, 1);\n      };\n      var failed = defaultFail;\n      function createResolve(i) {\n        return function(r) {\n          tasks[i] = r;\n          remaining -= 1;\n          if (!remaining && completeQueue !== noop) {\n            complete = true;\n            completeQueue(tasks);\n          }\n        };\n      }\n      function abort(msg) {\n        completeQueue = noop;\n        failed(msg);\n        return tasks;\n      }\n      function pop() {\n        var length = tasks.length;\n        for (;started < length; started++) {\n          var task = tasks[started];\n          try {\n            task.call(null, createResolve(started), abort);\n          } catch (e) {\n            abort(e);\n          }\n        }\n      }\n      var q = {\n        defer: function defer(fn) {\n          if ((typeof fn === 'undefined' ? 'undefined' : _typeof(fn)) === 'object' && fn.then && fn.catch) {\n            var defer = fn;\n            fn = function fn(resolve, reject) {\n              defer.then(resolve).catch(reject);\n            };\n          }\n          funcGuard(fn);\n          if (err !== undefined) {\n            return;\n          } else if (complete) {\n            throw new Error('Queue already completed');\n          }\n          tasks.push(fn);\n          ++remaining;\n          pop();\n          return q;\n        },\n        then: function then(fn) {\n          funcGuard(fn);\n          if (completeQueue !== noop) {\n            throw new Error('queue `then` already set');\n          }\n          if (!err) {\n            completeQueue = fn;\n            if (!remaining) {\n              complete = true;\n              completeQueue(tasks);\n            }\n          }\n          return q;\n        },\n        catch: function _catch(fn) {\n          funcGuard(fn);\n          if (failed !== defaultFail) {\n            throw new Error('queue `catch` already set');\n          }\n          if (!err) {\n            failed = fn;\n          } else {\n            fn(err);\n            err = null;\n          }\n          return q;\n        },\n        abort: abort\n      };\n      return q;\n    }\n    axe.utils.queue = queue;\n  })();\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  (function(exports) {\n    'use strict';\n    var messages = {}, subscribers = {}, errorTypes = Object.freeze([ 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError', 'TypeError', 'URIError' ]);\n    function _getSource() {\n      var application = 'axeAPI', version = '', src;\n      if (typeof axe !== 'undefined' && axe._audit && axe._audit.application) {\n        application = axe._audit.application;\n      }\n      if (typeof axe !== 'undefined') {\n        version = axe.version;\n      }\n      src = application + '.' + version;\n      return src;\n    }\n    function verify(postedMessage) {\n      if ((typeof postedMessage === 'undefined' ? 'undefined' : _typeof(postedMessage)) === 'object' && typeof postedMessage.uuid === 'string' && postedMessage._respondable === true) {\n        var messageSource = _getSource();\n        return postedMessage._source === messageSource || postedMessage._source === 'axeAPI.x.y.z' || messageSource === 'axeAPI.x.y.z';\n      }\n      return false;\n    }\n    function post(win, topic, message, uuid, keepalive, callback) {\n      var error;\n      if (message instanceof Error) {\n        error = {\n          name: message.name,\n          message: message.message,\n          stack: message.stack\n        };\n        message = undefined;\n      }\n      var data = {\n        uuid: uuid,\n        topic: topic,\n        message: message,\n        error: error,\n        _respondable: true,\n        _source: _getSource(),\n        _keepalive: keepalive\n      };\n      if (typeof callback === 'function') {\n        messages[uuid] = callback;\n      }\n      win.postMessage(JSON.stringify(data), '*');\n    }\n    function respondable(win, topic, message, keepalive, callback) {\n      var id = uuid.v1();\n      post(win, topic, message, id, keepalive, callback);\n    }\n    respondable.subscribe = function(topic, callback) {\n      subscribers[topic] = callback;\n    };\n    respondable.isInFrame = function(win) {\n      win = win || window;\n      return !!win.frameElement;\n    };\n    function createResponder(source, topic, uuid) {\n      return function(message, keepalive, callback) {\n        post(source, topic, message, uuid, keepalive, callback);\n      };\n    }\n    function publish(source, data, keepalive) {\n      var topic = data.topic;\n      var subscriber = subscribers[topic];\n      if (subscriber) {\n        var responder = createResponder(source, null, data.uuid);\n        subscriber(data.message, keepalive, responder);\n      }\n    }\n    function buildErrorObject(error) {\n      var msg = error.message || 'Unknown error occurred';\n      var errorName = errorTypes.includes(error.name) ? error.name : 'Error';\n      var ErrConstructor = window[errorName] || Error;\n      if (error.stack) {\n        msg += '\\n' + error.stack.replace(error.message, '');\n      }\n      return new ErrConstructor(msg);\n    }\n    function parseMessage(dataString) {\n      var data;\n      if (typeof dataString !== 'string') {\n        return;\n      }\n      try {\n        data = JSON.parse(dataString);\n      } catch (ex) {}\n      if (!verify(data)) {\n        return;\n      }\n      if (_typeof(data.error) === 'object') {\n        data.error = buildErrorObject(data.error);\n      } else {\n        data.error = undefined;\n      }\n      return data;\n    }\n    if (typeof window.addEventListener === 'function') {\n      window.addEventListener('message', function(e) {\n        var data = parseMessage(e.data);\n        if (!data) {\n          return;\n        }\n        var uuid = data.uuid;\n        var keepalive = data._keepalive;\n        var callback = messages[uuid];\n        if (callback) {\n          var result = data.error || data.message;\n          var responder = createResponder(e.source, data.topic, uuid);\n          callback(result, keepalive, responder);\n          if (!keepalive) {\n            delete messages[uuid];\n          }\n        }\n        if (!data.error) {\n          try {\n            publish(e.source, data, keepalive);\n          } catch (err) {\n            post(e.source, data.topic, err, uuid, false);\n          }\n        }\n      }, false);\n    }\n    exports.respondable = respondable;\n  })(utils);\n  'use strict';\n  function matchTags(rule, runOnly) {\n    'use strict';\n    var include, exclude, matching;\n    var defaultExclude = axe._audit && axe._audit.tagExclude ? axe._audit.tagExclude : [];\n    if (runOnly.hasOwnProperty('include') || runOnly.hasOwnProperty('exclude')) {\n      include = runOnly.include || [];\n      include = Array.isArray(include) ? include : [ include ];\n      exclude = runOnly.exclude || [];\n      exclude = Array.isArray(exclude) ? exclude : [ exclude ];\n      exclude = exclude.concat(defaultExclude.filter(function(tag) {\n        return include.indexOf(tag) === -1;\n      }));\n    } else {\n      include = Array.isArray(runOnly) ? runOnly : [ runOnly ];\n      exclude = defaultExclude.filter(function(tag) {\n        return include.indexOf(tag) === -1;\n      });\n    }\n    matching = include.some(function(tag) {\n      return rule.tags.indexOf(tag) !== -1;\n    });\n    if (matching || include.length === 0 && rule.enabled !== false) {\n      return exclude.every(function(tag) {\n        return rule.tags.indexOf(tag) === -1;\n      });\n    } else {\n      return false;\n    }\n  }\n  axe.utils.ruleShouldRun = function(rule, context, options) {\n    'use strict';\n    var runOnly = options.runOnly || {};\n    var ruleOptions = (options.rules || {})[rule.id];\n    if (rule.pageLevel && !context.page) {\n      return false;\n    } else if (runOnly.type === 'rule') {\n      return runOnly.values.indexOf(rule.id) !== -1;\n    } else if (ruleOptions && typeof ruleOptions.enabled === 'boolean') {\n      return ruleOptions.enabled;\n    } else if (runOnly.type === 'tag' && runOnly.values) {\n      return matchTags(rule, runOnly.values);\n    } else {\n      return matchTags(rule, []);\n    }\n  };\n  'use strict';\n  function getScroll(elm) {\n    var style = window.getComputedStyle(elm);\n    var visibleOverflowY = style.getPropertyValue('overflow-y') === 'visible';\n    var visibleOverflowX = style.getPropertyValue('overflow-x') === 'visible';\n    if (!visibleOverflowY && elm.scrollHeight > elm.clientHeight || !visibleOverflowX && elm.scrollWidth > elm.clientWidth) {\n      return {\n        elm: elm,\n        top: elm.scrollTop,\n        left: elm.scrollLeft\n      };\n    }\n  }\n  function setScroll(elm, top, left) {\n    if (elm === window) {\n      return elm.scroll(top, left);\n    } else {\n      elm.scrollTop = top;\n      elm.scrollLeft = left;\n    }\n  }\n  function getElmScrollRecursive(root) {\n    return Array.from(root.children).reduce(function(scrolls, elm) {\n      var scroll = getScroll(elm);\n      if (scroll) {\n        scrolls.push(scroll);\n      }\n      return scrolls.concat(getElmScrollRecursive(elm));\n    }, []);\n  }\n  axe.utils.getScrollState = function getScrollState() {\n    var win = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;\n    var root = win.document.documentElement;\n    var windowScroll = [ win.pageXOffset !== undefined ? {\n      elm: win,\n      top: win.pageYOffset,\n      left: win.pageXOffset\n    } : {\n      elm: root,\n      top: root.scrollTop,\n      left: root.scrollLeft\n    } ];\n    return windowScroll.concat(getElmScrollRecursive(document.body));\n  };\n  axe.utils.setScrollState = function setScrollState(scrollState) {\n    scrollState.forEach(function(_ref) {\n      var elm = _ref.elm, top = _ref.top, left = _ref.left;\n      return setScroll(elm, top, left);\n    });\n  };\n  'use strict';\n  function getDeepest(collection) {\n    'use strict';\n    return collection.sort(function(a, b) {\n      if (axe.utils.contains(a, b)) {\n        return 1;\n      }\n      return -1;\n    })[0];\n  }\n  function isNodeInContext(node, context) {\n    'use strict';\n    var include = context.include && getDeepest(context.include.filter(function(candidate) {\n      return axe.utils.contains(candidate, node);\n    }));\n    var exclude = context.exclude && getDeepest(context.exclude.filter(function(candidate) {\n      return axe.utils.contains(candidate, node);\n    }));\n    if (!exclude && include || exclude && axe.utils.contains(exclude, include)) {\n      return true;\n    }\n    return false;\n  }\n  function pushNode(result, nodes) {\n    'use strict';\n    var temp;\n    if (result.length === 0) {\n      return nodes;\n    }\n    if (result.length < nodes.length) {\n      temp = result;\n      result = nodes;\n      nodes = temp;\n    }\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (!result.includes(nodes[i])) {\n        result.push(nodes[i]);\n      }\n    }\n    return result;\n  }\n  function reduceIncludes(includes) {\n    return includes.reduce(function(res, el) {\n      if (!res.length || !res[res.length - 1].actualNode.contains(el.actualNode)) {\n        res.push(el);\n      }\n      return res;\n    }, []);\n  }\n  axe.utils.select = function select(selector, context) {\n    'use strict';\n    var result = [], candidate;\n    if (axe._selectCache) {\n      for (var j = 0, l = axe._selectCache.length; j < l; j++) {\n        var item = axe._selectCache[j];\n        if (item.selector === selector) {\n          return item.result;\n        }\n      }\n    }\n    var curried = function(context) {\n      return function(node) {\n        return isNodeInContext(node, context);\n      };\n    }(context);\n    var reducedIncludes = reduceIncludes(context.include);\n    for (var i = 0; i < reducedIncludes.length; i++) {\n      candidate = reducedIncludes[i];\n      if (candidate.actualNode.nodeType === candidate.actualNode.ELEMENT_NODE && axe.utils.matchesSelector(candidate.actualNode, selector) && curried(candidate)) {\n        result = pushNode(result, [ candidate ]);\n      }\n      result = pushNode(result, axe.utils.querySelectorAllFilter(candidate, selector, curried));\n    }\n    if (axe._selectCache) {\n      axe._selectCache.push({\n        selector: selector,\n        result: result\n      });\n    }\n    return result;\n  };\n  'use strict';\n  axe.utils.toArray = function(thing) {\n    'use strict';\n    return Array.prototype.slice.call(thing);\n  };\n  axe.utils.uniqueArray = function(arr1, arr2) {\n    return arr1.concat(arr2).filter(function(elem, pos, arr) {\n      return arr.indexOf(elem) === pos;\n    });\n  };\n  'use strict';\n  axe.utils.tokenList = function(str) {\n    'use strict';\n    return str.trim().replace(/\\s{2,}/g, ' ').split(' ');\n  };\n  'use strict';\n  var uuid;\n  (function(_global) {\n    var _rng;\n    var _crypto = _global.crypto || _global.msCrypto;\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      var _rnds8 = new Uint8Array(16);\n      _rng = function whatwgRNG() {\n        _crypto.getRandomValues(_rnds8);\n        return _rnds8;\n      };\n    }\n    if (!_rng) {\n      var _rnds = new Array(16);\n      _rng = function _rng() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 3) === 0) {\n            r = Math.random() * 4294967296;\n          }\n          _rnds[i] = r >>> ((i & 3) << 3) & 255;\n        }\n        return _rnds;\n      };\n    }\n    var BufferClass = typeof _global.Buffer == 'function' ? _global.Buffer : Array;\n    var _byteToHex = [];\n    var _hexToByte = {};\n    for (var i = 0; i < 256; i++) {\n      _byteToHex[i] = (i + 256).toString(16).substr(1);\n      _hexToByte[_byteToHex[i]] = i;\n    }\n    function parse(s, buf, offset) {\n      var i = buf && offset || 0, ii = 0;\n      buf = buf || [];\n      s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n        if (ii < 16) {\n          buf[i + ii++] = _hexToByte[oct];\n        }\n      });\n      while (ii < 16) {\n        buf[i + ii++] = 0;\n      }\n      return buf;\n    }\n    function unparse(buf, offset) {\n      var i = offset || 0, bth = _byteToHex;\n      return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];\n    }\n    var _seedBytes = _rng();\n    var _nodeId = [ _seedBytes[0] | 1, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5] ];\n    var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 16383;\n    var _lastMSecs = 0, _lastNSecs = 0;\n    function v1(options, buf, offset) {\n      var i = buf && offset || 0;\n      var b = buf || [];\n      options = options || {};\n      var clockseq = options.clockseq != null ? options.clockseq : _clockseq;\n      var msecs = options.msecs != null ? options.msecs : new Date().getTime();\n      var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;\n      var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;\n      if (dt < 0 && options.clockseq == null) {\n        clockseq = clockseq + 1 & 16383;\n      }\n      if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n        nsecs = 0;\n      }\n      if (nsecs >= 1e4) {\n        throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n      }\n      _lastMSecs = msecs;\n      _lastNSecs = nsecs;\n      _clockseq = clockseq;\n      msecs += 122192928e5;\n      var tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;\n      b[i++] = tl >>> 24 & 255;\n      b[i++] = tl >>> 16 & 255;\n      b[i++] = tl >>> 8 & 255;\n      b[i++] = tl & 255;\n      var tmh = msecs / 4294967296 * 1e4 & 268435455;\n      b[i++] = tmh >>> 8 & 255;\n      b[i++] = tmh & 255;\n      b[i++] = tmh >>> 24 & 15 | 16;\n      b[i++] = tmh >>> 16 & 255;\n      b[i++] = clockseq >>> 8 | 128;\n      b[i++] = clockseq & 255;\n      var node = options.node || _nodeId;\n      for (var n = 0; n < 6; n++) {\n        b[i + n] = node[n];\n      }\n      return buf ? buf : unparse(b);\n    }\n    function v4(options, buf, offset) {\n      var i = buf && offset || 0;\n      if (typeof options == 'string') {\n        buf = options == 'binary' ? new BufferClass(16) : null;\n        options = null;\n      }\n      options = options || {};\n      var rnds = options.random || (options.rng || _rng)();\n      rnds[6] = rnds[6] & 15 | 64;\n      rnds[8] = rnds[8] & 63 | 128;\n      if (buf) {\n        for (var ii = 0; ii < 16; ii++) {\n          buf[i + ii] = rnds[ii];\n        }\n      }\n      return buf || unparse(rnds);\n    }\n    uuid = v4;\n    uuid.v1 = v1;\n    uuid.v4 = v4;\n    uuid.parse = parse;\n    uuid.unparse = unparse;\n    uuid.BufferClass = BufferClass;\n  })(window);\n  'use strict';\n  axe.utils.validInputTypes = function validInputTypes() {\n    'use strict';\n    return [ 'hidden', 'text', 'search', 'tel', 'url', 'email', 'password', 'date', 'month', 'week', 'time', 'datetime-local', 'number', 'range', 'color', 'checkbox', 'radio', 'file', 'submit', 'image', 'reset', 'button' ];\n  };\n  'use strict';\n  var langs = [ 'aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'in', 'io', 'is', 'it', 'iu', 'iw', 'ja', 'ji', 'jv', 'jw', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mo', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu', 'aaa', 'aab', 'aac', 'aad', 'aae', 'aaf', 'aag', 'aah', 'aai', 'aak', 'aal', 'aam', 'aan', 'aao', 'aap', 'aaq', 'aas', 'aat', 'aau', 'aav', 'aaw', 'aax', 'aaz', 'aba', 'abb', 'abc', 'abd', 'abe', 'abf', 'abg', 'abh', 'abi', 'abj', 'abl', 'abm', 'abn', 'abo', 'abp', 'abq', 'abr', 'abs', 'abt', 'abu', 'abv', 'abw', 'abx', 'aby', 'abz', 'aca', 'acb', 'acd', 'ace', 'acf', 'ach', 'aci', 'ack', 'acl', 'acm', 'acn', 'acp', 'acq', 'acr', 'acs', 'act', 'acu', 'acv', 'acw', 'acx', 'acy', 'acz', 'ada', 'adb', 'add', 'ade', 'adf', 'adg', 'adh', 'adi', 'adj', 'adl', 'adn', 'ado', 'adp', 'adq', 'adr', 'ads', 'adt', 'adu', 'adw', 'adx', 'ady', 'adz', 'aea', 'aeb', 'aec', 'aed', 'aee', 'aek', 'ael', 'aem', 'aen', 'aeq', 'aer', 'aes', 'aeu', 'aew', 'aey', 'aez', 'afa', 'afb', 'afd', 'afe', 'afg', 'afh', 'afi', 'afk', 'afn', 'afo', 'afp', 'afs', 'aft', 'afu', 'afz', 'aga', 'agb', 'agc', 'agd', 'age', 'agf', 'agg', 'agh', 'agi', 'agj', 'agk', 'agl', 'agm', 'agn', 'ago', 'agp', 'agq', 'agr', 'ags', 'agt', 'agu', 'agv', 'agw', 'agx', 'agy', 'agz', 'aha', 'ahb', 'ahg', 'ahh', 'ahi', 'ahk', 'ahl', 'ahm', 'ahn', 'aho', 'ahp', 'ahr', 'ahs', 'aht', 'aia', 'aib', 'aic', 'aid', 'aie', 'aif', 'aig', 'aih', 'aii', 'aij', 'aik', 'ail', 'aim', 'ain', 'aio', 'aip', 'aiq', 'air', 'ais', 'ait', 'aiw', 'aix', 'aiy', 'aja', 'ajg', 'aji', 'ajn', 'ajp', 'ajt', 'aju', 'ajw', 'ajz', 'akb', 'akc', 'akd', 'ake', 'akf', 'akg', 'akh', 'aki', 'akj', 'akk', 'akl', 'akm', 'ako', 'akp', 'akq', 'akr', 'aks', 'akt', 'aku', 'akv', 'akw', 'akx', 'aky', 'akz', 'ala', 'alc', 'ald', 'ale', 'alf', 'alg', 'alh', 'ali', 'alj', 'alk', 'all', 'alm', 'aln', 'alo', 'alp', 'alq', 'alr', 'als', 'alt', 'alu', 'alv', 'alw', 'alx', 'aly', 'alz', 'ama', 'amb', 'amc', 'ame', 'amf', 'amg', 'ami', 'amj', 'amk', 'aml', 'amm', 'amn', 'amo', 'amp', 'amq', 'amr', 'ams', 'amt', 'amu', 'amv', 'amw', 'amx', 'amy', 'amz', 'ana', 'anb', 'anc', 'and', 'ane', 'anf', 'ang', 'anh', 'ani', 'anj', 'ank', 'anl', 'anm', 'ann', 'ano', 'anp', 'anq', 'anr', 'ans', 'ant', 'anu', 'anv', 'anw', 'anx', 'any', 'anz', 'aoa', 'aob', 'aoc', 'aod', 'aoe', 'aof', 'aog', 'aoh', 'aoi', 'aoj', 'aok', 'aol', 'aom', 'aon', 'aor', 'aos', 'aot', 'aou', 'aox', 'aoz', 'apa', 'apb', 'apc', 'apd', 'ape', 'apf', 'apg', 'aph', 'api', 'apj', 'apk', 'apl', 'apm', 'apn', 'apo', 'app', 'apq', 'apr', 'aps', 'apt', 'apu', 'apv', 'apw', 'apx', 'apy', 'apz', 'aqa', 'aqc', 'aqd', 'aqg', 'aql', 'aqm', 'aqn', 'aqp', 'aqr', 'aqt', 'aqz', 'arb', 'arc', 'ard', 'are', 'arh', 'ari', 'arj', 'ark', 'arl', 'arn', 'aro', 'arp', 'arq', 'arr', 'ars', 'art', 'aru', 'arv', 'arw', 'arx', 'ary', 'arz', 'asa', 'asb', 'asc', 'asd', 'ase', 'asf', 'asg', 'ash', 'asi', 'asj', 'ask', 'asl', 'asn', 'aso', 'asp', 'asq', 'asr', 'ass', 'ast', 'asu', 'asv', 'asw', 'asx', 'asy', 'asz', 'ata', 'atb', 'atc', 'atd', 'ate', 'atg', 'ath', 'ati', 'atj', 'atk', 'atl', 'atm', 'atn', 'ato', 'atp', 'atq', 'atr', 'ats', 'att', 'atu', 'atv', 'atw', 'atx', 'aty', 'atz', 'aua', 'aub', 'auc', 'aud', 'aue', 'auf', 'aug', 'auh', 'aui', 'auj', 'auk', 'aul', 'aum', 'aun', 'auo', 'aup', 'auq', 'aur', 'aus', 'aut', 'auu', 'auw', 'aux', 'auy', 'auz', 'avb', 'avd', 'avi', 'avk', 'avl', 'avm', 'avn', 'avo', 'avs', 'avt', 'avu', 'avv', 'awa', 'awb', 'awc', 'awd', 'awe', 'awg', 'awh', 'awi', 'awk', 'awm', 'awn', 'awo', 'awr', 'aws', 'awt', 'awu', 'awv', 'aww', 'awx', 'awy', 'axb', 'axe', 'axg', 'axk', 'axl', 'axm', 'axx', 'aya', 'ayb', 'ayc', 'ayd', 'aye', 'ayg', 'ayh', 'ayi', 'ayk', 'ayl', 'ayn', 'ayo', 'ayp', 'ayq', 'ayr', 'ays', 'ayt', 'ayu', 'ayx', 'ayy', 'ayz', 'aza', 'azb', 'azc', 'azd', 'azg', 'azj', 'azm', 'azn', 'azo', 'azt', 'azz', 'baa', 'bab', 'bac', 'bad', 'bae', 'baf', 'bag', 'bah', 'bai', 'baj', 'bal', 'ban', 'bao', 'bap', 'bar', 'bas', 'bat', 'bau', 'bav', 'baw', 'bax', 'bay', 'baz', 'bba', 'bbb', 'bbc', 'bbd', 'bbe', 'bbf', 'bbg', 'bbh', 'bbi', 'bbj', 'bbk', 'bbl', 'bbm', 'bbn', 'bbo', 'bbp', 'bbq', 'bbr', 'bbs', 'bbt', 'bbu', 'bbv', 'bbw', 'bbx', 'bby', 'bbz', 'bca', 'bcb', 'bcc', 'bcd', 'bce', 'bcf', 'bcg', 'bch', 'bci', 'bcj', 'bck', 'bcl', 'bcm', 'bcn', 'bco', 'bcp', 'bcq', 'bcr', 'bcs', 'bct', 'bcu', 'bcv', 'bcw', 'bcy', 'bcz', 'bda', 'bdb', 'bdc', 'bdd', 'bde', 'bdf', 'bdg', 'bdh', 'bdi', 'bdj', 'bdk', 'bdl', 'bdm', 'bdn', 'bdo', 'bdp', 'bdq', 'bdr', 'bds', 'bdt', 'bdu', 'bdv', 'bdw', 'bdx', 'bdy', 'bdz', 'bea', 'beb', 'bec', 'bed', 'bee', 'bef', 'beg', 'beh', 'bei', 'bej', 'bek', 'bem', 'beo', 'bep', 'beq', 'ber', 'bes', 'bet', 'beu', 'bev', 'bew', 'bex', 'bey', 'bez', 'bfa', 'bfb', 'bfc', 'bfd', 'bfe', 'bff', 'bfg', 'bfh', 'bfi', 'bfj', 'bfk', 'bfl', 'bfm', 'bfn', 'bfo', 'bfp', 'bfq', 'bfr', 'bfs', 'bft', 'bfu', 'bfw', 'bfx', 'bfy', 'bfz', 'bga', 'bgb', 'bgc', 'bgd', 'bge', 'bgf', 'bgg', 'bgi', 'bgj', 'bgk', 'bgl', 'bgm', 'bgn', 'bgo', 'bgp', 'bgq', 'bgr', 'bgs', 'bgt', 'bgu', 'bgv', 'bgw', 'bgx', 'bgy', 'bgz', 'bha', 'bhb', 'bhc', 'bhd', 'bhe', 'bhf', 'bhg', 'bhh', 'bhi', 'bhj', 'bhk', 'bhl', 'bhm', 'bhn', 'bho', 'bhp', 'bhq', 'bhr', 'bhs', 'bht', 'bhu', 'bhv', 'bhw', 'bhx', 'bhy', 'bhz', 'bia', 'bib', 'bic', 'bid', 'bie', 'bif', 'big', 'bij', 'bik', 'bil', 'bim', 'bin', 'bio', 'bip', 'biq', 'bir', 'bit', 'biu', 'biv', 'biw', 'bix', 'biy', 'biz', 'bja', 'bjb', 'bjc', 'bjd', 'bje', 'bjf', 'bjg', 'bjh', 'bji', 'bjj', 'bjk', 'bjl', 'bjm', 'bjn', 'bjo', 'bjp', 'bjq', 'bjr', 'bjs', 'bjt', 'bju', 'bjv', 'bjw', 'bjx', 'bjy', 'bjz', 'bka', 'bkb', 'bkc', 'bkd', 'bkf', 'bkg', 'bkh', 'bki', 'bkj', 'bkk', 'bkl', 'bkm', 'bkn', 'bko', 'bkp', 'bkq', 'bkr', 'bks', 'bkt', 'bku', 'bkv', 'bkw', 'bkx', 'bky', 'bkz', 'bla', 'blb', 'blc', 'bld', 'ble', 'blf', 'blg', 'blh', 'bli', 'blj', 'blk', 'bll', 'blm', 'bln', 'blo', 'blp', 'blq', 'blr', 'bls', 'blt', 'blv', 'blw', 'blx', 'bly', 'blz', 'bma', 'bmb', 'bmc', 'bmd', 'bme', 'bmf', 'bmg', 'bmh', 'bmi', 'bmj', 'bmk', 'bml', 'bmm', 'bmn', 'bmo', 'bmp', 'bmq', 'bmr', 'bms', 'bmt', 'bmu', 'bmv', 'bmw', 'bmx', 'bmy', 'bmz', 'bna', 'bnb', 'bnc', 'bnd', 'bne', 'bnf', 'bng', 'bni', 'bnj', 'bnk', 'bnl', 'bnm', 'bnn', 'bno', 'bnp', 'bnq', 'bnr', 'bns', 'bnt', 'bnu', 'bnv', 'bnw', 'bnx', 'bny', 'bnz', 'boa', 'bob', 'boe', 'bof', 'bog', 'boh', 'boi', 'boj', 'bok', 'bol', 'bom', 'bon', 'boo', 'bop', 'boq', 'bor', 'bot', 'bou', 'bov', 'bow', 'box', 'boy', 'boz', 'bpa', 'bpb', 'bpd', 'bpg', 'bph', 'bpi', 'bpj', 'bpk', 'bpl', 'bpm', 'bpn', 'bpo', 'bpp', 'bpq', 'bpr', 'bps', 'bpt', 'bpu', 'bpv', 'bpw', 'bpx', 'bpy', 'bpz', 'bqa', 'bqb', 'bqc', 'bqd', 'bqf', 'bqg', 'bqh', 'bqi', 'bqj', 'bqk', 'bql', 'bqm', 'bqn', 'bqo', 'bqp', 'bqq', 'bqr', 'bqs', 'bqt', 'bqu', 'bqv', 'bqw', 'bqx', 'bqy', 'bqz', 'bra', 'brb', 'brc', 'brd', 'brf', 'brg', 'brh', 'bri', 'brj', 'brk', 'brl', 'brm', 'brn', 'bro', 'brp', 'brq', 'brr', 'brs', 'brt', 'bru', 'brv', 'brw', 'brx', 'bry', 'brz', 'bsa', 'bsb', 'bsc', 'bse', 'bsf', 'bsg', 'bsh', 'bsi', 'bsj', 'bsk', 'bsl', 'bsm', 'bsn', 'bso', 'bsp', 'bsq', 'bsr', 'bss', 'bst', 'bsu', 'bsv', 'bsw', 'bsx', 'bsy', 'bta', 'btb', 'btc', 'btd', 'bte', 'btf', 'btg', 'bth', 'bti', 'btj', 'btk', 'btl', 'btm', 'btn', 'bto', 'btp', 'btq', 'btr', 'bts', 'btt', 'btu', 'btv', 'btw', 'btx', 'bty', 'btz', 'bua', 'bub', 'buc', 'bud', 'bue', 'buf', 'bug', 'buh', 'bui', 'buj', 'buk', 'bum', 'bun', 'buo', 'bup', 'buq', 'bus', 'but', 'buu', 'buv', 'buw', 'bux', 'buy', 'buz', 'bva', 'bvb', 'bvc', 'bvd', 'bve', 'bvf', 'bvg', 'bvh', 'bvi', 'bvj', 'bvk', 'bvl', 'bvm', 'bvn', 'bvo', 'bvp', 'bvq', 'bvr', 'bvt', 'bvu', 'bvv', 'bvw', 'bvx', 'bvy', 'bvz', 'bwa', 'bwb', 'bwc', 'bwd', 'bwe', 'bwf', 'bwg', 'bwh', 'bwi', 'bwj', 'bwk', 'bwl', 'bwm', 'bwn', 'bwo', 'bwp', 'bwq', 'bwr', 'bws', 'bwt', 'bwu', 'bww', 'bwx', 'bwy', 'bwz', 'bxa', 'bxb', 'bxc', 'bxd', 'bxe', 'bxf', 'bxg', 'bxh', 'bxi', 'bxj', 'bxk', 'bxl', 'bxm', 'bxn', 'bxo', 'bxp', 'bxq', 'bxr', 'bxs', 'bxu', 'bxv', 'bxw', 'bxx', 'bxz', 'bya', 'byb', 'byc', 'byd', 'bye', 'byf', 'byg', 'byh', 'byi', 'byj', 'byk', 'byl', 'bym', 'byn', 'byo', 'byp', 'byq', 'byr', 'bys', 'byt', 'byv', 'byw', 'byx', 'byy', 'byz', 'bza', 'bzb', 'bzc', 'bzd', 'bze', 'bzf', 'bzg', 'bzh', 'bzi', 'bzj', 'bzk', 'bzl', 'bzm', 'bzn', 'bzo', 'bzp', 'bzq', 'bzr', 'bzs', 'bzt', 'bzu', 'bzv', 'bzw', 'bzx', 'bzy', 'bzz', 'caa', 'cab', 'cac', 'cad', 'cae', 'caf', 'cag', 'cah', 'cai', 'caj', 'cak', 'cal', 'cam', 'can', 'cao', 'cap', 'caq', 'car', 'cas', 'cau', 'cav', 'caw', 'cax', 'cay', 'caz', 'cba', 'cbb', 'cbc', 'cbd', 'cbe', 'cbg', 'cbh', 'cbi', 'cbj', 'cbk', 'cbl', 'cbn', 'cbo', 'cbq', 'cbr', 'cbs', 'cbt', 'cbu', 'cbv', 'cbw', 'cby', 'cca', 'ccc', 'ccd', 'cce', 'ccg', 'cch', 'ccj', 'ccl', 'ccm', 'ccn', 'cco', 'ccp', 'ccq', 'ccr', 'ccs', 'cda', 'cdc', 'cdd', 'cde', 'cdf', 'cdg', 'cdh', 'cdi', 'cdj', 'cdm', 'cdn', 'cdo', 'cdr', 'cds', 'cdy', 'cdz', 'cea', 'ceb', 'ceg', 'cek', 'cel', 'cen', 'cet', 'cfa', 'cfd', 'cfg', 'cfm', 'cga', 'cgc', 'cgg', 'cgk', 'chb', 'chc', 'chd', 'chf', 'chg', 'chh', 'chj', 'chk', 'chl', 'chm', 'chn', 'cho', 'chp', 'chq', 'chr', 'cht', 'chw', 'chx', 'chy', 'chz', 'cia', 'cib', 'cic', 'cid', 'cie', 'cih', 'cik', 'cim', 'cin', 'cip', 'cir', 'ciw', 'ciy', 'cja', 'cje', 'cjh', 'cji', 'cjk', 'cjm', 'cjn', 'cjo', 'cjp', 'cjr', 'cjs', 'cjv', 'cjy', 'cka', 'ckb', 'ckh', 'ckl', 'ckn', 'cko', 'ckq', 'ckr', 'cks', 'ckt', 'cku', 'ckv', 'ckx', 'cky', 'ckz', 'cla', 'clc', 'cld', 'cle', 'clh', 'cli', 'clj', 'clk', 'cll', 'clm', 'clo', 'clt', 'clu', 'clw', 'cly', 'cma', 'cmc', 'cme', 'cmg', 'cmi', 'cmk', 'cml', 'cmm', 'cmn', 'cmo', 'cmr', 'cms', 'cmt', 'cna', 'cnb', 'cnc', 'cng', 'cnh', 'cni', 'cnk', 'cnl', 'cno', 'cnr', 'cns', 'cnt', 'cnu', 'cnw', 'cnx', 'coa', 'cob', 'coc', 'cod', 'coe', 'cof', 'cog', 'coh', 'coj', 'cok', 'col', 'com', 'con', 'coo', 'cop', 'coq', 'cot', 'cou', 'cov', 'cow', 'cox', 'coy', 'coz', 'cpa', 'cpb', 'cpc', 'cpe', 'cpf', 'cpg', 'cpi', 'cpn', 'cpo', 'cpp', 'cps', 'cpu', 'cpx', 'cpy', 'cqd', 'cqu', 'cra', 'crb', 'crc', 'crd', 'crf', 'crg', 'crh', 'cri', 'crj', 'crk', 'crl', 'crm', 'crn', 'cro', 'crp', 'crq', 'crr', 'crs', 'crt', 'crv', 'crw', 'crx', 'cry', 'crz', 'csa', 'csb', 'csc', 'csd', 'cse', 'csf', 'csg', 'csh', 'csi', 'csj', 'csk', 'csl', 'csm', 'csn', 'cso', 'csq', 'csr', 'css', 'cst', 'csu', 'csv', 'csw', 'csy', 'csz', 'cta', 'ctc', 'ctd', 'cte', 'ctg', 'cth', 'ctl', 'ctm', 'ctn', 'cto', 'ctp', 'cts', 'ctt', 'ctu', 'ctz', 'cua', 'cub', 'cuc', 'cug', 'cuh', 'cui', 'cuj', 'cuk', 'cul', 'cum', 'cuo', 'cup', 'cuq', 'cur', 'cus', 'cut', 'cuu', 'cuv', 'cuw', 'cux', 'cuy', 'cvg', 'cvn', 'cwa', 'cwb', 'cwd', 'cwe', 'cwg', 'cwt', 'cya', 'cyb', 'cyo', 'czh', 'czk', 'czn', 'czo', 'czt', 'daa', 'dac', 'dad', 'dae', 'daf', 'dag', 'dah', 'dai', 'daj', 'dak', 'dal', 'dam', 'dao', 'dap', 'daq', 'dar', 'das', 'dau', 'dav', 'daw', 'dax', 'day', 'daz', 'dba', 'dbb', 'dbd', 'dbe', 'dbf', 'dbg', 'dbi', 'dbj', 'dbl', 'dbm', 'dbn', 'dbo', 'dbp', 'dbq', 'dbr', 'dbt', 'dbu', 'dbv', 'dbw', 'dby', 'dcc', 'dcr', 'dda', 'ddd', 'dde', 'ddg', 'ddi', 'ddj', 'ddn', 'ddo', 'ddr', 'dds', 'ddw', 'dec', 'ded', 'dee', 'def', 'deg', 'deh', 'dei', 'dek', 'del', 'dem', 'den', 'dep', 'deq', 'der', 'des', 'dev', 'dez', 'dga', 'dgb', 'dgc', 'dgd', 'dge', 'dgg', 'dgh', 'dgi', 'dgk', 'dgl', 'dgn', 'dgo', 'dgr', 'dgs', 'dgt', 'dgu', 'dgw', 'dgx', 'dgz', 'dha', 'dhd', 'dhg', 'dhi', 'dhl', 'dhm', 'dhn', 'dho', 'dhr', 'dhs', 'dhu', 'dhv', 'dhw', 'dhx', 'dia', 'dib', 'dic', 'did', 'dif', 'dig', 'dih', 'dii', 'dij', 'dik', 'dil', 'dim', 'din', 'dio', 'dip', 'diq', 'dir', 'dis', 'dit', 'diu', 'diw', 'dix', 'diy', 'diz', 'dja', 'djb', 'djc', 'djd', 'dje', 'djf', 'dji', 'djj', 'djk', 'djl', 'djm', 'djn', 'djo', 'djr', 'dju', 'djw', 'dka', 'dkk', 'dkl', 'dkr', 'dks', 'dkx', 'dlg', 'dlk', 'dlm', 'dln', 'dma', 'dmb', 'dmc', 'dmd', 'dme', 'dmg', 'dmk', 'dml', 'dmm', 'dmn', 'dmo', 'dmr', 'dms', 'dmu', 'dmv', 'dmw', 'dmx', 'dmy', 'dna', 'dnd', 'dne', 'dng', 'dni', 'dnj', 'dnk', 'dnn', 'dnr', 'dnt', 'dnu', 'dnv', 'dnw', 'dny', 'doa', 'dob', 'doc', 'doe', 'dof', 'doh', 'doi', 'dok', 'dol', 'don', 'doo', 'dop', 'doq', 'dor', 'dos', 'dot', 'dov', 'dow', 'dox', 'doy', 'doz', 'dpp', 'dra', 'drb', 'drc', 'drd', 'dre', 'drg', 'drh', 'dri', 'drl', 'drn', 'dro', 'drq', 'drr', 'drs', 'drt', 'dru', 'drw', 'dry', 'dsb', 'dse', 'dsh', 'dsi', 'dsl', 'dsn', 'dso', 'dsq', 'dta', 'dtb', 'dtd', 'dth', 'dti', 'dtk', 'dtm', 'dtn', 'dto', 'dtp', 'dtr', 'dts', 'dtt', 'dtu', 'dty', 'dua', 'dub', 'duc', 'dud', 'due', 'duf', 'dug', 'duh', 'dui', 'duj', 'duk', 'dul', 'dum', 'dun', 'duo', 'dup', 'duq', 'dur', 'dus', 'duu', 'duv', 'duw', 'dux', 'duy', 'duz', 'dva', 'dwa', 'dwl', 'dwr', 'dws', 'dwu', 'dww', 'dwy', 'dya', 'dyb', 'dyd', 'dyg', 'dyi', 'dym', 'dyn', 'dyo', 'dyu', 'dyy', 'dza', 'dzd', 'dze', 'dzg', 'dzl', 'dzn', 'eaa', 'ebg', 'ebk', 'ebo', 'ebr', 'ebu', 'ecr', 'ecs', 'ecy', 'eee', 'efa', 'efe', 'efi', 'ega', 'egl', 'ego', 'egx', 'egy', 'ehu', 'eip', 'eit', 'eiv', 'eja', 'eka', 'ekc', 'eke', 'ekg', 'eki', 'ekk', 'ekl', 'ekm', 'eko', 'ekp', 'ekr', 'eky', 'ele', 'elh', 'eli', 'elk', 'elm', 'elo', 'elp', 'elu', 'elx', 'ema', 'emb', 'eme', 'emg', 'emi', 'emk', 'emm', 'emn', 'emo', 'emp', 'ems', 'emu', 'emw', 'emx', 'emy', 'ena', 'enb', 'enc', 'end', 'enf', 'enh', 'enl', 'enm', 'enn', 'eno', 'enq', 'enr', 'enu', 'env', 'enw', 'enx', 'eot', 'epi', 'era', 'erg', 'erh', 'eri', 'erk', 'ero', 'err', 'ers', 'ert', 'erw', 'ese', 'esg', 'esh', 'esi', 'esk', 'esl', 'esm', 'esn', 'eso', 'esq', 'ess', 'esu', 'esx', 'esy', 'etb', 'etc', 'eth', 'etn', 'eto', 'etr', 'ets', 'ett', 'etu', 'etx', 'etz', 'euq', 'eve', 'evh', 'evn', 'ewo', 'ext', 'eya', 'eyo', 'eza', 'eze', 'faa', 'fab', 'fad', 'faf', 'fag', 'fah', 'fai', 'faj', 'fak', 'fal', 'fam', 'fan', 'fap', 'far', 'fat', 'fau', 'fax', 'fay', 'faz', 'fbl', 'fcs', 'fer', 'ffi', 'ffm', 'fgr', 'fia', 'fie', 'fil', 'fip', 'fir', 'fit', 'fiu', 'fiw', 'fkk', 'fkv', 'fla', 'flh', 'fli', 'fll', 'fln', 'flr', 'fly', 'fmp', 'fmu', 'fnb', 'fng', 'fni', 'fod', 'foi', 'fom', 'fon', 'for', 'fos', 'fox', 'fpe', 'fqs', 'frc', 'frd', 'frk', 'frm', 'fro', 'frp', 'frq', 'frr', 'frs', 'frt', 'fse', 'fsl', 'fss', 'fub', 'fuc', 'fud', 'fue', 'fuf', 'fuh', 'fui', 'fuj', 'fum', 'fun', 'fuq', 'fur', 'fut', 'fuu', 'fuv', 'fuy', 'fvr', 'fwa', 'fwe', 'gaa', 'gab', 'gac', 'gad', 'gae', 'gaf', 'gag', 'gah', 'gai', 'gaj', 'gak', 'gal', 'gam', 'gan', 'gao', 'gap', 'gaq', 'gar', 'gas', 'gat', 'gau', 'gav', 'gaw', 'gax', 'gay', 'gaz', 'gba', 'gbb', 'gbc', 'gbd', 'gbe', 'gbf', 'gbg', 'gbh', 'gbi', 'gbj', 'gbk', 'gbl', 'gbm', 'gbn', 'gbo', 'gbp', 'gbq', 'gbr', 'gbs', 'gbu', 'gbv', 'gbw', 'gbx', 'gby', 'gbz', 'gcc', 'gcd', 'gce', 'gcf', 'gcl', 'gcn', 'gcr', 'gct', 'gda', 'gdb', 'gdc', 'gdd', 'gde', 'gdf', 'gdg', 'gdh', 'gdi', 'gdj', 'gdk', 'gdl', 'gdm', 'gdn', 'gdo', 'gdq', 'gdr', 'gds', 'gdt', 'gdu', 'gdx', 'gea', 'geb', 'gec', 'ged', 'geg', 'geh', 'gei', 'gej', 'gek', 'gel', 'gem', 'geq', 'ges', 'gev', 'gew', 'gex', 'gey', 'gez', 'gfk', 'gft', 'gfx', 'gga', 'ggb', 'ggd', 'gge', 'ggg', 'ggk', 'ggl', 'ggn', 'ggo', 'ggr', 'ggt', 'ggu', 'ggw', 'gha', 'ghc', 'ghe', 'ghh', 'ghk', 'ghl', 'ghn', 'gho', 'ghr', 'ghs', 'ght', 'gia', 'gib', 'gic', 'gid', 'gie', 'gig', 'gih', 'gil', 'gim', 'gin', 'gio', 'gip', 'giq', 'gir', 'gis', 'git', 'giu', 'giw', 'gix', 'giy', 'giz', 'gji', 'gjk', 'gjm', 'gjn', 'gjr', 'gju', 'gka', 'gkd', 'gke', 'gkn', 'gko', 'gkp', 'gku', 'glc', 'gld', 'glh', 'gli', 'glj', 'glk', 'gll', 'glo', 'glr', 'glu', 'glw', 'gly', 'gma', 'gmb', 'gmd', 'gme', 'gmg', 'gmh', 'gml', 'gmm', 'gmn', 'gmq', 'gmu', 'gmv', 'gmw', 'gmx', 'gmy', 'gmz', 'gna', 'gnb', 'gnc', 'gnd', 'gne', 'gng', 'gnh', 'gni', 'gnj', 'gnk', 'gnl', 'gnm', 'gnn', 'gno', 'gnq', 'gnr', 'gnt', 'gnu', 'gnw', 'gnz', 'goa', 'gob', 'goc', 'god', 'goe', 'gof', 'gog', 'goh', 'goi', 'goj', 'gok', 'gol', 'gom', 'gon', 'goo', 'gop', 'goq', 'gor', 'gos', 'got', 'gou', 'gow', 'gox', 'goy', 'goz', 'gpa', 'gpe', 'gpn', 'gqa', 'gqi', 'gqn', 'gqr', 'gqu', 'gra', 'grb', 'grc', 'grd', 'grg', 'grh', 'gri', 'grj', 'grk', 'grm', 'gro', 'grq', 'grr', 'grs', 'grt', 'gru', 'grv', 'grw', 'grx', 'gry', 'grz', 'gse', 'gsg', 'gsl', 'gsm', 'gsn', 'gso', 'gsp', 'gss', 'gsw', 'gta', 'gti', 'gtu', 'gua', 'gub', 'guc', 'gud', 'gue', 'guf', 'gug', 'guh', 'gui', 'guk', 'gul', 'gum', 'gun', 'guo', 'gup', 'guq', 'gur', 'gus', 'gut', 'guu', 'guv', 'guw', 'gux', 'guz', 'gva', 'gvc', 'gve', 'gvf', 'gvj', 'gvl', 'gvm', 'gvn', 'gvo', 'gvp', 'gvr', 'gvs', 'gvy', 'gwa', 'gwb', 'gwc', 'gwd', 'gwe', 'gwf', 'gwg', 'gwi', 'gwj', 'gwm', 'gwn', 'gwr', 'gwt', 'gwu', 'gww', 'gwx', 'gxx', 'gya', 'gyb', 'gyd', 'gye', 'gyf', 'gyg', 'gyi', 'gyl', 'gym', 'gyn', 'gyo', 'gyr', 'gyy', 'gza', 'gzi', 'gzn', 'haa', 'hab', 'hac', 'had', 'hae', 'haf', 'hag', 'hah', 'hai', 'haj', 'hak', 'hal', 'ham', 'han', 'hao', 'hap', 'haq', 'har', 'has', 'hav', 'haw', 'hax', 'hay', 'haz', 'hba', 'hbb', 'hbn', 'hbo', 'hbu', 'hca', 'hch', 'hdn', 'hds', 'hdy', 'hea', 'hed', 'heg', 'heh', 'hei', 'hem', 'hgm', 'hgw', 'hhi', 'hhr', 'hhy', 'hia', 'hib', 'hid', 'hif', 'hig', 'hih', 'hii', 'hij', 'hik', 'hil', 'him', 'hio', 'hir', 'hit', 'hiw', 'hix', 'hji', 'hka', 'hke', 'hkk', 'hkn', 'hks', 'hla', 'hlb', 'hld', 'hle', 'hlt', 'hlu', 'hma', 'hmb', 'hmc', 'hmd', 'hme', 'hmf', 'hmg', 'hmh', 'hmi', 'hmj', 'hmk', 'hml', 'hmm', 'hmn', 'hmp', 'hmq', 'hmr', 'hms', 'hmt', 'hmu', 'hmv', 'hmw', 'hmx', 'hmy', 'hmz', 'hna', 'hnd', 'hne', 'hnh', 'hni', 'hnj', 'hnn', 'hno', 'hns', 'hnu', 'hoa', 'hob', 'hoc', 'hod', 'hoe', 'hoh', 'hoi', 'hoj', 'hok', 'hol', 'hom', 'hoo', 'hop', 'hor', 'hos', 'hot', 'hov', 'how', 'hoy', 'hoz', 'hpo', 'hps', 'hra', 'hrc', 'hre', 'hrk', 'hrm', 'hro', 'hrp', 'hrr', 'hrt', 'hru', 'hrw', 'hrx', 'hrz', 'hsb', 'hsh', 'hsl', 'hsn', 'hss', 'hti', 'hto', 'hts', 'htu', 'htx', 'hub', 'huc', 'hud', 'hue', 'huf', 'hug', 'huh', 'hui', 'huj', 'huk', 'hul', 'hum', 'huo', 'hup', 'huq', 'hur', 'hus', 'hut', 'huu', 'huv', 'huw', 'hux', 'huy', 'huz', 'hvc', 'hve', 'hvk', 'hvn', 'hvv', 'hwa', 'hwc', 'hwo', 'hya', 'hyw', 'hyx', 'iai', 'ian', 'iap', 'iar', 'iba', 'ibb', 'ibd', 'ibe', 'ibg', 'ibh', 'ibi', 'ibl', 'ibm', 'ibn', 'ibr', 'ibu', 'iby', 'ica', 'ich', 'icl', 'icr', 'ida', 'idb', 'idc', 'idd', 'ide', 'idi', 'idr', 'ids', 'idt', 'idu', 'ifa', 'ifb', 'ife', 'iff', 'ifk', 'ifm', 'ifu', 'ify', 'igb', 'ige', 'igg', 'igl', 'igm', 'ign', 'igo', 'igs', 'igw', 'ihb', 'ihi', 'ihp', 'ihw', 'iin', 'iir', 'ijc', 'ije', 'ijj', 'ijn', 'ijo', 'ijs', 'ike', 'iki', 'ikk', 'ikl', 'iko', 'ikp', 'ikr', 'iks', 'ikt', 'ikv', 'ikw', 'ikx', 'ikz', 'ila', 'ilb', 'ilg', 'ili', 'ilk', 'ill', 'ilm', 'ilo', 'ilp', 'ils', 'ilu', 'ilv', 'ilw', 'ima', 'ime', 'imi', 'iml', 'imn', 'imo', 'imr', 'ims', 'imy', 'inb', 'inc', 'ine', 'ing', 'inh', 'inj', 'inl', 'inm', 'inn', 'ino', 'inp', 'ins', 'int', 'inz', 'ior', 'iou', 'iow', 'ipi', 'ipo', 'iqu', 'iqw', 'ira', 'ire', 'irh', 'iri', 'irk', 'irn', 'iro', 'irr', 'iru', 'irx', 'iry', 'isa', 'isc', 'isd', 'ise', 'isg', 'ish', 'isi', 'isk', 'ism', 'isn', 'iso', 'isr', 'ist', 'isu', 'itb', 'itc', 'itd', 'ite', 'iti', 'itk', 'itl', 'itm', 'ito', 'itr', 'its', 'itt', 'itv', 'itw', 'itx', 'ity', 'itz', 'ium', 'ivb', 'ivv', 'iwk', 'iwm', 'iwo', 'iws', 'ixc', 'ixl', 'iya', 'iyo', 'iyx', 'izh', 'izi', 'izr', 'izz', 'jaa', 'jab', 'jac', 'jad', 'jae', 'jaf', 'jah', 'jaj', 'jak', 'jal', 'jam', 'jan', 'jao', 'jaq', 'jar', 'jas', 'jat', 'jau', 'jax', 'jay', 'jaz', 'jbe', 'jbi', 'jbj', 'jbk', 'jbn', 'jbo', 'jbr', 'jbt', 'jbu', 'jbw', 'jcs', 'jct', 'jda', 'jdg', 'jdt', 'jeb', 'jee', 'jeg', 'jeh', 'jei', 'jek', 'jel', 'jen', 'jer', 'jet', 'jeu', 'jgb', 'jge', 'jgk', 'jgo', 'jhi', 'jhs', 'jia', 'jib', 'jic', 'jid', 'jie', 'jig', 'jih', 'jii', 'jil', 'jim', 'jio', 'jiq', 'jit', 'jiu', 'jiv', 'jiy', 'jje', 'jjr', 'jka', 'jkm', 'jko', 'jkp', 'jkr', 'jku', 'jle', 'jls', 'jma', 'jmb', 'jmc', 'jmd', 'jmi', 'jml', 'jmn', 'jmr', 'jms', 'jmw', 'jmx', 'jna', 'jnd', 'jng', 'jni', 'jnj', 'jnl', 'jns', 'job', 'jod', 'jog', 'jor', 'jos', 'jow', 'jpa', 'jpr', 'jpx', 'jqr', 'jra', 'jrb', 'jrr', 'jrt', 'jru', 'jsl', 'jua', 'jub', 'juc', 'jud', 'juh', 'jui', 'juk', 'jul', 'jum', 'jun', 'juo', 'jup', 'jur', 'jus', 'jut', 'juu', 'juw', 'juy', 'jvd', 'jvn', 'jwi', 'jya', 'jye', 'jyy', 'kaa', 'kab', 'kac', 'kad', 'kae', 'kaf', 'kag', 'kah', 'kai', 'kaj', 'kak', 'kam', 'kao', 'kap', 'kaq', 'kar', 'kav', 'kaw', 'kax', 'kay', 'kba', 'kbb', 'kbc', 'kbd', 'kbe', 'kbf', 'kbg', 'kbh', 'kbi', 'kbj', 'kbk', 'kbl', 'kbm', 'kbn', 'kbo', 'kbp', 'kbq', 'kbr', 'kbs', 'kbt', 'kbu', 'kbv', 'kbw', 'kbx', 'kby', 'kbz', 'kca', 'kcb', 'kcc', 'kcd', 'kce', 'kcf', 'kcg', 'kch', 'kci', 'kcj', 'kck', 'kcl', 'kcm', 'kcn', 'kco', 'kcp', 'kcq', 'kcr', 'kcs', 'kct', 'kcu', 'kcv', 'kcw', 'kcx', 'kcy', 'kcz', 'kda', 'kdc', 'kdd', 'kde', 'kdf', 'kdg', 'kdh', 'kdi', 'kdj', 'kdk', 'kdl', 'kdm', 'kdn', 'kdo', 'kdp', 'kdq', 'kdr', 'kdt', 'kdu', 'kdv', 'kdw', 'kdx', 'kdy', 'kdz', 'kea', 'keb', 'kec', 'ked', 'kee', 'kef', 'keg', 'keh', 'kei', 'kej', 'kek', 'kel', 'kem', 'ken', 'keo', 'kep', 'keq', 'ker', 'kes', 'ket', 'keu', 'kev', 'kew', 'kex', 'key', 'kez', 'kfa', 'kfb', 'kfc', 'kfd', 'kfe', 'kff', 'kfg', 'kfh', 'kfi', 'kfj', 'kfk', 'kfl', 'kfm', 'kfn', 'kfo', 'kfp', 'kfq', 'kfr', 'kfs', 'kft', 'kfu', 'kfv', 'kfw', 'kfx', 'kfy', 'kfz', 'kga', 'kgb', 'kgc', 'kgd', 'kge', 'kgf', 'kgg', 'kgh', 'kgi', 'kgj', 'kgk', 'kgl', 'kgm', 'kgn', 'kgo', 'kgp', 'kgq', 'kgr', 'kgs', 'kgt', 'kgu', 'kgv', 'kgw', 'kgx', 'kgy', 'kha', 'khb', 'khc', 'khd', 'khe', 'khf', 'khg', 'khh', 'khi', 'khj', 'khk', 'khl', 'khn', 'kho', 'khp', 'khq', 'khr', 'khs', 'kht', 'khu', 'khv', 'khw', 'khx', 'khy', 'khz', 'kia', 'kib', 'kic', 'kid', 'kie', 'kif', 'kig', 'kih', 'kii', 'kij', 'kil', 'kim', 'kio', 'kip', 'kiq', 'kis', 'kit', 'kiu', 'kiv', 'kiw', 'kix', 'kiy', 'kiz', 'kja', 'kjb', 'kjc', 'kjd', 'kje', 'kjf', 'kjg', 'kjh', 'kji', 'kjj', 'kjk', 'kjl', 'kjm', 'kjn', 'kjo', 'kjp', 'kjq', 'kjr', 'kjs', 'kjt', 'kju', 'kjv', 'kjx', 'kjy', 'kjz', 'kka', 'kkb', 'kkc', 'kkd', 'kke', 'kkf', 'kkg', 'kkh', 'kki', 'kkj', 'kkk', 'kkl', 'kkm', 'kkn', 'kko', 'kkp', 'kkq', 'kkr', 'kks', 'kkt', 'kku', 'kkv', 'kkw', 'kkx', 'kky', 'kkz', 'kla', 'klb', 'klc', 'kld', 'kle', 'klf', 'klg', 'klh', 'kli', 'klj', 'klk', 'kll', 'klm', 'kln', 'klo', 'klp', 'klq', 'klr', 'kls', 'klt', 'klu', 'klv', 'klw', 'klx', 'kly', 'klz', 'kma', 'kmb', 'kmc', 'kmd', 'kme', 'kmf', 'kmg', 'kmh', 'kmi', 'kmj', 'kmk', 'kml', 'kmm', 'kmn', 'kmo', 'kmp', 'kmq', 'kmr', 'kms', 'kmt', 'kmu', 'kmv', 'kmw', 'kmx', 'kmy', 'kmz', 'kna', 'knb', 'knc', 'knd', 'kne', 'knf', 'kng', 'kni', 'knj', 'knk', 'knl', 'knm', 'knn', 'kno', 'knp', 'knq', 'knr', 'kns', 'knt', 'knu', 'knv', 'knw', 'knx', 'kny', 'knz', 'koa', 'koc', 'kod', 'koe', 'kof', 'kog', 'koh', 'koi', 'koj', 'kok', 'kol', 'koo', 'kop', 'koq', 'kos', 'kot', 'kou', 'kov', 'kow', 'kox', 'koy', 'koz', 'kpa', 'kpb', 'kpc', 'kpd', 'kpe', 'kpf', 'kpg', 'kph', 'kpi', 'kpj', 'kpk', 'kpl', 'kpm', 'kpn', 'kpo', 'kpp', 'kpq', 'kpr', 'kps', 'kpt', 'kpu', 'kpv', 'kpw', 'kpx', 'kpy', 'kpz', 'kqa', 'kqb', 'kqc', 'kqd', 'kqe', 'kqf', 'kqg', 'kqh', 'kqi', 'kqj', 'kqk', 'kql', 'kqm', 'kqn', 'kqo', 'kqp', 'kqq', 'kqr', 'kqs', 'kqt', 'kqu', 'kqv', 'kqw', 'kqx', 'kqy', 'kqz', 'kra', 'krb', 'krc', 'krd', 'kre', 'krf', 'krh', 'kri', 'krj', 'krk', 'krl', 'krm', 'krn', 'kro', 'krp', 'krr', 'krs', 'krt', 'kru', 'krv', 'krw', 'krx', 'kry', 'krz', 'ksa', 'ksb', 'ksc', 'ksd', 'kse', 'ksf', 'ksg', 'ksh', 'ksi', 'ksj', 'ksk', 'ksl', 'ksm', 'ksn', 'kso', 'ksp', 'ksq', 'ksr', 'kss', 'kst', 'ksu', 'ksv', 'ksw', 'ksx', 'ksy', 'ksz', 'kta', 'ktb', 'ktc', 'ktd', 'kte', 'ktf', 'ktg', 'kth', 'kti', 'ktj', 'ktk', 'ktl', 'ktm', 'ktn', 'kto', 'ktp', 'ktq', 'ktr', 'kts', 'ktt', 'ktu', 'ktv', 'ktw', 'ktx', 'kty', 'ktz', 'kub', 'kuc', 'kud', 'kue', 'kuf', 'kug', 'kuh', 'kui', 'kuj', 'kuk', 'kul', 'kum', 'kun', 'kuo', 'kup', 'kuq', 'kus', 'kut', 'kuu', 'kuv', 'kuw', 'kux', 'kuy', 'kuz', 'kva', 'kvb', 'kvc', 'kvd', 'kve', 'kvf', 'kvg', 'kvh', 'kvi', 'kvj', 'kvk', 'kvl', 'kvm', 'kvn', 'kvo', 'kvp', 'kvq', 'kvr', 'kvs', 'kvt', 'kvu', 'kvv', 'kvw', 'kvx', 'kvy', 'kvz', 'kwa', 'kwb', 'kwc', 'kwd', 'kwe', 'kwf', 'kwg', 'kwh', 'kwi', 'kwj', 'kwk', 'kwl', 'kwm', 'kwn', 'kwo', 'kwp', 'kwq', 'kwr', 'kws', 'kwt', 'kwu', 'kwv', 'kww', 'kwx', 'kwy', 'kwz', 'kxa', 'kxb', 'kxc', 'kxd', 'kxe', 'kxf', 'kxh', 'kxi', 'kxj', 'kxk', 'kxl', 'kxm', 'kxn', 'kxo', 'kxp', 'kxq', 'kxr', 'kxs', 'kxt', 'kxu', 'kxv', 'kxw', 'kxx', 'kxy', 'kxz', 'kya', 'kyb', 'kyc', 'kyd', 'kye', 'kyf', 'kyg', 'kyh', 'kyi', 'kyj', 'kyk', 'kyl', 'kym', 'kyn', 'kyo', 'kyp', 'kyq', 'kyr', 'kys', 'kyt', 'kyu', 'kyv', 'kyw', 'kyx', 'kyy', 'kyz', 'kza', 'kzb', 'kzc', 'kzd', 'kze', 'kzf', 'kzg', 'kzh', 'kzi', 'kzj', 'kzk', 'kzl', 'kzm', 'kzn', 'kzo', 'kzp', 'kzq', 'kzr', 'kzs', 'kzt', 'kzu', 'kzv', 'kzw', 'kzx', 'kzy', 'kzz', 'laa', 'lab', 'lac', 'lad', 'lae', 'laf', 'lag', 'lah', 'lai', 'laj', 'lak', 'lal', 'lam', 'lan', 'lap', 'laq', 'lar', 'las', 'lau', 'law', 'lax', 'lay', 'laz', 'lba', 'lbb', 'lbc', 'lbe', 'lbf', 'lbg', 'lbi', 'lbj', 'lbk', 'lbl', 'lbm', 'lbn', 'lbo', 'lbq', 'lbr', 'lbs', 'lbt', 'lbu', 'lbv', 'lbw', 'lbx', 'lby', 'lbz', 'lcc', 'lcd', 'lce', 'lcf', 'lch', 'lcl', 'lcm', 'lcp', 'lcq', 'lcs', 'lda', 'ldb', 'ldd', 'ldg', 'ldh', 'ldi', 'ldj', 'ldk', 'ldl', 'ldm', 'ldn', 'ldo', 'ldp', 'ldq', 'lea', 'leb', 'lec', 'led', 'lee', 'lef', 'leg', 'leh', 'lei', 'lej', 'lek', 'lel', 'lem', 'len', 'leo', 'lep', 'leq', 'ler', 'les', 'let', 'leu', 'lev', 'lew', 'lex', 'ley', 'lez', 'lfa', 'lfn', 'lga', 'lgb', 'lgg', 'lgh', 'lgi', 'lgk', 'lgl', 'lgm', 'lgn', 'lgq', 'lgr', 'lgt', 'lgu', 'lgz', 'lha', 'lhh', 'lhi', 'lhl', 'lhm', 'lhn', 'lhp', 'lhs', 'lht', 'lhu', 'lia', 'lib', 'lic', 'lid', 'lie', 'lif', 'lig', 'lih', 'lii', 'lij', 'lik', 'lil', 'lio', 'lip', 'liq', 'lir', 'lis', 'liu', 'liv', 'liw', 'lix', 'liy', 'liz', 'lja', 'lje', 'lji', 'ljl', 'ljp', 'ljw', 'ljx', 'lka', 'lkb', 'lkc', 'lkd', 'lke', 'lkh', 'lki', 'lkj', 'lkl', 'lkm', 'lkn', 'lko', 'lkr', 'lks', 'lkt', 'lku', 'lky', 'lla', 'llb', 'llc', 'lld', 'lle', 'llf', 'llg', 'llh', 'lli', 'llj', 'llk', 'lll', 'llm', 'lln', 'llo', 'llp', 'llq', 'lls', 'llu', 'llx', 'lma', 'lmb', 'lmc', 'lmd', 'lme', 'lmf', 'lmg', 'lmh', 'lmi', 'lmj', 'lmk', 'lml', 'lmm', 'lmn', 'lmo', 'lmp', 'lmq', 'lmr', 'lmu', 'lmv', 'lmw', 'lmx', 'lmy', 'lmz', 'lna', 'lnb', 'lnd', 'lng', 'lnh', 'lni', 'lnj', 'lnl', 'lnm', 'lnn', 'lno', 'lns', 'lnu', 'lnw', 'lnz', 'loa', 'lob', 'loc', 'loe', 'lof', 'log', 'loh', 'loi', 'loj', 'lok', 'lol', 'lom', 'lon', 'loo', 'lop', 'loq', 'lor', 'los', 'lot', 'lou', 'lov', 'low', 'lox', 'loy', 'loz', 'lpa', 'lpe', 'lpn', 'lpo', 'lpx', 'lra', 'lrc', 'lre', 'lrg', 'lri', 'lrk', 'lrl', 'lrm', 'lrn', 'lro', 'lrr', 'lrt', 'lrv', 'lrz', 'lsa', 'lsd', 'lse', 'lsg', 'lsh', 'lsi', 'lsl', 'lsm', 'lso', 'lsp', 'lsr', 'lss', 'lst', 'lsy', 'ltc', 'ltg', 'lth', 'lti', 'ltn', 'lto', 'lts', 'ltu', 'lua', 'luc', 'lud', 'lue', 'luf', 'lui', 'luj', 'luk', 'lul', 'lum', 'lun', 'luo', 'lup', 'luq', 'lur', 'lus', 'lut', 'luu', 'luv', 'luw', 'luy', 'luz', 'lva', 'lvk', 'lvs', 'lvu', 'lwa', 'lwe', 'lwg', 'lwh', 'lwl', 'lwm', 'lwo', 'lws', 'lwt', 'lwu', 'lww', 'lya', 'lyg', 'lyn', 'lzh', 'lzl', 'lzn', 'lzz', 'maa', 'mab', 'mad', 'mae', 'maf', 'mag', 'mai', 'maj', 'mak', 'mam', 'man', 'map', 'maq', 'mas', 'mat', 'mau', 'mav', 'maw', 'max', 'maz', 'mba', 'mbb', 'mbc', 'mbd', 'mbe', 'mbf', 'mbh', 'mbi', 'mbj', 'mbk', 'mbl', 'mbm', 'mbn', 'mbo', 'mbp', 'mbq', 'mbr', 'mbs', 'mbt', 'mbu', 'mbv', 'mbw', 'mbx', 'mby', 'mbz', 'mca', 'mcb', 'mcc', 'mcd', 'mce', 'mcf', 'mcg', 'mch', 'mci', 'mcj', 'mck', 'mcl', 'mcm', 'mcn', 'mco', 'mcp', 'mcq', 'mcr', 'mcs', 'mct', 'mcu', 'mcv', 'mcw', 'mcx', 'mcy', 'mcz', 'mda', 'mdb', 'mdc', 'mdd', 'mde', 'mdf', 'mdg', 'mdh', 'mdi', 'mdj', 'mdk', 'mdl', 'mdm', 'mdn', 'mdp', 'mdq', 'mdr', 'mds', 'mdt', 'mdu', 'mdv', 'mdw', 'mdx', 'mdy', 'mdz', 'mea', 'meb', 'mec', 'med', 'mee', 'mef', 'meg', 'meh', 'mei', 'mej', 'mek', 'mel', 'mem', 'men', 'meo', 'mep', 'meq', 'mer', 'mes', 'met', 'meu', 'mev', 'mew', 'mey', 'mez', 'mfa', 'mfb', 'mfc', 'mfd', 'mfe', 'mff', 'mfg', 'mfh', 'mfi', 'mfj', 'mfk', 'mfl', 'mfm', 'mfn', 'mfo', 'mfp', 'mfq', 'mfr', 'mfs', 'mft', 'mfu', 'mfv', 'mfw', 'mfx', 'mfy', 'mfz', 'mga', 'mgb', 'mgc', 'mgd', 'mge', 'mgf', 'mgg', 'mgh', 'mgi', 'mgj', 'mgk', 'mgl', 'mgm', 'mgn', 'mgo', 'mgp', 'mgq', 'mgr', 'mgs', 'mgt', 'mgu', 'mgv', 'mgw', 'mgx', 'mgy', 'mgz', 'mha', 'mhb', 'mhc', 'mhd', 'mhe', 'mhf', 'mhg', 'mhh', 'mhi', 'mhj', 'mhk', 'mhl', 'mhm', 'mhn', 'mho', 'mhp', 'mhq', 'mhr', 'mhs', 'mht', 'mhu', 'mhw', 'mhx', 'mhy', 'mhz', 'mia', 'mib', 'mic', 'mid', 'mie', 'mif', 'mig', 'mih', 'mii', 'mij', 'mik', 'mil', 'mim', 'min', 'mio', 'mip', 'miq', 'mir', 'mis', 'mit', 'miu', 'miw', 'mix', 'miy', 'miz', 'mja', 'mjb', 'mjc', 'mjd', 'mje', 'mjg', 'mjh', 'mji', 'mjj', 'mjk', 'mjl', 'mjm', 'mjn', 'mjo', 'mjp', 'mjq', 'mjr', 'mjs', 'mjt', 'mju', 'mjv', 'mjw', 'mjx', 'mjy', 'mjz', 'mka', 'mkb', 'mkc', 'mke', 'mkf', 'mkg', 'mkh', 'mki', 'mkj', 'mkk', 'mkl', 'mkm', 'mkn', 'mko', 'mkp', 'mkq', 'mkr', 'mks', 'mkt', 'mku', 'mkv', 'mkw', 'mkx', 'mky', 'mkz', 'mla', 'mlb', 'mlc', 'mld', 'mle', 'mlf', 'mlh', 'mli', 'mlj', 'mlk', 'mll', 'mlm', 'mln', 'mlo', 'mlp', 'mlq', 'mlr', 'mls', 'mlu', 'mlv', 'mlw', 'mlx', 'mlz', 'mma', 'mmb', 'mmc', 'mmd', 'mme', 'mmf', 'mmg', 'mmh', 'mmi', 'mmj', 'mmk', 'mml', 'mmm', 'mmn', 'mmo', 'mmp', 'mmq', 'mmr', 'mmt', 'mmu', 'mmv', 'mmw', 'mmx', 'mmy', 'mmz', 'mna', 'mnb', 'mnc', 'mnd', 'mne', 'mnf', 'mng', 'mnh', 'mni', 'mnj', 'mnk', 'mnl', 'mnm', 'mnn', 'mno', 'mnp', 'mnq', 'mnr', 'mns', 'mnt', 'mnu', 'mnv', 'mnw', 'mnx', 'mny', 'mnz', 'moa', 'moc', 'mod', 'moe', 'mof', 'mog', 'moh', 'moi', 'moj', 'mok', 'mom', 'moo', 'mop', 'moq', 'mor', 'mos', 'mot', 'mou', 'mov', 'mow', 'mox', 'moy', 'moz', 'mpa', 'mpb', 'mpc', 'mpd', 'mpe', 'mpg', 'mph', 'mpi', 'mpj', 'mpk', 'mpl', 'mpm', 'mpn', 'mpo', 'mpp', 'mpq', 'mpr', 'mps', 'mpt', 'mpu', 'mpv', 'mpw', 'mpx', 'mpy', 'mpz', 'mqa', 'mqb', 'mqc', 'mqe', 'mqf', 'mqg', 'mqh', 'mqi', 'mqj', 'mqk', 'mql', 'mqm', 'mqn', 'mqo', 'mqp', 'mqq', 'mqr', 'mqs', 'mqt', 'mqu', 'mqv', 'mqw', 'mqx', 'mqy', 'mqz', 'mra', 'mrb', 'mrc', 'mrd', 'mre', 'mrf', 'mrg', 'mrh', 'mrj', 'mrk', 'mrl', 'mrm', 'mrn', 'mro', 'mrp', 'mrq', 'mrr', 'mrs', 'mrt', 'mru', 'mrv', 'mrw', 'mrx', 'mry', 'mrz', 'msb', 'msc', 'msd', 'mse', 'msf', 'msg', 'msh', 'msi', 'msj', 'msk', 'msl', 'msm', 'msn', 'mso', 'msp', 'msq', 'msr', 'mss', 'mst', 'msu', 'msv', 'msw', 'msx', 'msy', 'msz', 'mta', 'mtb', 'mtc', 'mtd', 'mte', 'mtf', 'mtg', 'mth', 'mti', 'mtj', 'mtk', 'mtl', 'mtm', 'mtn', 'mto', 'mtp', 'mtq', 'mtr', 'mts', 'mtt', 'mtu', 'mtv', 'mtw', 'mtx', 'mty', 'mua', 'mub', 'muc', 'mud', 'mue', 'mug', 'muh', 'mui', 'muj', 'muk', 'mul', 'mum', 'mun', 'muo', 'mup', 'muq', 'mur', 'mus', 'mut', 'muu', 'muv', 'mux', 'muy', 'muz', 'mva', 'mvb', 'mvd', 'mve', 'mvf', 'mvg', 'mvh', 'mvi', 'mvk', 'mvl', 'mvm', 'mvn', 'mvo', 'mvp', 'mvq', 'mvr', 'mvs', 'mvt', 'mvu', 'mvv', 'mvw', 'mvx', 'mvy', 'mvz', 'mwa', 'mwb', 'mwc', 'mwd', 'mwe', 'mwf', 'mwg', 'mwh', 'mwi', 'mwj', 'mwk', 'mwl', 'mwm', 'mwn', 'mwo', 'mwp', 'mwq', 'mwr', 'mws', 'mwt', 'mwu', 'mwv', 'mww', 'mwx', 'mwy', 'mwz', 'mxa', 'mxb', 'mxc', 'mxd', 'mxe', 'mxf', 'mxg', 'mxh', 'mxi', 'mxj', 'mxk', 'mxl', 'mxm', 'mxn', 'mxo', 'mxp', 'mxq', 'mxr', 'mxs', 'mxt', 'mxu', 'mxv', 'mxw', 'mxx', 'mxy', 'mxz', 'myb', 'myc', 'myd', 'mye', 'myf', 'myg', 'myh', 'myi', 'myj', 'myk', 'myl', 'mym', 'myn', 'myo', 'myp', 'myq', 'myr', 'mys', 'myt', 'myu', 'myv', 'myw', 'myx', 'myy', 'myz', 'mza', 'mzb', 'mzc', 'mzd', 'mze', 'mzg', 'mzh', 'mzi', 'mzj', 'mzk', 'mzl', 'mzm', 'mzn', 'mzo', 'mzp', 'mzq', 'mzr', 'mzs', 'mzt', 'mzu', 'mzv', 'mzw', 'mzx', 'mzy', 'mzz', 'naa', 'nab', 'nac', 'nad', 'nae', 'naf', 'nag', 'nah', 'nai', 'naj', 'nak', 'nal', 'nam', 'nan', 'nao', 'nap', 'naq', 'nar', 'nas', 'nat', 'naw', 'nax', 'nay', 'naz', 'nba', 'nbb', 'nbc', 'nbd', 'nbe', 'nbf', 'nbg', 'nbh', 'nbi', 'nbj', 'nbk', 'nbm', 'nbn', 'nbo', 'nbp', 'nbq', 'nbr', 'nbs', 'nbt', 'nbu', 'nbv', 'nbw', 'nbx', 'nby', 'nca', 'ncb', 'ncc', 'ncd', 'nce', 'ncf', 'ncg', 'nch', 'nci', 'ncj', 'nck', 'ncl', 'ncm', 'ncn', 'nco', 'ncp', 'ncq', 'ncr', 'ncs', 'nct', 'ncu', 'ncx', 'ncz', 'nda', 'ndb', 'ndc', 'ndd', 'ndf', 'ndg', 'ndh', 'ndi', 'ndj', 'ndk', 'ndl', 'ndm', 'ndn', 'ndp', 'ndq', 'ndr', 'nds', 'ndt', 'ndu', 'ndv', 'ndw', 'ndx', 'ndy', 'ndz', 'nea', 'neb', 'nec', 'ned', 'nee', 'nef', 'neg', 'neh', 'nei', 'nej', 'nek', 'nem', 'nen', 'neo', 'neq', 'ner', 'nes', 'net', 'neu', 'nev', 'new', 'nex', 'ney', 'nez', 'nfa', 'nfd', 'nfl', 'nfr', 'nfu', 'nga', 'ngb', 'ngc', 'ngd', 'nge', 'ngf', 'ngg', 'ngh', 'ngi', 'ngj', 'ngk', 'ngl', 'ngm', 'ngn', 'ngo', 'ngp', 'ngq', 'ngr', 'ngs', 'ngt', 'ngu', 'ngv', 'ngw', 'ngx', 'ngy', 'ngz', 'nha', 'nhb', 'nhc', 'nhd', 'nhe', 'nhf', 'nhg', 'nhh', 'nhi', 'nhk', 'nhm', 'nhn', 'nho', 'nhp', 'nhq', 'nhr', 'nht', 'nhu', 'nhv', 'nhw', 'nhx', 'nhy', 'nhz', 'nia', 'nib', 'nic', 'nid', 'nie', 'nif', 'nig', 'nih', 'nii', 'nij', 'nik', 'nil', 'nim', 'nin', 'nio', 'niq', 'nir', 'nis', 'nit', 'niu', 'niv', 'niw', 'nix', 'niy', 'niz', 'nja', 'njb', 'njd', 'njh', 'nji', 'njj', 'njl', 'njm', 'njn', 'njo', 'njr', 'njs', 'njt', 'nju', 'njx', 'njy', 'njz', 'nka', 'nkb', 'nkc', 'nkd', 'nke', 'nkf', 'nkg', 'nkh', 'nki', 'nkj', 'nkk', 'nkm', 'nkn', 'nko', 'nkp', 'nkq', 'nkr', 'nks', 'nkt', 'nku', 'nkv', 'nkw', 'nkx', 'nkz', 'nla', 'nlc', 'nle', 'nlg', 'nli', 'nlj', 'nlk', 'nll', 'nlm', 'nln', 'nlo', 'nlq', 'nlr', 'nlu', 'nlv', 'nlw', 'nlx', 'nly', 'nlz', 'nma', 'nmb', 'nmc', 'nmd', 'nme', 'nmf', 'nmg', 'nmh', 'nmi', 'nmj', 'nmk', 'nml', 'nmm', 'nmn', 'nmo', 'nmp', 'nmq', 'nmr', 'nms', 'nmt', 'nmu', 'nmv', 'nmw', 'nmx', 'nmy', 'nmz', 'nna', 'nnb', 'nnc', 'nnd', 'nne', 'nnf', 'nng', 'nnh', 'nni', 'nnj', 'nnk', 'nnl', 'nnm', 'nnn', 'nnp', 'nnq', 'nnr', 'nns', 'nnt', 'nnu', 'nnv', 'nnw', 'nnx', 'nny', 'nnz', 'noa', 'noc', 'nod', 'noe', 'nof', 'nog', 'noh', 'noi', 'noj', 'nok', 'nol', 'nom', 'non', 'noo', 'nop', 'noq', 'nos', 'not', 'nou', 'nov', 'now', 'noy', 'noz', 'npa', 'npb', 'npg', 'nph', 'npi', 'npl', 'npn', 'npo', 'nps', 'npu', 'npx', 'npy', 'nqg', 'nqk', 'nql', 'nqm', 'nqn', 'nqo', 'nqq', 'nqy', 'nra', 'nrb', 'nrc', 'nre', 'nrf', 'nrg', 'nri', 'nrk', 'nrl', 'nrm', 'nrn', 'nrp', 'nrr', 'nrt', 'nru', 'nrx', 'nrz', 'nsa', 'nsc', 'nsd', 'nse', 'nsf', 'nsg', 'nsh', 'nsi', 'nsk', 'nsl', 'nsm', 'nsn', 'nso', 'nsp', 'nsq', 'nsr', 'nss', 'nst', 'nsu', 'nsv', 'nsw', 'nsx', 'nsy', 'nsz', 'ntd', 'nte', 'ntg', 'nti', 'ntj', 'ntk', 'ntm', 'nto', 'ntp', 'ntr', 'nts', 'ntu', 'ntw', 'ntx', 'nty', 'ntz', 'nua', 'nub', 'nuc', 'nud', 'nue', 'nuf', 'nug', 'nuh', 'nui', 'nuj', 'nuk', 'nul', 'num', 'nun', 'nuo', 'nup', 'nuq', 'nur', 'nus', 'nut', 'nuu', 'nuv', 'nuw', 'nux', 'nuy', 'nuz', 'nvh', 'nvm', 'nvo', 'nwa', 'nwb', 'nwc', 'nwe', 'nwg', 'nwi', 'nwm', 'nwo', 'nwr', 'nwx', 'nwy', 'nxa', 'nxd', 'nxe', 'nxg', 'nxi', 'nxk', 'nxl', 'nxm', 'nxn', 'nxo', 'nxq', 'nxr', 'nxu', 'nxx', 'nyb', 'nyc', 'nyd', 'nye', 'nyf', 'nyg', 'nyh', 'nyi', 'nyj', 'nyk', 'nyl', 'nym', 'nyn', 'nyo', 'nyp', 'nyq', 'nyr', 'nys', 'nyt', 'nyu', 'nyv', 'nyw', 'nyx', 'nyy', 'nza', 'nzb', 'nzd', 'nzi', 'nzk', 'nzm', 'nzs', 'nzu', 'nzy', 'nzz', 'oaa', 'oac', 'oar', 'oav', 'obi', 'obk', 'obl', 'obm', 'obo', 'obr', 'obt', 'obu', 'oca', 'och', 'oco', 'ocu', 'oda', 'odk', 'odt', 'odu', 'ofo', 'ofs', 'ofu', 'ogb', 'ogc', 'oge', 'ogg', 'ogo', 'ogu', 'oht', 'ohu', 'oia', 'oin', 'ojb', 'ojc', 'ojg', 'ojp', 'ojs', 'ojv', 'ojw', 'oka', 'okb', 'okd', 'oke', 'okg', 'okh', 'oki', 'okj', 'okk', 'okl', 'okm', 'okn', 'oko', 'okr', 'oks', 'oku', 'okv', 'okx', 'ola', 'old', 'ole', 'olk', 'olm', 'olo', 'olr', 'olt', 'olu', 'oma', 'omb', 'omc', 'ome', 'omg', 'omi', 'omk', 'oml', 'omn', 'omo', 'omp', 'omq', 'omr', 'omt', 'omu', 'omv', 'omw', 'omx', 'ona', 'onb', 'one', 'ong', 'oni', 'onj', 'onk', 'onn', 'ono', 'onp', 'onr', 'ons', 'ont', 'onu', 'onw', 'onx', 'ood', 'oog', 'oon', 'oor', 'oos', 'opa', 'opk', 'opm', 'opo', 'opt', 'opy', 'ora', 'orc', 'ore', 'org', 'orh', 'orn', 'oro', 'orr', 'ors', 'ort', 'oru', 'orv', 'orw', 'orx', 'ory', 'orz', 'osa', 'osc', 'osi', 'oso', 'osp', 'ost', 'osu', 'osx', 'ota', 'otb', 'otd', 'ote', 'oti', 'otk', 'otl', 'otm', 'otn', 'oto', 'otq', 'otr', 'ots', 'ott', 'otu', 'otw', 'otx', 'oty', 'otz', 'oua', 'oub', 'oue', 'oui', 'oum', 'oun', 'ovd', 'owi', 'owl', 'oyb', 'oyd', 'oym', 'oyy', 'ozm', 'paa', 'pab', 'pac', 'pad', 'pae', 'paf', 'pag', 'pah', 'pai', 'pak', 'pal', 'pam', 'pao', 'pap', 'paq', 'par', 'pas', 'pat', 'pau', 'pav', 'paw', 'pax', 'pay', 'paz', 'pbb', 'pbc', 'pbe', 'pbf', 'pbg', 'pbh', 'pbi', 'pbl', 'pbm', 'pbn', 'pbo', 'pbp', 'pbr', 'pbs', 'pbt', 'pbu', 'pbv', 'pby', 'pbz', 'pca', 'pcb', 'pcc', 'pcd', 'pce', 'pcf', 'pcg', 'pch', 'pci', 'pcj', 'pck', 'pcl', 'pcm', 'pcn', 'pcp', 'pcr', 'pcw', 'pda', 'pdc', 'pdi', 'pdn', 'pdo', 'pdt', 'pdu', 'pea', 'peb', 'ped', 'pee', 'pef', 'peg', 'peh', 'pei', 'pej', 'pek', 'pel', 'pem', 'peo', 'pep', 'peq', 'pes', 'pev', 'pex', 'pey', 'pez', 'pfa', 'pfe', 'pfl', 'pga', 'pgd', 'pgg', 'pgi', 'pgk', 'pgl', 'pgn', 'pgs', 'pgu', 'pgy', 'pgz', 'pha', 'phd', 'phg', 'phh', 'phi', 'phk', 'phl', 'phm', 'phn', 'pho', 'phq', 'phr', 'pht', 'phu', 'phv', 'phw', 'pia', 'pib', 'pic', 'pid', 'pie', 'pif', 'pig', 'pih', 'pii', 'pij', 'pil', 'pim', 'pin', 'pio', 'pip', 'pir', 'pis', 'pit', 'piu', 'piv', 'piw', 'pix', 'piy', 'piz', 'pjt', 'pka', 'pkb', 'pkc', 'pkg', 'pkh', 'pkn', 'pko', 'pkp', 'pkr', 'pks', 'pkt', 'pku', 'pla', 'plb', 'plc', 'pld', 'ple', 'plf', 'plg', 'plh', 'plj', 'plk', 'pll', 'pln', 'plo', 'plp', 'plq', 'plr', 'pls', 'plt', 'plu', 'plv', 'plw', 'ply', 'plz', 'pma', 'pmb', 'pmc', 'pmd', 'pme', 'pmf', 'pmh', 'pmi', 'pmj', 'pmk', 'pml', 'pmm', 'pmn', 'pmo', 'pmq', 'pmr', 'pms', 'pmt', 'pmu', 'pmw', 'pmx', 'pmy', 'pmz', 'pna', 'pnb', 'pnc', 'pne', 'png', 'pnh', 'pni', 'pnj', 'pnk', 'pnl', 'pnm', 'pnn', 'pno', 'pnp', 'pnq', 'pnr', 'pns', 'pnt', 'pnu', 'pnv', 'pnw', 'pnx', 'pny', 'pnz', 'poc', 'pod', 'poe', 'pof', 'pog', 'poh', 'poi', 'pok', 'pom', 'pon', 'poo', 'pop', 'poq', 'pos', 'pot', 'pov', 'pow', 'pox', 'poy', 'poz', 'ppa', 'ppe', 'ppi', 'ppk', 'ppl', 'ppm', 'ppn', 'ppo', 'ppp', 'ppq', 'ppr', 'pps', 'ppt', 'ppu', 'pqa', 'pqe', 'pqm', 'pqw', 'pra', 'prb', 'prc', 'prd', 'pre', 'prf', 'prg', 'prh', 'pri', 'prk', 'prl', 'prm', 'prn', 'pro', 'prp', 'prq', 'prr', 'prs', 'prt', 'pru', 'prw', 'prx', 'pry', 'prz', 'psa', 'psc', 'psd', 'pse', 'psg', 'psh', 'psi', 'psl', 'psm', 'psn', 'pso', 'psp', 'psq', 'psr', 'pss', 'pst', 'psu', 'psw', 'psy', 'pta', 'pth', 'pti', 'ptn', 'pto', 'ptp', 'ptq', 'ptr', 'ptt', 'ptu', 'ptv', 'ptw', 'pty', 'pua', 'pub', 'puc', 'pud', 'pue', 'puf', 'pug', 'pui', 'puj', 'puk', 'pum', 'puo', 'pup', 'puq', 'pur', 'put', 'puu', 'puw', 'pux', 'puy', 'puz', 'pwa', 'pwb', 'pwg', 'pwi', 'pwm', 'pwn', 'pwo', 'pwr', 'pww', 'pxm', 'pye', 'pym', 'pyn', 'pys', 'pyu', 'pyx', 'pyy', 'pzn', 'qaa..qtz', 'qua', 'qub', 'quc', 'qud', 'quf', 'qug', 'quh', 'qui', 'quk', 'qul', 'qum', 'qun', 'qup', 'quq', 'qur', 'qus', 'quv', 'quw', 'qux', 'quy', 'quz', 'qva', 'qvc', 'qve', 'qvh', 'qvi', 'qvj', 'qvl', 'qvm', 'qvn', 'qvo', 'qvp', 'qvs', 'qvw', 'qvy', 'qvz', 'qwa', 'qwc', 'qwe', 'qwh', 'qwm', 'qws', 'qwt', 'qxa', 'qxc', 'qxh', 'qxl', 'qxn', 'qxo', 'qxp', 'qxq', 'qxr', 'qxs', 'qxt', 'qxu', 'qxw', 'qya', 'qyp', 'raa', 'rab', 'rac', 'rad', 'raf', 'rag', 'rah', 'rai', 'raj', 'rak', 'ral', 'ram', 'ran', 'rao', 'rap', 'raq', 'rar', 'ras', 'rat', 'rau', 'rav', 'raw', 'rax', 'ray', 'raz', 'rbb', 'rbk', 'rbl', 'rbp', 'rcf', 'rdb', 'rea', 'reb', 'ree', 'reg', 'rei', 'rej', 'rel', 'rem', 'ren', 'rer', 'res', 'ret', 'rey', 'rga', 'rge', 'rgk', 'rgn', 'rgr', 'rgs', 'rgu', 'rhg', 'rhp', 'ria', 'rie', 'rif', 'ril', 'rim', 'rin', 'rir', 'rit', 'riu', 'rjg', 'rji', 'rjs', 'rka', 'rkb', 'rkh', 'rki', 'rkm', 'rkt', 'rkw', 'rma', 'rmb', 'rmc', 'rmd', 'rme', 'rmf', 'rmg', 'rmh', 'rmi', 'rmk', 'rml', 'rmm', 'rmn', 'rmo', 'rmp', 'rmq', 'rmr', 'rms', 'rmt', 'rmu', 'rmv', 'rmw', 'rmx', 'rmy', 'rmz', 'rna', 'rnd', 'rng', 'rnl', 'rnn', 'rnp', 'rnr', 'rnw', 'roa', 'rob', 'roc', 'rod', 'roe', 'rof', 'rog', 'rol', 'rom', 'roo', 'rop', 'ror', 'rou', 'row', 'rpn', 'rpt', 'rri', 'rro', 'rrt', 'rsb', 'rsi', 'rsl', 'rsm', 'rtc', 'rth', 'rtm', 'rts', 'rtw', 'rub', 'ruc', 'rue', 'ruf', 'rug', 'ruh', 'rui', 'ruk', 'ruo', 'rup', 'ruq', 'rut', 'ruu', 'ruy', 'ruz', 'rwa', 'rwk', 'rwm', 'rwo', 'rwr', 'rxd', 'rxw', 'ryn', 'rys', 'ryu', 'rzh', 'saa', 'sab', 'sac', 'sad', 'sae', 'saf', 'sah', 'sai', 'saj', 'sak', 'sal', 'sam', 'sao', 'sap', 'saq', 'sar', 'sas', 'sat', 'sau', 'sav', 'saw', 'sax', 'say', 'saz', 'sba', 'sbb', 'sbc', 'sbd', 'sbe', 'sbf', 'sbg', 'sbh', 'sbi', 'sbj', 'sbk', 'sbl', 'sbm', 'sbn', 'sbo', 'sbp', 'sbq', 'sbr', 'sbs', 'sbt', 'sbu', 'sbv', 'sbw', 'sbx', 'sby', 'sbz', 'sca', 'scb', 'sce', 'scf', 'scg', 'sch', 'sci', 'sck', 'scl', 'scn', 'sco', 'scp', 'scq', 'scs', 'sct', 'scu', 'scv', 'scw', 'scx', 'sda', 'sdb', 'sdc', 'sde', 'sdf', 'sdg', 'sdh', 'sdj', 'sdk', 'sdl', 'sdm', 'sdn', 'sdo', 'sdp', 'sdr', 'sds', 'sdt', 'sdu', 'sdv', 'sdx', 'sdz', 'sea', 'seb', 'sec', 'sed', 'see', 'sef', 'seg', 'seh', 'sei', 'sej', 'sek', 'sel', 'sem', 'sen', 'seo', 'sep', 'seq', 'ser', 'ses', 'set', 'seu', 'sev', 'sew', 'sey', 'sez', 'sfb', 'sfe', 'sfm', 'sfs', 'sfw', 'sga', 'sgb', 'sgc', 'sgd', 'sge', 'sgg', 'sgh', 'sgi', 'sgj', 'sgk', 'sgl', 'sgm', 'sgn', 'sgo', 'sgp', 'sgr', 'sgs', 'sgt', 'sgu', 'sgw', 'sgx', 'sgy', 'sgz', 'sha', 'shb', 'shc', 'shd', 'she', 'shg', 'shh', 'shi', 'shj', 'shk', 'shl', 'shm', 'shn', 'sho', 'shp', 'shq', 'shr', 'shs', 'sht', 'shu', 'shv', 'shw', 'shx', 'shy', 'shz', 'sia', 'sib', 'sid', 'sie', 'sif', 'sig', 'sih', 'sii', 'sij', 'sik', 'sil', 'sim', 'sio', 'sip', 'siq', 'sir', 'sis', 'sit', 'siu', 'siv', 'siw', 'six', 'siy', 'siz', 'sja', 'sjb', 'sjd', 'sje', 'sjg', 'sjk', 'sjl', 'sjm', 'sjn', 'sjo', 'sjp', 'sjr', 'sjs', 'sjt', 'sju', 'sjw', 'ska', 'skb', 'skc', 'skd', 'ske', 'skf', 'skg', 'skh', 'ski', 'skj', 'skk', 'skm', 'skn', 'sko', 'skp', 'skq', 'skr', 'sks', 'skt', 'sku', 'skv', 'skw', 'skx', 'sky', 'skz', 'sla', 'slc', 'sld', 'sle', 'slf', 'slg', 'slh', 'sli', 'slj', 'sll', 'slm', 'sln', 'slp', 'slq', 'slr', 'sls', 'slt', 'slu', 'slw', 'slx', 'sly', 'slz', 'sma', 'smb', 'smc', 'smd', 'smf', 'smg', 'smh', 'smi', 'smj', 'smk', 'sml', 'smm', 'smn', 'smp', 'smq', 'smr', 'sms', 'smt', 'smu', 'smv', 'smw', 'smx', 'smy', 'smz', 'snb', 'snc', 'sne', 'snf', 'sng', 'snh', 'sni', 'snj', 'snk', 'snl', 'snm', 'snn', 'sno', 'snp', 'snq', 'snr', 'sns', 'snu', 'snv', 'snw', 'snx', 'sny', 'snz', 'soa', 'sob', 'soc', 'sod', 'soe', 'sog', 'soh', 'soi', 'soj', 'sok', 'sol', 'son', 'soo', 'sop', 'soq', 'sor', 'sos', 'sou', 'sov', 'sow', 'sox', 'soy', 'soz', 'spb', 'spc', 'spd', 'spe', 'spg', 'spi', 'spk', 'spl', 'spm', 'spn', 'spo', 'spp', 'spq', 'spr', 'sps', 'spt', 'spu', 'spv', 'spx', 'spy', 'sqa', 'sqh', 'sqj', 'sqk', 'sqm', 'sqn', 'sqo', 'sqq', 'sqr', 'sqs', 'sqt', 'squ', 'sra', 'srb', 'src', 'sre', 'srf', 'srg', 'srh', 'sri', 'srk', 'srl', 'srm', 'srn', 'sro', 'srq', 'srr', 'srs', 'srt', 'sru', 'srv', 'srw', 'srx', 'sry', 'srz', 'ssa', 'ssb', 'ssc', 'ssd', 'sse', 'ssf', 'ssg', 'ssh', 'ssi', 'ssj', 'ssk', 'ssl', 'ssm', 'ssn', 'sso', 'ssp', 'ssq', 'ssr', 'sss', 'sst', 'ssu', 'ssv', 'ssx', 'ssy', 'ssz', 'sta', 'stb', 'std', 'ste', 'stf', 'stg', 'sth', 'sti', 'stj', 'stk', 'stl', 'stm', 'stn', 'sto', 'stp', 'stq', 'str', 'sts', 'stt', 'stu', 'stv', 'stw', 'sty', 'sua', 'sub', 'suc', 'sue', 'sug', 'sui', 'suj', 'suk', 'sul', 'sum', 'suq', 'sur', 'sus', 'sut', 'suv', 'suw', 'sux', 'suy', 'suz', 'sva', 'svb', 'svc', 'sve', 'svk', 'svm', 'svr', 'svs', 'svx', 'swb', 'swc', 'swf', 'swg', 'swh', 'swi', 'swj', 'swk', 'swl', 'swm', 'swn', 'swo', 'swp', 'swq', 'swr', 'sws', 'swt', 'swu', 'swv', 'sww', 'swx', 'swy', 'sxb', 'sxc', 'sxe', 'sxg', 'sxk', 'sxl', 'sxm', 'sxn', 'sxo', 'sxr', 'sxs', 'sxu', 'sxw', 'sya', 'syb', 'syc', 'syd', 'syi', 'syk', 'syl', 'sym', 'syn', 'syo', 'syr', 'sys', 'syw', 'syx', 'syy', 'sza', 'szb', 'szc', 'szd', 'sze', 'szg', 'szl', 'szn', 'szp', 'szs', 'szv', 'szw', 'taa', 'tab', 'tac', 'tad', 'tae', 'taf', 'tag', 'tai', 'taj', 'tak', 'tal', 'tan', 'tao', 'tap', 'taq', 'tar', 'tas', 'tau', 'tav', 'taw', 'tax', 'tay', 'taz', 'tba', 'tbb', 'tbc', 'tbd', 'tbe', 'tbf', 'tbg', 'tbh', 'tbi', 'tbj', 'tbk', 'tbl', 'tbm', 'tbn', 'tbo', 'tbp', 'tbq', 'tbr', 'tbs', 'tbt', 'tbu', 'tbv', 'tbw', 'tbx', 'tby', 'tbz', 'tca', 'tcb', 'tcc', 'tcd', 'tce', 'tcf', 'tcg', 'tch', 'tci', 'tck', 'tcl', 'tcm', 'tcn', 'tco', 'tcp', 'tcq', 'tcs', 'tct', 'tcu', 'tcw', 'tcx', 'tcy', 'tcz', 'tda', 'tdb', 'tdc', 'tdd', 'tde', 'tdf', 'tdg', 'tdh', 'tdi', 'tdj', 'tdk', 'tdl', 'tdm', 'tdn', 'tdo', 'tdq', 'tdr', 'tds', 'tdt', 'tdu', 'tdv', 'tdx', 'tdy', 'tea', 'teb', 'tec', 'ted', 'tee', 'tef', 'teg', 'teh', 'tei', 'tek', 'tem', 'ten', 'teo', 'tep', 'teq', 'ter', 'tes', 'tet', 'teu', 'tev', 'tew', 'tex', 'tey', 'tez', 'tfi', 'tfn', 'tfo', 'tfr', 'tft', 'tga', 'tgb', 'tgc', 'tgd', 'tge', 'tgf', 'tgg', 'tgh', 'tgi', 'tgj', 'tgn', 'tgo', 'tgp', 'tgq', 'tgr', 'tgs', 'tgt', 'tgu', 'tgv', 'tgw', 'tgx', 'tgy', 'tgz', 'thc', 'thd', 'the', 'thf', 'thh', 'thi', 'thk', 'thl', 'thm', 'thn', 'thp', 'thq', 'thr', 'ths', 'tht', 'thu', 'thv', 'thw', 'thx', 'thy', 'thz', 'tia', 'tic', 'tid', 'tie', 'tif', 'tig', 'tih', 'tii', 'tij', 'tik', 'til', 'tim', 'tin', 'tio', 'tip', 'tiq', 'tis', 'tit', 'tiu', 'tiv', 'tiw', 'tix', 'tiy', 'tiz', 'tja', 'tjg', 'tji', 'tjl', 'tjm', 'tjn', 'tjo', 'tjs', 'tju', 'tjw', 'tka', 'tkb', 'tkd', 'tke', 'tkf', 'tkg', 'tkk', 'tkl', 'tkm', 'tkn', 'tkp', 'tkq', 'tkr', 'tks', 'tkt', 'tku', 'tkv', 'tkw', 'tkx', 'tkz', 'tla', 'tlb', 'tlc', 'tld', 'tlf', 'tlg', 'tlh', 'tli', 'tlj', 'tlk', 'tll', 'tlm', 'tln', 'tlo', 'tlp', 'tlq', 'tlr', 'tls', 'tlt', 'tlu', 'tlv', 'tlw', 'tlx', 'tly', 'tma', 'tmb', 'tmc', 'tmd', 'tme', 'tmf', 'tmg', 'tmh', 'tmi', 'tmj', 'tmk', 'tml', 'tmm', 'tmn', 'tmo', 'tmp', 'tmq', 'tmr', 'tms', 'tmt', 'tmu', 'tmv', 'tmw', 'tmy', 'tmz', 'tna', 'tnb', 'tnc', 'tnd', 'tne', 'tnf', 'tng', 'tnh', 'tni', 'tnk', 'tnl', 'tnm', 'tnn', 'tno', 'tnp', 'tnq', 'tnr', 'tns', 'tnt', 'tnu', 'tnv', 'tnw', 'tnx', 'tny', 'tnz', 'tob', 'toc', 'tod', 'toe', 'tof', 'tog', 'toh', 'toi', 'toj', 'tol', 'tom', 'too', 'top', 'toq', 'tor', 'tos', 'tou', 'tov', 'tow', 'tox', 'toy', 'toz', 'tpa', 'tpc', 'tpe', 'tpf', 'tpg', 'tpi', 'tpj', 'tpk', 'tpl', 'tpm', 'tpn', 'tpo', 'tpp', 'tpq', 'tpr', 'tpt', 'tpu', 'tpv', 'tpw', 'tpx', 'tpy', 'tpz', 'tqb', 'tql', 'tqm', 'tqn', 'tqo', 'tqp', 'tqq', 'tqr', 'tqt', 'tqu', 'tqw', 'tra', 'trb', 'trc', 'trd', 'tre', 'trf', 'trg', 'trh', 'tri', 'trj', 'trk', 'trl', 'trm', 'trn', 'tro', 'trp', 'trq', 'trr', 'trs', 'trt', 'tru', 'trv', 'trw', 'trx', 'try', 'trz', 'tsa', 'tsb', 'tsc', 'tsd', 'tse', 'tsf', 'tsg', 'tsh', 'tsi', 'tsj', 'tsk', 'tsl', 'tsm', 'tsp', 'tsq', 'tsr', 'tss', 'tst', 'tsu', 'tsv', 'tsw', 'tsx', 'tsy', 'tsz', 'tta', 'ttb', 'ttc', 'ttd', 'tte', 'ttf', 'ttg', 'tth', 'tti', 'ttj', 'ttk', 'ttl', 'ttm', 'ttn', 'tto', 'ttp', 'ttq', 'ttr', 'tts', 'ttt', 'ttu', 'ttv', 'ttw', 'tty', 'ttz', 'tua', 'tub', 'tuc', 'tud', 'tue', 'tuf', 'tug', 'tuh', 'tui', 'tuj', 'tul', 'tum', 'tun', 'tuo', 'tup', 'tuq', 'tus', 'tut', 'tuu', 'tuv', 'tuw', 'tux', 'tuy', 'tuz', 'tva', 'tvd', 'tve', 'tvk', 'tvl', 'tvm', 'tvn', 'tvo', 'tvs', 'tvt', 'tvu', 'tvw', 'tvy', 'twa', 'twb', 'twc', 'twd', 'twe', 'twf', 'twg', 'twh', 'twl', 'twm', 'twn', 'two', 'twp', 'twq', 'twr', 'twt', 'twu', 'tww', 'twx', 'twy', 'txa', 'txb', 'txc', 'txe', 'txg', 'txh', 'txi', 'txj', 'txm', 'txn', 'txo', 'txq', 'txr', 'txs', 'txt', 'txu', 'txx', 'txy', 'tya', 'tye', 'tyh', 'tyi', 'tyj', 'tyl', 'tyn', 'typ', 'tyr', 'tys', 'tyt', 'tyu', 'tyv', 'tyx', 'tyz', 'tza', 'tzh', 'tzj', 'tzl', 'tzm', 'tzn', 'tzo', 'tzx', 'uam', 'uan', 'uar', 'uba', 'ubi', 'ubl', 'ubr', 'ubu', 'uby', 'uda', 'ude', 'udg', 'udi', 'udj', 'udl', 'udm', 'udu', 'ues', 'ufi', 'uga', 'ugb', 'uge', 'ugn', 'ugo', 'ugy', 'uha', 'uhn', 'uis', 'uiv', 'uji', 'uka', 'ukg', 'ukh', 'ukk', 'ukl', 'ukp', 'ukq', 'uks', 'uku', 'ukw', 'uky', 'ula', 'ulb', 'ulc', 'ule', 'ulf', 'uli', 'ulk', 'ull', 'ulm', 'uln', 'ulu', 'ulw', 'uma', 'umb', 'umc', 'umd', 'umg', 'umi', 'umm', 'umn', 'umo', 'ump', 'umr', 'ums', 'umu', 'una', 'und', 'une', 'ung', 'unk', 'unm', 'unn', 'unp', 'unr', 'unu', 'unx', 'unz', 'uok', 'upi', 'upv', 'ura', 'urb', 'urc', 'ure', 'urf', 'urg', 'urh', 'uri', 'urj', 'urk', 'url', 'urm', 'urn', 'uro', 'urp', 'urr', 'urt', 'uru', 'urv', 'urw', 'urx', 'ury', 'urz', 'usa', 'ush', 'usi', 'usk', 'usp', 'usu', 'uta', 'ute', 'utp', 'utr', 'utu', 'uum', 'uun', 'uur', 'uuu', 'uve', 'uvh', 'uvl', 'uwa', 'uya', 'uzn', 'uzs', 'vaa', 'vae', 'vaf', 'vag', 'vah', 'vai', 'vaj', 'val', 'vam', 'van', 'vao', 'vap', 'var', 'vas', 'vau', 'vav', 'vay', 'vbb', 'vbk', 'vec', 'ved', 'vel', 'vem', 'veo', 'vep', 'ver', 'vgr', 'vgt', 'vic', 'vid', 'vif', 'vig', 'vil', 'vin', 'vis', 'vit', 'viv', 'vka', 'vki', 'vkj', 'vkk', 'vkl', 'vkm', 'vko', 'vkp', 'vkt', 'vku', 'vlp', 'vls', 'vma', 'vmb', 'vmc', 'vmd', 'vme', 'vmf', 'vmg', 'vmh', 'vmi', 'vmj', 'vmk', 'vml', 'vmm', 'vmp', 'vmq', 'vmr', 'vms', 'vmu', 'vmv', 'vmw', 'vmx', 'vmy', 'vmz', 'vnk', 'vnm', 'vnp', 'vor', 'vot', 'vra', 'vro', 'vrs', 'vrt', 'vsi', 'vsl', 'vsv', 'vto', 'vum', 'vun', 'vut', 'vwa', 'waa', 'wab', 'wac', 'wad', 'wae', 'waf', 'wag', 'wah', 'wai', 'waj', 'wak', 'wal', 'wam', 'wan', 'wao', 'wap', 'waq', 'war', 'was', 'wat', 'wau', 'wav', 'waw', 'wax', 'way', 'waz', 'wba', 'wbb', 'wbe', 'wbf', 'wbh', 'wbi', 'wbj', 'wbk', 'wbl', 'wbm', 'wbp', 'wbq', 'wbr', 'wbs', 'wbt', 'wbv', 'wbw', 'wca', 'wci', 'wdd', 'wdg', 'wdj', 'wdk', 'wdu', 'wdy', 'wea', 'wec', 'wed', 'weg', 'weh', 'wei', 'wem', 'wen', 'weo', 'wep', 'wer', 'wes', 'wet', 'weu', 'wew', 'wfg', 'wga', 'wgb', 'wgg', 'wgi', 'wgo', 'wgu', 'wgw', 'wgy', 'wha', 'whg', 'whk', 'whu', 'wib', 'wic', 'wie', 'wif', 'wig', 'wih', 'wii', 'wij', 'wik', 'wil', 'wim', 'win', 'wir', 'wit', 'wiu', 'wiv', 'wiw', 'wiy', 'wja', 'wji', 'wka', 'wkb', 'wkd', 'wkl', 'wku', 'wkw', 'wky', 'wla', 'wlc', 'wle', 'wlg', 'wli', 'wlk', 'wll', 'wlm', 'wlo', 'wlr', 'wls', 'wlu', 'wlv', 'wlw', 'wlx', 'wly', 'wma', 'wmb', 'wmc', 'wmd', 'wme', 'wmh', 'wmi', 'wmm', 'wmn', 'wmo', 'wms', 'wmt', 'wmw', 'wmx', 'wnb', 'wnc', 'wnd', 'wne', 'wng', 'wni', 'wnk', 'wnm', 'wnn', 'wno', 'wnp', 'wnu', 'wnw', 'wny', 'woa', 'wob', 'woc', 'wod', 'woe', 'wof', 'wog', 'woi', 'wok', 'wom', 'won', 'woo', 'wor', 'wos', 'wow', 'woy', 'wpc', 'wra', 'wrb', 'wrd', 'wrg', 'wrh', 'wri', 'wrk', 'wrl', 'wrm', 'wrn', 'wro', 'wrp', 'wrr', 'wrs', 'wru', 'wrv', 'wrw', 'wrx', 'wry', 'wrz', 'wsa', 'wsg', 'wsi', 'wsk', 'wsr', 'wss', 'wsu', 'wsv', 'wtf', 'wth', 'wti', 'wtk', 'wtm', 'wtw', 'wua', 'wub', 'wud', 'wuh', 'wul', 'wum', 'wun', 'wur', 'wut', 'wuu', 'wuv', 'wux', 'wuy', 'wwa', 'wwb', 'wwo', 'wwr', 'www', 'wxa', 'wxw', 'wya', 'wyb', 'wyi', 'wym', 'wyr', 'wyy', 'xaa', 'xab', 'xac', 'xad', 'xae', 'xag', 'xai', 'xaj', 'xak', 'xal', 'xam', 'xan', 'xao', 'xap', 'xaq', 'xar', 'xas', 'xat', 'xau', 'xav', 'xaw', 'xay', 'xba', 'xbb', 'xbc', 'xbd', 'xbe', 'xbg', 'xbi', 'xbj', 'xbm', 'xbn', 'xbo', 'xbp', 'xbr', 'xbw', 'xbx', 'xby', 'xcb', 'xcc', 'xce', 'xcg', 'xch', 'xcl', 'xcm', 'xcn', 'xco', 'xcr', 'xct', 'xcu', 'xcv', 'xcw', 'xcy', 'xda', 'xdc', 'xdk', 'xdm', 'xdo', 'xdy', 'xeb', 'xed', 'xeg', 'xel', 'xem', 'xep', 'xer', 'xes', 'xet', 'xeu', 'xfa', 'xga', 'xgb', 'xgd', 'xgf', 'xgg', 'xgi', 'xgl', 'xgm', 'xgn', 'xgr', 'xgu', 'xgw', 'xha', 'xhc', 'xhd', 'xhe', 'xhr', 'xht', 'xhu', 'xhv', 'xia', 'xib', 'xii', 'xil', 'xin', 'xip', 'xir', 'xis', 'xiv', 'xiy', 'xjb', 'xjt', 'xka', 'xkb', 'xkc', 'xkd', 'xke', 'xkf', 'xkg', 'xkh', 'xki', 'xkj', 'xkk', 'xkl', 'xkn', 'xko', 'xkp', 'xkq', 'xkr', 'xks', 'xkt', 'xku', 'xkv', 'xkw', 'xkx', 'xky', 'xkz', 'xla', 'xlb', 'xlc', 'xld', 'xle', 'xlg', 'xli', 'xln', 'xlo', 'xlp', 'xls', 'xlu', 'xly', 'xma', 'xmb', 'xmc', 'xmd', 'xme', 'xmf', 'xmg', 'xmh', 'xmj', 'xmk', 'xml', 'xmm', 'xmn', 'xmo', 'xmp', 'xmq', 'xmr', 'xms', 'xmt', 'xmu', 'xmv', 'xmw', 'xmx', 'xmy', 'xmz', 'xna', 'xnb', 'xnd', 'xng', 'xnh', 'xni', 'xnk', 'xnn', 'xno', 'xnr', 'xns', 'xnt', 'xnu', 'xny', 'xnz', 'xoc', 'xod', 'xog', 'xoi', 'xok', 'xom', 'xon', 'xoo', 'xop', 'xor', 'xow', 'xpa', 'xpc', 'xpe', 'xpg', 'xpi', 'xpj', 'xpk', 'xpm', 'xpn', 'xpo', 'xpp', 'xpq', 'xpr', 'xps', 'xpt', 'xpu', 'xpy', 'xqa', 'xqt', 'xra', 'xrb', 'xrd', 'xre', 'xrg', 'xri', 'xrm', 'xrn', 'xrq', 'xrr', 'xrt', 'xru', 'xrw', 'xsa', 'xsb', 'xsc', 'xsd', 'xse', 'xsh', 'xsi', 'xsj', 'xsl', 'xsm', 'xsn', 'xso', 'xsp', 'xsq', 'xsr', 'xss', 'xsu', 'xsv', 'xsy', 'xta', 'xtb', 'xtc', 'xtd', 'xte', 'xtg', 'xth', 'xti', 'xtj', 'xtl', 'xtm', 'xtn', 'xto', 'xtp', 'xtq', 'xtr', 'xts', 'xtt', 'xtu', 'xtv', 'xtw', 'xty', 'xtz', 'xua', 'xub', 'xud', 'xug', 'xuj', 'xul', 'xum', 'xun', 'xuo', 'xup', 'xur', 'xut', 'xuu', 'xve', 'xvi', 'xvn', 'xvo', 'xvs', 'xwa', 'xwc', 'xwd', 'xwe', 'xwg', 'xwj', 'xwk', 'xwl', 'xwo', 'xwr', 'xwt', 'xww', 'xxb', 'xxk', 'xxm', 'xxr', 'xxt', 'xya', 'xyb', 'xyj', 'xyk', 'xyl', 'xyt', 'xyy', 'xzh', 'xzm', 'xzp', 'yaa', 'yab', 'yac', 'yad', 'yae', 'yaf', 'yag', 'yah', 'yai', 'yaj', 'yak', 'yal', 'yam', 'yan', 'yao', 'yap', 'yaq', 'yar', 'yas', 'yat', 'yau', 'yav', 'yaw', 'yax', 'yay', 'yaz', 'yba', 'ybb', 'ybd', 'ybe', 'ybh', 'ybi', 'ybj', 'ybk', 'ybl', 'ybm', 'ybn', 'ybo', 'ybx', 'yby', 'ych', 'ycl', 'ycn', 'ycp', 'yda', 'ydd', 'yde', 'ydg', 'ydk', 'yds', 'yea', 'yec', 'yee', 'yei', 'yej', 'yel', 'yen', 'yer', 'yes', 'yet', 'yeu', 'yev', 'yey', 'yga', 'ygi', 'ygl', 'ygm', 'ygp', 'ygr', 'ygs', 'ygu', 'ygw', 'yha', 'yhd', 'yhl', 'yhs', 'yia', 'yif', 'yig', 'yih', 'yii', 'yij', 'yik', 'yil', 'yim', 'yin', 'yip', 'yiq', 'yir', 'yis', 'yit', 'yiu', 'yiv', 'yix', 'yiy', 'yiz', 'yka', 'ykg', 'yki', 'ykk', 'ykl', 'ykm', 'ykn', 'yko', 'ykr', 'ykt', 'yku', 'yky', 'yla', 'ylb', 'yle', 'ylg', 'yli', 'yll', 'ylm', 'yln', 'ylo', 'ylr', 'ylu', 'yly', 'yma', 'ymb', 'ymc', 'ymd', 'yme', 'ymg', 'ymh', 'ymi', 'ymk', 'yml', 'ymm', 'ymn', 'ymo', 'ymp', 'ymq', 'ymr', 'yms', 'ymt', 'ymx', 'ymz', 'yna', 'ynd', 'yne', 'yng', 'ynh', 'ynk', 'ynl', 'ynn', 'yno', 'ynq', 'yns', 'ynu', 'yob', 'yog', 'yoi', 'yok', 'yol', 'yom', 'yon', 'yos', 'yot', 'yox', 'yoy', 'ypa', 'ypb', 'ypg', 'yph', 'ypk', 'ypm', 'ypn', 'ypo', 'ypp', 'ypz', 'yra', 'yrb', 'yre', 'yri', 'yrk', 'yrl', 'yrm', 'yrn', 'yro', 'yrs', 'yrw', 'yry', 'ysc', 'ysd', 'ysg', 'ysl', 'ysn', 'yso', 'ysp', 'ysr', 'yss', 'ysy', 'yta', 'ytl', 'ytp', 'ytw', 'yty', 'yua', 'yub', 'yuc', 'yud', 'yue', 'yuf', 'yug', 'yui', 'yuj', 'yuk', 'yul', 'yum', 'yun', 'yup', 'yuq', 'yur', 'yut', 'yuu', 'yuw', 'yux', 'yuy', 'yuz', 'yva', 'yvt', 'ywa', 'ywg', 'ywl', 'ywn', 'ywq', 'ywr', 'ywt', 'ywu', 'yww', 'yxa', 'yxg', 'yxl', 'yxm', 'yxu', 'yxy', 'yyr', 'yyu', 'yyz', 'yzg', 'yzk', 'zaa', 'zab', 'zac', 'zad', 'zae', 'zaf', 'zag', 'zah', 'zai', 'zaj', 'zak', 'zal', 'zam', 'zao', 'zap', 'zaq', 'zar', 'zas', 'zat', 'zau', 'zav', 'zaw', 'zax', 'zay', 'zaz', 'zbc', 'zbe', 'zbl', 'zbt', 'zbw', 'zca', 'zch', 'zdj', 'zea', 'zeg', 'zeh', 'zen', 'zga', 'zgb', 'zgh', 'zgm', 'zgn', 'zgr', 'zhb', 'zhd', 'zhi', 'zhn', 'zhw', 'zhx', 'zia', 'zib', 'zik', 'zil', 'zim', 'zin', 'zir', 'ziw', 'ziz', 'zka', 'zkb', 'zkd', 'zkg', 'zkh', 'zkk', 'zkn', 'zko', 'zkp', 'zkr', 'zkt', 'zku', 'zkv', 'zkz', 'zle', 'zlj', 'zlm', 'zln', 'zlq', 'zls', 'zlw', 'zma', 'zmb', 'zmc', 'zmd', 'zme', 'zmf', 'zmg', 'zmh', 'zmi', 'zmj', 'zmk', 'zml', 'zmm', 'zmn', 'zmo', 'zmp', 'zmq', 'zmr', 'zms', 'zmt', 'zmu', 'zmv', 'zmw', 'zmx', 'zmy', 'zmz', 'zna', 'znd', 'zne', 'zng', 'znk', 'zns', 'zoc', 'zoh', 'zom', 'zoo', 'zoq', 'zor', 'zos', 'zpa', 'zpb', 'zpc', 'zpd', 'zpe', 'zpf', 'zpg', 'zph', 'zpi', 'zpj', 'zpk', 'zpl', 'zpm', 'zpn', 'zpo', 'zpp', 'zpq', 'zpr', 'zps', 'zpt', 'zpu', 'zpv', 'zpw', 'zpx', 'zpy', 'zpz', 'zqe', 'zra', 'zrg', 'zrn', 'zro', 'zrp', 'zrs', 'zsa', 'zsk', 'zsl', 'zsm', 'zsr', 'zsu', 'zte', 'ztg', 'ztl', 'ztm', 'ztn', 'ztp', 'ztq', 'zts', 'ztt', 'ztu', 'ztx', 'zty', 'zua', 'zuh', 'zum', 'zun', 'zuy', 'zwa', 'zxx', 'zyb', 'zyg', 'zyj', 'zyn', 'zyp', 'zza', 'zzj' ];\n  axe.utils.validLangs = function() {\n    'use strict';\n    return langs;\n  };\n  'use strict';\n  var _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n  axe._load({\n    data: {\n      rules: {\n        accesskeys: {\n          description: 'Ensures every accesskey attribute value is unique',\n          help: 'accesskey attribute value must be unique'\n        },\n        'area-alt': {\n          description: 'Ensures <area> elements of image maps have alternate text',\n          help: 'Active <area> elements must have alternate text'\n        },\n        'aria-allowed-attr': {\n          description: 'Ensures ARIA attributes are allowed for an element\\'s role',\n          help: 'Elements must only use allowed ARIA attributes'\n        },\n        'aria-allowed-role': {\n          description: 'Ensures role attribute has an appropriate value for the element',\n          help: 'ARIA role must be appropriate for the element'\n        },\n        'aria-dpub-role-fallback': {\n          description: 'Ensures unsupported DPUB roles are only used on elements with implicit fallback roles',\n          help: 'Unsupported DPUB ARIA roles should be used on elements with implicit fallback roles'\n        },\n        'aria-hidden-body': {\n          description: 'Ensures aria-hidden=\\'true\\' is not present on the document body.',\n          help: 'aria-hidden=\\'true\\' must not be present on the document body'\n        },\n        'aria-hidden-focus': {\n          description: 'Ensures aria-hidden elements do not contain focusable elements',\n          help: 'ARIA hidden element must not contain focusable elements'\n        },\n        'aria-required-attr': {\n          description: 'Ensures elements with ARIA roles have all required ARIA attributes',\n          help: 'Required ARIA attributes must be provided'\n        },\n        'aria-required-children': {\n          description: 'Ensures elements with an ARIA role that require child roles contain them',\n          help: 'Certain ARIA roles must contain particular children'\n        },\n        'aria-required-parent': {\n          description: 'Ensures elements with an ARIA role that require parent roles are contained by them',\n          help: 'Certain ARIA roles must be contained by particular parents'\n        },\n        'aria-roles': {\n          description: 'Ensures all elements with a role attribute use a valid value',\n          help: 'ARIA roles used must conform to valid values'\n        },\n        'aria-valid-attr-value': {\n          description: 'Ensures all ARIA attributes have valid values',\n          help: 'ARIA attributes must conform to valid values'\n        },\n        'aria-valid-attr': {\n          description: 'Ensures attributes that begin with aria- are valid ARIA attributes',\n          help: 'ARIA attributes must conform to valid names'\n        },\n        'audio-caption': {\n          description: 'Ensures <audio> elements have captions',\n          help: '<audio> elements must have a captions track'\n        },\n        'autocomplete-valid': {\n          description: 'Ensure the autocomplete attribute is correct and suitable for the form field',\n          help: 'autocomplete attribute must be used correctly'\n        },\n        blink: {\n          description: 'Ensures <blink> elements are not used',\n          help: '<blink> elements are deprecated and must not be used'\n        },\n        'button-name': {\n          description: 'Ensures buttons have discernible text',\n          help: 'Buttons must have discernible text'\n        },\n        bypass: {\n          description: 'Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content',\n          help: 'Page must have means to bypass repeated blocks'\n        },\n        checkboxgroup: {\n          description: 'Ensures related <input type=\"checkbox\"> elements have a group and that the group designation is consistent',\n          help: 'Checkbox inputs with the same name attribute value must be part of a group'\n        },\n        'color-contrast': {\n          description: 'Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds',\n          help: 'Elements must have sufficient color contrast'\n        },\n        'css-orientation-lock': {\n          description: 'Ensures content is not locked to any specific display orientation, and the content is operable in all display orientations',\n          help: 'CSS Media queries are not used to lock display orientation'\n        },\n        'definition-list': {\n          description: 'Ensures <dl> elements are structured correctly',\n          help: '<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script> or <template> elements'\n        },\n        dlitem: {\n          description: 'Ensures <dt> and <dd> elements are contained by a <dl>',\n          help: '<dt> and <dd> elements must be contained by a <dl>'\n        },\n        'document-title': {\n          description: 'Ensures each HTML document contains a non-empty <title> element',\n          help: 'Documents must have <title> element to aid in navigation'\n        },\n        'duplicate-id-active': {\n          description: 'Ensures every id attribute value of active elements is unique',\n          help: 'IDs of active elements must be unique'\n        },\n        'duplicate-id-aria': {\n          description: 'Ensures every id attribute value used in ARIA and in labels is unique',\n          help: 'IDs used in ARIA and labels must be unique'\n        },\n        'duplicate-id': {\n          description: 'Ensures every id attribute value is unique',\n          help: 'id attribute value must be unique'\n        },\n        'empty-heading': {\n          description: 'Ensures headings have discernible text',\n          help: 'Headings must not be empty'\n        },\n        'focus-order-semantics': {\n          description: 'Ensures elements in the focus order have an appropriate role',\n          help: 'Elements in the focus order need a role appropriate for interactive content'\n        },\n        'form-field-multiple-labels': {\n          description: 'Ensures form field does not have multiple label elements',\n          help: 'Form field must not have multiple label elements'\n        },\n        'frame-tested': {\n          description: 'Ensures <iframe> and <frame> elements contain the axe-core script',\n          help: 'Frames must be tested with axe-core'\n        },\n        'frame-title-unique': {\n          description: 'Ensures <iframe> and <frame> elements contain a unique title attribute',\n          help: 'Frames must have a unique title attribute'\n        },\n        'frame-title': {\n          description: 'Ensures <iframe> and <frame> elements contain a non-empty title attribute',\n          help: 'Frames must have title attribute'\n        },\n        'heading-order': {\n          description: 'Ensures the order of headings is semantically correct',\n          help: 'Heading levels should only increase by one'\n        },\n        'hidden-content': {\n          description: 'Informs users about hidden content.',\n          help: 'Hidden content on the page cannot be analyzed'\n        },\n        'html-has-lang': {\n          description: 'Ensures every HTML document has a lang attribute',\n          help: '<html> element must have a lang attribute'\n        },\n        'html-lang-valid': {\n          description: 'Ensures the lang attribute of the <html> element has a valid value',\n          help: '<html> element must have a valid value for the lang attribute'\n        },\n        'html-xml-lang-mismatch': {\n          description: 'Ensure that HTML elements with both valid lang and xml:lang attributes agree on the base language of the page',\n          help: 'HTML elements with lang and xml:lang must have the same base language'\n        },\n        'image-alt': {\n          description: 'Ensures <img> elements have alternate text or a role of none or presentation',\n          help: 'Images must have alternate text'\n        },\n        'image-redundant-alt': {\n          description: 'Ensure button and link text is not repeated as image alternative',\n          help: 'Text of buttons and links should not be repeated in the image alternative'\n        },\n        'input-image-alt': {\n          description: 'Ensures <input type=\"image\"> elements have alternate text',\n          help: 'Image buttons must have alternate text'\n        },\n        'label-content-name-mismatch': {\n          description: 'Ensures that elements labelled through their content must have their visible text as part of their accessible name',\n          help: 'Elements must have their visible text as part of their accessible name'\n        },\n        'label-title-only': {\n          description: 'Ensures that every form element is not solely labeled using the title or aria-describedby attributes',\n          help: 'Form elements should have a visible label'\n        },\n        label: {\n          description: 'Ensures every form element has a label',\n          help: 'Form elements must have labels'\n        },\n        'landmark-banner-is-top-level': {\n          description: 'Ensures the banner landmark is at top level',\n          help: 'Banner landmark must not be contained in another landmark'\n        },\n        'landmark-complementary-is-top-level': {\n          description: 'Ensures the complementary landmark or aside is at top level',\n          help: 'Aside must not be contained in another landmark'\n        },\n        'landmark-contentinfo-is-top-level': {\n          description: 'Ensures the contentinfo landmark is at top level',\n          help: 'Contentinfo landmark must not be contained in another landmark'\n        },\n        'landmark-main-is-top-level': {\n          description: 'Ensures the main landmark is at top level',\n          help: 'Main landmark must not be contained in another landmark'\n        },\n        'landmark-no-duplicate-banner': {\n          description: 'Ensures the document has at most one banner landmark',\n          help: 'Document must not have more than one banner landmark'\n        },\n        'landmark-no-duplicate-contentinfo': {\n          description: 'Ensures the document has at most one contentinfo landmark',\n          help: 'Document must not have more than one contentinfo landmark'\n        },\n        'landmark-one-main': {\n          description: 'Ensures the document has only one main landmark and each iframe in the page has at most one main landmark',\n          help: 'Document must have one main landmark'\n        },\n        'layout-table': {\n          description: 'Ensures presentational <table> elements do not use <th>, <caption> elements or the summary attribute',\n          help: 'Layout tables must not use data table elements'\n        },\n        'link-in-text-block': {\n          description: 'Links can be distinguished without relying on color',\n          help: 'Links must be distinguished from surrounding text in a way that does not rely on color'\n        },\n        'link-name': {\n          description: 'Ensures links have discernible text',\n          help: 'Links must have discernible text'\n        },\n        list: {\n          description: 'Ensures that lists are structured correctly',\n          help: '<ul> and <ol> must only directly contain <li>, <script> or <template> elements'\n        },\n        listitem: {\n          description: 'Ensures <li> elements are used semantically',\n          help: '<li> elements must be contained in a <ul> or <ol>'\n        },\n        marquee: {\n          description: 'Ensures <marquee> elements are not used',\n          help: '<marquee> elements are deprecated and must not be used'\n        },\n        'meta-refresh': {\n          description: 'Ensures <meta http-equiv=\"refresh\"> is not used',\n          help: 'Timed refresh must not exist'\n        },\n        'meta-viewport-large': {\n          description: 'Ensures <meta name=\"viewport\"> can scale a significant amount',\n          help: 'Users should be able to zoom and scale the text up to 500%'\n        },\n        'meta-viewport': {\n          description: 'Ensures <meta name=\"viewport\"> does not disable text scaling and zooming',\n          help: 'Zooming and scaling must not be disabled'\n        },\n        'object-alt': {\n          description: 'Ensures <object> elements have alternate text',\n          help: '<object> elements must have alternate text'\n        },\n        'p-as-heading': {\n          description: 'Ensure p elements are not used to style headings',\n          help: 'Bold, italic text and font-size are not used to style p elements as a heading'\n        },\n        'page-has-heading-one': {\n          description: 'Ensure that the page, or at least one of its frames contains a level-one heading',\n          help: 'Page must contain a level-one heading'\n        },\n        radiogroup: {\n          description: 'Ensures related <input type=\"radio\"> elements have a group and that the group designation is consistent',\n          help: 'Radio inputs with the same name attribute value must be part of a group'\n        },\n        region: {\n          description: 'Ensures all page content is contained by landmarks',\n          help: 'All page content must be contained by landmarks'\n        },\n        'scope-attr-valid': {\n          description: 'Ensures the scope attribute is used correctly on tables',\n          help: 'scope attribute should be used correctly'\n        },\n        'server-side-image-map': {\n          description: 'Ensures that server-side image maps are not used',\n          help: 'Server-side image maps must not be used'\n        },\n        'skip-link': {\n          description: 'Ensure all skip links have a focusable target',\n          help: 'The skip-link target should exist and be focusable'\n        },\n        tabindex: {\n          description: 'Ensures tabindex attribute values are not greater than 0',\n          help: 'Elements should not have tabindex greater than zero'\n        },\n        'table-duplicate-name': {\n          description: 'Ensure that tables do not have the same summary and caption',\n          help: 'The <caption> element should not contain the same text as the summary attribute'\n        },\n        'table-fake-caption': {\n          description: 'Ensure that tables with a caption use the <caption> element.',\n          help: 'Data or header cells should not be used to give caption to a data table.'\n        },\n        'td-has-header': {\n          description: 'Ensure that each non-empty data cell in a large table has one or more table headers',\n          help: 'All non-empty td element in table larger than 3 by 3 must have an associated table header'\n        },\n        'td-headers-attr': {\n          description: 'Ensure that each cell in a table using the headers refers to another cell in that table',\n          help: 'All cells in a table element that use the headers attribute must only refer to other cells of that same table'\n        },\n        'th-has-data-cells': {\n          description: 'Ensure that each table header in a data table refers to data cells',\n          help: 'All th elements and elements with role=columnheader/rowheader must have data cells they describe'\n        },\n        'valid-lang': {\n          description: 'Ensures lang attributes have valid values',\n          help: 'lang attribute must have a valid value'\n        },\n        'video-caption': {\n          description: 'Ensures <video> elements have captions',\n          help: '<video> elements must have captions'\n        },\n        'video-description': {\n          description: 'Ensures <video> elements have audio descriptions',\n          help: '<video> elements must have an audio description track'\n        }\n      },\n      checks: {\n        accesskeys: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Accesskey attribute value is unique';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has multiple elements with the same accesskey';\n              return out;\n            }\n          }\n        },\n        'non-empty-alt': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a non-empty alt attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no alt attribute or the alt attribute is empty';\n              return out;\n            }\n          }\n        },\n        'non-empty-title': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a title attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no title attribute or the title attribute is empty';\n              return out;\n            }\n          }\n        },\n        'aria-label': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'aria-label attribute exists and is not empty';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-label attribute does not exist or is empty';\n              return out;\n            }\n          }\n        },\n        'aria-labelledby': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'aria-labelledby attribute exists and references elements that are visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty';\n              return out;\n            }\n          }\n        },\n        'aria-allowed-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attributes are used correctly for the defined role';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'ARIA attribute' + (it.data && it.data.length > 1 ? 's are' : ' is') + ' not allowed:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-unsupported-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attribute is supported';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'ARIA attribute is not widely supported in screen readers and assistive technologies: ';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-allowed-role': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA role is allowed for given element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'ARIA role' + (it.data && it.data.length > 1 ? 's' : '') + ' ' + it.data.join(', ') + ' ' + (it.data && it.data.length > 1 ? 'are' : ' is') + ' not allowed for given element';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'ARIA role' + (it.data && it.data.length > 1 ? 's' : '') + ' ' + it.data.join(', ') + ' must be removed when the element is made visible, as ' + (it.data && it.data.length > 1 ? 'they are' : 'it is') + ' not allowed for the element';\n              return out;\n            }\n          }\n        },\n        'implicit-role-fallback': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element’s implicit ARIA role is an appropriate fallback';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element’s implicit ARIA role is not a good fallback for the (unsupported) role';\n              return out;\n            }\n          }\n        },\n        'aria-hidden-body': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'No aria-hidden attribute is present on document body';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-hidden=true should not be present on the document body';\n              return out;\n            }\n          }\n        },\n        'focusable-disabled': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'No focusable elements contained within element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Focusable content should be disabled or be removed from the DOM';\n              return out;\n            }\n          }\n        },\n        'focusable-not-tabbable': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'No focusable elements contained within element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Focusable content should have tabindex=\\'-1\\' or be removed from the DOM';\n              return out;\n            }\n          }\n        },\n        'aria-required-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All required ARIA attributes are present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA attribute' + (it.data && it.data.length > 1 ? 's' : '') + ' not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-required-children': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Required ARIA children are present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA ' + (it.data && it.data.length > 1 ? 'children' : 'child') + ' role not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'Expecting ARIA ' + (it.data && it.data.length > 1 ? 'children' : 'child') + ' role to be added:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-required-parent': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Required ARIA parent role present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA parent' + (it.data && it.data.length > 1 ? 's' : '') + ' role not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        invalidrole: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA role is valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Role must be one of the valid ARIA roles';\n              return out;\n            }\n          }\n        },\n        abstractrole: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Abstract roles are not used';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Abstract roles cannot be directly used';\n              return out;\n            }\n          }\n        },\n        unsupportedrole: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA role is supported';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The role used is not widely supported in screen readers and assistive technologies: ';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-valid-attr-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attribute values are valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Invalid ARIA attribute value' + (it.data && it.data.length > 1 ? 's' : '') + ':';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-errormessage': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Uses a supported aria-errormessage technique';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-errormessage value' + (it.data && it.data.length > 1 ? 's' : '') + ' ';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' `' + value;\n                }\n              }\n              out += '` must use a technique to announce the message (e.g., aria-live, aria-describedby, role=alert, etc.)';\n              return out;\n            }\n          }\n        },\n        'aria-valid-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attribute name' + (it.data && it.data.length > 1 ? 's' : '') + ' are valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Invalid ARIA attribute name' + (it.data && it.data.length > 1 ? 's' : '') + ':';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        caption: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The multimedia element has a captions track';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'Check that captions is available for the element';\n              return out;\n            }\n          }\n        },\n        'autocomplete-valid': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'the autocomplete attribute is correctly formatted';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'the autocomplete attribute is incorrectly formatted';\n              return out;\n            }\n          }\n        },\n        'autocomplete-appropriate': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'the autocomplete value is on an appropriate element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'the autocomplete value is inappropriate for this type of input';\n              return out;\n            }\n          }\n        },\n        'is-on-screen': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is not visible';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element is visible';\n              return out;\n            }\n          }\n        },\n        'non-empty-if-present': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element ';\n              if (it.data) {\n                out += 'has a non-empty value attribute';\n              } else {\n                out += 'does not have a value attribute';\n              }\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has a value attribute and the value attribute is empty';\n              return out;\n            }\n          }\n        },\n        'non-empty-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a non-empty value attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no value attribute or the value attribute is empty';\n              return out;\n            }\n          }\n        },\n        'button-has-visible-text': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has inner text that is visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have inner text that is visible to screen readers';\n              return out;\n            }\n          }\n        },\n        'role-presentation': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s default semantics were overriden with role=\"presentation\"';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s default semantics were not overridden with role=\"presentation\"';\n              return out;\n            }\n          }\n        },\n        'role-none': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s default semantics were overriden with role=\"none\"';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s default semantics were not overridden with role=\"none\"';\n              return out;\n            }\n          }\n        },\n        'focusable-no-name': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is not in tab order or has accessible text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element is in tab order and does not have accessible text';\n              return out;\n            }\n          }\n        },\n        'internal-link-present': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Valid skip link found';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'No valid skip link found';\n              return out;\n            }\n          }\n        },\n        'header-present': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has a header';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page does not have a header';\n              return out;\n            }\n          }\n        },\n        landmark: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has a landmark region';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page does not have a landmark region';\n              return out;\n            }\n          }\n        },\n        'group-labelledby': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Elements with the name \"' + it.data.name + '\" have both a shared label, and a unique label, referenced through aria-labelledby';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '';\n              var code = it.data && it.data.failureCode;\n              out += 'Elements with the name \"' + it.data.name + '\" do not all have ';\n              if (code === 'no-shared-label') {\n                out += 'a shared label';\n              } else if (code === 'no-unique-label') {\n                out += 'a unique label';\n              } else {\n                out += 'both a shared label, and a unique label';\n              }\n              out += ', referenced through aria-labelledby';\n              return out;\n            }\n          }\n        },\n        fieldset: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is contained in a fieldset';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '';\n              var code = it.data && it.data.failureCode;\n              if (code === 'no-legend') {\n                out += 'Fieldset does not have a legend as its first child';\n              } else if (code === 'empty-legend') {\n                out += 'Legend does not have text that is visible to screen readers';\n              } else if (code === 'mixed-inputs') {\n                out += 'Fieldset contains unrelated inputs';\n              } else if (code === 'no-group-label') {\n                out += 'ARIA group does not have aria-label or aria-labelledby';\n              } else if (code === 'group-mixed-inputs') {\n                out += 'ARIA group contains unrelated inputs';\n              } else {\n                out += 'Element does not have a containing fieldset or ARIA group';\n              }\n              return out;\n            }\n          }\n        },\n        'color-contrast': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has sufficient color contrast of ' + it.data.contrastRatio;\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has insufficient color contrast of ' + it.data.contrastRatio + ' (foreground color: ' + it.data.fgColor + ', background color: ' + it.data.bgColor + ', font size: ' + it.data.fontSize + ', font weight: ' + it.data.fontWeight + '). Expected contrast ratio of ' + it.data.expectedContrastRatio;\n              return out;\n            },\n            incomplete: {\n              bgImage: 'Element\\'s background color could not be determined due to a background image',\n              bgGradient: 'Element\\'s background color could not be determined due to a background gradient',\n              imgNode: 'Element\\'s background color could not be determined because element contains an image node',\n              bgOverlap: 'Element\\'s background color could not be determined because it is overlapped by another element',\n              fgAlpha: 'Element\\'s foreground color could not be determined because of alpha transparency',\n              elmPartiallyObscured: 'Element\\'s background color could not be determined because it\\'s partially obscured by another element',\n              elmPartiallyObscuring: 'Element\\'s background color could not be determined because it partially overlaps other elements',\n              outsideViewport: 'Element\\'s background color could not be determined because it\\'s outside the viewport',\n              equalRatio: 'Element has a 1:1 contrast ratio with the background',\n              shortTextContent: 'Element content is too short to determine if it is actual text content',\n              default: 'Unable to determine contrast ratio'\n            }\n          }\n        },\n        'css-orientation-lock': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Display is operable, and orientation lock does not exist';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'CSS Orientation lock is applied, and makes display inoperable';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'CSS Orientation lock cannot be determined';\n              return out;\n            }\n          }\n        },\n        'structured-dlitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'When not empty, element has both <dt> and <dd> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'When not empty, element does not have at least one <dt> element followed by at least one <dd> element';\n              return out;\n            }\n          }\n        },\n        'only-dlitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List element only has direct children that are allowed inside <dt> or <dd> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List element has direct children that are not allowed inside <dt> or <dd> elements';\n              return out;\n            }\n          }\n        },\n        dlitem: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Description list item has a <dl> parent element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Description list item does not have a <dl> parent element';\n              return out;\n            }\n          }\n        },\n        'doc-has-title': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has a non-empty <title> element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document does not have a non-empty <title> element';\n              return out;\n            }\n          }\n        },\n        'duplicate-id-active': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has no active elements that share the same id attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has active elements with the same id attribute: ' + it.data;\n              return out;\n            }\n          }\n        },\n        'duplicate-id-aria': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has no elements referenced with ARIA or labels that share the same id attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has multiple elements referenced with ARIA with the same id attribute: ' + it.data;\n              return out;\n            }\n          }\n        },\n        'duplicate-id': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has no static elements that share the same id attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has multiple static elements with the same id attribute';\n              return out;\n            }\n          }\n        },\n        'has-visible-text': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has text that is visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have text that is visible to screen readers';\n              return out;\n            }\n          }\n        },\n        'has-widget-role': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a widget role.';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have a widget role.';\n              return out;\n            }\n          }\n        },\n        'valid-scrollable-semantics': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has valid semantics for an element in the focus order.';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has invalid semantics for an element in the focus order.';\n              return out;\n            }\n          }\n        },\n        'multiple-label': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form field does not have multiple label elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Multiple label elements is not widely supported in assistive technologies';\n              return out;\n            }\n          }\n        },\n        'frame-tested': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The iframe was tested with axe-core';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The iframe could not be tested with axe-core';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'The iframe still has to be tested with axe-core';\n              return out;\n            }\n          }\n        },\n        'unique-frame-title': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s title attribute is unique';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s title attribute is not unique';\n              return out;\n            }\n          }\n        },\n        'heading-order': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Heading order valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Heading order invalid';\n              return out;\n            }\n          }\n        },\n        'hidden-content': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All content on the page has been analyzed.';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'There were problems analyzing the content on this page.';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'There is hidden content on the page that was not analyzed. You will need to trigger the display of this content in order to analyze it.';\n              return out;\n            }\n          }\n        },\n        'has-lang': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The <html> element has a lang attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The <html> element does not have a lang attribute';\n              return out;\n            }\n          }\n        },\n        'valid-lang': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Value of lang attribute is included in the list of valid languages';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Value of lang attribute not included in the list of valid languages';\n              return out;\n            }\n          }\n        },\n        'xml-lang-mismatch': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Lang and xml:lang attributes have the same base language';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Lang and xml:lang attributes do not have the same base language';\n              return out;\n            }\n          }\n        },\n        'has-alt': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has an alt attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have an alt attribute';\n              return out;\n            }\n          }\n        },\n        'alt-space-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a valid alt attribute value';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has an alt attribute containing only a space character, which is not ignored by all screen readers';\n              return out;\n            }\n          }\n        },\n        'duplicate-img-label': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not duplicate existing text in <img> alt text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element contains <img> element with alt text that duplicates existing text';\n              return out;\n            }\n          }\n        },\n        'label-content-name-mismatch': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element contains visible text as part of it\\'s accessible name';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Text inside the element is not included in the accessible name';\n              return out;\n            }\n          }\n        },\n        'title-only': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element does not solely use title attribute for its label';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Only title used to generate label for form element';\n              return out;\n            }\n          }\n        },\n        'implicit-label': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element has an implicit (wrapped) <label>';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element does not have an implicit (wrapped) <label>';\n              return out;\n            }\n          }\n        },\n        'explicit-label': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element has an explicit <label>';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element does not have an explicit <label>';\n              return out;\n            }\n          }\n        },\n        'help-same-as-label': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Help text (title or aria-describedby) does not duplicate label text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Help text (title or aria-describedby) text is the same as the label text';\n              return out;\n            }\n          }\n        },\n        'hidden-explicit-label': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element has a visible explicit <label>';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element has explicit <label> that is hidden';\n              return out;\n            }\n          }\n        },\n        'landmark-is-top-level': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The ' + it.data.role + ' landmark is at the top level.';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The ' + it.data.role + ' landmark is contained in another landmark.';\n              return out;\n            }\n          }\n        },\n        'page-no-duplicate-banner': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document does not have more than one banner landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has more than one banner landmark';\n              return out;\n            }\n          }\n        },\n        'page-no-duplicate-contentinfo': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document does not have more than one contentinfo landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has more than one contentinfo landmark';\n              return out;\n            }\n          }\n        },\n        'page-has-main': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has at least one main landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document does not have a main landmark';\n              return out;\n            }\n          }\n        },\n        'page-no-duplicate-main': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document does not have more than one main landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has more than one main landmark';\n              return out;\n            }\n          }\n        },\n        'has-th': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use <th> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses <th> elements';\n              return out;\n            }\n          }\n        },\n        'has-caption': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use <caption> element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses <caption> element';\n              return out;\n            }\n          }\n        },\n        'has-summary': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use summary attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses summary attribute';\n              return out;\n            }\n          }\n        },\n        'link-in-text-block': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Links can be distinguished from surrounding text in some way other than by color';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Links need to be distinguished from surrounding text in some way other than by color';\n              return out;\n            },\n            incomplete: {\n              bgContrast: 'Element\\'s contrast ratio could not be determined. Check for a distinct hover/focus style',\n              bgImage: 'Element\\'s contrast ratio could not be determined due to a background image',\n              bgGradient: 'Element\\'s contrast ratio could not be determined due to a background gradient',\n              imgNode: 'Element\\'s contrast ratio could not be determined because element contains an image node',\n              bgOverlap: 'Element\\'s contrast ratio could not be determined because of element overlap',\n              default: 'Unable to determine contrast ratio'\n            }\n          }\n        },\n        'only-listitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List element only has direct children that are allowed inside <li> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List element has direct children that are not allowed inside <li> elements';\n              return out;\n            }\n          }\n        },\n        listitem: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List item has a <ul>, <ol> or role=\"list\" parent element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List item does not have a <ul>, <ol> or role=\"list\" parent element';\n              return out;\n            }\n          }\n        },\n        'meta-refresh': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not immediately refresh the page';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '<meta> tag forces timed refresh of page';\n              return out;\n            }\n          }\n        },\n        'meta-viewport-large': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not prevent significant zooming on mobile devices';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '<meta> tag limits zooming on mobile devices';\n              return out;\n            }\n          }\n        },\n        'meta-viewport': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not disable zooming on mobile devices';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '' + it.data + ' on <meta> tag disables zooming on mobile devices';\n              return out;\n            }\n          }\n        },\n        'p-as-heading': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<p> elements are not styled as headings';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Heading elements should be used instead of styled p elements';\n              return out;\n            }\n          }\n        },\n        'page-has-heading-one': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has at least one level-one heading';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page must have a level-one heading';\n              return out;\n            }\n          }\n        },\n        region: {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All page content is contained by landmarks';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Some page content is not contained by landmarks';\n              return out;\n            }\n          }\n        },\n        'html5-scope': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Scope attribute is only used on table header elements (<th>)';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'In HTML 5, scope attributes may only be used on table header elements (<th>)';\n              return out;\n            }\n          }\n        },\n        'scope-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Scope attribute is used correctly';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The value of the scope attribute may only be \\'row\\' or \\'col\\'';\n              return out;\n            }\n          }\n        },\n        exists: {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not exist';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element exists';\n              return out;\n            }\n          }\n        },\n        'skip-link': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Skip link target exists';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'Skip link target should become visible on activation';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'No skip link target';\n              return out;\n            }\n          }\n        },\n        tabindex: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not have a tabindex greater than 0';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has a tabindex greater than 0';\n              return out;\n            }\n          }\n        },\n        'same-caption-summary': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Content of summary attribute and <caption> are not duplicated';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Content of summary attribute and <caption> element are identical';\n              return out;\n            }\n          }\n        },\n        'caption-faked': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The first row of a table is not used as a caption';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The first row of the table should be a caption instead of a table cell';\n              return out;\n            }\n          }\n        },\n        'td-has-header': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All non-empty data cells have table headers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Some non-empty data cells do not have table headers';\n              return out;\n            }\n          }\n        },\n        'td-headers-attr': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The headers attribute is exclusively used to refer to other cells in the table';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The headers attribute is not exclusively used to refer to other cells in the table';\n              return out;\n            }\n          }\n        },\n        'th-has-data-cells': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All table header cells refer to data cells';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Not all table header cells refer to data cells';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'Table data cells are missing or empty';\n              return out;\n            }\n          }\n        },\n        description: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The multimedia element has an audio description track';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'Check that audio description is available for the element';\n              return out;\n            }\n          }\n        }\n      },\n      failureSummaries: {\n        any: {\n          failureMessage: function anonymous(it) {\n            var out = 'Fix any of the following:';\n            var arr1 = it;\n            if (arr1) {\n              var value, i1 = -1, l1 = arr1.length - 1;\n              while (i1 < l1) {\n                value = arr1[i1 += 1];\n                out += '\\n  ' + value.split('\\n').join('\\n  ');\n              }\n            }\n            return out;\n          }\n        },\n        none: {\n          failureMessage: function anonymous(it) {\n            var out = 'Fix all of the following:';\n            var arr1 = it;\n            if (arr1) {\n              var value, i1 = -1, l1 = arr1.length - 1;\n              while (i1 < l1) {\n                value = arr1[i1 += 1];\n                out += '\\n  ' + value.split('\\n').join('\\n  ');\n              }\n            }\n            return out;\n          }\n        }\n      },\n      incompleteFallbackMessage: function anonymous(it) {\n        var out = 'aXe couldn\\'t tell the reason. Time to break out the element inspector!';\n        return out;\n      }\n    },\n    rules: [ {\n      id: 'accesskeys',\n      selector: '[accesskey]',\n      excludeHidden: false,\n      tags: [ 'best-practice', 'cat.keyboard' ],\n      all: [],\n      any: [],\n      none: [ 'accesskeys' ]\n    }, {\n      id: 'area-alt',\n      selector: 'map area[href]',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-alt', 'non-empty-title', 'aria-label', 'aria-labelledby' ],\n      none: []\n    }, {\n      id: 'aria-allowed-attr',\n      matches: function matches(node, virtualNode, context) {\n        var aria = /^aria-/;\n        if (node.hasAttributes()) {\n          var attrs = node.attributes;\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            if (aria.test(attrs[i].name)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag412' ],\n      all: [],\n      any: [ 'aria-allowed-attr' ],\n      none: [ 'aria-unsupported-attr' ]\n    }, {\n      id: 'aria-allowed-role',\n      excludeHidden: false,\n      selector: '[role]',\n      matches: function matches(node, virtualNode, context) {\n        return axe.commons.aria.getRole(node, {\n          noImplicit: true,\n          dpub: true,\n          fallback: true\n        }) !== null;\n      },\n      tags: [ 'cat.aria', 'best-practice' ],\n      all: [],\n      any: [ {\n        options: {\n          allowImplicit: true,\n          ignoredTags: []\n        },\n        id: 'aria-allowed-role'\n      } ],\n      none: []\n    }, {\n      id: 'aria-dpub-role-fallback',\n      selector: '[role]',\n      matches: function matches(node, virtualNode, context) {\n        var role = node.getAttribute('role');\n        return [ 'doc-backlink', 'doc-biblioentry', 'doc-biblioref', 'doc-cover', 'doc-endnote', 'doc-glossref', 'doc-noteref' ].includes(role);\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n      all: [ 'implicit-role-fallback' ],\n      any: [],\n      none: []\n    }, {\n      id: 'aria-hidden-body',\n      selector: 'body',\n      excludeHidden: false,\n      tags: [ 'cat.aria', 'wcag2a', 'wcag412' ],\n      all: [],\n      any: [ 'aria-hidden-body' ],\n      none: []\n    }, {\n      id: 'aria-hidden-focus',\n      selector: '[aria-hidden=\"true\"]',\n      matches: function matches(node, virtualNode, context) {\n        var getComposedParent = axe.commons.dom.getComposedParent;\n        function shouldMatchElement(el) {\n          if (!el) {\n            return true;\n          }\n          if (el.getAttribute('aria-hidden') === 'true') {\n            return false;\n          }\n          return shouldMatchElement(getComposedParent(el));\n        }\n        return shouldMatchElement(getComposedParent(node));\n      },\n      excludeHidden: false,\n      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag412' ],\n      all: [ 'focusable-disabled', 'focusable-not-tabbable' ],\n      any: [],\n      none: []\n    }, {\n      id: 'aria-required-attr',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag412' ],\n      all: [],\n      any: [ 'aria-required-attr' ],\n      none: []\n    }, {\n      id: 'aria-required-children',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ {\n        options: {\n          reviewEmpty: [ 'listbox' ]\n        },\n        id: 'aria-required-children'\n      } ],\n      none: []\n    }, {\n      id: 'aria-required-parent',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'aria-required-parent' ],\n      none: []\n    }, {\n      id: 'aria-roles',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag412' ],\n      all: [],\n      any: [],\n      none: [ 'invalidrole', 'abstractrole', 'unsupportedrole' ]\n    }, {\n      id: 'aria-valid-attr-value',\n      matches: function matches(node, virtualNode, context) {\n        var aria = /^aria-/;\n        if (node.hasAttributes()) {\n          var attrs = node.attributes;\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            if (aria.test(attrs[i].name)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag412' ],\n      all: [ {\n        options: [],\n        id: 'aria-valid-attr-value'\n      }, 'aria-errormessage' ],\n      any: [],\n      none: []\n    }, {\n      id: 'aria-valid-attr',\n      matches: function matches(node, virtualNode, context) {\n        var aria = /^aria-/;\n        if (node.hasAttributes()) {\n          var attrs = node.attributes;\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            if (aria.test(attrs[i].name)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag412' ],\n      all: [],\n      any: [ {\n        options: [],\n        id: 'aria-valid-attr'\n      } ],\n      none: []\n    }, {\n      id: 'audio-caption',\n      selector: 'audio',\n      enabled: false,\n      excludeHidden: false,\n      tags: [ 'cat.time-and-media', 'wcag2a', 'wcag121', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [],\n      none: [ 'caption' ]\n    }, {\n      id: 'autocomplete-valid',\n      matches: function matches(node, virtualNode, context) {\n        var _axe$commons = axe.commons, text = _axe$commons.text, aria = _axe$commons.aria, dom = _axe$commons.dom;\n        var autocomplete = node.getAttribute('autocomplete');\n        if (!autocomplete || text.sanitize(autocomplete) === '') {\n          return false;\n        }\n        var nodeName = node.nodeName.toUpperCase();\n        if ([ 'TEXTAREA', 'INPUT', 'SELECT' ].includes(nodeName) === false) {\n          return false;\n        }\n        var excludedInputTypes = [ 'submit', 'reset', 'button', 'hidden' ];\n        if (nodeName === 'INPUT' && excludedInputTypes.includes(node.type)) {\n          return false;\n        }\n        var ariaDisabled = node.getAttribute('aria-disabled') || 'false';\n        if (node.disabled || ariaDisabled.toLowerCase() === 'true') {\n          return false;\n        }\n        var role = node.getAttribute('role');\n        var tabIndex = node.getAttribute('tabindex');\n        if (tabIndex === '-1' && role) {\n          var roleDef = aria.lookupTable.role[role];\n          if (roleDef === undefined || roleDef.type !== 'widget') {\n            return false;\n          }\n        }\n        if (tabIndex === '-1' && !dom.isVisible(node, false) && !dom.isVisible(node, true)) {\n          return false;\n        }\n        return true;\n      },\n      tags: [ 'cat.forms', 'wcag21aa', 'wcag135' ],\n      all: [ 'autocomplete-valid', 'autocomplete-appropriate' ],\n      any: [],\n      none: []\n    }, {\n      id: 'blink',\n      selector: 'blink',\n      excludeHidden: false,\n      tags: [ 'cat.time-and-media', 'wcag2a', 'wcag222', 'section508', 'section508.22.j' ],\n      all: [],\n      any: [],\n      none: [ 'is-on-screen' ]\n    }, {\n      id: 'button-name',\n      selector: 'button, [role=\"button\"], input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]',\n      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag412', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-if-present', 'non-empty-value', 'button-has-visible-text', 'aria-label', 'aria-labelledby', 'role-presentation', 'role-none', 'non-empty-title' ],\n      none: [ 'focusable-no-name' ]\n    }, {\n      id: 'bypass',\n      selector: 'html',\n      pageLevel: true,\n      matches: function matches(node, virtualNode, context) {\n        return !!node.querySelector('a[href]');\n      },\n      tags: [ 'cat.keyboard', 'wcag2a', 'wcag241', 'section508', 'section508.22.o' ],\n      all: [],\n      any: [ 'internal-link-present', 'header-present', 'landmark' ],\n      none: []\n    }, {\n      id: 'checkboxgroup',\n      selector: 'input[type=checkbox][name]',\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [ 'group-labelledby', 'fieldset' ],\n      none: []\n    }, {\n      id: 'color-contrast',\n      matches: function matches(node, virtualNode, context) {\n        var nodeName = node.nodeName.toUpperCase(), nodeType = node.type;\n        if (node.getAttribute('aria-disabled') === 'true' || axe.commons.dom.findUpVirtual(virtualNode, '[aria-disabled=\"true\"]')) {\n          return false;\n        }\n        if (nodeName === 'INPUT') {\n          return [ 'hidden', 'range', 'color', 'checkbox', 'radio', 'image' ].indexOf(nodeType) === -1 && !node.disabled;\n        }\n        if (nodeName === 'SELECT') {\n          return !!node.options.length && !node.disabled;\n        }\n        if (nodeName === 'TEXTAREA') {\n          return !node.disabled;\n        }\n        if (nodeName === 'OPTION') {\n          return false;\n        }\n        if (nodeName === 'BUTTON' && node.disabled || axe.commons.dom.findUpVirtual(virtualNode, 'button[disabled]')) {\n          return false;\n        }\n        if (nodeName === 'FIELDSET' && node.disabled || axe.commons.dom.findUpVirtual(virtualNode, 'fieldset[disabled]')) {\n          return false;\n        }\n        var nodeParentLabel = axe.commons.dom.findUpVirtual(virtualNode, 'label');\n        if (nodeName === 'LABEL' || nodeParentLabel) {\n          var relevantNode = node;\n          var relevantVirtualNode = virtualNode;\n          if (nodeParentLabel) {\n            relevantNode = nodeParentLabel;\n            relevantVirtualNode = axe.utils.getNodeFromTree(axe._tree[0], nodeParentLabel);\n          }\n          var doc = axe.commons.dom.getRootNode(relevantNode);\n          var candidate = relevantNode.htmlFor && doc.getElementById(relevantNode.htmlFor);\n          if (candidate && candidate.disabled) {\n            return false;\n          }\n          var candidate = axe.utils.querySelectorAll(relevantVirtualNode, 'input:not([type=\"hidden\"]):not([type=\"image\"])' + ':not([type=\"button\"]):not([type=\"submit\"]):not([type=\"reset\"]), select, textarea');\n          if (candidate.length && candidate[0].actualNode.disabled) {\n            return false;\n          }\n        }\n        if (node.getAttribute('id')) {\n          var id = axe.utils.escapeSelector(node.getAttribute('id'));\n          var _doc = axe.commons.dom.getRootNode(node);\n          var candidate = _doc.querySelector('[aria-labelledby~=' + id + ']');\n          if (candidate && candidate.disabled) {\n            return false;\n          }\n        }\n        if (axe.commons.text.visibleVirtual(virtualNode, false, true) === '') {\n          return false;\n        }\n        var range = document.createRange(), childNodes = virtualNode.children, length = childNodes.length, child, index;\n        for (index = 0; index < length; index++) {\n          child = childNodes[index];\n          if (child.actualNode.nodeType === 3 && axe.commons.text.sanitize(child.actualNode.nodeValue) !== '') {\n            range.selectNodeContents(child.actualNode);\n          }\n        }\n        var rects = range.getClientRects();\n        length = rects.length;\n        for (index = 0; index < length; index++) {\n          if (axe.commons.dom.visuallyOverlaps(rects[index], node)) {\n            return true;\n          }\n        }\n        return false;\n      },\n      excludeHidden: false,\n      options: {\n        noScroll: false\n      },\n      tags: [ 'cat.color', 'wcag2aa', 'wcag143' ],\n      all: [],\n      any: [ 'color-contrast' ],\n      none: []\n    }, {\n      id: 'css-orientation-lock',\n      selector: 'html',\n      tags: [ 'cat.structure', 'wcag134', 'wcag21aa', 'experimental' ],\n      all: [ 'css-orientation-lock' ],\n      any: [],\n      none: [],\n      preload: true\n    }, {\n      id: 'definition-list',\n      selector: 'dl',\n      matches: function matches(node, virtualNode, context) {\n        return !node.getAttribute('role');\n      },\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'structured-dlitems', 'only-dlitems' ]\n    }, {\n      id: 'dlitem',\n      selector: 'dd, dt',\n      matches: function matches(node, virtualNode, context) {\n        return !node.getAttribute('role');\n      },\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'dlitem' ],\n      none: []\n    }, {\n      id: 'document-title',\n      selector: 'html',\n      matches: function matches(node, virtualNode, context) {\n        return node.ownerDocument.defaultView.self === node.ownerDocument.defaultView.top;\n      },\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag242' ],\n      all: [],\n      any: [ 'doc-has-title' ],\n      none: []\n    }, {\n      id: 'duplicate-id-active',\n      selector: '[id]',\n      matches: function matches(node, virtualNode, context) {\n        var _axe$commons2 = axe.commons, dom = _axe$commons2.dom, aria = _axe$commons2.aria;\n        var id = node.getAttribute('id').trim();\n        var idSelector = '*[id=\"' + axe.utils.escapeSelector(id) + '\"]';\n        var idMatchingElms = Array.from(dom.getRootNode(node).querySelectorAll(idSelector));\n        return idMatchingElms.some(dom.isFocusable) && !aria.isAccessibleRef(node);\n      },\n      excludeHidden: false,\n      tags: [ 'cat.parsing', 'wcag2a', 'wcag411' ],\n      all: [],\n      any: [ 'duplicate-id-active' ],\n      none: []\n    }, {\n      id: 'duplicate-id-aria',\n      selector: '[id]',\n      matches: function matches(node, virtualNode, context) {\n        return axe.commons.aria.isAccessibleRef(node);\n      },\n      excludeHidden: false,\n      tags: [ 'cat.parsing', 'wcag2a', 'wcag411' ],\n      all: [],\n      any: [ 'duplicate-id-aria' ],\n      none: []\n    }, {\n      id: 'duplicate-id',\n      selector: '[id]',\n      matches: function matches(node, virtualNode, context) {\n        var _axe$commons3 = axe.commons, dom = _axe$commons3.dom, aria = _axe$commons3.aria;\n        var id = node.getAttribute('id').trim();\n        var idSelector = '*[id=\"' + axe.utils.escapeSelector(id) + '\"]';\n        var idMatchingElms = Array.from(dom.getRootNode(node).querySelectorAll(idSelector));\n        return idMatchingElms.every(function(elm) {\n          return !dom.isFocusable(elm);\n        }) && !aria.isAccessibleRef(node);\n      },\n      excludeHidden: false,\n      tags: [ 'cat.parsing', 'wcag2a', 'wcag411' ],\n      all: [],\n      any: [ 'duplicate-id' ],\n      none: []\n    }, {\n      id: 'empty-heading',\n      selector: 'h1, h2, h3, h4, h5, h6, [role=\"heading\"]',\n      matches: function matches(node, virtualNode, context) {\n        var explicitRoles = void 0;\n        if (node.hasAttribute('role')) {\n          explicitRoles = node.getAttribute('role').split(/\\s+/i).filter(axe.commons.aria.isValidRole);\n        }\n        if (explicitRoles && explicitRoles.length > 0) {\n          return explicitRoles.includes('heading');\n        } else {\n          return axe.commons.aria.implicitRole(node) === 'heading';\n        }\n      },\n      tags: [ 'cat.name-role-value', 'best-practice' ],\n      all: [],\n      any: [ 'has-visible-text' ],\n      none: []\n    }, {\n      id: 'focus-order-semantics',\n      selector: 'div, h1, h2, h3, h4, h5, h6, [role=heading], p, span',\n      matches: function matches(node, virtualNode, context) {\n        return axe.commons.dom.insertedIntoFocusOrder(node);\n      },\n      tags: [ 'cat.keyboard', 'best-practice', 'experimental' ],\n      all: [],\n      any: [ {\n        options: [],\n        id: 'has-widget-role'\n      }, {\n        options: [],\n        id: 'valid-scrollable-semantics'\n      } ],\n      none: []\n    }, {\n      id: 'form-field-multiple-labels',\n      selector: 'input, select, textarea',\n      matches: function matches(node, virtualNode, context) {\n        if (node.nodeName.toLowerCase() !== 'input' || node.hasAttribute('type') === false) {\n          return true;\n        }\n        var type = node.getAttribute('type').toLowerCase();\n        return [ 'hidden', 'image', 'button', 'submit', 'reset' ].includes(type) === false;\n      },\n      tags: [ 'cat.forms', 'wcag2a', 'wcag332' ],\n      all: [],\n      any: [],\n      none: [ 'multiple-label' ]\n    }, {\n      id: 'frame-tested',\n      selector: 'frame, iframe',\n      tags: [ 'cat.structure', 'review-item', 'best-practice' ],\n      all: [ {\n        options: {\n          isViolation: false\n        },\n        id: 'frame-tested'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'frame-title-unique',\n      selector: 'frame[title], iframe[title]',\n      matches: function matches(node, virtualNode, context) {\n        var title = node.getAttribute('title');\n        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n      },\n      tags: [ 'cat.text-alternatives', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'unique-frame-title' ]\n    }, {\n      id: 'frame-title',\n      selector: 'frame, iframe',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag241', 'wcag412', 'section508', 'section508.22.i' ],\n      all: [],\n      any: [ 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n      none: []\n    }, {\n      id: 'heading-order',\n      selector: 'h1, h2, h3, h4, h5, h6, [role=heading]',\n      matches: function matches(node, virtualNode, context) {\n        var explicitRoles = void 0;\n        if (node.hasAttribute('role')) {\n          explicitRoles = node.getAttribute('role').split(/\\s+/i).filter(axe.commons.aria.isValidRole);\n        }\n        if (explicitRoles && explicitRoles.length > 0) {\n          return explicitRoles.includes('heading');\n        } else {\n          return axe.commons.aria.implicitRole(node) === 'heading';\n        }\n      },\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'heading-order' ],\n      none: []\n    }, {\n      id: 'hidden-content',\n      selector: '*',\n      excludeHidden: false,\n      tags: [ 'cat.structure', 'experimental', 'review-item', 'best-practice' ],\n      all: [],\n      any: [ 'hidden-content' ],\n      none: []\n    }, {\n      id: 'html-has-lang',\n      selector: 'html',\n      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n      all: [],\n      any: [ 'has-lang' ],\n      none: []\n    }, {\n      id: 'html-lang-valid',\n      selector: 'html[lang], html[xml\\\\:lang]',\n      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n      all: [],\n      any: [],\n      none: [ 'valid-lang' ]\n    }, {\n      id: 'html-xml-lang-mismatch',\n      selector: 'html[lang][xml\\\\:lang]',\n      matches: function matches(node, virtualNode, context) {\n        var getBaseLang = axe.utils.getBaseLang;\n        var primaryLangValue = getBaseLang(node.getAttribute('lang'));\n        var primaryXmlLangValue = getBaseLang(node.getAttribute('xml:lang'));\n        return axe.utils.validLangs().includes(primaryLangValue) && axe.utils.validLangs().includes(primaryXmlLangValue);\n      },\n      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n      all: [ 'xml-lang-mismatch' ],\n      any: [],\n      none: []\n    }, {\n      id: 'image-alt',\n      selector: 'img, [role=\\'img\\']:not(svg)',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-alt', 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n      none: [ 'alt-space-value' ]\n    }, {\n      id: 'image-redundant-alt',\n      selector: 'button, [role=\"button\"], a[href], p, li, td, th',\n      tags: [ 'cat.text-alternatives', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'duplicate-img-label' ]\n    }, {\n      id: 'input-image-alt',\n      selector: 'input[type=\"image\"]',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-alt', 'aria-label', 'aria-labelledby', 'non-empty-title' ],\n      none: []\n    }, {\n      id: 'label-content-name-mismatch',\n      matches: function matches(node, virtualNode, context) {\n        var _axe$commons4 = axe.commons, aria = _axe$commons4.aria, text = _axe$commons4.text;\n        var role = aria.getRole(node);\n        if (!role) {\n          return false;\n        }\n        var isWidgetType = aria.lookupTable.rolesOfType.widget.includes(role);\n        if (!isWidgetType) {\n          return false;\n        }\n        var rolesWithNameFromContents = aria.getRolesWithNameFromContents();\n        if (!rolesWithNameFromContents.includes(role)) {\n          return false;\n        }\n        if (!text.sanitize(aria.arialabelText(node)) && !text.sanitize(aria.arialabelledbyText(node))) {\n          return false;\n        }\n        if (!text.sanitize(text.visibleVirtual(virtualNode))) {\n          return false;\n        }\n        return true;\n      },\n      tags: [ 'wcag21a', 'wcag253', 'experimental' ],\n      all: [],\n      any: [ 'label-content-name-mismatch' ],\n      none: []\n    }, {\n      id: 'label-title-only',\n      selector: 'input, select, textarea',\n      matches: function matches(node, virtualNode, context) {\n        if (node.nodeName.toLowerCase() !== 'input' || node.hasAttribute('type') === false) {\n          return true;\n        }\n        var type = node.getAttribute('type').toLowerCase();\n        return [ 'hidden', 'image', 'button', 'submit', 'reset' ].includes(type) === false;\n      },\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'title-only' ]\n    }, {\n      id: 'label',\n      selector: 'input, select, textarea',\n      matches: function matches(node, virtualNode, context) {\n        if (node.nodeName.toLowerCase() !== 'input' || node.hasAttribute('type') === false) {\n          return true;\n        }\n        var type = node.getAttribute('type').toLowerCase();\n        return [ 'hidden', 'image', 'button', 'submit', 'reset' ].includes(type) === false;\n      },\n      tags: [ 'cat.forms', 'wcag2a', 'wcag332', 'wcag131', 'section508', 'section508.22.n' ],\n      all: [],\n      any: [ 'aria-label', 'aria-labelledby', 'implicit-label', 'explicit-label', 'non-empty-title' ],\n      none: [ 'help-same-as-label', 'hidden-explicit-label' ]\n    }, {\n      id: 'landmark-banner-is-top-level',\n      selector: 'header:not([role]), [role=banner]',\n      matches: function matches(node, virtualNode, context) {\n        var nativeScopeFilter = 'article, aside, main, nav, section';\n        return node.hasAttribute('role') || !axe.commons.dom.findUpVirtual(virtualNode, nativeScopeFilter);\n      },\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'landmark-is-top-level' ],\n      none: []\n    }, {\n      id: 'landmark-complementary-is-top-level',\n      selector: 'aside:not([role]), [role=complementary]',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'landmark-is-top-level' ],\n      none: []\n    }, {\n      id: 'landmark-contentinfo-is-top-level',\n      selector: 'footer:not([role]), [role=contentinfo]',\n      matches: function matches(node, virtualNode, context) {\n        var nativeScopeFilter = 'article, aside, main, nav, section';\n        return node.hasAttribute('role') || !axe.commons.dom.findUpVirtual(virtualNode, nativeScopeFilter);\n      },\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'landmark-is-top-level' ],\n      none: []\n    }, {\n      id: 'landmark-main-is-top-level',\n      selector: 'main:not([role]), [role=main]',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'landmark-is-top-level' ],\n      none: []\n    }, {\n      id: 'landmark-no-duplicate-banner',\n      selector: 'html',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ {\n        options: {\n          selector: 'header:not([role]), [role=banner]',\n          nativeScopeFilter: 'article, aside, main, nav, section'\n        },\n        id: 'page-no-duplicate-banner'\n      } ],\n      none: []\n    }, {\n      id: 'landmark-no-duplicate-contentinfo',\n      selector: 'html',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ {\n        options: {\n          selector: 'footer:not([role]), [role=contentinfo]',\n          nativeScopeFilter: 'article, aside, main, nav, section'\n        },\n        id: 'page-no-duplicate-contentinfo'\n      } ],\n      none: []\n    }, {\n      id: 'landmark-one-main',\n      selector: 'html',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [ {\n        options: {\n          selector: 'main:not([role]), [role=\\'main\\']'\n        },\n        id: 'page-has-main'\n      }, {\n        options: {\n          selector: 'main:not([role]), [role=\\'main\\']'\n        },\n        id: 'page-no-duplicate-main'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'layout-table',\n      selector: 'table',\n      matches: function matches(node, virtualNode, context) {\n        var role = (node.getAttribute('role') || '').toLowerCase();\n        return !((role === 'presentation' || role === 'none') && !axe.commons.dom.isFocusable(node)) && !axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.semantics', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'has-th', 'has-caption', 'has-summary' ]\n    }, {\n      id: 'link-in-text-block',\n      selector: 'a[href], [role=link]',\n      matches: function matches(node, virtualNode, context) {\n        var text = axe.commons.text.sanitize(node.textContent);\n        var role = node.getAttribute('role');\n        if (role && role !== 'link') {\n          return false;\n        }\n        if (!text) {\n          return false;\n        }\n        if (!axe.commons.dom.isVisible(node, false)) {\n          return false;\n        }\n        return axe.commons.dom.isInTextBlock(node);\n      },\n      excludeHidden: false,\n      tags: [ 'cat.color', 'experimental', 'wcag2a', 'wcag141' ],\n      all: [ 'link-in-text-block' ],\n      any: [],\n      none: []\n    }, {\n      id: 'link-name',\n      selector: 'a[href], [role=link][href]',\n      matches: function matches(node, virtualNode, context) {\n        return node.getAttribute('role') !== 'button';\n      },\n      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag412', 'wcag244', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-visible-text', 'aria-label', 'aria-labelledby', 'role-presentation', 'role-none' ],\n      none: [ 'focusable-no-name' ]\n    }, {\n      id: 'list',\n      selector: 'ul, ol',\n      matches: function matches(node, virtualNode, context) {\n        return !node.getAttribute('role');\n      },\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'only-listitems' ]\n    }, {\n      id: 'listitem',\n      selector: 'li',\n      matches: function matches(node, virtualNode, context) {\n        return !node.getAttribute('role');\n      },\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'listitem' ],\n      none: []\n    }, {\n      id: 'marquee',\n      selector: 'marquee',\n      excludeHidden: false,\n      tags: [ 'cat.parsing', 'wcag2a', 'wcag222' ],\n      all: [],\n      any: [],\n      none: [ 'is-on-screen' ]\n    }, {\n      id: 'meta-refresh',\n      selector: 'meta[http-equiv=\"refresh\"]',\n      excludeHidden: false,\n      tags: [ 'cat.time', 'wcag2a', 'wcag2aaa', 'wcag221', 'wcag224', 'wcag325' ],\n      all: [],\n      any: [ 'meta-refresh' ],\n      none: []\n    }, {\n      id: 'meta-viewport-large',\n      selector: 'meta[name=\"viewport\"]',\n      excludeHidden: false,\n      tags: [ 'cat.sensory-and-visual-cues', 'best-practice' ],\n      all: [],\n      any: [ {\n        options: {\n          scaleMinimum: 5,\n          lowerBound: 2\n        },\n        id: 'meta-viewport-large'\n      } ],\n      none: []\n    }, {\n      id: 'meta-viewport',\n      selector: 'meta[name=\"viewport\"]',\n      excludeHidden: false,\n      tags: [ 'cat.sensory-and-visual-cues', 'wcag2aa', 'wcag144' ],\n      all: [],\n      any: [ {\n        options: {\n          scaleMinimum: 2\n        },\n        id: 'meta-viewport'\n      } ],\n      none: []\n    }, {\n      id: 'object-alt',\n      selector: 'object',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-visible-text', 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n      none: []\n    }, {\n      id: 'p-as-heading',\n      selector: 'p',\n      matches: function matches(node, virtualNode, context) {\n        var children = Array.from(node.parentNode.childNodes);\n        var nodeText = node.textContent.trim();\n        var isSentence = /[.!?:;](?![.!?:;])/g;\n        if (nodeText.length === 0 || (nodeText.match(isSentence) || []).length >= 2) {\n          return false;\n        }\n        var siblingsAfter = children.slice(children.indexOf(node) + 1).filter(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P' && elm.textContent.trim() !== '';\n        });\n        return siblingsAfter.length !== 0;\n      },\n      tags: [ 'cat.semantics', 'wcag2a', 'wcag131', 'experimental' ],\n      all: [ {\n        options: {\n          margins: [ {\n            weight: 150,\n            italic: true\n          }, {\n            weight: 150,\n            size: 1.15\n          }, {\n            italic: true,\n            size: 1.15\n          }, {\n            size: 1.4\n          } ]\n        },\n        id: 'p-as-heading'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'page-has-heading-one',\n      selector: 'html',\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [ {\n        options: {\n          selector: 'h1:not([role]), [role=\"heading\"][aria-level=\"1\"]'\n        },\n        id: 'page-has-heading-one'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'radiogroup',\n      selector: 'input[type=radio][name]',\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [ 'group-labelledby', 'fieldset' ],\n      none: []\n    }, {\n      id: 'region',\n      selector: 'html',\n      pageLevel: true,\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'region' ],\n      none: []\n    }, {\n      id: 'scope-attr-valid',\n      selector: 'td[scope], th[scope]',\n      tags: [ 'cat.tables', 'best-practice' ],\n      all: [ 'html5-scope', 'scope-value' ],\n      any: [],\n      none: []\n    }, {\n      id: 'server-side-image-map',\n      selector: 'img[ismap]',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag211', 'section508', 'section508.22.f' ],\n      all: [],\n      any: [],\n      none: [ 'exists' ]\n    }, {\n      id: 'skip-link',\n      selector: 'a[href]',\n      matches: function matches(node, virtualNode, context) {\n        return /^#[^/!]/.test(node.getAttribute('href'));\n      },\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'skip-link' ],\n      none: []\n    }, {\n      id: 'tabindex',\n      selector: '[tabindex]',\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'tabindex' ],\n      none: []\n    }, {\n      id: 'table-duplicate-name',\n      selector: 'table',\n      tags: [ 'cat.tables', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'same-caption-summary' ]\n    }, {\n      id: 'table-fake-caption',\n      selector: 'table',\n      matches: function matches(node, virtualNode, context) {\n        return axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.tables', 'experimental', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'caption-faked' ],\n      any: [],\n      none: []\n    }, {\n      id: 'td-has-header',\n      selector: 'table',\n      matches: function matches(node, virtualNode, context) {\n        if (axe.commons.table.isDataTable(node)) {\n          var tableArray = axe.commons.table.toArray(node);\n          return tableArray.length >= 3 && tableArray[0].length >= 3 && tableArray[1].length >= 3 && tableArray[2].length >= 3;\n        }\n        return false;\n      },\n      tags: [ 'cat.tables', 'experimental', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'td-has-header' ],\n      any: [],\n      none: []\n    }, {\n      id: 'td-headers-attr',\n      selector: 'table',\n      tags: [ 'cat.tables', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'td-headers-attr' ],\n      any: [],\n      none: []\n    }, {\n      id: 'th-has-data-cells',\n      selector: 'table',\n      matches: function matches(node, virtualNode, context) {\n        return axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.tables', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'th-has-data-cells' ],\n      any: [],\n      none: []\n    }, {\n      id: 'valid-lang',\n      selector: '[lang], [xml\\\\:lang]',\n      matches: function matches(node, virtualNode, context) {\n        return node.nodeName.toLowerCase() !== 'html';\n      },\n      tags: [ 'cat.language', 'wcag2aa', 'wcag312' ],\n      all: [],\n      any: [],\n      none: [ 'valid-lang' ]\n    }, {\n      id: 'video-caption',\n      selector: 'video',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag122', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [],\n      none: [ 'caption' ]\n    }, {\n      id: 'video-description',\n      selector: 'video',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2aa', 'wcag125', 'section508', 'section508.22.b' ],\n      all: [],\n      any: [],\n      none: [ 'description' ]\n    } ],\n    checks: [ {\n      id: 'abstractrole',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return axe.commons.aria.getRoleType(node.getAttribute('role')) === 'abstract';\n      }\n    }, {\n      id: 'aria-allowed-attr',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        options = options || {};\n        var invalid = [];\n        var attr, attrName, allowed, role = node.getAttribute('role'), attrs = node.attributes;\n        if (!role) {\n          role = axe.commons.aria.implicitRole(node);\n        }\n        allowed = axe.commons.aria.allowedAttr(role);\n        if (Array.isArray(options[role])) {\n          allowed = axe.utils.uniqueArray(options[role].concat(allowed));\n        }\n        if (role && allowed) {\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            attr = attrs[i];\n            attrName = attr.name;\n            if (axe.commons.aria.validateAttr(attrName) && !allowed.includes(attrName)) {\n              invalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n            }\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'aria-allowed-role',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var dom = axe.commons.dom;\n        var _ref = options || {}, _ref$allowImplicit = _ref.allowImplicit, allowImplicit = _ref$allowImplicit === undefined ? true : _ref$allowImplicit, _ref$ignoredTags = _ref.ignoredTags, ignoredTags = _ref$ignoredTags === undefined ? [] : _ref$ignoredTags;\n        var tagName = node.nodeName.toUpperCase();\n        if (ignoredTags.map(function(t) {\n          return t.toUpperCase();\n        }).includes(tagName)) {\n          return true;\n        }\n        var unallowedRoles = axe.commons.aria.getElementUnallowedRoles(node, allowImplicit);\n        if (unallowedRoles.length) {\n          this.data(unallowedRoles);\n          if (!dom.isVisible(node, true)) {\n            return undefined;\n          }\n          return false;\n        }\n        return true;\n      },\n      options: {\n        allowImplicit: true,\n        ignoredTags: []\n      }\n    }, {\n      id: 'aria-hidden-body',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return node.getAttribute('aria-hidden') !== 'true';\n      }\n    }, {\n      id: 'aria-errormessage',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons5 = axe.commons, aria = _axe$commons5.aria, dom = _axe$commons5.dom;\n        options = Array.isArray(options) ? options : [];\n        var attr = node.getAttribute('aria-errormessage');\n        var hasAttr = node.hasAttribute('aria-errormessage');\n        var doc = dom.getRootNode(node);\n        function validateAttrValue(attr) {\n          if (attr.trim() === '') {\n            return aria.lookupTable.attributes['aria-errormessage'].allowEmpty;\n          }\n          var idref = attr && doc.getElementById(attr);\n          if (idref) {\n            return idref.getAttribute('role') === 'alert' || idref.getAttribute('aria-live') === 'assertive' || axe.utils.tokenList(node.getAttribute('aria-describedby') || '').indexOf(attr) > -1;\n          }\n        }\n        if (options.indexOf(attr) === -1 && hasAttr) {\n          if (!validateAttrValue(attr)) {\n            this.data(axe.utils.tokenList(attr));\n            return false;\n          }\n        }\n        return true;\n      }\n    }, {\n      id: 'has-widget-role',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var role = node.getAttribute('role');\n        if (role === null) {\n          return false;\n        }\n        var roleType = axe.commons.aria.getRoleType(role);\n        return roleType === 'widget' || roleType === 'composite';\n      },\n      options: []\n    }, {\n      id: 'implicit-role-fallback',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var role = node.getAttribute('role');\n        if (role === null || !axe.commons.aria.isValidRole(role)) {\n          return true;\n        }\n        var roleType = axe.commons.aria.getRoleType(role);\n        return axe.commons.aria.implicitRole(node) === roleType;\n      }\n    }, {\n      id: 'invalidrole',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return !axe.commons.aria.isValidRole(node.getAttribute('role'), {\n          allowAbstract: true\n        });\n      }\n    }, {\n      id: 'aria-required-attr',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        options = options || {};\n        var missing = [];\n        if (node.hasAttributes()) {\n          var attr, role = node.getAttribute('role'), required = axe.commons.aria.requiredAttr(role);\n          if (Array.isArray(options[role])) {\n            required = axe.utils.uniqueArray(options[role], required);\n          }\n          if (role && required) {\n            for (var i = 0, l = required.length; i < l; i++) {\n              attr = required[i];\n              if (!node.getAttribute(attr)) {\n                missing.push(attr);\n              }\n            }\n          }\n        }\n        if (missing.length) {\n          this.data(missing);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'aria-required-children',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var requiredOwned = axe.commons.aria.requiredOwned;\n        var implicitNodes = axe.commons.aria.implicitNodes;\n        var matchesSelector = axe.utils.matchesSelector;\n        var idrefs = axe.commons.dom.idrefs;\n        var reviewEmpty = options && Array.isArray(options.reviewEmpty) ? options.reviewEmpty : [];\n        function owns(node, virtualTree, role, ariaOwned) {\n          if (node === null) {\n            return false;\n          }\n          var implicit = implicitNodes(role), selector = [ '[role=\"' + role + '\"]' ];\n          if (implicit) {\n            selector = selector.concat(implicit);\n          }\n          selector = selector.join(',');\n          return ariaOwned ? matchesSelector(node, selector) || !!axe.utils.querySelectorAll(virtualTree, selector)[0] : !!axe.utils.querySelectorAll(virtualTree, selector)[0];\n        }\n        function ariaOwns(nodes, role) {\n          var index, length;\n          for (index = 0, length = nodes.length; index < length; index++) {\n            if (nodes[index] === null) {\n              continue;\n            }\n            var virtualTree = axe.utils.getNodeFromTree(axe._tree[0], nodes[index]);\n            if (owns(nodes[index], virtualTree, role, true)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        function missingRequiredChildren(node, childRoles, all, role) {\n          var i, l = childRoles.length, missing = [], ownedElements = idrefs(node, 'aria-owns');\n          for (i = 0; i < l; i++) {\n            var r = childRoles[i];\n            if (owns(node, virtualNode, r) || ariaOwns(ownedElements, r)) {\n              if (!all) {\n                return null;\n              }\n            } else {\n              if (all) {\n                missing.push(r);\n              }\n            }\n          }\n          if (role === 'combobox') {\n            var textboxIndex = missing.indexOf('textbox');\n            var textTypeInputs = [ 'text', 'search', 'email', 'url', 'tel' ];\n            if (textboxIndex >= 0 && node.nodeName.toUpperCase() === 'INPUT' && textTypeInputs.includes(node.type)) {\n              missing.splice(textboxIndex, 1);\n            }\n            var listboxIndex = missing.indexOf('listbox');\n            var expanded = node.getAttribute('aria-expanded');\n            if (listboxIndex >= 0 && (!expanded || expanded === 'false')) {\n              missing.splice(listboxIndex, 1);\n            }\n          }\n          if (missing.length) {\n            return missing;\n          }\n          if (!all && childRoles.length) {\n            return childRoles;\n          }\n          return null;\n        }\n        var role = node.getAttribute('role');\n        var required = requiredOwned(role);\n        if (!required) {\n          return true;\n        }\n        var all = false;\n        var childRoles = required.one;\n        if (!childRoles) {\n          var all = true;\n          childRoles = required.all;\n        }\n        var missing = missingRequiredChildren(node, childRoles, all, role);\n        if (!missing) {\n          return true;\n        }\n        this.data(missing);\n        if (reviewEmpty.includes(role)) {\n          return undefined;\n        } else {\n          return false;\n        }\n      },\n      options: {\n        reviewEmpty: [ 'listbox' ]\n      }\n    }, {\n      id: 'aria-required-parent',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        function getSelector(role) {\n          var impliedNative = axe.commons.aria.implicitNodes(role) || [];\n          return impliedNative.concat('[role=\"' + role + '\"]').join(',');\n        }\n        function getMissingContext(virtualNode, requiredContext, includeElement) {\n          var index, length, role = virtualNode.actualNode.getAttribute('role'), missing = [];\n          if (!requiredContext) {\n            requiredContext = axe.commons.aria.requiredContext(role);\n          }\n          if (!requiredContext) {\n            return null;\n          }\n          for (index = 0, length = requiredContext.length; index < length; index++) {\n            if (includeElement && axe.utils.matchesSelector(virtualNode.actualNode, getSelector(requiredContext[index]))) {\n              return null;\n            }\n            if (axe.commons.dom.findUpVirtual(virtualNode, getSelector(requiredContext[index]))) {\n              return null;\n            } else {\n              missing.push(requiredContext[index]);\n            }\n          }\n          return missing;\n        }\n        function getAriaOwners(element) {\n          var owners = [], o = null;\n          while (element) {\n            if (element.getAttribute('id')) {\n              var id = axe.utils.escapeSelector(element.getAttribute('id'));\n              var doc = axe.commons.dom.getRootNode(element);\n              o = doc.querySelector('[aria-owns~=' + id + ']');\n              if (o) {\n                owners.push(o);\n              }\n            }\n            element = element.parentElement;\n          }\n          return owners.length ? owners : null;\n        }\n        var missingParents = getMissingContext(virtualNode);\n        if (!missingParents) {\n          return true;\n        }\n        var owners = getAriaOwners(node);\n        if (owners) {\n          for (var i = 0, l = owners.length; i < l; i++) {\n            missingParents = getMissingContext(axe.utils.getNodeFromTree(axe._tree[0], owners[i]), missingParents, true);\n            if (!missingParents) {\n              return true;\n            }\n          }\n        }\n        this.data(missingParents);\n        return false;\n      }\n    }, {\n      id: 'aria-unsupported-attr',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var nodeName = node.nodeName.toUpperCase();\n        var lookupTable = axe.commons.aria.lookupTable;\n        var role = axe.commons.aria.getRole(node);\n        var unsupportedAttrs = Array.from(node.attributes).filter(function(_ref2) {\n          var name = _ref2.name;\n          var attribute = lookupTable.attributes[name];\n          if (!axe.commons.aria.validateAttr(name)) {\n            return false;\n          }\n          var unsupported = attribute.unsupported;\n          if ((typeof unsupported === 'undefined' ? 'undefined' : _typeof(unsupported)) !== 'object') {\n            return !!unsupported;\n          }\n          var isException = axe.commons.matches(node, unsupported.exceptions);\n          if (!Object.keys(lookupTable.evaluateRoleForElement).includes(nodeName)) {\n            return !isException;\n          }\n          return !lookupTable.evaluateRoleForElement[nodeName]({\n            node: node,\n            role: role,\n            out: isException\n          });\n        }).map(function(candidate) {\n          return candidate.name.toString();\n        });\n        if (unsupportedAttrs.length) {\n          this.data(unsupportedAttrs);\n          return true;\n        }\n        return false;\n      }\n    }, {\n      id: 'unsupportedrole',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return axe.commons.aria.isUnsupportedRole(axe.commons.aria.getRole(node));\n      }\n    }, {\n      id: 'aria-valid-attr-value',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        options = Array.isArray(options) ? options : [];\n        var invalid = [], aria = /^aria-/;\n        var attr, attrName, attrs = node.attributes;\n        var skipAttrs = [ 'aria-errormessage' ];\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          attr = attrs[i];\n          attrName = attr.name;\n          if (!skipAttrs.includes(attrName)) {\n            if (options.indexOf(attrName) === -1 && aria.test(attrName) && !axe.commons.aria.validateAttrValue(node, attrName)) {\n              invalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n            }\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      },\n      options: []\n    }, {\n      id: 'aria-valid-attr',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        options = Array.isArray(options) ? options : [];\n        var invalid = [], aria = /^aria-/;\n        var attr, attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          attr = attrs[i].name;\n          if (options.indexOf(attr) === -1 && aria.test(attr) && !axe.commons.aria.validateAttr(attr)) {\n            invalid.push(attr);\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      },\n      options: []\n    }, {\n      id: 'valid-scrollable-semantics',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS = {\n          ARTICLE: true,\n          ASIDE: true,\n          NAV: true,\n          SECTION: true\n        };\n        var VALID_ROLES_FOR_SCROLLABLE_REGIONS = {\n          application: true,\n          banner: false,\n          complementary: true,\n          contentinfo: true,\n          form: true,\n          main: true,\n          navigation: true,\n          region: true,\n          search: false\n        };\n        function validScrollableTagName(node) {\n          var nodeName = node.nodeName.toUpperCase();\n          return VALID_TAG_NAMES_FOR_SCROLLABLE_REGIONS[nodeName] || false;\n        }\n        function validScrollableRole(node) {\n          var role = node.getAttribute('role');\n          if (!role) {\n            return false;\n          }\n          return VALID_ROLES_FOR_SCROLLABLE_REGIONS[role.toLowerCase()] || false;\n        }\n        function validScrollableSemantics(node) {\n          return validScrollableRole(node) || validScrollableTagName(node);\n        }\n        return validScrollableSemantics(node);\n      },\n      options: []\n    }, {\n      id: 'color-contrast',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons6 = axe.commons, dom = _axe$commons6.dom, color = _axe$commons6.color, text = _axe$commons6.text;\n        if (!dom.isVisible(node, false)) {\n          return true;\n        }\n        var noScroll = !!(options || {}).noScroll;\n        var bgNodes = [];\n        var bgColor = color.getBackgroundColor(node, bgNodes, noScroll);\n        var fgColor = color.getForegroundColor(node, noScroll);\n        var nodeStyle = window.getComputedStyle(node);\n        var fontSize = parseFloat(nodeStyle.getPropertyValue('font-size'));\n        var fontWeight = nodeStyle.getPropertyValue('font-weight');\n        var bold = [ 'bold', 'bolder', '600', '700', '800', '900' ].indexOf(fontWeight) !== -1;\n        var cr = color.hasValidContrastRatio(bgColor, fgColor, fontSize, bold);\n        var truncatedResult = Math.floor(cr.contrastRatio * 100) / 100;\n        var missing = void 0;\n        if (bgColor === null) {\n          missing = color.incompleteData.get('bgColor');\n        }\n        var equalRatio = truncatedResult === 1;\n        var shortTextContent = text.visibleVirtual(virtualNode, false, true).length === 1;\n        if (equalRatio) {\n          missing = color.incompleteData.set('bgColor', 'equalRatio');\n        } else if (shortTextContent) {\n          missing = 'shortTextContent';\n        }\n        var data = {\n          fgColor: fgColor ? fgColor.toHexString() : undefined,\n          bgColor: bgColor ? bgColor.toHexString() : undefined,\n          contrastRatio: cr ? truncatedResult : undefined,\n          fontSize: (fontSize * 72 / 96).toFixed(1) + 'pt',\n          fontWeight: bold ? 'bold' : 'normal',\n          missingData: missing,\n          expectedContrastRatio: cr.expectedContrastRatio + ':1'\n        };\n        this.data(data);\n        if (fgColor === null || bgColor === null || equalRatio || shortTextContent && !cr.isValid) {\n          missing = null;\n          color.incompleteData.clear();\n          this.relatedNodes(bgNodes);\n          return undefined;\n        }\n        if (!cr.isValid) {\n          this.relatedNodes(bgNodes);\n        }\n        return cr.isValid;\n      }\n    }, {\n      id: 'link-in-text-block',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons7 = axe.commons, color = _axe$commons7.color, dom = _axe$commons7.dom;\n        function getContrast(color1, color2) {\n          var c1lum = color1.getRelativeLuminance();\n          var c2lum = color2.getRelativeLuminance();\n          return (Math.max(c1lum, c2lum) + .05) / (Math.min(c1lum, c2lum) + .05);\n        }\n        var blockLike = [ 'block', 'list-item', 'table', 'flex', 'grid', 'inline-block' ];\n        function isBlock(elm) {\n          var display = window.getComputedStyle(elm).getPropertyValue('display');\n          return blockLike.indexOf(display) !== -1 || display.substr(0, 6) === 'table-';\n        }\n        if (isBlock(node)) {\n          return false;\n        }\n        var parentBlock = dom.getComposedParent(node);\n        while (parentBlock.nodeType === 1 && !isBlock(parentBlock)) {\n          parentBlock = dom.getComposedParent(parentBlock);\n        }\n        this.relatedNodes([ parentBlock ]);\n        if (color.elementIsDistinct(node, parentBlock)) {\n          return true;\n        } else {\n          var nodeColor, parentColor;\n          nodeColor = color.getForegroundColor(node);\n          parentColor = color.getForegroundColor(parentBlock);\n          if (!nodeColor || !parentColor) {\n            return undefined;\n          }\n          var contrast = getContrast(nodeColor, parentColor);\n          if (contrast === 1) {\n            return true;\n          } else if (contrast >= 3) {\n            axe.commons.color.incompleteData.set('fgColor', 'bgContrast');\n            this.data({\n              missingData: axe.commons.color.incompleteData.get('fgColor')\n            });\n            axe.commons.color.incompleteData.clear();\n            return undefined;\n          }\n          nodeColor = color.getBackgroundColor(node);\n          parentColor = color.getBackgroundColor(parentBlock);\n          if (!nodeColor || !parentColor || getContrast(nodeColor, parentColor) >= 3) {\n            var reason = void 0;\n            if (!nodeColor || !parentColor) {\n              reason = axe.commons.color.incompleteData.get('bgColor');\n            } else {\n              reason = 'bgContrast';\n            }\n            axe.commons.color.incompleteData.set('fgColor', reason);\n            this.data({\n              missingData: axe.commons.color.incompleteData.get('fgColor')\n            });\n            axe.commons.color.incompleteData.clear();\n            return undefined;\n          }\n        }\n        return false;\n      }\n    }, {\n      id: 'autocomplete-appropriate',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (node.nodeName.toUpperCase() !== 'INPUT') {\n          return true;\n        }\n        var number = [ 'text', 'search', 'number' ];\n        var url = [ 'text', 'search', 'url' ];\n        var allowedTypesMap = {\n          bday: [ 'text', 'search', 'date' ],\n          email: [ 'text', 'search', 'email' ],\n          'cc-exp': [ 'text', 'search', 'month' ],\n          'street-address': [ 'text' ],\n          tel: [ 'text', 'search', 'tel' ],\n          'cc-exp-month': number,\n          'cc-exp-year': number,\n          'transaction-amount': number,\n          'bday-day': number,\n          'bday-month': number,\n          'bday-year': number,\n          'new-password': [ 'text', 'search', 'password' ],\n          'current-password': [ 'text', 'search', 'password' ],\n          url: url,\n          photo: url,\n          impp: url\n        };\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n          Object.keys(options).forEach(function(key) {\n            if (!allowedTypesMap[key]) {\n              allowedTypesMap[key] = [];\n            }\n            allowedTypesMap[key] = allowedTypesMap[key].concat(options[key]);\n          });\n        }\n        var autocomplete = node.getAttribute('autocomplete');\n        var autocompleteTerms = autocomplete.split(/\\s+/g).map(function(term) {\n          return term.toLowerCase();\n        });\n        var purposeTerm = autocompleteTerms[autocompleteTerms.length - 1];\n        if (axe.commons.text.autocomplete.stateTerms.includes(purposeTerm)) {\n          return true;\n        }\n        var allowedTypes = allowedTypesMap[purposeTerm];\n        var type = node.hasAttribute('type') ? axe.commons.text.sanitize(node.getAttribute('type')).toLowerCase() : 'text';\n        type = axe.utils.validInputTypes().includes(type) ? type : 'text';\n        if (typeof allowedTypes === 'undefined') {\n          return type === 'text';\n        }\n        return allowedTypes.includes(type);\n      }\n    }, {\n      id: 'autocomplete-valid',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var autocomplete = node.getAttribute('autocomplete') || '';\n        return axe.commons.text.isValidAutocomplete(autocomplete, options);\n      }\n    }, {\n      id: 'fieldset',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var failureCode, self = this;\n        function getUnrelatedElements(parent, name) {\n          return axe.utils.toArray(parent.querySelectorAll('select,textarea,button,input:not([name=\"' + name + '\"]):not([type=\"hidden\"])'));\n        }\n        function checkFieldset(group, name) {\n          var firstNode = group.firstElementChild;\n          if (!firstNode || firstNode.nodeName.toUpperCase() !== 'LEGEND') {\n            self.relatedNodes([ group ]);\n            failureCode = 'no-legend';\n            return false;\n          }\n          if (!axe.commons.text.accessibleText(firstNode)) {\n            self.relatedNodes([ firstNode ]);\n            failureCode = 'empty-legend';\n            return false;\n          }\n          var otherElements = getUnrelatedElements(group, name);\n          if (otherElements.length) {\n            self.relatedNodes(otherElements);\n            failureCode = 'mixed-inputs';\n            return false;\n          }\n          return true;\n        }\n        function checkARIAGroup(group, name) {\n          var hasLabelledByText = axe.commons.dom.idrefs(group, 'aria-labelledby').some(function(element) {\n            return element && axe.commons.text.accessibleText(element);\n          });\n          var ariaLabel = group.getAttribute('aria-label');\n          if (!hasLabelledByText && !(ariaLabel && axe.commons.text.sanitize(ariaLabel))) {\n            self.relatedNodes(group);\n            failureCode = 'no-group-label';\n            return false;\n          }\n          var otherElements = getUnrelatedElements(group, name);\n          if (otherElements.length) {\n            self.relatedNodes(otherElements);\n            failureCode = 'group-mixed-inputs';\n            return false;\n          }\n          return true;\n        }\n        function spliceCurrentNode(nodes, current) {\n          return axe.utils.toArray(nodes).filter(function(candidate) {\n            return candidate !== current;\n          });\n        }\n        function runCheck(virtualNode) {\n          var name = axe.utils.escapeSelector(virtualNode.actualNode.name);\n          var root = axe.commons.dom.getRootNode(virtualNode.actualNode);\n          var matchingNodes = root.querySelectorAll('input[type=\"' + axe.utils.escapeSelector(virtualNode.actualNode.type) + '\"][name=\"' + name + '\"]');\n          if (matchingNodes.length < 2) {\n            return true;\n          }\n          var fieldset = axe.commons.dom.findUpVirtual(virtualNode, 'fieldset');\n          var group = axe.commons.dom.findUpVirtual(virtualNode, '[role=\"group\"]' + (virtualNode.actualNode.type === 'radio' ? ',[role=\"radiogroup\"]' : ''));\n          if (!group && !fieldset) {\n            failureCode = 'no-group';\n            self.relatedNodes(spliceCurrentNode(matchingNodes, virtualNode.actualNode));\n            return false;\n          } else if (fieldset) {\n            return checkFieldset(fieldset, name);\n          } else {\n            return checkARIAGroup(group, name);\n          }\n        }\n        var data = {\n          name: node.getAttribute('name'),\n          type: node.getAttribute('type')\n        };\n        var result = runCheck(virtualNode);\n        if (!result) {\n          data.failureCode = failureCode;\n        }\n        this.data(data);\n        return result;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(result) {\n          if (result.result) {\n            return true;\n          }\n          var data = result.data;\n          if (data) {\n            seen[data.type] = seen[data.type] || {};\n            if (!seen[data.type][data.name]) {\n              seen[data.type][data.name] = [ data ];\n              return true;\n            }\n            var hasBeenSeen = seen[data.type][data.name].some(function(candidate) {\n              return candidate.failureCode === data.failureCode;\n            });\n            if (!hasBeenSeen) {\n              seen[data.type][data.name].push(data);\n            }\n            return !hasBeenSeen;\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'group-labelledby',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons8 = axe.commons, dom = _axe$commons8.dom, text = _axe$commons8.text;\n        var type = axe.utils.escapeSelector(node.type);\n        var name = axe.utils.escapeSelector(node.name);\n        var doc = dom.getRootNode(node);\n        var data = {\n          name: node.name,\n          type: node.type\n        };\n        var matchingNodes = Array.from(doc.querySelectorAll('input[type=\"' + type + '\"][name=\"' + name + '\"]'));\n        if (matchingNodes.length <= 1) {\n          this.data(data);\n          return true;\n        }\n        var sharedLabels = dom.idrefs(node, 'aria-labelledby').filter(function(label) {\n          return !!label;\n        });\n        var uniqueLabels = sharedLabels.slice();\n        matchingNodes.forEach(function(groupItem) {\n          if (groupItem === node) {\n            return;\n          }\n          var labels = dom.idrefs(groupItem, 'aria-labelledby').filter(function(newLabel) {\n            return newLabel;\n          });\n          sharedLabels = sharedLabels.filter(function(sharedLabel) {\n            return labels.includes(sharedLabel);\n          });\n          uniqueLabels = uniqueLabels.filter(function(uniqueLabel) {\n            return !labels.includes(uniqueLabel);\n          });\n        });\n        var accessibleTextOptions = {\n          inLabelledByContext: true\n        };\n        uniqueLabels = uniqueLabels.filter(function(labelNode) {\n          return text.accessibleText(labelNode, accessibleTextOptions);\n        });\n        sharedLabels = sharedLabels.filter(function(labelNode) {\n          return text.accessibleText(labelNode, accessibleTextOptions);\n        });\n        if (uniqueLabels.length > 0 && sharedLabels.length > 0) {\n          this.data(data);\n          return true;\n        }\n        if (uniqueLabels.length > 0 && sharedLabels.length === 0) {\n          data.failureCode = 'no-shared-label';\n        } else if (uniqueLabels.length === 0 && sharedLabels.length > 0) {\n          data.failureCode = 'no-unique-label';\n        }\n        this.data(data);\n        return false;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(result) {\n          var data = result.data;\n          if (data) {\n            seen[data.type] = seen[data.type] || {};\n            if (!seen[data.type][data.name]) {\n              seen[data.type][data.name] = true;\n              return true;\n            }\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'accesskeys',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (axe.commons.dom.isVisible(node, false)) {\n          this.data(node.getAttribute('accesskey'));\n          this.relatedNodes([ node ]);\n        }\n        return true;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(r) {\n          if (!r.data) {\n            return false;\n          }\n          var key = r.data.toUpperCase();\n          if (!seen[key]) {\n            seen[key] = r;\n            r.relatedNodes = [];\n            return true;\n          }\n          seen[key].relatedNodes.push(r.relatedNodes[0]);\n          return false;\n        }).map(function(r) {\n          r.result = !!r.relatedNodes.length;\n          return r;\n        });\n      }\n    }, {\n      id: 'focusable-disabled',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var elementsThatCanBeDisabled = [ 'BUTTON', 'FIELDSET', 'INPUT', 'SELECT', 'TEXTAREA' ];\n        var tabbableElements = virtualNode.tabbableElements;\n        if (!tabbableElements || !tabbableElements.length) {\n          return true;\n        }\n        var relatedNodes = tabbableElements.reduce(function(out, _ref3) {\n          var el = _ref3.actualNode;\n          var nodeName = el.nodeName.toUpperCase();\n          if (elementsThatCanBeDisabled.includes(nodeName)) {\n            out.push(el);\n          }\n          return out;\n        }, []);\n        this.relatedNodes(relatedNodes);\n        return relatedNodes.length === 0;\n      }\n    }, {\n      id: 'focusable-no-name',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var tabIndex = node.getAttribute('tabindex'), inFocusOrder = axe.commons.dom.isFocusable(node) && tabIndex > -1;\n        if (!inFocusOrder) {\n          return false;\n        }\n        return !axe.commons.text.accessibleTextVirtual(virtualNode);\n      }\n    }, {\n      id: 'focusable-not-tabbable',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var elementsThatCanBeDisabled = [ 'BUTTON', 'FIELDSET', 'INPUT', 'SELECT', 'TEXTAREA' ];\n        var tabbableElements = virtualNode.tabbableElements;\n        if (!tabbableElements || !tabbableElements.length) {\n          return true;\n        }\n        var relatedNodes = tabbableElements.reduce(function(out, _ref4) {\n          var el = _ref4.actualNode;\n          var nodeName = el.nodeName.toUpperCase();\n          if (!elementsThatCanBeDisabled.includes(nodeName)) {\n            out.push(el);\n          }\n          return out;\n        }, []);\n        this.relatedNodes(relatedNodes);\n        return relatedNodes.length === 0;\n      }\n    }, {\n      id: 'landmark-is-top-level',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var landmarks = axe.commons.aria.getRolesByType('landmark');\n        var parent = axe.commons.dom.getComposedParent(node);\n        this.data({\n          role: node.getAttribute('role') || axe.commons.aria.implicitRole(node)\n        });\n        while (parent) {\n          var role = parent.getAttribute('role');\n          if (!role && parent.nodeName.toUpperCase() !== 'FORM') {\n            role = axe.commons.aria.implicitRole(parent);\n          }\n          if (role && landmarks.includes(role)) {\n            return false;\n          }\n          parent = axe.commons.dom.getComposedParent(parent);\n        }\n        return true;\n      }\n    }, {\n      id: 'page-has-heading-one',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var matchingElms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        this.relatedNodes(matchingElms.map(function(vNode) {\n          return vNode.actualNode;\n        }));\n        return matchingElms.length > 0;\n      },\n      after: function after(results, options) {\n        var elmUsedAnywhere = results.some(function(frameResult) {\n          return frameResult.result === true;\n        });\n        if (elmUsedAnywhere) {\n          results.forEach(function(result) {\n            result.result = true;\n          });\n        }\n        return results;\n      },\n      options: {\n        selector: 'h1:not([role]), [role=\"heading\"][aria-level=\"1\"]'\n      }\n    }, {\n      id: 'page-has-main',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var matchingElms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        this.relatedNodes(matchingElms.map(function(vNode) {\n          return vNode.actualNode;\n        }));\n        return matchingElms.length > 0;\n      },\n      after: function after(results, options) {\n        var elmUsedAnywhere = results.some(function(frameResult) {\n          return frameResult.result === true;\n        });\n        if (elmUsedAnywhere) {\n          results.forEach(function(result) {\n            result.result = true;\n          });\n        }\n        return results;\n      },\n      options: {\n        selector: 'main:not([role]), [role=\\'main\\']'\n      }\n    }, {\n      id: 'page-no-duplicate-banner',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        if (typeof options.nativeScopeFilter === 'string') {\n          elms = elms.filter(function(elm) {\n            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n          });\n        }\n        this.relatedNodes(elms.map(function(elm) {\n          return elm.actualNode;\n        }));\n        return elms.length <= 1;\n      },\n      options: {\n        selector: 'header:not([role]), [role=banner]',\n        nativeScopeFilter: 'article, aside, main, nav, section'\n      }\n    }, {\n      id: 'page-no-duplicate-contentinfo',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        if (typeof options.nativeScopeFilter === 'string') {\n          elms = elms.filter(function(elm) {\n            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n          });\n        }\n        this.relatedNodes(elms.map(function(elm) {\n          return elm.actualNode;\n        }));\n        return elms.length <= 1;\n      },\n      options: {\n        selector: 'footer:not([role]), [role=contentinfo]',\n        nativeScopeFilter: 'article, aside, main, nav, section'\n      }\n    }, {\n      id: 'page-no-duplicate-main',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (!options || !options.selector || typeof options.selector !== 'string') {\n          throw new TypeError('visible-in-page requires options.selector to be a string');\n        }\n        var elms = axe.utils.querySelectorAll(virtualNode, options.selector);\n        if (typeof options.nativeScopeFilter === 'string') {\n          elms = elms.filter(function(elm) {\n            return elm.actualNode.hasAttribute('role') || !axe.commons.dom.findUpVirtual(elm, options.nativeScopeFilter);\n          });\n        }\n        this.relatedNodes(elms.map(function(elm) {\n          return elm.actualNode;\n        }));\n        return elms.length <= 1;\n      },\n      options: {\n        selector: 'main:not([role]), [role=\\'main\\']'\n      }\n    }, {\n      id: 'tabindex',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return node.tabIndex <= 0;\n      }\n    }, {\n      id: 'alt-space-value',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var validAttrValue = /^\\s+$/.test(node.getAttribute('alt'));\n        return node.hasAttribute('alt') && validAttrValue;\n      }\n    }, {\n      id: 'duplicate-img-label',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var text = axe.commons.text.visibleVirtual(virtualNode, true).toLowerCase();\n        if (text === '') {\n          return false;\n        }\n        var images = axe.utils.querySelectorAll(virtualNode, 'img').filter(function(_ref5) {\n          var actualNode = _ref5.actualNode;\n          return axe.commons.dom.isVisible(actualNode) && ![ 'none', 'presentation' ].includes(actualNode.getAttribute('role'));\n        });\n        return images.some(function(img) {\n          return text === axe.commons.text.accessibleTextVirtual(img).toLowerCase();\n        });\n      }\n    }, {\n      id: 'explicit-label',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (node.getAttribute('id')) {\n          var root = axe.commons.dom.getRootNode(node);\n          var id = axe.utils.escapeSelector(node.getAttribute('id'));\n          var label = root.querySelector('label[for=\"' + id + '\"]');\n          if (label) {\n            if (!axe.commons.dom.isVisible(label)) {\n              return true;\n            } else {\n              return !!axe.commons.text.accessibleText(label);\n            }\n          }\n        }\n        return false;\n      }\n    }, {\n      id: 'help-same-as-label',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var labelText = axe.commons.text.labelVirtual(virtualNode), check = node.getAttribute('title');\n        if (!labelText) {\n          return false;\n        }\n        if (!check) {\n          check = '';\n          if (node.getAttribute('aria-describedby')) {\n            var ref = axe.commons.dom.idrefs(node, 'aria-describedby');\n            check = ref.map(function(thing) {\n              return thing ? axe.commons.text.accessibleText(thing) : '';\n            }).join('');\n          }\n        }\n        return axe.commons.text.sanitize(check) === axe.commons.text.sanitize(labelText);\n      },\n      enabled: false\n    }, {\n      id: 'hidden-explicit-label',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (node.getAttribute('id')) {\n          var root = axe.commons.dom.getRootNode(node);\n          var id = axe.utils.escapeSelector(node.getAttribute('id'));\n          var label = root.querySelector('label[for=\"' + id + '\"]');\n          if (label && !axe.commons.dom.isVisible(label, true)) {\n            var name = axe.commons.text.accessibleTextVirtual(virtualNode).trim();\n            var isNameEmpty = name === '';\n            return isNameEmpty;\n          }\n        }\n        return false;\n      }\n    }, {\n      id: 'implicit-label',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons9 = axe.commons, dom = _axe$commons9.dom, text = _axe$commons9.text;\n        var label = dom.findUpVirtual(virtualNode, 'label');\n        if (label) {\n          return !!text.accessibleText(label, {\n            inControlContext: true\n          });\n        }\n        return false;\n      }\n    }, {\n      id: 'label-content-name-mismatch',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var text = axe.commons.text;\n        var accText = text.accessibleText(node).toLowerCase();\n        if (text.isHumanInterpretable(accText) < 1) {\n          return undefined;\n        }\n        var visibleText = text.sanitize(text.visibleVirtual(virtualNode)).toLowerCase();\n        if (text.isHumanInterpretable(visibleText) < 1) {\n          if (isStringContained(visibleText, accText)) {\n            return true;\n          }\n          return undefined;\n        }\n        return isStringContained(visibleText, accText);\n        function isStringContained(compare, compareWith) {\n          var curatedCompareWith = curateString(compareWith);\n          var curatedCompare = curateString(compare);\n          if (!curatedCompareWith || !curatedCompare) {\n            return false;\n          }\n          return curatedCompareWith.includes(curatedCompare);\n        }\n        function curateString(str) {\n          var noUnicodeStr = text.removeUnicode(str, {\n            emoji: true,\n            nonBmp: true,\n            punctuations: true\n          });\n          return text.sanitize(noUnicodeStr);\n        }\n      }\n    }, {\n      id: 'multiple-label',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var id = axe.utils.escapeSelector(node.getAttribute('id'));\n        var labels = Array.from(document.querySelectorAll('label[for=\"' + id + '\"]'));\n        var parent = node.parentNode;\n        if (labels.length) {\n          labels = labels.filter(function(label, index) {\n            if (index === 0 && !axe.commons.dom.isVisible(label, true) || axe.commons.dom.isVisible(label, true)) {\n              return label;\n            }\n          });\n        }\n        while (parent) {\n          if (parent.nodeName.toUpperCase() === 'LABEL' && labels.indexOf(parent) === -1) {\n            labels.push(parent);\n          }\n          parent = parent.parentNode;\n        }\n        this.relatedNodes(labels);\n        return labels.length > 1;\n      }\n    }, {\n      id: 'title-only',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var labelText = axe.commons.text.labelVirtual(virtualNode);\n        return !labelText && !!(node.getAttribute('title') || node.getAttribute('aria-describedby'));\n      }\n    }, {\n      id: 'has-lang',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return !!(node.getAttribute('lang') || node.getAttribute('xml:lang') || '').trim();\n      }\n    }, {\n      id: 'valid-lang',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var langs, invalid;\n        langs = (options ? options : axe.utils.validLangs()).map(axe.utils.getBaseLang);\n        invalid = [ 'lang', 'xml:lang' ].reduce(function(invalid, langAttr) {\n          var langVal = node.getAttribute(langAttr);\n          if (typeof langVal !== 'string') {\n            return invalid;\n          }\n          var baselangVal = axe.utils.getBaseLang(langVal);\n          if (baselangVal !== '' && langs.indexOf(baselangVal) === -1) {\n            invalid.push(langAttr + '=\"' + node.getAttribute(langAttr) + '\"');\n          }\n          return invalid;\n        }, []);\n        if (invalid.length) {\n          this.data(invalid);\n          return true;\n        }\n        return false;\n      }\n    }, {\n      id: 'xml-lang-mismatch',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var getBaseLang = axe.utils.getBaseLang;\n        var primaryLangValue = getBaseLang(node.getAttribute('lang'));\n        var primaryXmlLangValue = getBaseLang(node.getAttribute('xml:lang'));\n        return primaryLangValue === primaryXmlLangValue;\n      }\n    }, {\n      id: 'dlitem',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var parent = axe.commons.dom.getComposedParent(node);\n        var parentTagName = parent.nodeName.toUpperCase();\n        var parentRole = axe.commons.aria.getRole(parent, {\n          noImplicit: true\n        });\n        if (parentTagName === 'DIV' && [ 'presentation', 'none', null ].includes(parentRole)) {\n          parent = axe.commons.dom.getComposedParent(parent);\n          parentTagName = parent.nodeName.toUpperCase();\n          parentRole = axe.commons.aria.getRole(parent, {\n            noImplicit: true\n          });\n        }\n        if (parentTagName !== 'DL') {\n          return false;\n        }\n        if (!parentRole || parentRole === 'list') {\n          return true;\n        }\n        return false;\n      }\n    }, {\n      id: 'listitem',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var parent = axe.commons.dom.getComposedParent(node);\n        if (!parent) {\n          return undefined;\n        }\n        var parentTagName = parent.nodeName.toUpperCase();\n        var parentRole = (parent.getAttribute('role') || '').toLowerCase();\n        if (parentRole === 'list') {\n          return true;\n        }\n        if (parentRole && axe.commons.aria.isValidRole(parentRole)) {\n          return false;\n        }\n        return [ 'UL', 'OL' ].includes(parentTagName);\n      }\n    }, {\n      id: 'only-dlitems',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons10 = axe.commons, dom = _axe$commons10.dom, aria = _axe$commons10.aria;\n        var ALLOWED_ROLES = [ 'definition', 'term', 'list' ];\n        var base = {\n          badNodes: [],\n          hasNonEmptyTextNode: false\n        };\n        var content = virtualNode.children.reduce(function(content, child) {\n          var actualNode = child.actualNode;\n          if (actualNode.nodeName.toUpperCase() === 'DIV' && aria.getRole(actualNode) === null) {\n            return content.concat(child.children);\n          }\n          return content.concat(child);\n        }, []);\n        var result = content.reduce(function(out, childNode) {\n          var actualNode = childNode.actualNode;\n          var tagName = actualNode.nodeName.toUpperCase();\n          if (actualNode.nodeType === 1 && dom.isVisible(actualNode, true, false)) {\n            var explicitRole = aria.getRole(actualNode, {\n              noImplicit: true\n            });\n            if (tagName !== 'DT' && tagName !== 'DD' || explicitRole) {\n              if (!ALLOWED_ROLES.includes(explicitRole)) {\n                out.badNodes.push(actualNode);\n              }\n            }\n          } else if (actualNode.nodeType === 3 && actualNode.nodeValue.trim() !== '') {\n            out.hasNonEmptyTextNode = true;\n          }\n          return out;\n        }, base);\n        if (result.badNodes.length) {\n          this.relatedNodes(result.badNodes);\n        }\n        return !!result.badNodes.length || result.hasNonEmptyTextNode;\n      }\n    }, {\n      id: 'only-listitems',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var dom = axe.commons.dom;\n        var getIsListItemRole = function getIsListItemRole(role, tagName) {\n          return role === 'listitem' || tagName === 'LI' && !role;\n        };\n        var getHasListItem = function getHasListItem(hasListItem, tagName, isListItemRole) {\n          return hasListItem || tagName === 'LI' && isListItemRole || isListItemRole;\n        };\n        var base = {\n          badNodes: [],\n          isEmpty: true,\n          hasNonEmptyTextNode: false,\n          hasListItem: false,\n          liItemsWithRole: 0\n        };\n        var out = virtualNode.children.reduce(function(out, _ref6) {\n          var actualNode = _ref6.actualNode;\n          var tagName = actualNode.nodeName.toUpperCase();\n          if (actualNode.nodeType === 1 && dom.isVisible(actualNode, true, false)) {\n            var role = (actualNode.getAttribute('role') || '').toLowerCase();\n            var isListItemRole = getIsListItemRole(role, tagName);\n            out.hasListItem = getHasListItem(out.hasListItem, tagName, isListItemRole);\n            if (isListItemRole) {\n              out.isEmpty = false;\n            }\n            if (tagName === 'LI' && !isListItemRole) {\n              out.liItemsWithRole++;\n            }\n            if (tagName !== 'LI' && !isListItemRole) {\n              out.badNodes.push(actualNode);\n            }\n          }\n          if (actualNode.nodeType === 3) {\n            if (actualNode.nodeValue.trim() !== '') {\n              out.hasNonEmptyTextNode = true;\n            }\n          }\n          return out;\n        }, base);\n        var virtualNodeChildrenOfTypeLi = virtualNode.children.filter(function(_ref7) {\n          var actualNode = _ref7.actualNode;\n          return actualNode.nodeName.toUpperCase() === 'LI';\n        });\n        var allLiItemsHaveRole = out.liItemsWithRole > 0 && virtualNodeChildrenOfTypeLi.length === out.liItemsWithRole;\n        if (out.badNodes.length) {\n          this.relatedNodes(out.badNodes);\n        }\n        var isInvalidListItem = !(out.hasListItem || out.isEmpty && !allLiItemsHaveRole);\n        return isInvalidListItem || !!out.badNodes.length || out.hasNonEmptyTextNode;\n      }\n    }, {\n      id: 'structured-dlitems',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var children = virtualNode.children;\n        if (!children || !children.length) {\n          return false;\n        }\n        var hasDt = false, hasDd = false, nodeName;\n        for (var i = 0; i < children.length; i++) {\n          nodeName = children[i].actualNode.nodeName.toUpperCase();\n          if (nodeName === 'DT') {\n            hasDt = true;\n          }\n          if (hasDt && nodeName === 'DD') {\n            return false;\n          }\n          if (nodeName === 'DD') {\n            hasDd = true;\n          }\n        }\n        return hasDt || hasDd;\n      }\n    }, {\n      id: 'caption',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var tracks = axe.utils.querySelectorAll(virtualNode, 'track');\n        var hasCaptions = tracks.some(function(_ref8) {\n          var actualNode = _ref8.actualNode;\n          return (actualNode.getAttribute('kind') || '').toLowerCase() === 'captions';\n        });\n        return hasCaptions ? false : undefined;\n      }\n    }, {\n      id: 'description',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var tracks = axe.utils.querySelectorAll(virtualNode, 'track');\n        var hasDescriptions = tracks.some(function(_ref9) {\n          var actualNode = _ref9.actualNode;\n          return (actualNode.getAttribute('kind') || '').toLowerCase() === 'descriptions';\n        });\n        return hasDescriptions ? false : undefined;\n      }\n    }, {\n      id: 'frame-tested',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var resolve = this.async();\n        var _Object$assign = Object.assign({\n          isViolation: false,\n          timeout: 500\n        }, options), isViolation = _Object$assign.isViolation, timeout = _Object$assign.timeout;\n        var timer = setTimeout(function() {\n          timer = setTimeout(function() {\n            timer = null;\n            resolve(isViolation ? false : undefined);\n          }, 0);\n        }, timeout);\n        axe.utils.respondable(node.contentWindow, 'axe.ping', null, undefined, function() {\n          if (timer !== null) {\n            clearTimeout(timer);\n            resolve(true);\n          }\n        });\n      },\n      options: {\n        isViolation: false\n      }\n    }, {\n      id: 'css-orientation-lock',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _ref10 = context || {}, _ref10$cssom = _ref10.cssom, cssom = _ref10$cssom === undefined ? undefined : _ref10$cssom;\n        if (!cssom || !cssom.length) {\n          return undefined;\n        }\n        var rulesGroupByDocumentFragment = cssom.reduce(function(out, _ref11) {\n          var sheet = _ref11.sheet, root = _ref11.root, shadowId = _ref11.shadowId;\n          var key = shadowId ? shadowId : 'topDocument';\n          if (!out[key]) {\n            out[key] = {\n              root: root,\n              rules: []\n            };\n          }\n          if (!sheet || !sheet.cssRules) {\n            return out;\n          }\n          var rules = Array.from(sheet.cssRules);\n          out[key].rules = out[key].rules.concat(rules);\n          return out;\n        }, {});\n        var isLocked = false;\n        var relatedElements = [];\n        Object.keys(rulesGroupByDocumentFragment).forEach(function(key) {\n          var _rulesGroupByDocument = rulesGroupByDocumentFragment[key], root = _rulesGroupByDocument.root, rules = _rulesGroupByDocument.rules;\n          var mediaRules = rules.filter(function(r) {\n            return r.type === 4;\n          });\n          if (!mediaRules || !mediaRules.length) {\n            return;\n          }\n          var orientationRules = mediaRules.filter(function(r) {\n            var cssText = r.cssText;\n            return /orientation:\\s+landscape/i.test(cssText) || /orientation:\\s+portrait/i.test(cssText);\n          });\n          if (!orientationRules || !orientationRules.length) {\n            return;\n          }\n          orientationRules.forEach(function(r) {\n            if (!r.cssRules.length) {\n              return;\n            }\n            Array.from(r.cssRules).forEach(function(cssRule) {\n              if (!cssRule.selectorText) {\n                return;\n              }\n              if (cssRule.style.length <= 0) {\n                return;\n              }\n              var transformStyleValue = cssRule.style.transform || false;\n              if (!transformStyleValue) {\n                return;\n              }\n              var rotate = transformStyleValue.match(/rotate\\(([^)]+)deg\\)/);\n              var deg = parseInt(rotate && rotate[1] || 0);\n              var locked = deg % 90 === 0 && deg % 180 !== 0;\n              if (locked && cssRule.selectorText.toUpperCase() !== 'HTML') {\n                var selector = cssRule.selectorText;\n                var elms = Array.from(root.querySelectorAll(selector));\n                if (elms && elms.length) {\n                  relatedElements = relatedElements.concat(elms);\n                }\n              }\n              isLocked = locked;\n            });\n          });\n        });\n        if (!isLocked) {\n          return true;\n        }\n        if (relatedElements.length) {\n          this.relatedNodes(relatedElements);\n        }\n        return false;\n      }\n    }, {\n      id: 'meta-viewport-large',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        options = options || {};\n        var params, content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/), result = {}, minimum = options.scaleMinimum || 2, lowerBound = options.lowerBound || false;\n        for (var i = 0, l = parsedParams.length; i < l; i++) {\n          params = parsedParams[i].split('=');\n          var key = params.shift().toLowerCase();\n          if (key && params.length) {\n            result[key.trim()] = params.shift().trim().toLowerCase();\n          }\n        }\n        if (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n          return true;\n        }\n        if (!lowerBound && result['user-scalable'] === 'no') {\n          this.data('user-scalable=no');\n          return false;\n        }\n        if (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n          this.data('maximum-scale');\n          return false;\n        }\n        return true;\n      },\n      options: {\n        scaleMinimum: 5,\n        lowerBound: 2\n      }\n    }, {\n      id: 'meta-viewport',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        options = options || {};\n        var params, content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/), result = {}, minimum = options.scaleMinimum || 2, lowerBound = options.lowerBound || false;\n        for (var i = 0, l = parsedParams.length; i < l; i++) {\n          params = parsedParams[i].split('=');\n          var key = params.shift().toLowerCase();\n          if (key && params.length) {\n            result[key.trim()] = params.shift().trim().toLowerCase();\n          }\n        }\n        if (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n          return true;\n        }\n        if (!lowerBound && result['user-scalable'] === 'no') {\n          this.data('user-scalable=no');\n          return false;\n        }\n        if (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n          this.data('maximum-scale');\n          return false;\n        }\n        return true;\n      },\n      options: {\n        scaleMinimum: 2\n      }\n    }, {\n      id: 'header-present',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return !!axe.utils.querySelectorAll(virtualNode, 'h1, h2, h3, h4, h5, h6, [role=\"heading\"]')[0];\n      }\n    }, {\n      id: 'heading-order',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var ariaHeadingLevel = node.getAttribute('aria-level');\n        if (ariaHeadingLevel !== null) {\n          this.data(parseInt(ariaHeadingLevel, 10));\n          return true;\n        }\n        var headingLevel = node.nodeName.toUpperCase().match(/H(\\d)/);\n        if (headingLevel) {\n          this.data(parseInt(headingLevel[1], 10));\n          return true;\n        }\n        return true;\n      },\n      after: function after(results, options) {\n        if (results.length < 2) {\n          return results;\n        }\n        var prevLevel = results[0].data;\n        for (var i = 1; i < results.length; i++) {\n          if (results[i].result && results[i].data > prevLevel + 1) {\n            results[i].result = false;\n          }\n          prevLevel = results[i].data;\n        }\n        return results;\n      }\n    }, {\n      id: 'internal-link-present',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var links = axe.utils.querySelectorAll(virtualNode, 'a[href]');\n        return links.some(function(vLink) {\n          return /^#[^/!]/.test(vLink.actualNode.getAttribute('href'));\n        });\n      }\n    }, {\n      id: 'landmark',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return axe.utils.querySelectorAll(virtualNode, 'main, [role=\"main\"]').length > 0;\n      }\n    }, {\n      id: 'meta-refresh',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/);\n        return content === '' || parsedParams[0] === '0';\n      }\n    }, {\n      id: 'p-as-heading',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var siblings = Array.from(node.parentNode.children);\n        var currentIndex = siblings.indexOf(node);\n        options = options || {};\n        var margins = options.margins || [];\n        var nextSibling = siblings.slice(currentIndex + 1).find(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P';\n        });\n        var prevSibling = siblings.slice(0, currentIndex).reverse().find(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P';\n        });\n        function getTextContainer(elm) {\n          var nextNode = elm;\n          var outerText = elm.textContent.trim();\n          var innerText = outerText;\n          while (innerText === outerText && nextNode !== undefined) {\n            var i = -1;\n            elm = nextNode;\n            if (elm.children.length === 0) {\n              return elm;\n            }\n            do {\n              i++;\n              innerText = elm.children[i].textContent.trim();\n            } while (innerText === '' && i + 1 < elm.children.length);\n            nextNode = elm.children[i];\n          }\n          return elm;\n        }\n        function normalizeFontWeight(weight) {\n          switch (weight) {\n           case 'lighter':\n            return 100;\n\n           case 'normal':\n            return 400;\n\n           case 'bold':\n            return 700;\n\n           case 'bolder':\n            return 900;\n          }\n          weight = parseInt(weight);\n          return !isNaN(weight) ? weight : 400;\n        }\n        function getStyleValues(node) {\n          var style = window.getComputedStyle(getTextContainer(node));\n          return {\n            fontWeight: normalizeFontWeight(style.getPropertyValue('font-weight')),\n            fontSize: parseInt(style.getPropertyValue('font-size')),\n            isItalic: style.getPropertyValue('font-style') === 'italic'\n          };\n        }\n        function isHeaderStyle(styleA, styleB, margins) {\n          return margins.reduce(function(out, margin) {\n            return out || (!margin.size || styleA.fontSize / margin.size > styleB.fontSize) && (!margin.weight || styleA.fontWeight - margin.weight > styleB.fontWeight) && (!margin.italic || styleA.isItalic && !styleB.isItalic);\n          }, false);\n        }\n        var currStyle = getStyleValues(node);\n        var nextStyle = nextSibling ? getStyleValues(nextSibling) : null;\n        var prevStyle = prevSibling ? getStyleValues(prevSibling) : null;\n        if (!nextStyle || !isHeaderStyle(currStyle, nextStyle, margins)) {\n          return true;\n        }\n        var blockquote = axe.commons.dom.findUpVirtual(virtualNode, 'blockquote');\n        if (blockquote && blockquote.nodeName.toUpperCase() === 'BLOCKQUOTE') {\n          return undefined;\n        }\n        if (prevStyle && !isHeaderStyle(currStyle, prevStyle, margins)) {\n          return undefined;\n        }\n        return false;\n      },\n      options: {\n        margins: [ {\n          weight: 150,\n          italic: true\n        }, {\n          weight: 150,\n          size: 1.15\n        }, {\n          italic: true,\n          size: 1.15\n        }, {\n          size: 1.4\n        } ]\n      }\n    }, {\n      id: 'region',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons11 = axe.commons, dom = _axe$commons11.dom, aria = _axe$commons11.aria;\n        function getSkiplink(virtualNode) {\n          var firstLink = axe.utils.querySelectorAll(virtualNode, 'a[href]')[0];\n          if (firstLink && axe.commons.dom.getElementByReference(firstLink.actualNode, 'href')) {\n            return firstLink.actualNode;\n          }\n        }\n        var skipLink = getSkiplink(virtualNode);\n        var landmarkRoles = aria.getRolesByType('landmark');\n        var implicitLandmarks = landmarkRoles.reduce(function(arr, role) {\n          return arr.concat(aria.implicitNodes(role));\n        }, []).filter(function(r) {\n          return r !== null;\n        });\n        function isSkipLink(vNode) {\n          return skipLink && skipLink === vNode.actualNode;\n        }\n        function isRegion(virtualNode) {\n          var node = virtualNode.actualNode;\n          var explicitRole = axe.commons.aria.getRole(node, {\n            noImplicit: true\n          });\n          var ariaLive = (node.getAttribute('aria-live') || '').toLowerCase().trim();\n          if (explicitRole) {\n            return explicitRole === 'dialog' || landmarkRoles.includes(explicitRole);\n          }\n          if ([ 'assertive', 'polite' ].includes(ariaLive)) {\n            return true;\n          }\n          return implicitLandmarks.some(function(implicitSelector) {\n            var matches = axe.utils.matchesSelector(node, implicitSelector);\n            if (node.nodeName.toUpperCase() === 'FORM') {\n              var titleAttr = node.getAttribute('title');\n              var title = titleAttr && titleAttr.trim() !== '' ? axe.commons.text.sanitize(titleAttr) : null;\n              return matches && (!!aria.labelVirtual(virtualNode) || !!title);\n            }\n            return matches;\n          });\n        }\n        function findRegionlessElms(virtualNode) {\n          var node = virtualNode.actualNode;\n          if (isRegion(virtualNode) || isSkipLink(virtualNode) || !dom.isVisible(node, true)) {\n            return [];\n          } else if (dom.hasContent(node, true)) {\n            return [ node ];\n          } else {\n            return virtualNode.children.filter(function(_ref12) {\n              var actualNode = _ref12.actualNode;\n              return actualNode.nodeType === 1;\n            }).map(findRegionlessElms).reduce(function(a, b) {\n              return a.concat(b);\n            }, []);\n          }\n        }\n        var regionlessNodes = findRegionlessElms(virtualNode);\n        this.relatedNodes(regionlessNodes);\n        return regionlessNodes.length === 0;\n      },\n      after: function after(results, options) {\n        return [ results[0] ];\n      }\n    }, {\n      id: 'skip-link',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var target = axe.commons.dom.getElementByReference(node, 'href');\n        if (target) {\n          return axe.commons.dom.isVisible(target, true) || undefined;\n        }\n        return false;\n      }\n    }, {\n      id: 'unique-frame-title',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var title = axe.commons.text.sanitize(node.title).trim().toLowerCase();\n        this.data(title);\n        return true;\n      },\n      after: function after(results, options) {\n        var titles = {};\n        results.forEach(function(r) {\n          titles[r.data] = titles[r.data] !== undefined ? ++titles[r.data] : 0;\n        });\n        results.forEach(function(r) {\n          r.result = !!titles[r.data];\n        });\n        return results;\n      }\n    }, {\n      id: 'duplicate-id-active',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var id = node.getAttribute('id').trim();\n        if (!id) {\n          return true;\n        }\n        var root = axe.commons.dom.getRootNode(node);\n        var matchingNodes = Array.from(root.querySelectorAll('[id=\"' + axe.utils.escapeSelector(id) + '\"]')).filter(function(foundNode) {\n          return foundNode !== node;\n        });\n        if (matchingNodes.length) {\n          this.relatedNodes(matchingNodes);\n        }\n        this.data(id);\n        return matchingNodes.length === 0;\n      },\n      after: function after(results, options) {\n        var uniqueIds = [];\n        return results.filter(function(r) {\n          if (uniqueIds.indexOf(r.data) === -1) {\n            uniqueIds.push(r.data);\n            return true;\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'duplicate-id-aria',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var id = node.getAttribute('id').trim();\n        if (!id) {\n          return true;\n        }\n        var root = axe.commons.dom.getRootNode(node);\n        var matchingNodes = Array.from(root.querySelectorAll('[id=\"' + axe.utils.escapeSelector(id) + '\"]')).filter(function(foundNode) {\n          return foundNode !== node;\n        });\n        if (matchingNodes.length) {\n          this.relatedNodes(matchingNodes);\n        }\n        this.data(id);\n        return matchingNodes.length === 0;\n      },\n      after: function after(results, options) {\n        var uniqueIds = [];\n        return results.filter(function(r) {\n          if (uniqueIds.indexOf(r.data) === -1) {\n            uniqueIds.push(r.data);\n            return true;\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'duplicate-id',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var id = node.getAttribute('id').trim();\n        if (!id) {\n          return true;\n        }\n        var root = axe.commons.dom.getRootNode(node);\n        var matchingNodes = Array.from(root.querySelectorAll('[id=\"' + axe.utils.escapeSelector(id) + '\"]')).filter(function(foundNode) {\n          return foundNode !== node;\n        });\n        if (matchingNodes.length) {\n          this.relatedNodes(matchingNodes);\n        }\n        this.data(id);\n        return matchingNodes.length === 0;\n      },\n      after: function after(results, options) {\n        var uniqueIds = [];\n        return results.filter(function(r) {\n          if (uniqueIds.indexOf(r.data) === -1) {\n            uniqueIds.push(r.data);\n            return true;\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'aria-label',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons12 = axe.commons, text = _axe$commons12.text, aria = _axe$commons12.aria;\n        return !!text.sanitize(aria.arialabelText(node));\n      }\n    }, {\n      id: 'aria-labelledby',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var _axe$commons13 = axe.commons, text = _axe$commons13.text, aria = _axe$commons13.aria;\n        return !!text.sanitize(aria.arialabelledbyText(node));\n      }\n    }, {\n      id: 'button-has-visible-text',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var nodeName = node.nodeName.toUpperCase();\n        var role = node.getAttribute('role');\n        var label = void 0;\n        if (nodeName === 'BUTTON' || role === 'button' && nodeName !== 'INPUT') {\n          label = axe.commons.text.accessibleTextVirtual(virtualNode);\n          this.data(label);\n          return !!label;\n        } else {\n          return false;\n        }\n      }\n    }, {\n      id: 'doc-has-title',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var title = document.title;\n        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n      }\n    }, {\n      id: 'exists',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return true;\n      }\n    }, {\n      id: 'has-alt',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var nn = node.nodeName.toLowerCase();\n        return node.hasAttribute('alt') && (nn === 'img' || nn === 'input' || nn === 'area');\n      }\n    }, {\n      id: 'has-visible-text',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return axe.commons.text.accessibleTextVirtual(virtualNode).length > 0;\n      }\n    }, {\n      id: 'is-on-screen',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return axe.commons.dom.isVisible(node, false) && !axe.commons.dom.isOffscreen(node);\n      }\n    }, {\n      id: 'non-empty-alt',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var label = node.getAttribute('alt');\n        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n      }\n    }, {\n      id: 'non-empty-if-present',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var nodeName = node.nodeName.toUpperCase();\n        var type = (node.getAttribute('type') || '').toLowerCase();\n        var label = node.getAttribute('value');\n        this.data(label);\n        if (nodeName === 'INPUT' && [ 'submit', 'reset' ].includes(type)) {\n          return label === null;\n        }\n        return false;\n      }\n    }, {\n      id: 'non-empty-title',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var text = axe.commons.text;\n        return !!text.sanitize(text.titleText(node));\n      }\n    }, {\n      id: 'non-empty-value',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var label = node.getAttribute('value');\n        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n      }\n    }, {\n      id: 'role-none',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return node.getAttribute('role') === 'none';\n      }\n    }, {\n      id: 'role-presentation',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return node.getAttribute('role') === 'presentation';\n      }\n    }, {\n      id: 'caption-faked',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var table = axe.commons.table.toGrid(node);\n        var firstRow = table[0];\n        if (table.length <= 1 || firstRow.length <= 1 || node.rows.length <= 1) {\n          return true;\n        }\n        return firstRow.reduce(function(out, curr, i) {\n          return out || curr !== firstRow[i + 1] && firstRow[i + 1] !== undefined;\n        }, false);\n      }\n    }, {\n      id: 'has-caption',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return !!node.caption;\n      }\n    }, {\n      id: 'has-summary',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return !!node.summary;\n      }\n    }, {\n      id: 'has-th',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var row, cell, badCells = [];\n        for (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cell = row.cells[cellIndex];\n            if (cell.nodeName.toUpperCase() === 'TH' || [ 'rowheader', 'columnheader' ].indexOf(cell.getAttribute('role')) !== -1) {\n              badCells.push(cell);\n            }\n          }\n        }\n        if (badCells.length) {\n          this.relatedNodes(badCells);\n          return true;\n        }\n        return false;\n      }\n    }, {\n      id: 'html5-scope',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        if (!axe.commons.dom.isHTML5(document)) {\n          return true;\n        }\n        return node.nodeName.toUpperCase() === 'TH';\n      }\n    }, {\n      id: 'same-caption-summary',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        return !!(node.summary && node.caption) && node.summary.toLowerCase() === axe.commons.text.accessibleText(node.caption).toLowerCase();\n      }\n    }, {\n      id: 'scope-value',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        options = options || {};\n        var value = node.getAttribute('scope').toLowerCase();\n        var validVals = [ 'row', 'col', 'rowgroup', 'colgroup' ] || options.values;\n        return validVals.indexOf(value) !== -1;\n      }\n    }, {\n      id: 'td-has-header',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var tableUtils = axe.commons.table;\n        var badCells = [];\n        var cells = tableUtils.getAllCells(node);\n        cells.forEach(function(cell) {\n          if (axe.commons.dom.hasContent(cell) && tableUtils.isDataCell(cell) && !axe.commons.aria.label(cell)) {\n            var hasHeaders = tableUtils.getHeaders(cell).some(function(header) {\n              return header !== null && !!axe.commons.dom.hasContent(header);\n            });\n            if (!hasHeaders) {\n              badCells.push(cell);\n            }\n          }\n        });\n        if (badCells.length) {\n          this.relatedNodes(badCells);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'td-headers-attr',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var cells = [];\n        for (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n          var row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cells.push(row.cells[cellIndex]);\n          }\n        }\n        var ids = cells.reduce(function(ids, cell) {\n          if (cell.getAttribute('id')) {\n            ids.push(cell.getAttribute('id'));\n          }\n          return ids;\n        }, []);\n        var badCells = cells.reduce(function(badCells, cell) {\n          var isSelf, notOfTable;\n          var headers = (cell.getAttribute('headers') || '').split(/\\s/).reduce(function(headers, header) {\n            header = header.trim();\n            if (header) {\n              headers.push(header);\n            }\n            return headers;\n          }, []);\n          if (headers.length !== 0) {\n            if (cell.getAttribute('id')) {\n              isSelf = headers.indexOf(cell.getAttribute('id').trim()) !== -1;\n            }\n            notOfTable = headers.reduce(function(fail, header) {\n              return fail || ids.indexOf(header) === -1;\n            }, false);\n            if (isSelf || notOfTable) {\n              badCells.push(cell);\n            }\n          }\n          return badCells;\n        }, []);\n        if (badCells.length > 0) {\n          this.relatedNodes(badCells);\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }, {\n      id: 'th-has-data-cells',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var tableUtils = axe.commons.table;\n        var cells = tableUtils.getAllCells(node);\n        var checkResult = this;\n        var reffedHeaders = [];\n        cells.forEach(function(cell) {\n          var headers = cell.getAttribute('headers');\n          if (headers) {\n            reffedHeaders = reffedHeaders.concat(headers.split(/\\s+/));\n          }\n          var ariaLabel = cell.getAttribute('aria-labelledby');\n          if (ariaLabel) {\n            reffedHeaders = reffedHeaders.concat(ariaLabel.split(/\\s+/));\n          }\n        });\n        var headers = cells.filter(function(cell) {\n          if (axe.commons.text.sanitize(cell.textContent) === '') {\n            return false;\n          }\n          return cell.nodeName.toUpperCase() === 'TH' || [ 'rowheader', 'columnheader' ].indexOf(cell.getAttribute('role')) !== -1;\n        });\n        var tableGrid = tableUtils.toGrid(node);\n        var out = headers.reduce(function(res, header) {\n          if (header.getAttribute('id') && reffedHeaders.includes(header.getAttribute('id'))) {\n            return !res ? res : true;\n          }\n          var hasCell = false;\n          var pos = tableUtils.getCellPosition(header, tableGrid);\n          if (tableUtils.isColumnHeader(header)) {\n            hasCell = tableUtils.traverse('down', pos, tableGrid).reduce(function(out, cell) {\n              return out || axe.commons.dom.hasContent(cell) && !tableUtils.isColumnHeader(cell);\n            }, false);\n          }\n          if (!hasCell && tableUtils.isRowHeader(header)) {\n            hasCell = tableUtils.traverse('right', pos, tableGrid).reduce(function(out, cell) {\n              return out || axe.commons.dom.hasContent(cell) && !tableUtils.isRowHeader(cell);\n            }, false);\n          }\n          if (!hasCell) {\n            checkResult.relatedNodes(header);\n          }\n          return res && hasCell;\n        }, true);\n        return out ? true : undefined;\n      }\n    }, {\n      id: 'hidden-content',\n      evaluate: function evaluate(node, options, virtualNode, context) {\n        var whitelist = [ 'SCRIPT', 'HEAD', 'TITLE', 'NOSCRIPT', 'STYLE', 'TEMPLATE' ];\n        if (!whitelist.includes(node.nodeName.toUpperCase()) && axe.commons.dom.hasContentVirtual(virtualNode)) {\n          var styles = window.getComputedStyle(node);\n          if (styles.getPropertyValue('display') === 'none') {\n            return undefined;\n          } else if (styles.getPropertyValue('visibility') === 'hidden') {\n            var parent = axe.commons.dom.getComposedParent(node);\n            var parentStyle = parent && window.getComputedStyle(parent);\n            if (!parentStyle || parentStyle.getPropertyValue('visibility') !== 'hidden') {\n              return undefined;\n            }\n          }\n        }\n        return true;\n      }\n    } ],\n    commons: function() {\n      var commons = {};\n      var aria = commons.aria = {};\n      var lookupTable = aria.lookupTable = {};\n      var isNull = function isNull(value) {\n        return value === null;\n      };\n      var isNotNull = function isNotNull(value) {\n        return value !== null;\n      };\n      lookupTable.attributes = {\n        'aria-activedescendant': {\n          type: 'idref',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-atomic': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-autocomplete': {\n          type: 'nmtoken',\n          values: [ 'inline', 'list', 'both', 'none' ],\n          unsupported: false\n        },\n        'aria-busy': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-checked': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'mixed', 'undefined' ],\n          unsupported: false\n        },\n        'aria-colcount': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-colindex': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-colspan': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-controls': {\n          type: 'idrefs',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-current': {\n          type: 'nmtoken',\n          allowEmpty: true,\n          values: [ 'page', 'step', 'location', 'date', 'time', 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-describedby': {\n          type: 'idrefs',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-describedat': {\n          unsupported: true,\n          unstandardized: true\n        },\n        'aria-details': {\n          unsupported: true\n        },\n        'aria-disabled': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-dropeffect': {\n          type: 'nmtokens',\n          values: [ 'copy', 'move', 'reference', 'execute', 'popup', 'none' ],\n          unsupported: false\n        },\n        'aria-errormessage': {\n          type: 'idref',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-expanded': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ],\n          unsupported: false\n        },\n        'aria-flowto': {\n          type: 'idrefs',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-grabbed': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ],\n          unsupported: false\n        },\n        'aria-haspopup': {\n          type: 'nmtoken',\n          allowEmpty: true,\n          values: [ 'true', 'false', 'menu', 'listbox', 'tree', 'grid', 'dialog' ],\n          unsupported: false\n        },\n        'aria-hidden': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-invalid': {\n          type: 'nmtoken',\n          allowEmpty: true,\n          values: [ 'true', 'false', 'spelling', 'grammar' ],\n          unsupported: false\n        },\n        'aria-keyshortcuts': {\n          type: 'string',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-label': {\n          type: 'string',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-labelledby': {\n          type: 'idrefs',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-level': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-live': {\n          type: 'nmtoken',\n          values: [ 'off', 'polite', 'assertive' ],\n          unsupported: false\n        },\n        'aria-modal': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-multiline': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-multiselectable': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-orientation': {\n          type: 'nmtoken',\n          values: [ 'horizontal', 'vertical' ],\n          unsupported: false\n        },\n        'aria-owns': {\n          type: 'idrefs',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-placeholder': {\n          type: 'string',\n          allowEmpty: true,\n          unsupported: false\n        },\n        'aria-posinset': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-pressed': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'mixed', 'undefined' ],\n          unsupported: false\n        },\n        'aria-readonly': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-relevant': {\n          type: 'nmtokens',\n          values: [ 'additions', 'removals', 'text', 'all' ],\n          unsupported: false\n        },\n        'aria-required': {\n          type: 'boolean',\n          values: [ 'true', 'false' ],\n          unsupported: false\n        },\n        'aria-roledescription': {\n          type: 'string',\n          allowEmpty: true,\n          unsupported: {\n            exceptions: [ 'button', {\n              nodeName: 'input',\n              properties: {\n                type: [ 'button', 'checkbox', 'image', 'radio', 'reset', 'submit' ]\n              }\n            }, 'img', 'select', 'summary' ]\n          }\n        },\n        'aria-rowcount': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-rowindex': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-rowspan': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-selected': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ],\n          unsupported: false\n        },\n        'aria-setsize': {\n          type: 'int',\n          unsupported: false\n        },\n        'aria-sort': {\n          type: 'nmtoken',\n          values: [ 'ascending', 'descending', 'other', 'none' ],\n          unsupported: false\n        },\n        'aria-valuemax': {\n          type: 'decimal',\n          unsupported: false\n        },\n        'aria-valuemin': {\n          type: 'decimal',\n          unsupported: false\n        },\n        'aria-valuenow': {\n          type: 'decimal',\n          unsupported: false\n        },\n        'aria-valuetext': {\n          type: 'string',\n          unsupported: false\n        }\n      };\n      lookupTable.globalAttributes = [ 'aria-atomic', 'aria-busy', 'aria-controls', 'aria-current', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-keyshortcuts', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant', 'aria-roledescription' ];\n      lookupTable.role = {\n        alert: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        alertdialog: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-modal', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'dialog', 'section' ]\n        },\n        application: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'article', 'audio', 'embed', 'iframe', 'object', 'section', 'svg', 'video' ]\n        },\n        article: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-posinset', 'aria-setsize', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'article' ],\n          unsupported: false\n        },\n        banner: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'header' ],\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        button: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-pressed', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'button', 'input[type=\"button\"]', 'input[type=\"image\"]', 'input[type=\"reset\"]', 'input[type=\"submit\"]', 'summary' ],\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        cell: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-rowindex', 'aria-rowspan', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'td', 'th' ],\n          unsupported: false\n        },\n        checkbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-required', 'aria-readonly', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'input[type=\"checkbox\"]' ],\n          unsupported: false,\n          allowedElements: [ 'button' ]\n        },\n        columnheader: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-required', 'aria-readonly', 'aria-selected', 'aria-sort', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'th' ],\n          unsupported: false\n        },\n        combobox: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-autocomplete', 'aria-required', 'aria-activedescendant', 'aria-orientation', 'aria-errormessage' ],\n            required: [ 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'listbox', 'textbox' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: 'input',\n            properties: {\n              type: 'text'\n            }\n          } ]\n        },\n        command: {\n          nameFrom: [ 'author' ],\n          type: 'abstract',\n          unsupported: false\n        },\n        complementary: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'aside' ],\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        composite: {\n          nameFrom: [ 'author' ],\n          type: 'abstract',\n          unsupported: false\n        },\n        contentinfo: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'footer' ],\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        definition: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'dd', 'dfn' ],\n          unsupported: false\n        },\n        dialog: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-modal', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'dialog' ],\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        directory: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'ol', 'ul' ]\n        },\n        document: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'body' ],\n          unsupported: false,\n          allowedElements: [ 'article', 'embed', 'iframe', 'object', 'section', 'svg' ]\n        },\n        'doc-abstract': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-acknowledgments': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-afterword': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-appendix': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-backlink': {\n          type: 'link',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        'doc-biblioentry': {\n          type: 'listitem',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: [ 'doc-bibliography' ],\n          unsupported: false,\n          allowedElements: [ 'li' ]\n        },\n        'doc-bibliography': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-biblioref': {\n          type: 'link',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        'doc-chapter': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-colophon': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-conclusion': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-cover': {\n          type: 'img',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false\n        },\n        'doc-credit': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-credits': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-dedication': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-endnote': {\n          type: 'listitem',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: [ 'doc-endnotes' ],\n          unsupported: false,\n          allowedElements: [ 'li' ]\n        },\n        'doc-endnotes': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: [ 'doc-endnote' ],\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-epigraph': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false\n        },\n        'doc-epilogue': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-errata': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-example': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'aside', 'section' ]\n        },\n        'doc-footnote': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'aside', 'footer', 'header' ]\n        },\n        'doc-foreword': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-glossary': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: [ 'term', 'definition' ],\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'dl' ]\n        },\n        'doc-glossref': {\n          type: 'link',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author', 'contents' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        'doc-index': {\n          type: 'navigation',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'nav', 'section' ]\n        },\n        'doc-introduction': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-noteref': {\n          type: 'link',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author', 'contents' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        'doc-notice': {\n          type: 'note',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-pagebreak': {\n          type: 'separator',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'hr' ]\n        },\n        'doc-pagelist': {\n          type: 'navigation',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'nav', 'section' ]\n        },\n        'doc-part': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-preface': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-prologue': {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-pullquote': {\n          type: 'none',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'aside', 'section' ]\n        },\n        'doc-qna': {\n          type: 'section',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        'doc-subtitle': {\n          type: 'sectionhead',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: {\n            nodeName: [ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ]\n          }\n        },\n        'doc-tip': {\n          type: 'note',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'aside' ]\n        },\n        'doc-toc': {\n          type: 'navigation',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          namefrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'nav', 'section' ]\n        },\n        feed: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: {\n            one: [ 'article' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'article', 'aside', 'section' ]\n        },\n        figure: {\n          type: 'structure',\n          unsupported: true\n        },\n        form: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'form' ],\n          unsupported: false\n        },\n        grid: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-colcount', 'aria-level', 'aria-multiselectable', 'aria-readonly', 'aria-rowcount', 'aria-errormessage' ]\n          },\n          owned: {\n            one: [ 'rowgroup', 'row' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'table' ],\n          unsupported: false\n        },\n        gridcell: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-selected', 'aria-readonly', 'aria-required', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'td', 'th' ],\n          unsupported: false\n        },\n        group: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'details', 'optgroup' ],\n          unsupported: false,\n          allowedElements: [ 'dl', 'figcaption', 'fieldset', 'figure', 'footer', 'header', 'ol', 'ul' ]\n        },\n        heading: {\n          type: 'structure',\n          attributes: {\n            required: [ 'aria-level' ],\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ],\n          unsupported: false\n        },\n        img: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'img' ],\n          unsupported: false,\n          allowedElements: [ 'embed', 'iframe', 'object', 'svg' ]\n        },\n        input: {\n          nameFrom: [ 'author' ],\n          type: 'abstract',\n          unsupported: false\n        },\n        landmark: {\n          nameFrom: [ 'author' ],\n          type: 'abstract',\n          unsupported: false\n        },\n        link: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'a[href]' ],\n          unsupported: false,\n          allowedElements: [ 'button', {\n            nodeName: 'input',\n            properties: {\n              type: [ 'image', 'button' ]\n            }\n          } ]\n        },\n        list: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: {\n            all: [ 'listitem' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'ol', 'ul', 'dl' ],\n          unsupported: false\n        },\n        listbox: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-multiselectable', 'aria-required', 'aria-expanded', 'aria-orientation', 'aria-errormessage' ]\n          },\n          owned: {\n            all: [ 'option' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'select' ],\n          unsupported: false,\n          allowedElements: [ 'ol', 'ul' ]\n        },\n        listitem: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-level', 'aria-posinset', 'aria-setsize', 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'list' ],\n          implicit: [ 'li', 'dt' ],\n          unsupported: false\n        },\n        log: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        main: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'main' ],\n          unsupported: false,\n          allowedElements: [ 'article', 'section' ]\n        },\n        marquee: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        math: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'math' ],\n          unsupported: false\n        },\n        menu: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-orientation', 'aria-errormessage' ]\n          },\n          owned: {\n            one: [ 'menuitem', 'menuitemradio', 'menuitemcheckbox' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'menu[type=\"context\"]' ],\n          unsupported: false,\n          allowedElements: [ 'ol', 'ul' ]\n        },\n        menubar: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-orientation', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'ol', 'ul' ]\n        },\n        menuitem: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-posinset', 'aria-setsize', 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"command\"]' ],\n          unsupported: false,\n          allowedElements: [ 'button', 'li', {\n            nodeName: 'iput',\n            properties: {\n              type: [ 'image', 'button' ]\n            }\n          }, {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        menuitemcheckbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-posinset', 'aria-setsize', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"checkbox\"]' ],\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: [ 'button', 'li' ]\n          }, {\n            nodeName: 'input',\n            properties: {\n              type: [ 'checkbox', 'image', 'button' ]\n            }\n          }, {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        menuitemradio: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-selected', 'aria-posinset', 'aria-setsize', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"radio\"]' ],\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: [ 'button', 'li' ]\n          }, {\n            nodeName: 'input',\n            properties: {\n              type: [ 'image', 'button', 'radio' ]\n            }\n          }, {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        navigation: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'nav' ],\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        none: {\n          type: 'structure',\n          attributes: null,\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: [ 'article', 'aside', 'dl', 'embed', 'figcaption', 'fieldset', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'iframe', 'li', 'ol', 'section', 'ul' ]\n          }, {\n            nodeName: 'img',\n            attributes: {\n              alt: isNotNull\n            }\n          } ]\n        },\n        note: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'aside' ]\n        },\n        option: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-posinset', 'aria-setsize', 'aria-checked', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'listbox' ],\n          implicit: [ 'option' ],\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: [ 'button', 'li' ]\n          }, {\n            nodeName: 'input',\n            properties: {\n              type: [ 'checkbox', 'button' ]\n            }\n          }, {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        presentation: {\n          type: 'structure',\n          attributes: null,\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: [ 'article', 'aside', 'dl', 'embed', 'figcaption', 'fieldset', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'iframe', 'li', 'ol', 'section', 'ul' ]\n          }, {\n            nodeName: 'img',\n            attributes: {\n              alt: isNotNull\n            }\n          } ]\n        },\n        progressbar: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin', 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'progress' ],\n          unsupported: false\n        },\n        radio: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-posinset', 'aria-setsize', 'aria-required', 'aria-errormessage' ],\n            required: [ 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'input[type=\"radio\"]' ],\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: [ 'button', 'li' ]\n          }, {\n            nodeName: 'input',\n            properties: {\n              type: [ 'image', 'button' ]\n            }\n          } ]\n        },\n        radiogroup: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-required', 'aria-expanded', 'aria-readonly', 'aria-errormessage' ]\n          },\n          owned: {\n            all: [ 'radio' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: {\n            nodeName: [ 'ol', 'ul' ]\n          }\n        },\n        range: {\n          nameFrom: [ 'author' ],\n          type: 'abstract',\n          unsupported: false\n        },\n        region: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'section[aria-label]', 'section[aria-labelledby]', 'section[title]' ],\n          unsupported: false,\n          allowedElements: {\n            nodeName: [ 'article', 'aside' ]\n          }\n        },\n        roletype: {\n          type: 'abstract',\n          unsupported: false\n        },\n        row: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-colindex', 'aria-expanded', 'aria-level', 'aria-selected', 'aria-rowindex', 'aria-errormessage' ]\n          },\n          owned: {\n            one: [ 'cell', 'columnheader', 'rowheader', 'gridcell' ]\n          },\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'rowgroup', 'grid', 'treegrid', 'table' ],\n          implicit: [ 'tr' ],\n          unsupported: false\n        },\n        rowgroup: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: {\n            all: [ 'row' ]\n          },\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'grid', 'table' ],\n          implicit: [ 'tbody', 'thead', 'tfoot' ],\n          unsupported: false\n        },\n        rowheader: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-expanded', 'aria-rowindex', 'aria-rowspan', 'aria-required', 'aria-readonly', 'aria-selected', 'aria-sort', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'th' ],\n          unsupported: false\n        },\n        scrollbar: {\n          type: 'widget',\n          attributes: {\n            required: [ 'aria-controls', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ],\n            allowed: [ 'aria-valuetext', 'aria-orientation', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false\n        },\n        search: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: {\n            nodeName: [ 'aside', 'form', 'section' ]\n          }\n        },\n        searchbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required', 'aria-placeholder', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"search\"]' ],\n          unsupported: false,\n          allowedElements: {\n            nodeName: 'input',\n            properties: {\n              type: 'text'\n            }\n          }\n        },\n        section: {\n          nameFrom: [ 'author', 'contents' ],\n          type: 'abstract',\n          unsupported: false\n        },\n        sectionhead: {\n          nameFrom: [ 'author', 'contents' ],\n          type: 'abstract',\n          unsupported: false\n        },\n        select: {\n          nameFrom: [ 'author' ],\n          type: 'abstract',\n          unsupported: false\n        },\n        separator: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-orientation', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin', 'aria-valuetext', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'hr' ],\n          unsupported: false,\n          allowedElements: [ 'li' ]\n        },\n        slider: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-orientation', 'aria-readonly', 'aria-errormessage' ],\n            required: [ 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"range\"]' ],\n          unsupported: false\n        },\n        spinbutton: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-required', 'aria-readonly', 'aria-errormessage' ],\n            required: [ 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"number\"]' ],\n          unsupported: false,\n          allowedElements: {\n            nodeName: 'input',\n            properties: {\n              type: 'text'\n            }\n          }\n        },\n        status: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'output' ],\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        structure: {\n          type: 'abstract',\n          unsupported: false\n        },\n        switch: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-errormessage' ],\n            required: [ 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'button', {\n            nodeName: 'input',\n            properties: {\n              type: [ 'checkbox', 'image', 'button' ]\n            }\n          }, {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        tab: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-expanded', 'aria-setsize', 'aria-posinset', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'tablist' ],\n          unsupported: false,\n          allowedElements: [ {\n            nodeName: [ 'button', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li' ]\n          }, {\n            nodeName: 'input',\n            properties: {\n              type: 'button'\n            }\n          }, {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        table: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colcount', 'aria-rowcount', 'aria-errormessage' ]\n          },\n          owned: {\n            one: [ 'rowgroup', 'row' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'table' ],\n          unsupported: false\n        },\n        tablist: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-level', 'aria-multiselectable', 'aria-orientation', 'aria-errormessage' ]\n          },\n          owned: {\n            all: [ 'tab' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'ol', 'ul' ]\n        },\n        tabpanel: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'section' ]\n        },\n        term: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'dt' ],\n          unsupported: false\n        },\n        textbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required', 'aria-placeholder', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"text\"]', 'input[type=\"email\"]', 'input[type=\"password\"]', 'input[type=\"tel\"]', 'input[type=\"url\"]', 'input:not([type])', 'textarea' ],\n          unsupported: false\n        },\n        timer: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false\n        },\n        toolbar: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-orientation', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'menu[type=\"toolbar\"]' ],\n          unsupported: false,\n          allowedElements: [ 'ol', 'ul' ]\n        },\n        tooltip: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          unsupported: false\n        },\n        tree: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-multiselectable', 'aria-required', 'aria-expanded', 'aria-orientation', 'aria-errormessage' ]\n          },\n          owned: {\n            all: [ 'treeitem' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false,\n          allowedElements: [ 'ol', 'ul' ]\n        },\n        treegrid: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-colcount', 'aria-expanded', 'aria-level', 'aria-multiselectable', 'aria-readonly', 'aria-required', 'aria-rowcount', 'aria-orientation', 'aria-errormessage' ]\n          },\n          owned: {\n            one: [ 'rowgroup', 'row' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          unsupported: false\n        },\n        treeitem: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-selected', 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize', 'aria-errormessage' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'group', 'tree' ],\n          unsupported: false,\n          allowedElements: [ 'li', {\n            nodeName: 'a',\n            attributes: {\n              href: isNotNull\n            }\n          } ]\n        },\n        widget: {\n          type: 'abstract',\n          unsupported: false\n        },\n        window: {\n          nameFrom: [ 'author' ],\n          type: 'abstract',\n          unsupported: false\n        }\n      };\n      lookupTable.elementsAllowedNoRole = [ {\n        nodeName: [ 'base', 'body', 'caption', 'col', 'colgroup', 'datalist', 'dd', 'details', 'dt', 'head', 'html', 'keygen', 'label', 'legend', 'main', 'map', 'math', 'meta', 'meter', 'noscript', 'optgroup', 'param', 'picture', 'progress', 'script', 'source', 'style', 'template', 'textarea', 'title', 'track' ]\n      }, {\n        nodeName: 'area',\n        attributes: {\n          href: isNotNull\n        }\n      }, {\n        nodeName: 'input',\n        properties: {\n          type: [ 'color', 'data', 'datatime', 'file', 'hidden', 'month', 'number', 'password', 'range', 'reset', 'submit', 'time', 'week' ]\n        }\n      }, {\n        nodeName: 'input',\n        attributes: {\n          list: isNull\n        },\n        properties: {\n          type: [ 'email', 'search', 'tel', 'url' ]\n        }\n      }, {\n        nodeName: 'link',\n        attributes: {\n          href: isNotNull\n        }\n      }, {\n        nodeName: 'menu',\n        attributes: {\n          type: 'context'\n        }\n      }, {\n        nodeName: 'menuitem',\n        attributes: {\n          type: [ 'command', 'checkbox', 'radio' ]\n        }\n      }, {\n        nodeName: 'select',\n        condition: function condition(node) {\n          return Number(node.getAttribute('size')) > 1;\n        },\n        properties: {\n          multiple: true\n        }\n      }, {\n        nodeName: [ 'clippath', 'cursor', 'defs', 'desc', 'feblend', 'fecolormatrix', 'fecomponenttransfer', 'fecomposite', 'feconvolvematrix', 'fediffuselighting', 'fedisplacementmap', 'fedistantlight', 'fedropshadow', 'feflood', 'fefunca', 'fefuncb', 'fefuncg', 'fefuncr', 'fegaussianblur', 'feimage', 'femerge', 'femergenode', 'femorphology', 'feoffset', 'fepointlight', 'fespecularlighting', 'fespotlight', 'fetile', 'feturbulence', 'filter', 'hatch', 'hatchpath', 'lineargradient', 'marker', 'mask', 'meshgradient', 'meshpatch', 'meshrow', 'metadata', 'mpath', 'pattern', 'radialgradient', 'solidcolor', 'stop', 'switch', 'view' ]\n      } ];\n      lookupTable.elementsAllowedAnyRole = [ {\n        nodeName: 'a',\n        attributes: {\n          href: isNull\n        }\n      }, {\n        nodeName: [ 'abbr', 'address', 'canvas', 'div', 'p', 'pre', 'blockquote', 'ins', 'del', 'output', 'span', 'table', 'tbody', 'thead', 'tfoot', 'td', 'em', 'strong', 'small', 's', 'cite', 'q', 'dfn', 'abbr', 'time', 'code', 'var', 'samp', 'kbd', 'sub', 'sup', 'i', 'b', 'u', 'mark', 'ruby', 'rt', 'rp', 'bdi', 'bdo', 'br', 'wbr', 'th', 'tr' ]\n      } ];\n      lookupTable.evaluateRoleForElement = {\n        A: function A(_ref13) {\n          var node = _ref13.node, out = _ref13.out;\n          if (node.namespaceURI === 'http://www.w3.org/2000/svg') {\n            return true;\n          }\n          if (node.href.length) {\n            return out;\n          }\n          return true;\n        },\n        AREA: function AREA(_ref14) {\n          var node = _ref14.node;\n          return !node.href;\n        },\n        BUTTON: function BUTTON(_ref15) {\n          var node = _ref15.node, role = _ref15.role, out = _ref15.out;\n          if (node.getAttribute('type') === 'menu') {\n            return role === 'menuitem';\n          }\n          return out;\n        },\n        IMG: function IMG(_ref16) {\n          var node = _ref16.node, out = _ref16.out;\n          if (node.alt) {\n            return !out;\n          }\n          return out;\n        },\n        INPUT: function INPUT(_ref17) {\n          var node = _ref17.node, role = _ref17.role, out = _ref17.out;\n          switch (node.type) {\n           case 'button':\n           case 'image':\n            return out;\n\n           case 'checkbox':\n            if (role === 'button' && node.hasAttribute('aria-pressed')) {\n              return true;\n            }\n            return out;\n\n           case 'radio':\n            return role === 'menuitemradio';\n\n           case 'text':\n            return role === 'combobox' || role === 'searchbox' || role === 'spinbutton';\n\n           default:\n            return false;\n          }\n        },\n        LI: function LI(_ref18) {\n          var node = _ref18.node, out = _ref18.out;\n          var hasImplicitListitemRole = axe.utils.matchesSelector(node, 'ol li, ul li');\n          if (hasImplicitListitemRole) {\n            return out;\n          }\n          return true;\n        },\n        MENU: function MENU(_ref19) {\n          var node = _ref19.node;\n          if (node.getAttribute('type') === 'context') {\n            return false;\n          }\n          return true;\n        },\n        OPTION: function OPTION(_ref20) {\n          var node = _ref20.node;\n          var withinOptionList = axe.utils.matchesSelector(node, 'select > option, datalist > option, optgroup > option');\n          return !withinOptionList;\n        },\n        SELECT: function SELECT(_ref21) {\n          var node = _ref21.node, role = _ref21.role;\n          return !node.multiple && node.size <= 1 && role === 'menu';\n        },\n        SVG: function SVG(_ref22) {\n          var node = _ref22.node, out = _ref22.out;\n          if (node.parentNode && node.parentNode.namespaceURI === 'http://www.w3.org/2000/svg') {\n            return true;\n          }\n          return out;\n        }\n      };\n      lookupTable.rolesOfType = {\n        widget: [ 'button', 'checkbox', 'dialog', 'gridcell', 'heading', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'scrollbar', 'slider', 'spinbutton', 'status', 'switch', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'tree', 'treeitem' ]\n      };\n      var color = {};\n      commons.color = color;\n      var dom = commons.dom = {};\n      function matches(node, definition) {\n        return matches.fromDefinition(node, definition);\n      }\n      commons.matches = matches;\n      var table = commons.table = {};\n      var text = commons.text = {\n        EdgeFormDefaults: {}\n      };\n      var utils = commons.utils = axe.utils;\n      aria.arialabelText = function arialabelText(node) {\n        node = node.actualNode || node;\n        if (node.nodeType !== 1) {\n          return '';\n        }\n        return node.getAttribute('aria-label') || '';\n      };\n      aria.arialabelledbyText = function arialabelledbyText(node) {\n        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        node = node.actualNode || node;\n        if (node.nodeType !== 1 || context.inLabelledByContext || context.inControlContext) {\n          return '';\n        }\n        var refs = dom.idrefs(node, 'aria-labelledby').filter(function(elm) {\n          return elm;\n        });\n        return refs.reduce(function(accessibleName, elm) {\n          var accessibleNameAdd = text.accessibleText(elm, _extends({\n            inLabelledByContext: true,\n            startNode: context.startNode || node\n          }, context));\n          if (!accessibleName) {\n            return accessibleNameAdd;\n          } else {\n            return accessibleName + ' ' + accessibleNameAdd;\n          }\n        }, '');\n      };\n      aria.requiredAttr = function(role) {\n        var roles = aria.lookupTable.role[role], attr = roles && roles.attributes && roles.attributes.required;\n        return attr || [];\n      };\n      aria.allowedAttr = function(role) {\n        var roles = aria.lookupTable.role[role], attr = roles && roles.attributes && roles.attributes.allowed || [], requiredAttr = roles && roles.attributes && roles.attributes.required || [];\n        return attr.concat(aria.lookupTable.globalAttributes).concat(requiredAttr);\n      };\n      aria.validateAttr = function validateAttr(att) {\n        var attrDefinition = aria.lookupTable.attributes[att];\n        return !!attrDefinition;\n      };\n      function getRoleSegments(node) {\n        var roles = [];\n        if (!node) {\n          return roles;\n        }\n        if (node.hasAttribute('role')) {\n          var nodeRoles = axe.utils.tokenList(node.getAttribute('role').toLowerCase());\n          roles = roles.concat(nodeRoles);\n        }\n        if (node.hasAttributeNS('http://www.idpf.org/2007/ops', 'type')) {\n          var epubRoles = axe.utils.tokenList(node.getAttributeNS('http://www.idpf.org/2007/ops', 'type').toLowerCase()).map(function(role) {\n            return 'doc-' + role;\n          });\n          roles = roles.concat(epubRoles);\n        }\n        roles = roles.filter(function(role) {\n          return axe.commons.aria.isValidRole(role);\n        });\n        return roles;\n      }\n      aria.getElementUnallowedRoles = function getElementUnallowedRoles(node) {\n        var allowImplicit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var tagName = node.nodeName.toUpperCase();\n        if (!axe.utils.isHtmlElement(node)) {\n          return [];\n        }\n        var roleSegments = getRoleSegments(node);\n        var implicitRole = axe.commons.aria.implicitRole(node);\n        var unallowedRoles = roleSegments.filter(function(role) {\n          if (allowImplicit && role === implicitRole) {\n            return false;\n          }\n          if (!allowImplicit && !(role === 'row' && tagName === 'TR' && axe.utils.matchesSelector(node, 'table[role=\"grid\"] > tr'))) {\n            return true;\n          }\n          return !aria.isAriaRoleAllowedOnElement(node, role);\n        });\n        return unallowedRoles;\n      };\n      aria.getOwnedVirtual = function getOwned(_ref23) {\n        var actualNode = _ref23.actualNode, children = _ref23.children;\n        if (!actualNode || !children) {\n          throw new Error('getOwnedVirtual requires a virtual node');\n        }\n        return dom.idrefs(actualNode, 'aria-owns').reduce(function(ownedElms, element) {\n          if (element) {\n            var virtualNode = axe.utils.getNodeFromTree(axe._tree[0], element);\n            ownedElms.push(virtualNode);\n          }\n          return ownedElms;\n        }, children);\n      };\n      aria.getRole = function getRole(node) {\n        var _ref24 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, noImplicit = _ref24.noImplicit, fallback = _ref24.fallback, abstracts = _ref24.abstracts, dpub = _ref24.dpub;\n        node = node.actualNode || node;\n        if (node.nodeType !== 1) {\n          return null;\n        }\n        var roleAttr = (node.getAttribute('role') || '').trim().toLowerCase();\n        var roleList = fallback ? axe.utils.tokenList(roleAttr) : [ roleAttr ];\n        var validRoles = roleList.filter(function(role) {\n          if (!dpub && role.substr(0, 4) === 'doc-') {\n            return false;\n          }\n          return aria.isValidRole(role, {\n            allowAbstract: abstracts\n          });\n        });\n        var explicitRole = validRoles[0];\n        if (!explicitRole && !noImplicit) {\n          return aria.implicitRole(node);\n        }\n        return explicitRole || null;\n      };\n      function findDomNode(node, functor) {\n        if (functor(node)) {\n          return node;\n        }\n        for (var i = 0; i < node.children.length; i++) {\n          var out = findDomNode(node.children[i], functor);\n          if (out) {\n            return out;\n          }\n        }\n      }\n      aria.isAccessibleRef = function isAccessibleRef(node) {\n        node = node.actualNode || node;\n        var root = dom.getRootNode(node);\n        root = root.documentElement || root;\n        var id = node.id;\n        var refAttrs = Object.keys(aria.lookupTable.attributes).filter(function(attr) {\n          var type = aria.lookupTable.attributes[attr].type;\n          return /^idrefs?$/.test(type);\n        });\n        var refElm = findDomNode(root, function(elm) {\n          if (elm.nodeType !== 1) {\n            return;\n          }\n          if (elm.nodeName.toUpperCase() === 'LABEL' && elm.getAttribute('for') === id) {\n            return true;\n          }\n          return refAttrs.filter(function(attr) {\n            return elm.hasAttribute(attr);\n          }).some(function(attr) {\n            var attrValue = elm.getAttribute(attr);\n            if (aria.lookupTable.attributes[attr].type === 'idref') {\n              return attrValue === id;\n            }\n            return axe.utils.tokenList(attrValue).includes(id);\n          });\n        });\n        return typeof refElm !== 'undefined';\n      };\n      aria.isAriaRoleAllowedOnElement = function isAriaRoleAllowedOnElement(node, role) {\n        var nodeName = node.nodeName.toUpperCase();\n        var lookupTable = axe.commons.aria.lookupTable;\n        if (matches(node, lookupTable.elementsAllowedNoRole)) {\n          return false;\n        }\n        if (matches(node, lookupTable.elementsAllowedAnyRole)) {\n          return true;\n        }\n        var roleValue = lookupTable.role[role];\n        if (!roleValue || !roleValue.allowedElements) {\n          return false;\n        }\n        var out = matches(node, roleValue.allowedElements);\n        if (Object.keys(lookupTable.evaluateRoleForElement).includes(nodeName)) {\n          return lookupTable.evaluateRoleForElement[nodeName]({\n            node: node,\n            role: role,\n            out: out\n          });\n        }\n        return out;\n      };\n      aria.isUnsupportedRole = function(role) {\n        var roleDefinition = aria.lookupTable.role[role];\n        return roleDefinition ? roleDefinition.unsupported : false;\n      };\n      aria.labelVirtual = function(_ref25) {\n        var actualNode = _ref25.actualNode;\n        var ref = void 0, candidate = void 0;\n        if (actualNode.getAttribute('aria-labelledby')) {\n          ref = dom.idrefs(actualNode, 'aria-labelledby');\n          candidate = ref.map(function(thing) {\n            var vNode = axe.utils.getNodeFromTree(axe._tree[0], thing);\n            return vNode ? text.visibleVirtual(vNode, true) : '';\n          }).join(' ').trim();\n          if (candidate) {\n            return candidate;\n          }\n        }\n        candidate = actualNode.getAttribute('aria-label');\n        if (candidate) {\n          candidate = text.sanitize(candidate).trim();\n          if (candidate) {\n            return candidate;\n          }\n        }\n        return null;\n      };\n      aria.label = function(node) {\n        node = axe.utils.getNodeFromTree(axe._tree[0], node);\n        return aria.labelVirtual(node);\n      };\n      aria.namedFromContents = function namedFromContents(node) {\n        var _ref26 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, strict = _ref26.strict;\n        node = node.actualNode || node;\n        if (node.nodeType !== 1) {\n          return false;\n        }\n        var role = aria.getRole(node);\n        var roleDef = aria.lookupTable.role[role];\n        if (roleDef && roleDef.nameFrom.includes('contents') || node.nodeName.toUpperCase() === 'TABLE') {\n          return true;\n        }\n        if (strict) {\n          return false;\n        }\n        return !roleDef || [ 'presentation', 'none' ].includes(role);\n      };\n      aria.isValidRole = function(role) {\n        var _ref27 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, allowAbstract = _ref27.allowAbstract, _ref27$flagUnsupporte = _ref27.flagUnsupported, flagUnsupported = _ref27$flagUnsupporte === undefined ? false : _ref27$flagUnsupporte;\n        var roleDefinition = aria.lookupTable.role[role];\n        var isRoleUnsupported = roleDefinition ? roleDefinition.unsupported : false;\n        if (!roleDefinition || flagUnsupported && isRoleUnsupported) {\n          return false;\n        }\n        return allowAbstract ? true : roleDefinition.type !== 'abstract';\n      };\n      aria.getRolesWithNameFromContents = function() {\n        return Object.keys(aria.lookupTable.role).filter(function(r) {\n          return aria.lookupTable.role[r].nameFrom && aria.lookupTable.role[r].nameFrom.indexOf('contents') !== -1;\n        });\n      };\n      aria.getRolesByType = function(roleType) {\n        return Object.keys(aria.lookupTable.role).filter(function(r) {\n          return aria.lookupTable.role[r].type === roleType;\n        });\n      };\n      aria.getRoleType = function(role) {\n        var r = aria.lookupTable.role[role];\n        return r && r.type || null;\n      };\n      aria.requiredOwned = function(role) {\n        'use strict';\n        var owned = null, roles = aria.lookupTable.role[role];\n        if (roles) {\n          owned = axe.utils.clone(roles.owned);\n        }\n        return owned;\n      };\n      aria.requiredContext = function(role) {\n        'use strict';\n        var context = null, roles = aria.lookupTable.role[role];\n        if (roles) {\n          context = axe.utils.clone(roles.context);\n        }\n        return context;\n      };\n      aria.implicitNodes = function(role) {\n        'use strict';\n        var implicit = null, roles = aria.lookupTable.role[role];\n        if (roles && roles.implicit) {\n          implicit = axe.utils.clone(roles.implicit);\n        }\n        return implicit;\n      };\n      aria.implicitRole = function(node) {\n        'use strict';\n        var isValidImplicitRole = function isValidImplicitRole(set, role) {\n          var validForNodeType = function validForNodeType(implicitNodeTypeSelector) {\n            return axe.utils.matchesSelector(node, implicitNodeTypeSelector);\n          };\n          if (role.implicit && role.implicit.some(validForNodeType)) {\n            set.push(role.name);\n          }\n          return set;\n        };\n        var sortRolesByOptimalAriaContext = function sortRolesByOptimalAriaContext(roles, ariaAttributes) {\n          var getScore = function getScore(role) {\n            var allowedAriaAttributes = aria.allowedAttr(role);\n            return allowedAriaAttributes.reduce(function(score, attribute) {\n              return score + (ariaAttributes.indexOf(attribute) > -1 ? 1 : 0);\n            }, 0);\n          };\n          var scored = roles.map(function(role) {\n            return {\n              score: getScore(role),\n              name: role\n            };\n          });\n          var sorted = scored.sort(function(scoredRoleA, scoredRoleB) {\n            return scoredRoleB.score - scoredRoleA.score;\n          });\n          return sorted.map(function(sortedRole) {\n            return sortedRole.name;\n          });\n        };\n        var roles = Object.keys(aria.lookupTable.role).map(function(role) {\n          var lookup = aria.lookupTable.role[role];\n          return {\n            name: role,\n            implicit: lookup && lookup.implicit\n          };\n        });\n        var availableImplicitRoles = roles.reduce(isValidImplicitRole, []);\n        if (!availableImplicitRoles.length) {\n          return null;\n        }\n        var nodeAttributes = node.attributes;\n        var ariaAttributes = [];\n        for (var i = 0, j = nodeAttributes.length; i < j; i++) {\n          var attr = nodeAttributes[i];\n          if (attr.name.match(/^aria-/)) {\n            ariaAttributes.push(attr.name);\n          }\n        }\n        return sortRolesByOptimalAriaContext(availableImplicitRoles, ariaAttributes).shift();\n      };\n      aria.validateAttrValue = function validateAttrValue(node, attr) {\n        'use strict';\n        var matches, list, value = node.getAttribute(attr), attrInfo = aria.lookupTable.attributes[attr];\n        var doc = dom.getRootNode(node);\n        if (!attrInfo) {\n          return true;\n        }\n        if (attrInfo.allowEmpty && (!value || value.trim() === '')) {\n          return true;\n        }\n        switch (attrInfo.type) {\n         case 'boolean':\n         case 'nmtoken':\n          return typeof value === 'string' && attrInfo.values.includes(value.toLowerCase());\n\n         case 'nmtokens':\n          list = axe.utils.tokenList(value);\n          return list.reduce(function(result, token) {\n            return result && attrInfo.values.includes(token);\n          }, list.length !== 0);\n\n         case 'idref':\n          return !!(value && doc.getElementById(value));\n\n         case 'idrefs':\n          list = axe.utils.tokenList(value);\n          return list.some(function(token) {\n            return doc.getElementById(token);\n          });\n\n         case 'string':\n          return value.trim() !== '';\n\n         case 'decimal':\n          matches = value.match(/^[-+]?([0-9]*)\\.?([0-9]*)$/);\n          return !!(matches && (matches[1] || matches[2]));\n\n         case 'int':\n          return /^[-+]?[0-9]+$/.test(value);\n        }\n      };\n      color.Color = function(red, green, blue, alpha) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n        this.toHexString = function() {\n          var redString = Math.round(this.red).toString(16);\n          var greenString = Math.round(this.green).toString(16);\n          var blueString = Math.round(this.blue).toString(16);\n          return '#' + (this.red > 15.5 ? redString : '0' + redString) + (this.green > 15.5 ? greenString : '0' + greenString) + (this.blue > 15.5 ? blueString : '0' + blueString);\n        };\n        var rgbRegex = /^rgb\\((\\d+), (\\d+), (\\d+)\\)$/;\n        var rgbaRegex = /^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/;\n        this.parseRgbString = function(colorString) {\n          if (colorString === 'transparent') {\n            this.red = 0;\n            this.green = 0;\n            this.blue = 0;\n            this.alpha = 0;\n            return;\n          }\n          var match = colorString.match(rgbRegex);\n          if (match) {\n            this.red = parseInt(match[1], 10);\n            this.green = parseInt(match[2], 10);\n            this.blue = parseInt(match[3], 10);\n            this.alpha = 1;\n            return;\n          }\n          match = colorString.match(rgbaRegex);\n          if (match) {\n            this.red = parseInt(match[1], 10);\n            this.green = parseInt(match[2], 10);\n            this.blue = parseInt(match[3], 10);\n            this.alpha = parseFloat(match[4]);\n            return;\n          }\n        };\n        this.getRelativeLuminance = function() {\n          var rSRGB = this.red / 255;\n          var gSRGB = this.green / 255;\n          var bSRGB = this.blue / 255;\n          var r = rSRGB <= .03928 ? rSRGB / 12.92 : Math.pow((rSRGB + .055) / 1.055, 2.4);\n          var g = gSRGB <= .03928 ? gSRGB / 12.92 : Math.pow((gSRGB + .055) / 1.055, 2.4);\n          var b = bSRGB <= .03928 ? bSRGB / 12.92 : Math.pow((bSRGB + .055) / 1.055, 2.4);\n          return .2126 * r + .7152 * g + .0722 * b;\n        };\n      };\n      color.flattenColors = function(fgColor, bgColor) {\n        var alpha = fgColor.alpha;\n        var r = (1 - alpha) * bgColor.red + alpha * fgColor.red;\n        var g = (1 - alpha) * bgColor.green + alpha * fgColor.green;\n        var b = (1 - alpha) * bgColor.blue + alpha * fgColor.blue;\n        var a = fgColor.alpha + bgColor.alpha * (1 - fgColor.alpha);\n        return new color.Color(r, g, b, a);\n      };\n      color.getContrast = function(bgColor, fgColor) {\n        if (!fgColor || !bgColor) {\n          return null;\n        }\n        if (fgColor.alpha < 1) {\n          fgColor = color.flattenColors(fgColor, bgColor);\n        }\n        var bL = bgColor.getRelativeLuminance();\n        var fL = fgColor.getRelativeLuminance();\n        return (Math.max(fL, bL) + .05) / (Math.min(fL, bL) + .05);\n      };\n      color.hasValidContrastRatio = function(bg, fg, fontSize, isBold) {\n        var contrast = color.getContrast(bg, fg);\n        var isSmallFont = isBold && Math.ceil(fontSize * 72) / 96 < 14 || !isBold && Math.ceil(fontSize * 72) / 96 < 18;\n        var expectedContrastRatio = isSmallFont ? 4.5 : 3;\n        return {\n          isValid: contrast > expectedContrastRatio,\n          contrastRatio: contrast,\n          expectedContrastRatio: expectedContrastRatio\n        };\n      };\n      function _getFonts(style) {\n        return style.getPropertyValue('font-family').split(/[,;]/g).map(function(font) {\n          return font.trim().toLowerCase();\n        });\n      }\n      function elementIsDistinct(node, ancestorNode) {\n        var nodeStyle = window.getComputedStyle(node);\n        if (nodeStyle.getPropertyValue('background-image') !== 'none') {\n          return true;\n        }\n        var hasBorder = [ 'border-bottom', 'border-top', 'outline' ].reduce(function(result, edge) {\n          var borderClr = new color.Color();\n          borderClr.parseRgbString(nodeStyle.getPropertyValue(edge + '-color'));\n          return result || nodeStyle.getPropertyValue(edge + '-style') !== 'none' && parseFloat(nodeStyle.getPropertyValue(edge + '-width')) > 0 && borderClr.alpha !== 0;\n        }, false);\n        if (hasBorder) {\n          return true;\n        }\n        var parentStyle = window.getComputedStyle(ancestorNode);\n        if (_getFonts(nodeStyle)[0] !== _getFonts(parentStyle)[0]) {\n          return true;\n        }\n        var hasStyle = [ 'text-decoration-line', 'text-decoration-style', 'font-weight', 'font-style', 'font-size' ].reduce(function(result, cssProp) {\n          return result || nodeStyle.getPropertyValue(cssProp) !== parentStyle.getPropertyValue(cssProp);\n        }, false);\n        var tDec = nodeStyle.getPropertyValue('text-decoration');\n        if (tDec.split(' ').length < 3) {\n          hasStyle = hasStyle || tDec !== parentStyle.getPropertyValue('text-decoration');\n        }\n        return hasStyle;\n      }\n      color.elementIsDistinct = elementIsDistinct;\n      var graphicNodes = [ 'IMG', 'CANVAS', 'OBJECT', 'IFRAME', 'VIDEO', 'SVG' ];\n      function elmHasImage(elm, style) {\n        var nodeName = elm.nodeName.toUpperCase();\n        if (graphicNodes.includes(nodeName)) {\n          axe.commons.color.incompleteData.set('bgColor', 'imgNode');\n          return true;\n        }\n        style = style || window.getComputedStyle(elm);\n        var bgImageStyle = style.getPropertyValue('background-image');\n        var hasBgImage = bgImageStyle !== 'none';\n        if (hasBgImage) {\n          var hasGradient = /gradient/.test(bgImageStyle);\n          axe.commons.color.incompleteData.set('bgColor', hasGradient ? 'bgGradient' : 'bgImage');\n        }\n        return hasBgImage;\n      }\n      function getBgColor(elm, elmStyle) {\n        elmStyle = elmStyle || window.getComputedStyle(elm);\n        var bgColor = new color.Color();\n        bgColor.parseRgbString(elmStyle.getPropertyValue('background-color'));\n        if (bgColor.alpha !== 0) {\n          var opacity = elmStyle.getPropertyValue('opacity');\n          bgColor.alpha = bgColor.alpha * opacity;\n        }\n        return bgColor;\n      }\n      function contentOverlapping(targetElement, bgNode) {\n        var targetRect = targetElement.getClientRects()[0];\n        var obscuringElements = dom.shadowElementsFromPoint(targetRect.left, targetRect.top);\n        if (obscuringElements) {\n          for (var i = 0; i < obscuringElements.length; i++) {\n            if (obscuringElements[i] !== targetElement && obscuringElements[i] === bgNode) {\n              return true;\n            }\n          }\n        }\n        return false;\n      }\n      function calculateObscuringAlpha(elmIndex, elmStack, originalElm) {\n        var totalAlpha = 0;\n        if (elmIndex > 0) {\n          for (var i = elmIndex - 1; i >= 0; i--) {\n            var bgElm = elmStack[i];\n            var bgElmStyle = window.getComputedStyle(bgElm);\n            var bgColor = getBgColor(bgElm, bgElmStyle);\n            if (bgColor.alpha && contentOverlapping(originalElm, bgElm)) {\n              totalAlpha += bgColor.alpha;\n            } else {\n              elmStack.splice(i, 1);\n            }\n          }\n        }\n        return totalAlpha;\n      }\n      function elmPartiallyObscured(elm, bgElm, bgColor) {\n        var obscured = elm !== bgElm && !dom.visuallyContains(elm, bgElm) && bgColor.alpha !== 0;\n        if (obscured) {\n          axe.commons.color.incompleteData.set('bgColor', 'elmPartiallyObscured');\n        }\n        return obscured;\n      }\n      function includeMissingElements(elmStack, elm) {\n        var elementMap = {\n          TD: [ 'TR', 'TBODY' ],\n          TH: [ 'TR', 'THEAD' ],\n          INPUT: [ 'LABEL' ]\n        };\n        var tagArray = elmStack.map(function(elm) {\n          return elm.nodeName;\n        });\n        var bgNodes = elmStack;\n        for (var candidate in elementMap) {\n          if (tagArray.includes(candidate)) {\n            for (var candidateIndex in elementMap[candidate]) {\n              if (candidate.hasOwnProperty(candidateIndex)) {\n                var ancestorMatch = axe.commons.dom.findUp(elm, elementMap[candidate][candidateIndex]);\n                if (ancestorMatch && elmStack.indexOf(ancestorMatch) === -1) {\n                  var overlaps = axe.commons.dom.visuallyOverlaps(elm.getBoundingClientRect(), ancestorMatch);\n                  if (overlaps) {\n                    bgNodes.splice(tagArray.indexOf(candidate) + 1, 0, ancestorMatch);\n                  }\n                }\n                if (elm.nodeName === elementMap[candidate][candidateIndex] && tagArray.indexOf(elm.nodeName) === -1) {\n                  bgNodes.splice(tagArray.indexOf(candidate) + 1, 0, elm);\n                }\n              }\n            }\n          }\n        }\n        return bgNodes;\n      }\n      function sortPageBackground(elmStack) {\n        var bodyIndex = elmStack.indexOf(document.body);\n        var bgNodes = elmStack;\n        if (bodyIndex > 1 && !elmHasImage(document.documentElement) && getBgColor(document.documentElement).alpha === 0) {\n          bgNodes.splice(bodyIndex, 1);\n          bgNodes.splice(elmStack.indexOf(document.documentElement), 1);\n          bgNodes.push(document.body);\n        }\n        return bgNodes;\n      }\n      color.getCoords = function(rect) {\n        var x = void 0, y = void 0;\n        if (rect.left > window.innerWidth) {\n          return;\n        }\n        if (rect.top > window.innerHeight) {\n          return;\n        }\n        x = Math.min(Math.ceil(rect.left + rect.width / 2), window.innerWidth - 1);\n        y = Math.min(Math.ceil(rect.top + rect.height / 2), window.innerHeight - 1);\n        return {\n          x: x,\n          y: y\n        };\n      };\n      color.getRectStack = function(elm) {\n        var boundingCoords = color.getCoords(elm.getBoundingClientRect());\n        if (!boundingCoords) {\n          return null;\n        }\n        var boundingStack = dom.shadowElementsFromPoint(boundingCoords.x, boundingCoords.y);\n        var rects = Array.from(elm.getClientRects());\n        if (!rects || rects.length <= 1) {\n          return [ boundingStack ];\n        }\n        var filteredArr = rects.filter(function(rect) {\n          return rect.width && rect.width > 0;\n        }).map(function(rect) {\n          var coords = color.getCoords(rect);\n          if (coords) {\n            return dom.shadowElementsFromPoint(coords.x, coords.y);\n          }\n        });\n        if (filteredArr.some(function(stack) {\n          return stack === undefined;\n        })) {\n          return null;\n        }\n        filteredArr.splice(0, 0, boundingStack);\n        return filteredArr;\n      };\n      color.filteredRectStack = function(elm) {\n        var rectStack = color.getRectStack(elm);\n        if (rectStack && rectStack.length === 1) {\n          return rectStack[0];\n        } else if (rectStack && rectStack.length > 1) {\n          var boundingStack = rectStack.shift();\n          var isSame = void 0;\n          rectStack.forEach(function(rectList, index) {\n            if (index === 0) {\n              return;\n            }\n            var rectA = rectStack[index - 1], rectB = rectStack[index];\n            isSame = rectA.every(function(element, elementIndex) {\n              return element === rectB[elementIndex];\n            }) || boundingStack.includes(elm);\n          });\n          if (!isSame) {\n            axe.commons.color.incompleteData.set('bgColor', 'elmPartiallyObscuring');\n            return null;\n          }\n          return rectStack[0];\n        } else {\n          axe.commons.color.incompleteData.set('bgColor', 'outsideViewport');\n          return null;\n        }\n      };\n      color.getBackgroundStack = function(elm) {\n        var elmStack = color.filteredRectStack(elm);\n        if (elmStack === null) {\n          return null;\n        }\n        elmStack = includeMissingElements(elmStack, elm);\n        elmStack = dom.reduceToElementsBelowFloating(elmStack, elm);\n        elmStack = sortPageBackground(elmStack);\n        var elmIndex = elmStack.indexOf(elm);\n        if (calculateObscuringAlpha(elmIndex, elmStack, elm) >= .99) {\n          axe.commons.color.incompleteData.set('bgColor', 'bgOverlap');\n          return null;\n        }\n        return elmIndex !== -1 ? elmStack : null;\n      };\n      color.getBackgroundColor = function(elm) {\n        var bgElms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var noScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (noScroll !== true) {\n          var clientHeight = elm.getBoundingClientRect().height;\n          var alignToTop = clientHeight - 2 >= window.innerHeight * 2;\n          elm.scrollIntoView(alignToTop);\n        }\n        var bgColors = [];\n        var elmStack = color.getBackgroundStack(elm);\n        (elmStack || []).some(function(bgElm) {\n          var bgElmStyle = window.getComputedStyle(bgElm);\n          var bgColor = getBgColor(bgElm, bgElmStyle);\n          if (elmPartiallyObscured(elm, bgElm, bgColor) || elmHasImage(bgElm, bgElmStyle)) {\n            bgColors = null;\n            bgElms.push(bgElm);\n            return true;\n          }\n          if (bgColor.alpha !== 0) {\n            bgElms.push(bgElm);\n            bgColors.push(bgColor);\n            return bgColor.alpha === 1;\n          } else {\n            return false;\n          }\n        });\n        if (bgColors !== null && elmStack !== null) {\n          bgColors.push(new color.Color(255, 255, 255, 1));\n          var colors = bgColors.reduce(color.flattenColors);\n          return colors;\n        }\n        return null;\n      };\n      dom.isOpaque = function(node) {\n        var style = window.getComputedStyle(node);\n        return elmHasImage(node, style) || getBgColor(node, style).alpha === 1;\n      };\n      color.getForegroundColor = function(node, noScroll) {\n        var nodeStyle = window.getComputedStyle(node);\n        var fgColor = new color.Color();\n        fgColor.parseRgbString(nodeStyle.getPropertyValue('color'));\n        var opacity = nodeStyle.getPropertyValue('opacity');\n        fgColor.alpha = fgColor.alpha * opacity;\n        if (fgColor.alpha === 1) {\n          return fgColor;\n        }\n        var bgColor = color.getBackgroundColor(node, [], noScroll);\n        if (bgColor === null) {\n          var reason = axe.commons.color.incompleteData.get('bgColor');\n          axe.commons.color.incompleteData.set('fgColor', reason);\n          return null;\n        }\n        return color.flattenColors(fgColor, bgColor);\n      };\n      color.incompleteData = function() {\n        var data = {};\n        return {\n          set: function set(key, reason) {\n            if (typeof key !== 'string') {\n              throw new Error('Incomplete data: key must be a string');\n            }\n            if (reason) {\n              data[key] = reason;\n            }\n            return data[key];\n          },\n          get: function get(key) {\n            return data[key];\n          },\n          clear: function clear() {\n            data = {};\n          }\n        };\n      }();\n      dom.reduceToElementsBelowFloating = function(elements, targetNode) {\n        var floatingPositions = [ 'fixed', 'sticky' ], finalElements = [], targetFound = false, index, currentNode, style;\n        for (index = 0; index < elements.length; ++index) {\n          currentNode = elements[index];\n          if (currentNode === targetNode) {\n            targetFound = true;\n          }\n          style = window.getComputedStyle(currentNode);\n          if (!targetFound && floatingPositions.indexOf(style.position) !== -1) {\n            finalElements = [];\n            continue;\n          }\n          finalElements.push(currentNode);\n        }\n        return finalElements;\n      };\n      dom.findElmsInContext = function(_ref28) {\n        var context = _ref28.context, value = _ref28.value, attr = _ref28.attr, _ref28$elm = _ref28.elm, elm = _ref28$elm === undefined ? '' : _ref28$elm;\n        var root = void 0;\n        var escapedValue = axe.utils.escapeSelector(value);\n        if (context.nodeType === 9 || context.nodeType === 11) {\n          root = context;\n        } else {\n          root = dom.getRootNode(context);\n        }\n        return Array.from(root.querySelectorAll(elm + '[' + attr + '=' + escapedValue + ']'));\n      };\n      dom.findUp = function(element, target) {\n        return dom.findUpVirtual(axe.utils.getNodeFromTree(axe._tree[0], element), target);\n      };\n      dom.findUpVirtual = function(element, target) {\n        var parent = void 0;\n        parent = element.actualNode;\n        if (!element.shadowId && typeof element.actualNode.closest === 'function') {\n          var match = element.actualNode.closest(target);\n          if (match) {\n            return match;\n          }\n          return null;\n        }\n        do {\n          parent = parent.assignedSlot ? parent.assignedSlot : parent.parentNode;\n          if (parent && parent.nodeType === 11) {\n            parent = parent.host;\n          }\n        } while (parent && !axe.utils.matchesSelector(parent, target) && parent !== document.documentElement);\n        if (!axe.utils.matchesSelector(parent, target)) {\n          return null;\n        }\n        return parent;\n      };\n      dom.getComposedParent = function getComposedParent(element) {\n        if (element.assignedSlot) {\n          return getComposedParent(element.assignedSlot);\n        } else if (element.parentNode) {\n          var parentNode = element.parentNode;\n          if (parentNode.nodeType === 1) {\n            return parentNode;\n          } else if (parentNode.host) {\n            return parentNode.host;\n          }\n        }\n        return null;\n      };\n      dom.getElementByReference = function(node, attr) {\n        var fragment = node.getAttribute(attr);\n        if (!fragment) {\n          return null;\n        }\n        if (fragment.charAt(0) === '#') {\n          fragment = decodeURIComponent(fragment.substring(1));\n        } else if (fragment.substr(0, 2) === '/#') {\n          fragment = decodeURIComponent(fragment.substring(2));\n        }\n        var candidate = document.getElementById(fragment);\n        if (candidate) {\n          return candidate;\n        }\n        candidate = document.getElementsByName(fragment);\n        if (candidate.length) {\n          return candidate[0];\n        }\n        return null;\n      };\n      dom.getElementCoordinates = function(element) {\n        'use strict';\n        var scrollOffset = dom.getScrollOffset(document), xOffset = scrollOffset.left, yOffset = scrollOffset.top, coords = element.getBoundingClientRect();\n        return {\n          top: coords.top + yOffset,\n          right: coords.right + xOffset,\n          bottom: coords.bottom + yOffset,\n          left: coords.left + xOffset,\n          width: coords.right - coords.left,\n          height: coords.bottom - coords.top\n        };\n      };\n      dom.getRootNode = axe.utils.getRootNode;\n      dom.getScrollOffset = function(element) {\n        'use strict';\n        if (!element.nodeType && element.document) {\n          element = element.document;\n        }\n        if (element.nodeType === 9) {\n          var docElement = element.documentElement, body = element.body;\n          return {\n            left: docElement && docElement.scrollLeft || body && body.scrollLeft || 0,\n            top: docElement && docElement.scrollTop || body && body.scrollTop || 0\n          };\n        }\n        return {\n          left: element.scrollLeft,\n          top: element.scrollTop\n        };\n      };\n      dom.getTabbableElements = function getTabbableElements(virtualNode) {\n        var nodeAndDescendents = axe.utils.querySelectorAll(virtualNode, '*');\n        var tabbableElements = nodeAndDescendents.filter(function(vNode) {\n          var isFocusable = vNode.isFocusable;\n          var tabIndex = vNode.actualNode.getAttribute('tabindex');\n          tabIndex = tabIndex && !isNaN(parseInt(tabIndex, 10)) ? parseInt(tabIndex) : null;\n          return tabIndex ? isFocusable && tabIndex >= 0 : isFocusable;\n        });\n        return tabbableElements;\n      };\n      dom.getViewportSize = function(win) {\n        'use strict';\n        var body, doc = win.document, docElement = doc.documentElement;\n        if (win.innerWidth) {\n          return {\n            width: win.innerWidth,\n            height: win.innerHeight\n          };\n        }\n        if (docElement) {\n          return {\n            width: docElement.clientWidth,\n            height: docElement.clientHeight\n          };\n        }\n        body = doc.body;\n        return {\n          width: body.clientWidth,\n          height: body.clientHeight\n        };\n      };\n      var hiddenTextElms = [ 'HEAD', 'TITLE', 'TEMPLATE', 'SCRIPT', 'STYLE', 'IFRAME', 'OBJECT', 'VIDEO', 'AUDIO', 'NOSCRIPT' ];\n      function hasChildTextNodes(elm) {\n        if (!hiddenTextElms.includes(elm.actualNode.nodeName.toUpperCase())) {\n          return elm.children.some(function(_ref29) {\n            var actualNode = _ref29.actualNode;\n            return actualNode.nodeType === 3 && actualNode.nodeValue.trim();\n          });\n        }\n      }\n      dom.hasContentVirtual = function(elm, noRecursion) {\n        return hasChildTextNodes(elm) || dom.isVisualContent(elm.actualNode) || !!aria.labelVirtual(elm) || !noRecursion && elm.children.some(function(child) {\n          return child.actualNode.nodeType === 1 && dom.hasContentVirtual(child);\n        });\n      };\n      dom.hasContent = function hasContent(elm, noRecursion) {\n        elm = axe.utils.getNodeFromTree(axe._tree[0], elm);\n        return dom.hasContentVirtual(elm, noRecursion);\n      };\n      dom.idrefs = function(node, attr) {\n        'use strict';\n        var index, length, doc = dom.getRootNode(node), result = [], idrefs = node.getAttribute(attr);\n        if (idrefs) {\n          idrefs = axe.utils.tokenList(idrefs);\n          for (index = 0, length = idrefs.length; index < length; index++) {\n            result.push(doc.getElementById(idrefs[index]));\n          }\n        }\n        return result;\n      };\n      function focusDisabled(el) {\n        return el.disabled || dom.isHiddenWithCSS(el) && el.nodeName.toUpperCase() !== 'AREA';\n      }\n      dom.isFocusable = function(el) {\n        'use strict';\n        if (focusDisabled(el)) {\n          return false;\n        } else if (dom.isNativelyFocusable(el)) {\n          return true;\n        }\n        var tabindex = el.getAttribute('tabindex');\n        if (tabindex && !isNaN(parseInt(tabindex, 10))) {\n          return true;\n        }\n        return false;\n      };\n      dom.isNativelyFocusable = function(el) {\n        'use strict';\n        if (!el || focusDisabled(el)) {\n          return false;\n        }\n        switch (el.nodeName.toUpperCase()) {\n         case 'A':\n         case 'AREA':\n          if (el.href) {\n            return true;\n          }\n          break;\n\n         case 'INPUT':\n          return el.type !== 'hidden';\n\n         case 'TEXTAREA':\n         case 'SELECT':\n         case 'DETAILS':\n         case 'BUTTON':\n          return true;\n        }\n        return false;\n      };\n      dom.insertedIntoFocusOrder = function(el) {\n        return el.tabIndex > -1 && dom.isFocusable(el) && !dom.isNativelyFocusable(el);\n      };\n      dom.isHiddenWithCSS = function isHiddenWithCSS(el, descendentVisibilityValue) {\n        if (el.nodeType === 9) {\n          return false;\n        }\n        if (el.nodeType === 11) {\n          el = el.host;\n        }\n        if ([ 'STYLE', 'SCRIPT' ].includes(el.nodeName.toUpperCase())) {\n          return false;\n        }\n        var style = window.getComputedStyle(el, null);\n        if (!style) {\n          throw new Error('Style does not exist for the given element.');\n        }\n        var displayValue = style.getPropertyValue('display');\n        if (displayValue === 'none') {\n          return true;\n        }\n        var HIDDEN_VISIBILITY_VALUES = [ 'hidden', 'collapse' ];\n        var visibilityValue = style.getPropertyValue('visibility');\n        if (HIDDEN_VISIBILITY_VALUES.includes(visibilityValue) && !descendentVisibilityValue) {\n          return true;\n        }\n        if (HIDDEN_VISIBILITY_VALUES.includes(visibilityValue) && descendentVisibilityValue && HIDDEN_VISIBILITY_VALUES.includes(descendentVisibilityValue)) {\n          return true;\n        }\n        var parent = dom.getComposedParent(el);\n        if (parent && !HIDDEN_VISIBILITY_VALUES.includes(visibilityValue)) {\n          return dom.isHiddenWithCSS(parent, visibilityValue);\n        }\n        return false;\n      };\n      dom.isHTML5 = function(doc) {\n        var node = doc.doctype;\n        if (node === null) {\n          return false;\n        }\n        return node.name === 'html' && !node.publicId && !node.systemId;\n      };\n      function walkDomNode(node, functor) {\n        if (functor(node.actualNode) !== false) {\n          node.children.forEach(function(child) {\n            return walkDomNode(child, functor);\n          });\n        }\n      }\n      var blockLike = [ 'block', 'list-item', 'table', 'flex', 'grid', 'inline-block' ];\n      function isBlock(elm) {\n        var display = window.getComputedStyle(elm).getPropertyValue('display');\n        return blockLike.includes(display) || display.substr(0, 6) === 'table-';\n      }\n      function getBlockParent(node) {\n        var parentBlock = dom.getComposedParent(node);\n        while (parentBlock && !isBlock(parentBlock)) {\n          parentBlock = dom.getComposedParent(parentBlock);\n        }\n        return axe.utils.getNodeFromTree(axe._tree[0], parentBlock);\n      }\n      dom.isInTextBlock = function isInTextBlock(node) {\n        if (isBlock(node)) {\n          return false;\n        }\n        var virtualParent = getBlockParent(node);\n        var parentText = '';\n        var linkText = '';\n        var inBrBlock = 0;\n        walkDomNode(virtualParent, function(currNode) {\n          if (inBrBlock === 2) {\n            return false;\n          }\n          if (currNode.nodeType === 3) {\n            parentText += currNode.nodeValue;\n          }\n          if (currNode.nodeType !== 1) {\n            return;\n          }\n          var nodeName = (currNode.nodeName || '').toUpperCase();\n          if ([ 'BR', 'HR' ].includes(nodeName)) {\n            if (inBrBlock === 0) {\n              parentText = '';\n              linkText = '';\n            } else {\n              inBrBlock = 2;\n            }\n          } else if (currNode.style.display === 'none' || currNode.style.overflow === 'hidden' || ![ '', null, 'none' ].includes(currNode.style.float) || ![ '', null, 'relative' ].includes(currNode.style.position)) {\n            return false;\n          } else if (nodeName === 'A' && currNode.href || (currNode.getAttribute('role') || '').toLowerCase() === 'link') {\n            if (currNode === node) {\n              inBrBlock = 1;\n            }\n            linkText += currNode.textContent;\n            return false;\n          }\n        });\n        parentText = axe.commons.text.sanitize(parentText);\n        linkText = axe.commons.text.sanitize(linkText);\n        return parentText.length > linkText.length;\n      };\n      dom.isNode = function(element) {\n        'use strict';\n        return element instanceof Node;\n      };\n      function noParentScrolled(element, offset) {\n        element = dom.getComposedParent(element);\n        while (element && element.nodeName.toLowerCase() !== 'html') {\n          if (element.scrollTop) {\n            offset += element.scrollTop;\n            if (offset >= 0) {\n              return false;\n            }\n          }\n          element = dom.getComposedParent(element);\n        }\n        return true;\n      }\n      dom.isOffscreen = function(element) {\n        var leftBoundary = void 0;\n        var docElement = document.documentElement;\n        var styl = window.getComputedStyle(element);\n        var dir = window.getComputedStyle(document.body || docElement).getPropertyValue('direction');\n        var coords = dom.getElementCoordinates(element);\n        if (coords.bottom < 0 && (noParentScrolled(element, coords.bottom) || styl.position === 'absolute')) {\n          return true;\n        }\n        if (coords.left === 0 && coords.right === 0) {\n          return false;\n        }\n        if (dir === 'ltr') {\n          if (coords.right <= 0) {\n            return true;\n          }\n        } else {\n          leftBoundary = Math.max(docElement.scrollWidth, dom.getViewportSize(window).width);\n          if (coords.left >= leftBoundary) {\n            return true;\n          }\n        }\n        return false;\n      };\n      function isClipped(clip) {\n        'use strict';\n        var matches = clip.match(/rect\\s*\\(([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px\\s*\\)/);\n        if (matches && matches.length === 5) {\n          return matches[3] - matches[1] <= 0 && matches[2] - matches[4] <= 0;\n        }\n        return false;\n      }\n      dom.isVisible = function(el, screenReader, recursed) {\n        'use strict';\n        var style, nodeName, parent;\n        if (el.nodeType === 9) {\n          return true;\n        }\n        if (el.nodeType === 11) {\n          el = el.host;\n        }\n        style = window.getComputedStyle(el, null);\n        if (style === null) {\n          return false;\n        }\n        nodeName = el.nodeName.toUpperCase();\n        if (style.getPropertyValue('display') === 'none' || [ 'STYLE', 'SCRIPT', 'NOSCRIPT', 'TEMPLATE' ].includes(nodeName) || !screenReader && isClipped(style.getPropertyValue('clip')) || !recursed && (style.getPropertyValue('visibility') === 'hidden' || !screenReader && dom.isOffscreen(el)) || screenReader && el.getAttribute('aria-hidden') === 'true') {\n          return false;\n        }\n        parent = el.assignedSlot ? el.assignedSlot : el.parentNode;\n        if (parent) {\n          return dom.isVisible(parent, screenReader, true);\n        }\n        return false;\n      };\n      var visualRoles = [ 'checkbox', 'img', 'radio', 'range', 'slider', 'spinbutton', 'textbox' ];\n      dom.isVisualContent = function(element) {\n        var role = element.getAttribute('role');\n        if (role) {\n          return visualRoles.indexOf(role) !== -1;\n        }\n        switch (element.nodeName.toUpperCase()) {\n         case 'IMG':\n         case 'IFRAME':\n         case 'OBJECT':\n         case 'VIDEO':\n         case 'AUDIO':\n         case 'CANVAS':\n         case 'SVG':\n         case 'MATH':\n         case 'BUTTON':\n         case 'SELECT':\n         case 'TEXTAREA':\n         case 'KEYGEN':\n         case 'PROGRESS':\n         case 'METER':\n          return true;\n\n         case 'INPUT':\n          return element.type !== 'hidden';\n\n         default:\n          return false;\n        }\n      };\n      dom.shadowElementsFromPoint = function(nodeX, nodeY) {\n        var root = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n        var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        if (i > 999) {\n          throw new Error('Infinite loop detected');\n        }\n        return Array.from(root.elementsFromPoint(nodeX, nodeY)).filter(function(nodes) {\n          return dom.getRootNode(nodes) === root;\n        }).reduce(function(stack, elm) {\n          if (axe.utils.isShadowRoot(elm)) {\n            var shadowStack = dom.shadowElementsFromPoint(nodeX, nodeY, elm.shadowRoot, i + 1);\n            stack = stack.concat(shadowStack);\n            if (stack.length && axe.commons.dom.visuallyContains(stack[0], elm)) {\n              stack.push(elm);\n            }\n          } else {\n            stack.push(elm);\n          }\n          return stack;\n        }, []);\n      };\n      dom.visuallyContains = function(node, parent) {\n        var rectBound = node.getBoundingClientRect();\n        var margin = .01;\n        var rect = {\n          top: rectBound.top + margin,\n          bottom: rectBound.bottom - margin,\n          left: rectBound.left + margin,\n          right: rectBound.right - margin\n        };\n        var parentRect = parent.getBoundingClientRect();\n        var parentTop = parentRect.top;\n        var parentLeft = parentRect.left;\n        var parentScrollArea = {\n          top: parentTop - parent.scrollTop,\n          bottom: parentTop - parent.scrollTop + parent.scrollHeight,\n          left: parentLeft - parent.scrollLeft,\n          right: parentLeft - parent.scrollLeft + parent.scrollWidth\n        };\n        var style = window.getComputedStyle(parent);\n        if (style.getPropertyValue('display') === 'inline') {\n          return true;\n        }\n        if (rect.left < parentScrollArea.left && rect.left < parentRect.left || rect.top < parentScrollArea.top && rect.top < parentRect.top || rect.right > parentScrollArea.right && rect.right > parentRect.right || rect.bottom > parentScrollArea.bottom && rect.bottom > parentRect.bottom) {\n          return false;\n        }\n        if (rect.right > parentRect.right || rect.bottom > parentRect.bottom) {\n          return style.overflow === 'scroll' || style.overflow === 'auto' || style.overflow === 'hidden' || parent instanceof HTMLBodyElement || parent instanceof HTMLHtmlElement;\n        }\n        return true;\n      };\n      dom.visuallyOverlaps = function(rect, parent) {\n        var parentRect = parent.getBoundingClientRect();\n        var parentTop = parentRect.top;\n        var parentLeft = parentRect.left;\n        var parentScrollArea = {\n          top: parentTop - parent.scrollTop,\n          bottom: parentTop - parent.scrollTop + parent.scrollHeight,\n          left: parentLeft - parent.scrollLeft,\n          right: parentLeft - parent.scrollLeft + parent.scrollWidth\n        };\n        if (rect.left > parentScrollArea.right && rect.left > parentRect.right || rect.top > parentScrollArea.bottom && rect.top > parentRect.bottom || rect.right < parentScrollArea.left && rect.right < parentRect.left || rect.bottom < parentScrollArea.top && rect.bottom < parentRect.top) {\n          return false;\n        }\n        var style = window.getComputedStyle(parent);\n        if (rect.left > parentRect.right || rect.top > parentRect.bottom) {\n          return style.overflow === 'scroll' || style.overflow === 'auto' || parent instanceof HTMLBodyElement || parent instanceof HTMLHtmlElement;\n        }\n        return true;\n      };\n      matches.attributes = function matchesAttributes(node, matcher) {\n        node = node.actualNode || node;\n        return matches.fromFunction(function(attrName) {\n          return node.getAttribute(attrName);\n        }, matcher);\n      };\n      matches.condition = function(arg, condition) {\n        return !!condition(arg);\n      };\n      var matchers = [ 'nodeName', 'attributes', 'properties', 'condition' ];\n      matches.fromDefinition = function matchFromDefinition(node, definition) {\n        node = node.actualNode || node;\n        if (Array.isArray(definition)) {\n          return definition.some(function(definitionItem) {\n            return matches(node, definitionItem);\n          });\n        }\n        if (typeof definition === 'string') {\n          return axe.utils.matchesSelector(node, definition);\n        }\n        return Object.keys(definition).every(function(matcherName) {\n          if (!matchers.includes(matcherName)) {\n            throw new Error('Unknown matcher type \"' + matcherName + '\"');\n          }\n          var matchMethod = matches[matcherName];\n          var matcher = definition[matcherName];\n          return matchMethod(node, matcher);\n        });\n      };\n      matches.fromFunction = function matchFromFunction(getValue, matcher) {\n        var matcherType = typeof matcher === 'undefined' ? 'undefined' : _typeof(matcher);\n        if (matcherType !== 'object' || Array.isArray(matcher) || matcher instanceof RegExp) {\n          throw new Error('Expect matcher to be an object');\n        }\n        return Object.keys(matcher).every(function(propName) {\n          return matches.fromPrimative(getValue(propName), matcher[propName]);\n        });\n      };\n      matches.fromPrimative = function matchFromPrimative(someString, matcher) {\n        var matcherType = typeof matcher === 'undefined' ? 'undefined' : _typeof(matcher);\n        if (Array.isArray(matcher) && typeof someString !== 'undefined') {\n          return matcher.includes(someString);\n        }\n        if (matcherType === 'function') {\n          return !!matcher(someString);\n        }\n        if (matcher instanceof RegExp) {\n          return matcher.test(someString);\n        }\n        return matcher === someString;\n      };\n      var isXHTMLGlobal = void 0;\n      matches.nodeName = function matchNodeName(node, matcher) {\n        var _ref30 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}, isXHTML = _ref30.isXHTML;\n        node = node.actualNode || node;\n        if (typeof isXHTML === 'undefined') {\n          if (typeof matcher === 'string') {\n            return axe.utils.matchesSelector(node, matcher);\n          }\n          if (typeof isXHTMLGlobal === 'undefined') {\n            isXHTMLGlobal = axe.utils.isXHTML(node.ownerDocument);\n          }\n          isXHTML = isXHTMLGlobal;\n        }\n        var nodeName = isXHTML ? node.nodeName : node.nodeName.toLowerCase();\n        return matches.fromPrimative(nodeName, matcher);\n      };\n      matches.properties = function matchesProperties(node, matcher) {\n        node = node.actualNode || node;\n        var out = matches.fromFunction(function(propName) {\n          return node[propName];\n        }, matcher);\n        return out;\n      };\n      table.getAllCells = function(tableElm) {\n        var rowIndex, cellIndex, rowLength, cellLength;\n        var cells = [];\n        for (rowIndex = 0, rowLength = tableElm.rows.length; rowIndex < rowLength; rowIndex++) {\n          for (cellIndex = 0, cellLength = tableElm.rows[rowIndex].cells.length; cellIndex < cellLength; cellIndex++) {\n            cells.push(tableElm.rows[rowIndex].cells[cellIndex]);\n          }\n        }\n        return cells;\n      };\n      table.getCellPosition = function(cell, tableGrid) {\n        var rowIndex, index;\n        if (!tableGrid) {\n          tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n        }\n        for (rowIndex = 0; rowIndex < tableGrid.length; rowIndex++) {\n          if (tableGrid[rowIndex]) {\n            index = tableGrid[rowIndex].indexOf(cell);\n            if (index !== -1) {\n              return {\n                x: index,\n                y: rowIndex\n              };\n            }\n          }\n        }\n      };\n      table.getHeaders = function(cell) {\n        if (cell.hasAttribute('headers')) {\n          return commons.dom.idrefs(cell, 'headers');\n        }\n        var tableGrid = commons.table.toGrid(commons.dom.findUp(cell, 'table'));\n        var position = commons.table.getCellPosition(cell, tableGrid);\n        var rowHeaders = table.traverse('left', position, tableGrid).filter(function(cell) {\n          return table.isRowHeader(cell);\n        });\n        var colHeaders = table.traverse('up', position, tableGrid).filter(function(cell) {\n          return table.isColumnHeader(cell);\n        });\n        return [].concat(rowHeaders, colHeaders).reverse();\n      };\n      table.getScope = function(cell) {\n        var scope = cell.getAttribute('scope');\n        var role = cell.getAttribute('role');\n        if (cell instanceof Element === false || [ 'TD', 'TH' ].indexOf(cell.nodeName.toUpperCase()) === -1) {\n          throw new TypeError('Expected TD or TH element');\n        }\n        if (role === 'columnheader') {\n          return 'col';\n        } else if (role === 'rowheader') {\n          return 'row';\n        } else if (scope === 'col' || scope === 'row') {\n          return scope;\n        } else if (cell.nodeName.toUpperCase() !== 'TH') {\n          return false;\n        }\n        var tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n        var pos = table.getCellPosition(cell);\n        var headerRow = tableGrid[pos.y].reduce(function(headerRow, cell) {\n          return headerRow && cell.nodeName.toUpperCase() === 'TH';\n        }, true);\n        if (headerRow) {\n          return 'col';\n        }\n        var headerCol = tableGrid.map(function(col) {\n          return col[pos.x];\n        }).reduce(function(headerCol, cell) {\n          return headerCol && cell && cell.nodeName.toUpperCase() === 'TH';\n        }, true);\n        if (headerCol) {\n          return 'row';\n        }\n        return 'auto';\n      };\n      table.isColumnHeader = function(element) {\n        return [ 'col', 'auto' ].indexOf(table.getScope(element)) !== -1;\n      };\n      table.isDataCell = function(cell) {\n        if (!cell.children.length && !cell.textContent.trim()) {\n          return false;\n        }\n        var role = cell.getAttribute('role');\n        if (axe.commons.aria.isValidRole(role)) {\n          return [ 'cell', 'gridcell' ].includes(role);\n        } else {\n          return cell.nodeName.toUpperCase() === 'TD';\n        }\n      };\n      table.isDataTable = function(node) {\n        var role = (node.getAttribute('role') || '').toLowerCase();\n        if ((role === 'presentation' || role === 'none') && !dom.isFocusable(node)) {\n          return false;\n        }\n        if (node.getAttribute('contenteditable') === 'true' || dom.findUp(node, '[contenteditable=\"true\"]')) {\n          return true;\n        }\n        if (role === 'grid' || role === 'treegrid' || role === 'table') {\n          return true;\n        }\n        if (commons.aria.getRoleType(role) === 'landmark') {\n          return true;\n        }\n        if (node.getAttribute('datatable') === '0') {\n          return false;\n        }\n        if (node.getAttribute('summary')) {\n          return true;\n        }\n        if (node.tHead || node.tFoot || node.caption) {\n          return true;\n        }\n        for (var childIndex = 0, childLength = node.children.length; childIndex < childLength; childIndex++) {\n          if (node.children[childIndex].nodeName.toUpperCase() === 'COLGROUP') {\n            return true;\n          }\n        }\n        var cells = 0;\n        var rowLength = node.rows.length;\n        var row, cell;\n        var hasBorder = false;\n        for (var rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cell = row.cells[cellIndex];\n            if (cell.nodeName.toUpperCase() === 'TH') {\n              return true;\n            }\n            if (!hasBorder && (cell.offsetWidth !== cell.clientWidth || cell.offsetHeight !== cell.clientHeight)) {\n              hasBorder = true;\n            }\n            if (cell.getAttribute('scope') || cell.getAttribute('headers') || cell.getAttribute('abbr')) {\n              return true;\n            }\n            if ([ 'columnheader', 'rowheader' ].includes((cell.getAttribute('role') || '').toLowerCase())) {\n              return true;\n            }\n            if (cell.children.length === 1 && cell.children[0].nodeName.toUpperCase() === 'ABBR') {\n              return true;\n            }\n            cells++;\n          }\n        }\n        if (node.getElementsByTagName('table').length) {\n          return false;\n        }\n        if (rowLength < 2) {\n          return false;\n        }\n        var sampleRow = node.rows[Math.ceil(rowLength / 2)];\n        if (sampleRow.cells.length === 1 && sampleRow.cells[0].colSpan === 1) {\n          return false;\n        }\n        if (sampleRow.cells.length >= 5) {\n          return true;\n        }\n        if (hasBorder) {\n          return true;\n        }\n        var bgColor, bgImage;\n        for (rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          if (bgColor && bgColor !== window.getComputedStyle(row).getPropertyValue('background-color')) {\n            return true;\n          } else {\n            bgColor = window.getComputedStyle(row).getPropertyValue('background-color');\n          }\n          if (bgImage && bgImage !== window.getComputedStyle(row).getPropertyValue('background-image')) {\n            return true;\n          } else {\n            bgImage = window.getComputedStyle(row).getPropertyValue('background-image');\n          }\n        }\n        if (rowLength >= 20) {\n          return true;\n        }\n        if (dom.getElementCoordinates(node).width > dom.getViewportSize(window).width * .95) {\n          return false;\n        }\n        if (cells < 10) {\n          return false;\n        }\n        if (node.querySelector('object, embed, iframe, applet')) {\n          return false;\n        }\n        return true;\n      };\n      table.isHeader = function(cell) {\n        if (table.isColumnHeader(cell) || table.isRowHeader(cell)) {\n          return true;\n        }\n        if (cell.getAttribute('id')) {\n          var id = axe.utils.escapeSelector(cell.getAttribute('id'));\n          return !!document.querySelector('[headers~=\"' + id + '\"]');\n        }\n        return false;\n      };\n      table.isRowHeader = function(cell) {\n        return [ 'row', 'auto' ].includes(table.getScope(cell));\n      };\n      table.toGrid = function(node) {\n        var table = [];\n        var rows = node.rows;\n        for (var i = 0, rowLength = rows.length; i < rowLength; i++) {\n          var cells = rows[i].cells;\n          table[i] = table[i] || [];\n          var columnIndex = 0;\n          for (var j = 0, cellLength = cells.length; j < cellLength; j++) {\n            for (var colSpan = 0; colSpan < cells[j].colSpan; colSpan++) {\n              for (var rowSpan = 0; rowSpan < cells[j].rowSpan; rowSpan++) {\n                table[i + rowSpan] = table[i + rowSpan] || [];\n                while (table[i + rowSpan][columnIndex]) {\n                  columnIndex++;\n                }\n                table[i + rowSpan][columnIndex] = cells[j];\n              }\n              columnIndex++;\n            }\n          }\n        }\n        return table;\n      };\n      table.toArray = table.toGrid;\n      (function(table) {\n        var traverseTable = function traverseTable(dir, position, tableGrid, callback) {\n          var result;\n          var cell = tableGrid[position.y] ? tableGrid[position.y][position.x] : undefined;\n          if (!cell) {\n            return [];\n          }\n          if (typeof callback === 'function') {\n            result = callback(cell, position, tableGrid);\n            if (result === true) {\n              return [ cell ];\n            }\n          }\n          result = traverseTable(dir, {\n            x: position.x + dir.x,\n            y: position.y + dir.y\n          }, tableGrid, callback);\n          result.unshift(cell);\n          return result;\n        };\n        table.traverse = function(dir, startPos, tableGrid, callback) {\n          if (Array.isArray(startPos)) {\n            callback = tableGrid;\n            tableGrid = startPos;\n            startPos = {\n              x: 0,\n              y: 0\n            };\n          }\n          if (typeof dir === 'string') {\n            switch (dir) {\n             case 'left':\n              dir = {\n                x: -1,\n                y: 0\n              };\n              break;\n\n             case 'up':\n              dir = {\n                x: 0,\n                y: -1\n              };\n              break;\n\n             case 'right':\n              dir = {\n                x: 1,\n                y: 0\n              };\n              break;\n\n             case 'down':\n              dir = {\n                x: 0,\n                y: 1\n              };\n              break;\n            }\n          }\n          return traverseTable(dir, {\n            x: startPos.x + dir.x,\n            y: startPos.y + dir.y\n          }, tableGrid, callback);\n        };\n      })(table);\n      text.accessibleText = function accessibleText(element, context) {\n        var virtualNode = axe.utils.getNodeFromTree(axe._tree[0], element);\n        return text.accessibleTextVirtual(virtualNode, context);\n      };\n      text.accessibleTextVirtual = function accessibleTextVirtual(virtualNode) {\n        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var actualNode = virtualNode.actualNode;\n        context = prepareContext(virtualNode, context);\n        if (shouldIgnoreHidden(virtualNode, context)) {\n          return '';\n        }\n        var computationSteps = [ aria.arialabelledbyText, aria.arialabelText, text.nativeTextAlternative, text.formControlValue, text.subtreeText, textNodeContent, text.titleText ];\n        var accName = computationSteps.reduce(function(accName, step) {\n          if (accName !== '') {\n            return accName;\n          }\n          return step(virtualNode, context);\n        }, '');\n        if (context.startNode === virtualNode) {\n          accName = text.sanitize(accName);\n        }\n        if (context.debug) {\n          axe.log(accName || '{empty-value}', actualNode, context);\n        }\n        return accName;\n      };\n      function textNodeContent(_ref31) {\n        var actualNode = _ref31.actualNode;\n        if (actualNode.nodeType !== 3) {\n          return '';\n        }\n        return actualNode.textContent;\n      }\n      function shouldIgnoreHidden(_ref32, context) {\n        var actualNode = _ref32.actualNode;\n        if (actualNode.nodeType !== 1 || context.includeHidden) {\n          return false;\n        }\n        return !dom.isVisible(actualNode, true);\n      }\n      function prepareContext(virtualNode, context) {\n        var actualNode = virtualNode.actualNode;\n        if (!context.startNode) {\n          context = _extends({\n            startNode: virtualNode\n          }, context);\n        }\n        if (actualNode.nodeType === 1 && context.inLabelledByContext && context.includeHidden === undefined) {\n          context = _extends({\n            includeHidden: !dom.isVisible(actualNode, true)\n          }, context);\n        }\n        return context;\n      }\n      text.accessibleTextVirtual.alreadyProcessed = function alreadyProcessed(virtualnode, context) {\n        context.processed = context.processed || [];\n        if (context.processed.includes(virtualnode)) {\n          return true;\n        }\n        context.processed.push(virtualnode);\n        return false;\n      };\n      var selectRoles = [ 'combobox', 'listbox' ];\n      var rangeRoles = [ 'progressbar', 'scrollbar', 'slider', 'spinbutton' ];\n      var controlValueRoles = [ 'textbox' ].concat(selectRoles, rangeRoles);\n      text.formControlValueMethods = {\n        nativeTextboxValue: nativeTextboxValue,\n        nativeSelectValue: nativeSelectValue,\n        ariaTextboxValue: ariaTextboxValue,\n        ariaListboxValue: ariaListboxValue,\n        ariaComboboxValue: ariaComboboxValue,\n        ariaRangeValue: ariaRangeValue\n      };\n      text.formControlValue = function formControlValue(virtualNode) {\n        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var actualNode = virtualNode.actualNode;\n        var unsupported = text.unsupported.accessibleNameFromFieldValue || [];\n        var role = aria.getRole(actualNode);\n        if (context.startNode === virtualNode || !controlValueRoles.includes(role) || unsupported.includes(role)) {\n          return '';\n        }\n        var valueMethods = Object.keys(text.formControlValueMethods).map(function(name) {\n          return text.formControlValueMethods[name];\n        });\n        var valueString = valueMethods.reduce(function(accName, step) {\n          return accName || step(virtualNode, context);\n        }, '');\n        if (context.debug) {\n          axe.log(valueString || '{empty-value}', actualNode, context);\n        }\n        return valueString;\n      };\n      function nativeTextboxValue(node) {\n        node = node.actualNode || node;\n        var nonTextInputTypes = [ 'button', 'checkbox', 'file', 'hidden', 'image', 'password', 'radio', 'reset', 'submit', 'color' ];\n        var nodeName = node.nodeName.toUpperCase();\n        if (nodeName === 'TEXTAREA' || nodeName === 'INPUT' && !nonTextInputTypes.includes(node.type)) {\n          return node.value || '';\n        }\n        return '';\n      }\n      function nativeSelectValue(node) {\n        node = node.actualNode || node;\n        if (node.nodeName.toUpperCase() !== 'SELECT') {\n          return '';\n        }\n        return Array.from(node.options).filter(function(option) {\n          return option.selected;\n        }).map(function(option) {\n          return option.text;\n        }).join(' ') || '';\n      }\n      function ariaTextboxValue(virtualNode) {\n        var actualNode = virtualNode.actualNode;\n        var role = aria.getRole(actualNode);\n        if (role !== 'textbox') {\n          return '';\n        }\n        if (!dom.isHiddenWithCSS(actualNode)) {\n          return text.visibleVirtual(virtualNode, true);\n        } else {\n          return actualNode.textContent;\n        }\n      }\n      function ariaListboxValue(virtualNode, context) {\n        var actualNode = virtualNode.actualNode;\n        var role = aria.getRole(actualNode);\n        if (role !== 'listbox') {\n          return '';\n        }\n        var selected = aria.getOwnedVirtual(virtualNode).filter(function(owned) {\n          return aria.getRole(owned) === 'option' && owned.actualNode.getAttribute('aria-selected') === 'true';\n        });\n        if (selected.length === 0) {\n          return '';\n        }\n        return axe.commons.text.accessibleTextVirtual(selected[0], context);\n      }\n      function ariaComboboxValue(virtualNode, context) {\n        var actualNode = virtualNode.actualNode;\n        var role = aria.getRole(actualNode, {\n          noImplicit: true\n        });\n        var listbox = void 0;\n        if (!role === 'combobox') {\n          return '';\n        }\n        listbox = aria.getOwnedVirtual(virtualNode).filter(function(elm) {\n          return aria.getRole(elm) === 'listbox';\n        })[0];\n        return listbox ? text.formControlValueMethods.ariaListboxValue(listbox, context) : '';\n      }\n      function ariaRangeValue(node) {\n        node = node.actualNode || node;\n        var role = aria.getRole(node);\n        if (!rangeRoles.includes(role) || !node.hasAttribute('aria-valuenow')) {\n          return '';\n        }\n        var valueNow = +node.getAttribute('aria-valuenow');\n        return !isNaN(valueNow) ? String(valueNow) : '0';\n      }\n      text.isHumanInterpretable = function(str) {\n        if (!str.length) {\n          return 0;\n        }\n        var alphaNumericIconMap = [ 'x', 'i' ];\n        if (alphaNumericIconMap.includes(str)) {\n          return 0;\n        }\n        var noUnicodeStr = text.removeUnicode(str, {\n          emoji: true,\n          nonBmp: true,\n          punctuations: true\n        });\n        if (!text.sanitize(noUnicodeStr)) {\n          return 0;\n        }\n        return 1;\n      };\n      var autocomplete = {\n        stateTerms: [ 'on', 'off' ],\n        standaloneTerms: [ 'name', 'honorific-prefix', 'given-name', 'additional-name', 'family-name', 'honorific-suffix', 'nickname', 'username', 'new-password', 'current-password', 'organization-title', 'organization', 'street-address', 'address-line1', 'address-line2', 'address-line3', 'address-level4', 'address-level3', 'address-level2', 'address-level1', 'country', 'country-name', 'postal-code', 'cc-name', 'cc-given-name', 'cc-additional-name', 'cc-family-name', 'cc-number', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-csc', 'cc-type', 'transaction-currency', 'transaction-amount', 'language', 'bday', 'bday-day', 'bday-month', 'bday-year', 'sex', 'url', 'photo' ],\n        qualifiers: [ 'home', 'work', 'mobile', 'fax', 'pager' ],\n        qualifiedTerms: [ 'tel', 'tel-country-code', 'tel-national', 'tel-area-code', 'tel-local', 'tel-local-prefix', 'tel-local-suffix', 'tel-extension', 'email', 'impp' ],\n        locations: [ 'billing', 'shipping' ]\n      };\n      text.autocomplete = autocomplete;\n      text.isValidAutocomplete = function isValidAutocomplete(autocomplete) {\n        var _ref33 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _ref33$looseTyped = _ref33.looseTyped, looseTyped = _ref33$looseTyped === undefined ? false : _ref33$looseTyped, _ref33$stateTerms = _ref33.stateTerms, stateTerms = _ref33$stateTerms === undefined ? [] : _ref33$stateTerms, _ref33$locations = _ref33.locations, locations = _ref33$locations === undefined ? [] : _ref33$locations, _ref33$qualifiers = _ref33.qualifiers, qualifiers = _ref33$qualifiers === undefined ? [] : _ref33$qualifiers, _ref33$standaloneTerm = _ref33.standaloneTerms, standaloneTerms = _ref33$standaloneTerm === undefined ? [] : _ref33$standaloneTerm, _ref33$qualifiedTerms = _ref33.qualifiedTerms, qualifiedTerms = _ref33$qualifiedTerms === undefined ? [] : _ref33$qualifiedTerms;\n        autocomplete = autocomplete.toLowerCase().trim();\n        stateTerms = stateTerms.concat(text.autocomplete.stateTerms);\n        if (stateTerms.includes(autocomplete) || autocomplete === '') {\n          return true;\n        }\n        qualifiers = qualifiers.concat(text.autocomplete.qualifiers);\n        locations = locations.concat(text.autocomplete.locations);\n        standaloneTerms = standaloneTerms.concat(text.autocomplete.standaloneTerms);\n        qualifiedTerms = qualifiedTerms.concat(text.autocomplete.qualifiedTerms);\n        var autocompleteTerms = autocomplete.split(/\\s+/g);\n        if (!looseTyped) {\n          if (autocompleteTerms[0].length > 8 && autocompleteTerms[0].substr(0, 8) === 'section-') {\n            autocompleteTerms.shift();\n          }\n          if (locations.includes(autocompleteTerms[0])) {\n            autocompleteTerms.shift();\n          }\n          if (qualifiers.includes(autocompleteTerms[0])) {\n            autocompleteTerms.shift();\n            standaloneTerms = [];\n          }\n          if (autocompleteTerms.length !== 1) {\n            return false;\n          }\n        }\n        var purposeTerm = autocompleteTerms[autocompleteTerms.length - 1];\n        return standaloneTerms.includes(purposeTerm) || qualifiedTerms.includes(purposeTerm);\n      };\n      text.labelText = function labelText(virtualNode) {\n        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var alreadyProcessed = text.accessibleTextVirtual.alreadyProcessed;\n        if (context.inControlContext || context.inLabelledByContext || alreadyProcessed(virtualNode, context)) {\n          return '';\n        }\n        if (!context.startNode) {\n          context.startNode = virtualNode;\n        }\n        var labelContext = _extends({\n          inControlContext: true\n        }, context);\n        var explicitLabels = getExplicitLabels(virtualNode);\n        var implicitLabel = dom.findUpVirtual(virtualNode, 'label');\n        var labels = void 0;\n        if (implicitLabel) {\n          labels = [].concat(_toConsumableArray(explicitLabels), [ implicitLabel ]);\n          labels.sort(axe.utils.nodeSorter);\n        } else {\n          labels = explicitLabels;\n        }\n        return labels.map(function(label) {\n          return text.accessibleText(label, labelContext);\n        }).filter(function(text) {\n          return text !== '';\n        }).join(' ');\n      };\n      function getExplicitLabels(_ref34) {\n        var actualNode = _ref34.actualNode;\n        if (!actualNode.id) {\n          return [];\n        }\n        return dom.findElmsInContext({\n          elm: 'label',\n          attr: 'for',\n          value: actualNode.id,\n          context: actualNode\n        });\n      }\n      text.labelVirtual = function(node) {\n        var ref, candidate, doc;\n        candidate = aria.labelVirtual(node);\n        if (candidate) {\n          return candidate;\n        }\n        if (node.actualNode.id) {\n          var id = axe.utils.escapeSelector(node.actualNode.getAttribute('id'));\n          doc = axe.commons.dom.getRootNode(node.actualNode);\n          ref = doc.querySelector('label[for=\"' + id + '\"]');\n          candidate = ref && text.visible(ref, true);\n          if (candidate) {\n            return candidate;\n          }\n        }\n        ref = dom.findUpVirtual(node, 'label');\n        candidate = ref && text.visible(ref, true);\n        if (candidate) {\n          return candidate;\n        }\n        return null;\n      };\n      text.label = function(node) {\n        node = axe.utils.getNodeFromTree(axe._tree[0], node);\n        return text.labelVirtual(node);\n      };\n      text.nativeElementType = [ {\n        matches: [ {\n          nodeName: 'textarea'\n        }, {\n          nodeName: 'input',\n          properties: {\n            type: [ 'text', 'password', 'search', 'tel', 'email', 'url' ]\n          }\n        } ],\n        namingMethods: 'labelText'\n      }, {\n        matches: {\n          nodeName: 'input',\n          properties: {\n            type: [ 'button', 'submit', 'reset' ]\n          }\n        },\n        namingMethods: [ 'valueText', 'titleText', 'buttonDefaultText' ]\n      }, {\n        matches: {\n          nodeName: 'input',\n          properties: {\n            type: 'image'\n          }\n        },\n        namingMethods: [ 'altText', 'valueText', 'labelText', 'titleText', 'buttonDefaultText' ]\n      }, {\n        matches: 'button',\n        namingMethods: 'subtreeText'\n      }, {\n        matches: 'fieldset',\n        namingMethods: 'fieldsetLegendText'\n      }, {\n        matches: 'OUTPUT',\n        namingMethods: 'subtreeText'\n      }, {\n        matches: [ {\n          nodeName: 'select'\n        }, {\n          nodeName: 'input',\n          properties: {\n            type: /^(?!text|password|search|tel|email|url|button|submit|reset)/\n          }\n        } ],\n        namingMethods: 'labelText'\n      }, {\n        matches: 'summary',\n        namingMethods: 'subtreeText'\n      }, {\n        matches: 'figure',\n        namingMethods: [ 'figureText', 'titleText' ]\n      }, {\n        matches: 'img',\n        namingMethods: 'altText'\n      }, {\n        matches: 'table',\n        namingMethods: [ 'tableCaptionText', 'tableSummaryText' ]\n      }, {\n        matches: [ 'hr', 'br' ],\n        namingMethods: [ 'titleText', 'singleSpace' ]\n      } ];\n      text.nativeTextAlternative = function nativeTextAlternative(virtualNode) {\n        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var actualNode = virtualNode.actualNode;\n        if (actualNode.nodeType !== 1 || [ 'presentation', 'none' ].includes(aria.getRole(actualNode))) {\n          return '';\n        }\n        var textMethods = findTextMethods(virtualNode);\n        var accName = textMethods.reduce(function(accName, step) {\n          return accName || step(virtualNode, context);\n        }, '');\n        if (context.debug) {\n          axe.log(accName || '{empty-value}', actualNode, context);\n        }\n        return accName;\n      };\n      function findTextMethods(virtualNode) {\n        var nativeElementType = text.nativeElementType, nativeTextMethods = text.nativeTextMethods;\n        var nativeType = nativeElementType.find(function(_ref35) {\n          var matches = _ref35.matches;\n          return axe.commons.matches(virtualNode, matches);\n        });\n        var methods = nativeType ? [].concat(nativeType.namingMethods) : [];\n        return methods.map(function(methodName) {\n          return nativeTextMethods[methodName];\n        });\n      }\n      var defaultButtonValues = {\n        submit: 'Submit',\n        image: 'Submit',\n        reset: 'Reset',\n        button: ''\n      };\n      text.nativeTextMethods = {\n        valueText: function valueText(_ref36) {\n          var actualNode = _ref36.actualNode;\n          return actualNode.value || '';\n        },\n        buttonDefaultText: function buttonDefaultText(_ref37) {\n          var actualNode = _ref37.actualNode;\n          return defaultButtonValues[actualNode.type] || '';\n        },\n        tableCaptionText: descendantText.bind(null, 'caption'),\n        figureText: descendantText.bind(null, 'figcaption'),\n        fieldsetLegendText: descendantText.bind(null, 'legend'),\n        altText: attrText.bind(null, 'alt'),\n        tableSummaryText: attrText.bind(null, 'summary'),\n        titleText: function titleText(virtualNode, context) {\n          return text.titleText(virtualNode, context);\n        },\n        subtreeText: function subtreeText(virtualNode, context) {\n          return text.subtreeText(virtualNode, context);\n        },\n        labelText: function labelText(virtualNode, context) {\n          return text.labelText(virtualNode, context);\n        },\n        singleSpace: function singleSpace() {\n          return ' ';\n        }\n      };\n      function attrText(attr, _ref38) {\n        var actualNode = _ref38.actualNode;\n        return actualNode.getAttribute(attr) || '';\n      }\n      function descendantText(nodeName, _ref39, context) {\n        var actualNode = _ref39.actualNode;\n        nodeName = nodeName.toLowerCase();\n        var nodeNames = [ nodeName, actualNode.nodeName.toLowerCase() ].join(',');\n        var candidate = actualNode.querySelector(nodeNames);\n        if (!candidate || candidate.nodeName.toLowerCase() !== nodeName) {\n          return '';\n        }\n        return text.accessibleText(candidate, context);\n      }\n      text.sanitize = function(str) {\n        'use strict';\n        return str.replace(/\\r\\n/g, '\\n').replace(/\\u00A0/g, ' ').replace(/[\\s]{2,}/g, ' ').trim();\n      };\n      text.subtreeText = function subtreeText(virtualNode) {\n        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var alreadyProcessed = text.accessibleTextVirtual.alreadyProcessed;\n        context.startNode = context.startNode || virtualNode;\n        var strict = context.strict;\n        if (alreadyProcessed(virtualNode, context) || !aria.namedFromContents(virtualNode, {\n          strict: strict\n        })) {\n          return '';\n        }\n        return aria.getOwnedVirtual(virtualNode).reduce(function(contentText, child) {\n          return appendAccessibleText(contentText, child, context);\n        }, '');\n      };\n      var phrasingElements = [ 'A', 'EM', 'STRONG', 'SMALL', 'MARK', 'ABBR', 'DFN', 'I', 'B', 'S', 'U', 'CODE', 'VAR', 'SAMP', 'KBD', 'SUP', 'SUB', 'Q', 'CITE', 'SPAN', 'BDO', 'BDI', 'WBR', 'INS', 'DEL', 'MAP', 'AREA', 'NOSCRIPT', 'RUBY', 'BUTTON', 'LABEL', 'OUTPUT', 'DATALIST', 'KEYGEN', 'PROGRESS', 'COMMAND', 'CANVAS', 'TIME', 'METER', '#TEXT' ];\n      function appendAccessibleText(contentText, virtualNode, context) {\n        var nodeName = virtualNode.actualNode.nodeName.toUpperCase();\n        var contentTextAdd = text.accessibleTextVirtual(virtualNode, context);\n        if (!contentTextAdd) {\n          return contentText;\n        }\n        if (!phrasingElements.includes(nodeName)) {\n          if (contentTextAdd[0] !== ' ') {\n            contentTextAdd += ' ';\n          }\n          if (contentText && contentText[contentText.length - 1] !== ' ') {\n            contentTextAdd = ' ' + contentTextAdd;\n          }\n        }\n        return contentText + contentTextAdd;\n      }\n      var alwaysTitleElements = [ 'button', 'iframe', 'a[href]', {\n        nodeName: 'input',\n        properties: {\n          type: 'button'\n        }\n      } ];\n      text.titleText = function titleText(node) {\n        node = node.actualNode || node;\n        if (node.nodeType !== 1 || !node.hasAttribute('title')) {\n          return '';\n        }\n        if (!axe.commons.matches(node, alwaysTitleElements) && [ 'none', 'presentation' ].includes(aria.getRole(node))) {\n          return '';\n        }\n        return node.getAttribute('title');\n      };\n      text.hasUnicode = function hasUnicode(str, options) {\n        var emoji = options.emoji, nonBmp = options.nonBmp, punctuations = options.punctuations;\n        if (emoji) {\n          return axe.imports.emojiRegexText().test(str);\n        }\n        if (nonBmp) {\n          return getUnicodeNonBmpRegExp().test(str);\n        }\n        if (punctuations) {\n          return getPunctuationRegExp().test(str);\n        }\n        return false;\n      };\n      text.removeUnicode = function removeUnicode(str, options) {\n        var emoji = options.emoji, nonBmp = options.nonBmp, punctuations = options.punctuations;\n        if (emoji) {\n          str = str.replace(axe.imports.emojiRegexText(), '');\n        }\n        if (nonBmp) {\n          str = str.replace(getUnicodeNonBmpRegExp(), '');\n        }\n        if (punctuations) {\n          str = str.replace(getPunctuationRegExp(), '');\n        }\n        return str;\n      };\n      function getUnicodeNonBmpRegExp() {\n        return new RegExp('[' + 'ᴀ-ᵿ' + 'ᶀ-ᶿ' + '᷀-᷿' + '₠-⃏' + '⃐-⃿' + '℀-⅏' + '⅐-↏' + '←-⇿' + '∀-⋿' + '⌀-⏿' + '␀-␿' + '⑀-⑟' + '①-⓿' + '─-╿' + '▀-▟' + '■-◿' + '☀-⛿' + '✀-➿' + ']');\n      }\n      function getPunctuationRegExp() {\n        return /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-.\\/:;<=>?@\\[\\]^_`{|}~]/g;\n      }\n      text.unsupported = {\n        accessibleNameFromFieldValue: [ 'combobox', 'listbox', 'progressbar' ]\n      };\n      text.visibleVirtual = function(element, screenReader, noRecursing) {\n        var result = element.children.map(function(child) {\n          if (child.actualNode.nodeType === 3) {\n            var nodeValue = child.actualNode.nodeValue;\n            if (nodeValue && dom.isVisible(element.actualNode, screenReader)) {\n              return nodeValue;\n            }\n          } else if (!noRecursing) {\n            return text.visibleVirtual(child, screenReader);\n          }\n        }).join('');\n        return text.sanitize(result);\n      };\n      text.visible = function(element, screenReader, noRecursing) {\n        element = axe.utils.getNodeFromTree(axe._tree[0], element);\n        return text.visibleVirtual(element, screenReader, noRecursing);\n      };\n      return commons;\n    }()\n  });\n})(typeof window === 'object' ? window : this);","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/** @license React v16.7.0\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportedValue = exports.supportedProperty = exports.prefix = undefined;\n\nvar _prefix = require('./prefix');\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _supportedProperty = require('./supported-property');\n\nvar _supportedProperty2 = _interopRequireDefault(_supportedProperty);\n\nvar _supportedValue = require('./supported-value');\n\nvar _supportedValue2 = _interopRequireDefault(_supportedValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nexports['default'] = {\n  prefix: _prefix2['default'],\n  supportedProperty: _supportedProperty2['default'],\n  supportedValue: _supportedValue2['default']\n}; /**\n    * CSS Vendor prefix detection and property feature testing.\n    *\n    * @copyright Oleg Slobodskoi 2015\n    * @website https://github.com/jsstyles/css-vendor\n    * @license MIT\n    */\n\nexports.prefix = _prefix2['default'];\nexports.supportedProperty = _supportedProperty2['default'];\nexports.supportedValue = _supportedValue2['default'];","/** @license React v16.6.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,r=b?Symbol.for(\"react.memo\"):\n60115,t=b?Symbol.for(\"react.lazy\"):60116;function u(a){if(\"object\"===typeof a&&null!==a){var q=a.$$typeof;switch(q){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return q}}case d:return q}}}function v(a){return u(a)===m}exports.typeOf=u;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;\nexports.Profiler=g;exports.Portal=d;exports.StrictMode=f;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||u(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return u(a)===k};exports.isContextProvider=function(a){return u(a)===h};\nexports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return u(a)===n};exports.isFragment=function(a){return u(a)===e};exports.isProfiler=function(a){return u(a)===g};exports.isPortal=function(a){return u(a)===d};exports.isStrictMode=function(a){return u(a)===f};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.14';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\n      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/[\\r\\n]/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      // Like with sourceURL, we take care to not check the option's prototype,\n      // as this configuration is a code injection vector.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","/** @license React v16.8.4\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../widgets/component\");\nvar context_1 = require(\"../context/context\");\nvar rowNode_1 = require(\"../entities/rowNode\");\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar eventKeys_1 = require(\"../eventKeys\");\nvar beanStub_1 = require(\"../context/beanStub\");\nvar utils_1 = require(\"../utils\");\nvar RowDragComp = /** @class */ (function (_super) {\n    __extends(RowDragComp, _super);\n    function RowDragComp(rowNode, column, cellValue, beans) {\n        var _this = _super.call(this, \"<div class=\\\"ag-row-drag\\\"></div>\") || this;\n        _this.visibleMode = null;\n        _this.rowNode = rowNode;\n        _this.column = column;\n        _this.cellValue = cellValue;\n        _this.beans = beans;\n        return _this;\n    }\n    RowDragComp.prototype.postConstruct = function () {\n        var eGui = this.getGui();\n        eGui.appendChild(utils_1._.createIconNoSpan('rowDrag', this.beans.gridOptionsWrapper, null));\n        this.addDragSource();\n        this.checkCompatibility();\n        if (this.beans.gridOptionsWrapper.isRowDragManaged()) {\n            this.addFeature(this.beans.context, new ManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column));\n        }\n        else {\n            this.addFeature(this.beans.context, new NonManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column));\n        }\n    };\n    // returns true if all compatibility items work out\n    RowDragComp.prototype.checkCompatibility = function () {\n        var managed = this.beans.gridOptionsWrapper.isRowDragManaged();\n        var treeData = this.beans.gridOptionsWrapper.isTreeData();\n        if (treeData && managed) {\n            utils_1._.doOnce(function () {\n                return console.warn('ag-Grid: If using row drag with tree data, you cannot have rowDragManaged=true');\n            }, 'RowDragComp.managedAndTreeData');\n        }\n    };\n    RowDragComp.prototype.addDragSource = function () {\n        var _this = this;\n        var dragItem = {\n            rowNode: this.rowNode\n        };\n        var dragSource = {\n            type: dragAndDropService_1.DragSourceType.RowDrag,\n            eElement: this.getGui(),\n            dragItemName: this.cellValue,\n            dragItemCallback: function () { return dragItem; },\n            dragStartPixels: 0\n        };\n        this.beans.dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(function () { return _this.beans.dragAndDropService.removeDragSource(dragSource); });\n    };\n    RowDragComp.prototype.getVisibleMode = function () {\n        return this.visibleMode;\n    };\n    RowDragComp.prototype.setVisibleMode = function (type) {\n        this.visibleMode = type;\n    };\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], RowDragComp.prototype, \"postConstruct\", null);\n    return RowDragComp;\n}(component_1.Component));\nexports.RowDragComp = RowDragComp;\n// when non managed, the visibility depends on suppressRowDrag property only\nvar NonManagedVisibilityStrategy = /** @class */ (function (_super) {\n    __extends(NonManagedVisibilityStrategy, _super);\n    function NonManagedVisibilityStrategy(parent, beans, rowNode, column) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.beans = beans;\n        _this.column = column;\n        _this.rowNode = rowNode;\n        return _this;\n    }\n    NonManagedVisibilityStrategy.prototype.postConstruct = function () {\n        this.addDestroyableEventListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this));\n        // in case data changes, then we need to update visibility of drag item\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n        this.workOutVisibility();\n    };\n    NonManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n        this.workOutVisibility();\n    };\n    NonManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n        // only show the drag if both sort and filter are not present\n        var suppressRowDrag = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n        if (suppressRowDrag) {\n            this.parent.setVisibleMode('display');\n            this.parent.setVisible(false, 'display');\n        }\n        else {\n            var visible = this.column.isRowDrag(this.rowNode);\n            if (!this.parent.getVisibleMode()) {\n                var isRowDragFunc = utils_1._.isFunction(this.column.getColDef().rowDrag);\n                this.parent.setVisibleMode(isRowDragFunc ? 'visibility' : 'display');\n            }\n            this.parent.setVisible(visible, this.parent.getVisibleMode());\n        }\n    };\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], NonManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n    return NonManagedVisibilityStrategy;\n}(beanStub_1.BeanStub));\n// when managed, the visibility depends on sort, filter and row group, as well as suppressRowDrag property\nvar ManagedVisibilityStrategy = /** @class */ (function (_super) {\n    __extends(ManagedVisibilityStrategy, _super);\n    function ManagedVisibilityStrategy(parent, beans, rowNode, column) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.beans = beans;\n        _this.column = column;\n        _this.rowNode = rowNode;\n        return _this;\n    }\n    ManagedVisibilityStrategy.prototype.postConstruct = function () {\n        // we do not show the component if sort, filter or grouping is active\n        this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.addDestroyableEventListener(this.beans.eventService, eventKeys_1.Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onRowGroupChanged.bind(this));\n        // in case data changes, then we need to update visibility of drag item\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n        this.addDestroyableEventListener(this.rowNode, rowNode_1.RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n        this.addDestroyableEventListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this));\n        this.updateSortActive();\n        this.updateFilterActive();\n        this.updateRowGroupActive();\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.updateRowGroupActive = function () {\n        var rowGroups = this.beans.columnController.getRowGroupColumns();\n        this.rowGroupActive = !utils_1._.missingOrEmpty(rowGroups);\n    };\n    ManagedVisibilityStrategy.prototype.onRowGroupChanged = function () {\n        this.updateRowGroupActive();\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.updateSortActive = function () {\n        var sortModel = this.beans.sortController.getSortModel();\n        this.sortActive = !utils_1._.missingOrEmpty(sortModel);\n    };\n    ManagedVisibilityStrategy.prototype.onSortChanged = function () {\n        this.updateSortActive();\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.updateFilterActive = function () {\n        this.filterActive = this.beans.filterManager.isAnyFilterPresent();\n    };\n    ManagedVisibilityStrategy.prototype.onFilterChanged = function () {\n        this.updateFilterActive();\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n        // only show the drag if both sort and filter are not present\n        var sortOrFilterOrGroupActive = this.sortActive || this.filterActive || this.rowGroupActive;\n        var suppressRowDrag = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n        var alwaysHide = sortOrFilterOrGroupActive || suppressRowDrag;\n        if (alwaysHide) {\n            this.parent.setVisibleMode('display');\n            this.parent.setVisible(false, 'display');\n        }\n        else {\n            var visible = this.column.isRowDrag(this.rowNode);\n            if (!this.parent.getVisibleMode()) {\n                var isRowDragFunc = utils_1._.isFunction(this.column.getColDef().rowDrag);\n                this.parent.setVisibleMode(isRowDragFunc ? 'visibility' : 'display');\n            }\n            this.parent.setVisible(visible, this.parent.getVisibleMode());\n        }\n    };\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n    return ManagedVisibilityStrategy;\n}(beanStub_1.BeanStub));\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar column_1 = require(\"../../entities/column\");\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar sortController_1 = require(\"../../sortController\");\nvar touchListener_1 = require(\"../../widgets/touchListener\");\nvar eventService_1 = require(\"../../eventService\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar events_1 = require(\"../../events\");\nvar utils_1 = require(\"../../utils\");\nvar HeaderComp = /** @class */ (function (_super) {\n    __extends(HeaderComp, _super);\n    function HeaderComp() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.lastMovingChanged = 0;\n        return _this;\n    }\n    HeaderComp.prototype.init = function (params) {\n        var template = utils_1._.firstExistingValue(params.template, HeaderComp.TEMPLATE);\n        // take account of any newlines & whitespace before/after the actual template\n        template = template && template.trim ? template.trim() : template;\n        this.setTemplate(template);\n        this.params = params;\n        this.setupTap();\n        this.setupIcons(params.column);\n        this.setupMenu();\n        this.setupSort();\n        this.setupFilterIcon();\n        this.setupText(params.displayName);\n    };\n    HeaderComp.prototype.setupText = function (displayName) {\n        var displayNameSanitised = utils_1._.escape(displayName);\n        if (this.eText) {\n            this.eText.innerHTML = displayNameSanitised;\n        }\n    };\n    HeaderComp.prototype.setupIcons = function (column) {\n        this.addInIcon('sortAscending', this.eSortAsc, column);\n        this.addInIcon('sortDescending', this.eSortDesc, column);\n        this.addInIcon('sortUnSort', this.eSortNone, column);\n        this.addInIcon('menu', this.eMenu, column);\n        this.addInIcon('filter', this.eFilter, column);\n    };\n    HeaderComp.prototype.addInIcon = function (iconName, eParent, column) {\n        if (eParent == null) {\n            return;\n        }\n        var eIcon = utils_1._.createIconNoSpan(iconName, this.gridOptionsWrapper, column);\n        eParent.appendChild(eIcon);\n    };\n    HeaderComp.prototype.setupTap = function () {\n        var _this = this;\n        var options = this.gridOptionsWrapper;\n        if (options.isSuppressTouch()) {\n            return;\n        }\n        var touchListener = new touchListener_1.TouchListener(this.getGui(), true);\n        var suppressMenuHide = options.isSuppressMenuHide();\n        var tapMenuButton = suppressMenuHide && utils_1._.exists(this.eMenu);\n        var menuTouchListener = tapMenuButton ? new touchListener_1.TouchListener(this.eMenu, true) : touchListener;\n        if (this.params.enableMenu) {\n            var eventType = tapMenuButton ? 'EVENT_TAP' : 'EVENT_LONG_TAP';\n            var showMenuFn = function (event) {\n                options.getApi().showColumnMenuAfterMouseClick(_this.params.column, event.touchStart);\n            };\n            this.addDestroyableEventListener(menuTouchListener, touchListener_1.TouchListener[eventType], showMenuFn);\n        }\n        if (this.params.enableSorting) {\n            var tapListener = function (event) {\n                var target = event.touchStart.target;\n                // When suppressMenuHide is true, a tap on the menu icon will bubble up\n                // to the header container, in that case we should not sort\n                if (suppressMenuHide && _this.eMenu.contains(target)) {\n                    return;\n                }\n                _this.sortController.progressSort(_this.params.column, false, \"uiColumnSorted\");\n            };\n            this.addDestroyableEventListener(touchListener, touchListener_1.TouchListener.EVENT_TAP, tapListener);\n        }\n        // if tapMenuButton is true `touchListener` and `menuTouchListener` are different\n        // so we need to make sure to destroy both listeners here\n        this.addDestroyFunc(function () { return touchListener.destroy(); });\n        if (tapMenuButton) {\n            this.addDestroyFunc(function () { return menuTouchListener.destroy(); });\n        }\n    };\n    HeaderComp.prototype.setupMenu = function () {\n        var _this = this;\n        // if no menu provided in template, do nothing\n        if (!this.eMenu) {\n            return;\n        }\n        // we don't show the menu if on an iPad/iPhone, as the user cannot have a pointer device\n        // Note: If suppressMenuHide is set to true the menu will be displayed, and if suppressMenuHide\n        // is false (default) user will need to use longpress to display the menu.\n        var suppressMenuHide = this.gridOptionsWrapper.isSuppressMenuHide();\n        var hideShowMenu = !this.params.enableMenu || (utils_1._.isUserAgentIPad() && !suppressMenuHide);\n        if (hideShowMenu) {\n            utils_1._.removeFromParent(this.eMenu);\n            return;\n        }\n        this.addDestroyableEventListener(this.eMenu, 'click', function () { return _this.showMenu(_this.eMenu); });\n        if (!suppressMenuHide) {\n            this.eMenu.style.opacity = '0';\n            this.addGuiEventListener('mouseover', function () {\n                _this.eMenu.style.opacity = '1';\n            });\n            this.addGuiEventListener('mouseout', function () {\n                _this.eMenu.style.opacity = '0';\n            });\n        }\n        var style = this.eMenu.style;\n        style.transition = 'opacity 0.2s, border 0.2s';\n        style['-webkit-transition'] = 'opacity 0.2s, border 0.2s';\n    };\n    HeaderComp.prototype.showMenu = function (eventSource) {\n        this.menuFactory.showMenuAfterButtonClick(this.params.column, eventSource);\n    };\n    HeaderComp.prototype.removeSortIcons = function () {\n        utils_1._.removeFromParent(this.eSortAsc);\n        utils_1._.removeFromParent(this.eSortDesc);\n        utils_1._.removeFromParent(this.eSortNone);\n        utils_1._.removeFromParent(this.eSortOrder);\n    };\n    HeaderComp.prototype.setupSort = function () {\n        var _this = this;\n        var enableSorting = this.params.enableSorting;\n        if (!enableSorting) {\n            this.removeSortIcons();\n            return;\n        }\n        var sortUsingCtrl = this.gridOptionsWrapper.isMultiSortKeyCtrl();\n        // keep track of last time the moving changed flag was set\n        this.addDestroyableEventListener(this.params.column, column_1.Column.EVENT_MOVING_CHANGED, function () {\n            _this.lastMovingChanged = new Date().getTime();\n        });\n        // add the event on the header, so when clicked, we do sorting\n        if (this.eLabel) {\n            this.addDestroyableEventListener(this.eLabel, 'click', function (event) {\n                // sometimes when moving a column via dragging, this was also firing a clicked event.\n                // here is issue raised by user: https://ag-grid.zendesk.com/agent/tickets/1076\n                // this check stops sort if a) column is moving or b) column moved less than 200ms ago (so caters for race condition)\n                var moving = _this.params.column.isMoving();\n                var nowTime = new Date().getTime();\n                // typically there is <2ms if moving flag was set recently, as it would be done in same VM turn\n                var movedRecently = (nowTime - _this.lastMovingChanged) < 50;\n                var columnMoving = moving || movedRecently;\n                if (!columnMoving) {\n                    var multiSort = sortUsingCtrl ? (event.ctrlKey || event.metaKey) : event.shiftKey;\n                    _this.params.progressSort(multiSort);\n                }\n            });\n        }\n        this.addDestroyableEventListener(this.params.column, column_1.Column.EVENT_SORT_CHANGED, this.onSortChanged.bind(this));\n        this.onSortChanged();\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_SORT_CHANGED, this.setMultiSortOrder.bind(this));\n        this.setMultiSortOrder();\n    };\n    HeaderComp.prototype.onSortChanged = function () {\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-asc', this.params.column.isSortAscending());\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-desc', this.params.column.isSortDescending());\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-sorted-none', this.params.column.isSortNone());\n        if (this.eSortAsc) {\n            utils_1._.addOrRemoveCssClass(this.eSortAsc, 'ag-hidden', !this.params.column.isSortAscending());\n        }\n        if (this.eSortDesc) {\n            utils_1._.addOrRemoveCssClass(this.eSortDesc, 'ag-hidden', !this.params.column.isSortDescending());\n        }\n        if (this.eSortNone) {\n            var alwaysHideNoSort = !this.params.column.getColDef().unSortIcon && !this.gridOptionsWrapper.isUnSortIcon();\n            utils_1._.addOrRemoveCssClass(this.eSortNone, 'ag-hidden', alwaysHideNoSort || !this.params.column.isSortNone());\n        }\n    };\n    // we listen here for global sort events, NOT column sort events, as we want to do this\n    // when sorting has been set on all column (if we listened just for our col (where we\n    // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\n    HeaderComp.prototype.setMultiSortOrder = function () {\n        if (!this.eSortOrder) {\n            return;\n        }\n        var col = this.params.column;\n        var allColumnsWithSorting = this.sortController.getColumnsWithSortingOrdered();\n        var indexThisCol = allColumnsWithSorting.indexOf(col);\n        var moreThanOneColSorting = allColumnsWithSorting.length > 1;\n        var showIndex = col.isSorting() && moreThanOneColSorting;\n        utils_1._.setVisible(this.eSortOrder, showIndex);\n        if (indexThisCol >= 0) {\n            this.eSortOrder.innerHTML = (indexThisCol + 1).toString();\n        }\n        else {\n            utils_1._.clearElement(this.eSortOrder);\n        }\n    };\n    HeaderComp.prototype.setupFilterIcon = function () {\n        if (!this.eFilter) {\n            return;\n        }\n        this.addDestroyableEventListener(this.params.column, column_1.Column.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n        this.onFilterChanged();\n    };\n    HeaderComp.prototype.onFilterChanged = function () {\n        var filterPresent = this.params.column.isFilterActive();\n        utils_1._.addOrRemoveCssClass(this.eFilter, 'ag-hidden', !filterPresent);\n    };\n    HeaderComp.TEMPLATE = '<div class=\"ag-cell-label-container\" role=\"presentation\">' +\n        '  <span ref=\"eMenu\" class=\"ag-header-icon ag-header-cell-menu-button\" aria-hidden=\"true\"></span>' +\n        '  <div ref=\"eLabel\" class=\"ag-header-cell-label\" role=\"presentation\" unselectable=\"on\">' +\n        '    <span ref=\"eText\" class=\"ag-header-cell-text\" role=\"columnheader\" unselectable=\"on\"></span>' +\n        '    <span ref=\"eFilter\" class=\"ag-header-icon ag-filter-icon\" aria-hidden=\"true\"></span>' +\n        '    <span ref=\"eSortOrder\" class=\"ag-header-icon ag-sort-order\" aria-hidden=\"true\"></span>' +\n        '    <span ref=\"eSortAsc\" class=\"ag-header-icon ag-sort-ascending-icon\" aria-hidden=\"true\"></span>' +\n        '    <span ref=\"eSortDesc\" class=\"ag-header-icon ag-sort-descending-icon\" aria-hidden=\"true\"></span>' +\n        '    <span ref=\"eSortNone\" class=\"ag-header-icon ag-sort-none-icon\" aria-hidden=\"true\"></span>' +\n        '  </div>' +\n        '</div>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('sortController'),\n        __metadata(\"design:type\", sortController_1.SortController)\n    ], HeaderComp.prototype, \"sortController\", void 0);\n    __decorate([\n        context_1.Autowired('menuFactory'),\n        __metadata(\"design:type\", Object)\n    ], HeaderComp.prototype, \"menuFactory\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], HeaderComp.prototype, \"eventService\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eFilter'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderComp.prototype, \"eFilter\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eSortAsc'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderComp.prototype, \"eSortAsc\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eSortDesc'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderComp.prototype, \"eSortDesc\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eSortNone'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderComp.prototype, \"eSortNone\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eSortOrder'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderComp.prototype, \"eSortOrder\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eMenu'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderComp.prototype, \"eMenu\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLabel'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderComp.prototype, \"eLabel\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eText'),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderComp.prototype, \"eText\", void 0);\n    return HeaderComp;\n}(component_1.Component));\nexports.HeaderComp = HeaderComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar context_1 = require(\"../../context/context\");\nvar touchListener_1 = require(\"../../widgets/touchListener\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar originalColumnGroup_1 = require(\"../../entities/originalColumnGroup\");\nvar utils_1 = require(\"../../utils\");\nvar HeaderGroupComp = /** @class */ (function (_super) {\n    __extends(HeaderGroupComp, _super);\n    function HeaderGroupComp() {\n        return _super.call(this, HeaderGroupComp.TEMPLATE) || this;\n    }\n    HeaderGroupComp.prototype.init = function (params) {\n        this.params = params;\n        this.setupLabel();\n        this.addGroupExpandIcon();\n        this.setupExpandIcons();\n    };\n    HeaderGroupComp.prototype.setupExpandIcons = function () {\n        var _this = this;\n        this.addInIcon(\"columnGroupOpened\", \"agOpened\");\n        this.addInIcon(\"columnGroupClosed\", \"agClosed\");\n        var expandAction = function (event) {\n            if (utils_1._.isStopPropagationForAgGrid(event)) {\n                return;\n            }\n            var newExpandedValue = !_this.params.columnGroup.isExpanded();\n            _this.columnController.setColumnGroupOpened(_this.params.columnGroup.getOriginalColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n        };\n        this.addTouchAndClickListeners(this.eCloseIcon, expandAction);\n        this.addTouchAndClickListeners(this.eOpenIcon, expandAction);\n        var stopPropagationAction = function (event) {\n            utils_1._.stopPropagationForAgGrid(event);\n        };\n        // adding stopPropagation to the double click for the icons prevents double click action happening\n        // when the icons are clicked. if the icons are double clicked, then the groups should open and\n        // then close again straight away. if we also listened to double click, then the group would open,\n        // close, then open, which is not what we want. double click should only action if the user double\n        // clicks outside of the icons.\n        this.addDestroyableEventListener(this.eCloseIcon, \"dblclick\", stopPropagationAction);\n        this.addDestroyableEventListener(this.eOpenIcon, \"dblclick\", stopPropagationAction);\n        this.addDestroyableEventListener(this.getGui(), \"dblclick\", expandAction);\n        this.updateIconVisibility();\n        var originalColumnGroup = this.params.columnGroup.getOriginalColumnGroup();\n        this.addDestroyableEventListener(originalColumnGroup, originalColumnGroup_1.OriginalColumnGroup.EVENT_EXPANDED_CHANGED, this.updateIconVisibility.bind(this));\n        this.addDestroyableEventListener(originalColumnGroup, originalColumnGroup_1.OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED, this.updateIconVisibility.bind(this));\n    };\n    HeaderGroupComp.prototype.addTouchAndClickListeners = function (eElement, action) {\n        var touchListener = new touchListener_1.TouchListener(eElement);\n        this.addDestroyableEventListener(touchListener, touchListener_1.TouchListener.EVENT_TAP, action);\n        this.addDestroyFunc(function () { return touchListener.destroy(); });\n        this.addDestroyableEventListener(eElement, \"click\", action);\n    };\n    HeaderGroupComp.prototype.updateIconVisibility = function () {\n        var columnGroup = this.params.columnGroup;\n        if (columnGroup.isExpandable()) {\n            var expanded = this.params.columnGroup.isExpanded();\n            utils_1._.setVisible(this.eOpenIcon, !expanded);\n            utils_1._.setVisible(this.eCloseIcon, expanded);\n        }\n        else {\n            utils_1._.setVisible(this.eOpenIcon, false);\n            utils_1._.setVisible(this.eCloseIcon, false);\n        }\n    };\n    HeaderGroupComp.prototype.addInIcon = function (iconName, refName) {\n        var eIcon = utils_1._.createIconNoSpan(iconName, this.gridOptionsWrapper, null);\n        this.getRefElement(refName).appendChild(eIcon);\n    };\n    HeaderGroupComp.prototype.addGroupExpandIcon = function () {\n        if (!this.params.columnGroup.isExpandable()) {\n            utils_1._.setVisible(this.eOpenIcon, false);\n            utils_1._.setVisible(this.eCloseIcon, false);\n            return;\n        }\n    };\n    HeaderGroupComp.prototype.setupLabel = function () {\n        // no renderer, default text render\n        if (this.params.displayName && this.params.displayName !== \"\") {\n            var eInnerText = this.getRefElement(\"agLabel\");\n            eInnerText.innerHTML = this.params.displayName;\n        }\n    };\n    HeaderGroupComp.TEMPLATE = \"<div class=\\\"ag-header-group-cell-label\\\" ref=\\\"agContainer\\\">\" +\n        \"<span ref=\\\"agLabel\\\" class=\\\"ag-header-group-text\\\"></span>\" +\n        \"<span ref=\\\"agOpened\\\" class=\\\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded\\\"></span>\" +\n        \"<span ref=\\\"agClosed\\\" class=\\\"ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed\\\"></span>\" +\n        \"</div>\";\n    __decorate([\n        context_1.Autowired(\"columnController\"),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], HeaderGroupComp.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired(\"gridOptionsWrapper\"),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderGroupComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector(\"agOpened\"),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderGroupComp.prototype, \"eOpenIcon\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector(\"agClosed\"),\n        __metadata(\"design:type\", HTMLElement)\n    ], HeaderGroupComp.prototype, \"eCloseIcon\", void 0);\n    return HeaderGroupComp;\n}(component_1.Component));\nexports.HeaderGroupComp = HeaderGroupComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar component_1 = require(\"../../widgets/component\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar utils_1 = require(\"../../utils\");\nvar LoadingCellRenderer = /** @class */ (function (_super) {\n    __extends(LoadingCellRenderer, _super);\n    function LoadingCellRenderer() {\n        return _super.call(this, LoadingCellRenderer.TEMPLATE) || this;\n    }\n    LoadingCellRenderer.prototype.init = function (params) {\n        var eLoadingIcon = utils_1._.createIconNoSpan('groupLoading', this.gridOptionsWrapper, null);\n        this.eLoadingIcon.appendChild(eLoadingIcon);\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        this.eLoadingText.innerText = localeTextFunc('loadingOoo', 'Loading');\n    };\n    LoadingCellRenderer.prototype.refresh = function (params) {\n        return false;\n    };\n    LoadingCellRenderer.TEMPLATE = \"<div class=\\\"ag-stub-cell\\\">\\n            <span class=\\\"ag-loading-icon\\\" ref=\\\"eLoadingIcon\\\"></span>\\n            <span class=\\\"ag-loading-text\\\" ref=\\\"eLoadingText\\\"></span>\\n        </div>\";\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], LoadingCellRenderer.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLoadingIcon'),\n        __metadata(\"design:type\", HTMLElement)\n    ], LoadingCellRenderer.prototype, \"eLoadingIcon\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eLoadingText'),\n        __metadata(\"design:type\", HTMLElement)\n    ], LoadingCellRenderer.prototype, \"eLoadingText\", void 0);\n    return LoadingCellRenderer;\n}(component_1.Component));\nexports.LoadingCellRenderer = LoadingCellRenderer;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar context_1 = require(\"../../context/context\");\nvar component_1 = require(\"../../widgets/component\");\nvar LoadingOverlayComponent = /** @class */ (function (_super) {\n    __extends(LoadingOverlayComponent, _super);\n    function LoadingOverlayComponent() {\n        return _super.call(this) || this;\n    }\n    LoadingOverlayComponent.prototype.init = function (params) {\n        var template = this.gridOptionsWrapper.getOverlayLoadingTemplate() ?\n            this.gridOptionsWrapper.getOverlayLoadingTemplate() : LoadingOverlayComponent.DEFAULT_LOADING_OVERLAY_TEMPLATE;\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var localisedTemplate = template.replace('[LOADING...]', localeTextFunc('loadingOoo', 'Loading...'));\n        this.setTemplate(localisedTemplate);\n    };\n    LoadingOverlayComponent.DEFAULT_LOADING_OVERLAY_TEMPLATE = '<span class=\"ag-overlay-loading-center\">[LOADING...]</span>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], LoadingOverlayComponent.prototype, \"gridOptionsWrapper\", void 0);\n    return LoadingOverlayComponent;\n}(component_1.Component));\nexports.LoadingOverlayComponent = LoadingOverlayComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar context_1 = require(\"../../context/context\");\nvar component_1 = require(\"../../widgets/component\");\nvar NoRowsOverlayComponent = /** @class */ (function (_super) {\n    __extends(NoRowsOverlayComponent, _super);\n    function NoRowsOverlayComponent() {\n        return _super.call(this) || this;\n    }\n    NoRowsOverlayComponent.prototype.init = function (params) {\n        var template = this.gridOptionsWrapper.getOverlayNoRowsTemplate() ?\n            this.gridOptionsWrapper.getOverlayNoRowsTemplate() : NoRowsOverlayComponent.DEFAULT_NO_ROWS_TEMPLATE;\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var localisedTemplate = template.replace('[NO_ROWS_TO_SHOW]', localeTextFunc('noRowsToShow', 'No Rows To Show'));\n        this.setTemplate(localisedTemplate);\n    };\n    NoRowsOverlayComponent.DEFAULT_NO_ROWS_TEMPLATE = '<span class=\"ag-overlay-no-rows-center\">[NO_ROWS_TO_SHOW]</span>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], NoRowsOverlayComponent.prototype, \"gridOptionsWrapper\", void 0);\n    return NoRowsOverlayComponent;\n}(component_1.Component));\nexports.NoRowsOverlayComponent = NoRowsOverlayComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar popupComponent_1 = require(\"../widgets/popupComponent\");\nvar TooltipComponent = /** @class */ (function (_super) {\n    __extends(TooltipComponent, _super);\n    function TooltipComponent() {\n        return _super.call(this, \"<div class=\\\"ag-tooltip\\\"></div>\") || this;\n    }\n    // will need to type params\n    TooltipComponent.prototype.init = function (params) {\n        var value = params.value;\n        this.getGui().innerHTML = value;\n    };\n    return TooltipComponent;\n}(popupComponent_1.PopupComponent));\nexports.TooltipComponent = TooltipComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../../widgets/component\");\nvar utils_1 = require(\"../../../utils\");\nvar DefaultDateComponent = /** @class */ (function (_super) {\n    __extends(DefaultDateComponent, _super);\n    function DefaultDateComponent() {\n        return _super.call(this, \"<div class=\\\"ag-input-text-wrapper\\\"><input class=\\\"ag-filter-filter\\\" type=\\\"text\\\" placeholder=\\\"yyyy-mm-dd\\\"></div>\") || this;\n    }\n    DefaultDateComponent.prototype.init = function (params) {\n        this.eDateInput = this.getGui().querySelector('input');\n        if (utils_1._.isBrowserChrome() || params.filterParams.browserDatePicker) {\n            if (utils_1._.isBrowserIE()) {\n                console.warn('ag-grid: browserDatePicker is specified to true, but it is not supported in IE 11, reverting to plain text date picker');\n            }\n            else {\n                this.eDateInput.type = 'date';\n            }\n        }\n        this.listener = params.onDateChanged;\n        this.addGuiEventListener('input', this.listener);\n    };\n    DefaultDateComponent.prototype.getDate = function () {\n        return utils_1._.parseYyyyMmDdToDate(this.eDateInput.value, \"-\");\n    };\n    DefaultDateComponent.prototype.setDate = function (date) {\n        this.eDateInput.value = utils_1._.serializeDateToYyyyMmDd(date, \"-\");\n    };\n    return DefaultDateComponent;\n}(component_1.Component));\nexports.DefaultDateComponent = DefaultDateComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dateFilter_1 = require(\"./dateFilter\");\nvar context_1 = require(\"../../../context/context\");\nvar userComponentFactory_1 = require(\"../../../components/framework/userComponentFactory\");\nvar utils_1 = require(\"../../../utils\");\nvar dateCompWrapper_1 = require(\"./dateCompWrapper\");\nvar componentAnnotations_1 = require(\"../../../widgets/componentAnnotations\");\nvar simpleFilter_1 = require(\"../simpleFilter\");\nvar simpleFloatingFilter_1 = require(\"../../floating/provided/simpleFloatingFilter\");\nvar providedFilter_1 = require(\"../providedFilter\");\nvar DateFloatingFilter = /** @class */ (function (_super) {\n    __extends(DateFloatingFilter, _super);\n    function DateFloatingFilter() {\n        return _super.call(this, \"<div class=\\\"ag-input-text-wrapper\\\">\\n                <input ref=\\\"eReadOnlyText\\\" disabled=\\\"true\\\" class=\\\"ag-floating-filter-input\\\">\\n                <div ref=\\\"eDateWrapper\\\" style=\\\"display: flex; flex: 1 1 auto; overflow: hidden;\\\"></div>\\n            </div>\") || this;\n    }\n    DateFloatingFilter.prototype.getDefaultFilterOptions = function () {\n        return dateFilter_1.DateFilter.DEFAULT_FILTER_OPTIONS;\n    };\n    DateFloatingFilter.prototype.conditionToString = function (condition) {\n        var isRange = condition.type == simpleFilter_1.SimpleFilter.IN_RANGE;\n        if (isRange) {\n            return condition.dateFrom + \"-\" + condition.dateTo;\n        }\n        else {\n            // cater for when the type doesn't need a value\n            if (condition.dateFrom != null) {\n                return \"\" + condition.dateFrom;\n            }\n            else {\n                return \"\" + condition.type;\n            }\n        }\n    };\n    DateFloatingFilter.prototype.init = function (params) {\n        _super.prototype.init.call(this, params);\n        this.params = params;\n        this.createDateComponent();\n    };\n    DateFloatingFilter.prototype.setEditable = function (editable) {\n        utils_1._.setVisible(this.eDateWrapper, editable);\n        utils_1._.setVisible(this.eReadOnlyText, !editable);\n    };\n    DateFloatingFilter.prototype.onParentModelChanged = function (model, event) {\n        // we don't want to update the floating filter if the floating filter caused the change.\n        // as if it caused the change, the ui is already in sycn. if we didn't do this, the UI\n        // would behave strange as it would be updating as the user is typing\n        if (this.isEventFromFloatingFilter(event)) {\n            return;\n        }\n        _super.prototype.setLastTypeFromModel.call(this, model);\n        var allowEditing = this.canWeEditAfterModelFromParentFilter(model);\n        this.setEditable(allowEditing);\n        if (allowEditing) {\n            if (model) {\n                var dateModel = model;\n                this.dateComp.setDate(utils_1._.parseYyyyMmDdToDate(dateModel.dateFrom, '-'));\n            }\n            else {\n                this.dateComp.setDate(null);\n            }\n            this.eReadOnlyText.value = '';\n        }\n        else {\n            this.eReadOnlyText.value = this.getTextFromModel(model);\n            this.dateComp.setDate(null);\n        }\n    };\n    DateFloatingFilter.prototype.onDateChanged = function () {\n        var _this = this;\n        var filterValueDate = this.dateComp.getDate();\n        var filterValueText = utils_1._.serializeDateToYyyyMmDd(filterValueDate, \"-\");\n        this.params.parentFilterInstance(function (filterInstance) {\n            if (filterInstance) {\n                var simpleFilter = filterInstance;\n                simpleFilter.onFloatingFilterChanged(_this.getLastType(), filterValueText);\n            }\n        });\n    };\n    DateFloatingFilter.prototype.createDateComponent = function () {\n        var _this = this;\n        var debounceMs = providedFilter_1.ProvidedFilter.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs());\n        var toDebounce = utils_1._.debounce(this.onDateChanged.bind(this), debounceMs);\n        var dateComponentParams = {\n            onDateChanged: toDebounce,\n            filterParams: this.params.column.getColDef().filterParams\n        };\n        this.dateComp = new dateCompWrapper_1.DateCompWrapper(this.userComponentFactory, dateComponentParams, this.eDateWrapper);\n        this.addDestroyFunc(function () {\n            _this.dateComp.destroy();\n        });\n    };\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], DateFloatingFilter.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eReadOnlyText'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], DateFloatingFilter.prototype, \"eReadOnlyText\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eDateWrapper'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], DateFloatingFilter.prototype, \"eDateWrapper\", void 0);\n    return DateFloatingFilter;\n}(simpleFloatingFilter_1.SimpleFloatingFilter));\nexports.DateFloatingFilter = DateFloatingFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar numberFilter_1 = require(\"./numberFilter\");\nvar simpleFilter_1 = require(\"../simpleFilter\");\nvar textInputFloatingFilter_1 = require(\"../../floating/provided/textInputFloatingFilter\");\nvar NumberFloatingFilter = /** @class */ (function (_super) {\n    __extends(NumberFloatingFilter, _super);\n    function NumberFloatingFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberFloatingFilter.prototype.getDefaultFilterOptions = function () {\n        return numberFilter_1.NumberFilter.DEFAULT_FILTER_OPTIONS;\n    };\n    NumberFloatingFilter.prototype.conditionToString = function (condition) {\n        var isRange = condition.type == simpleFilter_1.SimpleFilter.IN_RANGE;\n        if (isRange) {\n            return condition.filter + \"-\" + condition.filterTo;\n        }\n        else {\n            // cater for when the type doesn't need a value\n            if (condition.filter != null) {\n                return \"\" + condition.filter;\n            }\n            else {\n                return \"\" + condition.type;\n            }\n        }\n    };\n    return NumberFloatingFilter;\n}(textInputFloatingFilter_1.TextInputFloatingFilter));\nexports.NumberFloatingFilter = NumberFloatingFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar textFilter_1 = require(\"./textFilter\");\nvar textInputFloatingFilter_1 = require(\"../../floating/provided/textInputFloatingFilter\");\nvar TextFloatingFilter = /** @class */ (function (_super) {\n    __extends(TextFloatingFilter, _super);\n    function TextFloatingFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TextFloatingFilter.prototype.conditionToString = function (condition) {\n        // it's not possible to have 'in range' for string, so no need to check for it.\n        // also cater for when the type doesn't need a value\n        if (condition.filter != null) {\n            return \"\" + condition.filter;\n        }\n        else {\n            return \"\" + condition.type;\n        }\n    };\n    TextFloatingFilter.prototype.getDefaultFilterOptions = function () {\n        return textFilter_1.TextFilter.DEFAULT_FILTER_OPTIONS;\n    };\n    return TextFloatingFilter;\n}(textInputFloatingFilter_1.TextInputFloatingFilter));\nexports.TextFloatingFilter = TextFloatingFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar agCheckbox_1 = require(\"../../widgets/agCheckbox\");\nvar beanStub_1 = require(\"../../context/beanStub\");\nvar context_1 = require(\"../../context/context\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar events_1 = require(\"../../events\");\nvar eventService_1 = require(\"../../eventService\");\nvar constants_1 = require(\"../../constants\");\nvar selectionController_1 = require(\"../../selectionController\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar SelectAllFeature = /** @class */ (function (_super) {\n    __extends(SelectAllFeature, _super);\n    function SelectAllFeature(cbSelectAll, column) {\n        var _this = _super.call(this) || this;\n        _this.cbSelectAllVisible = false;\n        _this.processingEventFromCheckbox = false;\n        _this.cbSelectAll = cbSelectAll;\n        _this.column = column;\n        var colDef = column.getColDef();\n        _this.filteredOnly = colDef ? !!colDef.headerCheckboxSelectionFilteredOnly : false;\n        return _this;\n    }\n    SelectAllFeature.prototype.postConstruct = function () {\n        this.showOrHideSelectAll();\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelectAll.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this));\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this));\n        this.addDestroyableEventListener(this.cbSelectAll, agCheckbox_1.AgCheckbox.EVENT_CHANGED, this.onCbSelectAll.bind(this));\n    };\n    SelectAllFeature.prototype.showOrHideSelectAll = function () {\n        this.cbSelectAllVisible = this.isCheckboxSelection();\n        this.cbSelectAll.setVisible(this.cbSelectAllVisible);\n        if (this.cbSelectAllVisible) {\n            // in case user is trying this feature with the wrong model type\n            this.checkRightRowModelType();\n            // make sure checkbox is showing the right state\n            this.updateStateOfCheckbox();\n        }\n    };\n    SelectAllFeature.prototype.onModelChanged = function () {\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        this.updateStateOfCheckbox();\n    };\n    SelectAllFeature.prototype.onSelectionChanged = function () {\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        this.updateStateOfCheckbox();\n    };\n    SelectAllFeature.prototype.getNextCheckboxState = function (selectionCount) {\n        if (selectionCount.selected === 0 && selectionCount.notSelected === 0) {\n            // if no rows, always have it unselected\n            return false;\n        }\n        else if (selectionCount.selected > 0 && selectionCount.notSelected > 0) {\n            // if mix of selected and unselected, this is the tri-state\n            return null;\n        }\n        else if (selectionCount.selected > 0) {\n            // only selected\n            return true;\n        }\n        else {\n            // nothing selected\n            return false;\n        }\n    };\n    SelectAllFeature.prototype.updateStateOfCheckbox = function () {\n        if (this.processingEventFromCheckbox) {\n            return;\n        }\n        this.processingEventFromCheckbox = true;\n        var selectionCount = this.getSelectionCount();\n        var allSelected = this.getNextCheckboxState(selectionCount);\n        this.cbSelectAll.setSelected(allSelected);\n        this.processingEventFromCheckbox = false;\n    };\n    SelectAllFeature.prototype.getSelectionCount = function () {\n        var _this = this;\n        var selectedCount = 0;\n        var notSelectedCount = 0;\n        var callback = function (node) {\n            if (_this.gridOptionsWrapper.isGroupSelectsChildren() && node.group) {\n                return;\n            }\n            if (node.isSelected()) {\n                selectedCount++;\n            }\n            else if (!node.selectable) {\n                // don't count non-selectable nodes!\n            }\n            else {\n                notSelectedCount++;\n            }\n        };\n        if (this.filteredOnly) {\n            this.gridApi.forEachNodeAfterFilter(callback);\n        }\n        else {\n            this.gridApi.forEachNode(callback);\n        }\n        return {\n            notSelected: notSelectedCount,\n            selected: selectedCount\n        };\n    };\n    SelectAllFeature.prototype.checkRightRowModelType = function () {\n        var rowModelType = this.rowModel.getType();\n        var rowModelMatches = rowModelType === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE;\n        if (!rowModelMatches) {\n            console.warn(\"ag-Grid: selectAllCheckbox is only available if using normal row model, you are using \" + rowModelType);\n        }\n    };\n    SelectAllFeature.prototype.onCbSelectAll = function () {\n        if (this.processingEventFromCheckbox) {\n            return;\n        }\n        if (!this.cbSelectAllVisible) {\n            return;\n        }\n        var value = this.cbSelectAll.isSelected();\n        if (value) {\n            this.selectionController.selectAllRowNodes(this.filteredOnly);\n        }\n        else {\n            this.selectionController.deselectAllRowNodes(this.filteredOnly);\n        }\n    };\n    SelectAllFeature.prototype.isCheckboxSelection = function () {\n        var result = this.column.getColDef().headerCheckboxSelection;\n        if (typeof result === 'function') {\n            var func = result;\n            result = func({\n                column: this.column,\n                colDef: this.column.getColDef(),\n                columnApi: this.columnApi,\n                api: this.gridApi\n            });\n        }\n        if (result) {\n            if (this.gridOptionsWrapper.isRowModelServerSide()) {\n                console.warn('headerCheckboxSelection is not supported for Server Side Row Model');\n                return false;\n            }\n            if (this.gridOptionsWrapper.isRowModelInfinite()) {\n                console.warn('headerCheckboxSelection is not supported for Infinite Row Model');\n                return false;\n            }\n            if (this.gridOptionsWrapper.isRowModelViewport()) {\n                console.warn('headerCheckboxSelection is not supported for Viewport Row Model');\n                return false;\n            }\n            // otherwise the row model is compatible, so return true\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], SelectAllFeature.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], SelectAllFeature.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], SelectAllFeature.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], SelectAllFeature.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('selectionController'),\n        __metadata(\"design:type\", selectionController_1.SelectionController)\n    ], SelectAllFeature.prototype, \"selectionController\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], SelectAllFeature.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], SelectAllFeature.prototype, \"postConstruct\", null);\n    return SelectAllFeature;\n}(beanStub_1.BeanStub));\nexports.SelectAllFeature = SelectAllFeature;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultColumnTypes = {\n    numericColumn: {\n        headerClass: \"ag-numeric-header\",\n        cellClass: \"ag-numeric-cell\"\n    }\n};\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar grid_1 = require(\"../grid\");\nfunction initialiseAgGridWithAngular1(angular) {\n    var angularModule = angular.module(\"agGrid\", []);\n    angularModule.directive(\"agGrid\", function () {\n        return {\n            restrict: \"A\",\n            controller: ['$element', '$scope', '$compile', '$attrs', AngularDirectiveController],\n            scope: true\n        };\n    });\n}\nexports.initialiseAgGridWithAngular1 = initialiseAgGridWithAngular1;\nfunction AngularDirectiveController($element, $scope, $compile, $attrs) {\n    var gridOptions;\n    var quickFilterOnScope;\n    var keyOfGridInScope = $attrs.agGrid;\n    quickFilterOnScope = keyOfGridInScope + '.quickFilterText';\n    gridOptions = $scope.$eval(keyOfGridInScope);\n    if (!gridOptions) {\n        console.warn(\"WARNING - grid options for ag-Grid not found. Please ensure the attribute ag-grid points to a valid object on the scope\");\n        return;\n    }\n    var eGridDiv = $element[0];\n    var gridParams = {\n        $scope: $scope,\n        $compile: $compile,\n        quickFilterOnScope: quickFilterOnScope\n    };\n    var grid = new grid_1.Grid(eGridDiv, gridOptions, gridParams);\n    $scope.$on(\"$destroy\", function () {\n        grid.destroy();\n        grid = null;\n    });\n}\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar column_1 = require(\"../../entities/column\");\nvar columnGroup_1 = require(\"../../entities/columnGroup\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar columnController_1 = require(\"../../columnController/columnController\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar horizontalResizeService_1 = require(\"../horizontalResizeService\");\nvar context_1 = require(\"../../context/context\");\nvar cssClassApplier_1 = require(\"../cssClassApplier\");\nvar dragAndDropService_1 = require(\"../../dragAndDrop/dragAndDropService\");\nvar setLeftFeature_1 = require(\"../../rendering/features/setLeftFeature\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar beans_1 = require(\"../../rendering/beans\");\nvar hoverFeature_1 = require(\"../hoverFeature\");\nvar utils_1 = require(\"../../utils\");\nvar HeaderGroupWrapperComp = /** @class */ (function (_super) {\n    __extends(HeaderGroupWrapperComp, _super);\n    function HeaderGroupWrapperComp(columnGroup, dragSourceDropTarget, pinned) {\n        var _this = _super.call(this, HeaderGroupWrapperComp.TEMPLATE) || this;\n        // the children can change, we keep destroy functions related to listening to the children here\n        _this.childColumnsDestroyFuncs = [];\n        _this.columnGroup = columnGroup;\n        _this.dragSourceDropTarget = dragSourceDropTarget;\n        _this.pinned = pinned;\n        return _this;\n    }\n    HeaderGroupWrapperComp.prototype.postConstruct = function () {\n        cssClassApplier_1.CssClassApplier.addHeaderClassesFromColDef(this.getComponentHolder(), this.getGui(), this.gridOptionsWrapper, null, this.columnGroup);\n        var displayName = this.columnController.getDisplayNameForColumnGroup(this.columnGroup, 'header');\n        this.appendHeaderGroupComp(displayName);\n        this.setupResize();\n        this.addClasses();\n        this.setupWidth();\n        this.addAttributes();\n        this.setupMovingCss();\n        this.setupTooltip();\n        this.addFeature(this.getContext(), new hoverFeature_1.HoverFeature(this.columnGroup.getOriginalColumnGroup().getLeafColumns(), this.getGui()));\n        var setLeftFeature = new setLeftFeature_1.SetLeftFeature(this.columnGroup, this.getGui(), this.beans);\n        setLeftFeature.init();\n        this.addDestroyFunc(setLeftFeature.destroy.bind(setLeftFeature));\n    };\n    HeaderGroupWrapperComp.prototype.setupMovingCss = function () {\n        var _this = this;\n        var originalColumnGroup = this.columnGroup.getOriginalColumnGroup();\n        var leafColumns = originalColumnGroup.getLeafColumns();\n        leafColumns.forEach(function (col) {\n            _this.addDestroyableEventListener(col, column_1.Column.EVENT_MOVING_CHANGED, _this.onColumnMovingChanged.bind(_this));\n        });\n        this.onColumnMovingChanged();\n    };\n    HeaderGroupWrapperComp.prototype.getComponentHolder = function () {\n        return this.columnGroup.getColGroupDef();\n    };\n    HeaderGroupWrapperComp.prototype.getTooltipText = function () {\n        var colGroupDef = this.getComponentHolder();\n        return colGroupDef && colGroupDef.headerTooltip;\n    };\n    HeaderGroupWrapperComp.prototype.setupTooltip = function () {\n        var tooltipText = this.getTooltipText();\n        if (tooltipText == null) {\n            return;\n        }\n        if (this.gridOptionsWrapper.isEnableBrowserTooltips()) {\n            this.getGui().setAttribute('title', tooltipText);\n        }\n        else {\n            this.beans.tooltipManager.registerTooltip(this);\n        }\n    };\n    HeaderGroupWrapperComp.prototype.onColumnMovingChanged = function () {\n        // this function adds or removes the moving css, based on if the col is moving.\n        // this is what makes the header go dark when it is been moved (gives impression to\n        // user that the column was picked up).\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-header-cell-moving', this.columnGroup.isMoving());\n    };\n    HeaderGroupWrapperComp.prototype.addAttributes = function () {\n        this.getGui().setAttribute(\"col-id\", this.columnGroup.getUniqueId());\n    };\n    HeaderGroupWrapperComp.prototype.appendHeaderGroupComp = function (displayName) {\n        var _this = this;\n        var params = {\n            displayName: displayName,\n            columnGroup: this.columnGroup,\n            setExpanded: function (expanded) {\n                _this.columnController.setColumnGroupOpened(_this.columnGroup.getOriginalColumnGroup(), expanded, \"gridInitializing\");\n            },\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            context: this.gridOptionsWrapper.getContext()\n        };\n        if (!displayName) {\n            var columnGroup = this.columnGroup;\n            var leafCols = columnGroup.getLeafColumns();\n            // find the top most column group that represents the same columns. so if we are dragging a group, we also\n            // want to visually show the parent groups dragging for the same column set. for example imaging 5 levels\n            // of grouping, with each group only containing the next group, and the last group containing three columns,\n            // then when you move any group (even the lowest level group) you are in-fact moving all the groups, as all\n            // the groups represent the same column set.\n            while (columnGroup.getParent() && columnGroup.getParent().getLeafColumns().length === leafCols.length) {\n                columnGroup = columnGroup.getParent();\n            }\n            var colGroupDef = columnGroup.getColGroupDef();\n            if (colGroupDef) {\n                displayName = colGroupDef.headerName;\n            }\n            if (!displayName) {\n                displayName = leafCols ? this.columnController.getDisplayNameForColumn(leafCols[0], 'header', true) : '';\n            }\n        }\n        var callback = this.afterHeaderCompCreated.bind(this, displayName);\n        this.userComponentFactory.newHeaderGroupComponent(params).then(callback);\n    };\n    HeaderGroupWrapperComp.prototype.afterHeaderCompCreated = function (displayName, headerGroupComp) {\n        this.appendChild(headerGroupComp);\n        this.setupMove(headerGroupComp.getGui(), displayName);\n    };\n    HeaderGroupWrapperComp.prototype.addClasses = function () {\n        // having different classes below allows the style to not have a bottom border\n        // on the group header, if no group is specified\n        // columnGroup.getColGroupDef\n        if (this.columnGroup.isPadding()) {\n            this.addCssClass('ag-header-group-cell-no-group');\n        }\n        else {\n            this.addCssClass('ag-header-group-cell-with-group');\n        }\n    };\n    HeaderGroupWrapperComp.prototype.setupMove = function (eHeaderGroup, displayName) {\n        var _this = this;\n        if (!eHeaderGroup) {\n            return;\n        }\n        if (this.isSuppressMoving()) {\n            return;\n        }\n        var allLeafColumns = this.columnGroup.getOriginalColumnGroup().getLeafColumns();\n        if (eHeaderGroup) {\n            var dragSource_1 = {\n                type: dragAndDropService_1.DragSourceType.HeaderCell,\n                eElement: eHeaderGroup,\n                dragItemName: displayName,\n                // we add in the original group leaf columns, so we move both visible and non-visible items\n                dragItemCallback: this.getDragItemForGroup.bind(this),\n                dragSourceDropTarget: this.dragSourceDropTarget,\n                dragStarted: function () { return allLeafColumns.forEach(function (col) { return col.setMoving(true, \"uiColumnDragged\"); }); },\n                dragStopped: function () { return allLeafColumns.forEach(function (col) { return col.setMoving(false, \"uiColumnDragged\"); }); }\n            };\n            this.dragAndDropService.addDragSource(dragSource_1, true);\n            this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource_1); });\n        }\n    };\n    // when moving the columns, we want to move all the columns (contained within the DragItem) in this group in one go,\n    // and in the order they are currently in the screen.\n    HeaderGroupWrapperComp.prototype.getDragItemForGroup = function () {\n        var allColumnsOriginalOrder = this.columnGroup.getOriginalColumnGroup().getLeafColumns();\n        // capture visible state, used when re-entering grid to dictate which columns should be visible\n        var visibleState = {};\n        allColumnsOriginalOrder.forEach(function (column) { return visibleState[column.getId()] = column.isVisible(); });\n        var allColumnsCurrentOrder = [];\n        this.columnController.getAllDisplayedColumns().forEach(function (column) {\n            if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n                allColumnsCurrentOrder.push(column);\n                utils_1._.removeFromArray(allColumnsOriginalOrder, column);\n            }\n        });\n        // we are left with non-visible columns, stick these in at the end\n        allColumnsOriginalOrder.forEach(function (column) { return allColumnsCurrentOrder.push(column); });\n        // create and return dragItem\n        return {\n            columns: allColumnsCurrentOrder,\n            visibleState: visibleState\n        };\n    };\n    HeaderGroupWrapperComp.prototype.isSuppressMoving = function () {\n        // if any child is fixed, then don't allow moving\n        var childSuppressesMoving = false;\n        this.columnGroup.getLeafColumns().forEach(function (column) {\n            if (column.getColDef().suppressMovable || column.getColDef().lockPosition) {\n                childSuppressesMoving = true;\n            }\n        });\n        var result = childSuppressesMoving || this.gridOptionsWrapper.isSuppressMovableColumns();\n        return result;\n    };\n    HeaderGroupWrapperComp.prototype.setupWidth = function () {\n        // we need to listen to changes in child columns, as they impact our width\n        this.addListenersToChildrenColumns();\n        // the children belonging to this group can change, so we need to add and remove listeners as they change\n        this.addDestroyableEventListener(this.columnGroup, columnGroup_1.ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this));\n        this.onWidthChanged();\n        // the child listeners are not tied to this components life-cycle, as children can get added and removed\n        // to the group - hence they are on a different life-cycle. so we must make sure the existing children\n        // listeners are removed when we finally get destroyed\n        this.addDestroyFunc(this.destroyListenersOnChildrenColumns.bind(this));\n    };\n    HeaderGroupWrapperComp.prototype.onDisplayedChildrenChanged = function () {\n        this.addListenersToChildrenColumns();\n        this.onWidthChanged();\n    };\n    HeaderGroupWrapperComp.prototype.addListenersToChildrenColumns = function () {\n        var _this = this;\n        // first destroy any old listeners\n        this.destroyListenersOnChildrenColumns();\n        // now add new listeners to the new set of children\n        var widthChangedListener = this.onWidthChanged.bind(this);\n        this.columnGroup.getLeafColumns().forEach(function (column) {\n            column.addEventListener(column_1.Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n            column.addEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n            _this.childColumnsDestroyFuncs.push(function () {\n                column.removeEventListener(column_1.Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n                column.removeEventListener(column_1.Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n            });\n        });\n    };\n    HeaderGroupWrapperComp.prototype.destroyListenersOnChildrenColumns = function () {\n        this.childColumnsDestroyFuncs.forEach(function (func) { return func(); });\n        this.childColumnsDestroyFuncs = [];\n    };\n    HeaderGroupWrapperComp.prototype.onWidthChanged = function () {\n        this.getGui().style.width = this.columnGroup.getActualWidth() + 'px';\n    };\n    HeaderGroupWrapperComp.prototype.setupResize = function () {\n        var _this = this;\n        this.eHeaderCellResize = this.getRefElement('agResize');\n        if (!this.columnGroup.isResizable()) {\n            utils_1._.removeFromParent(this.eHeaderCellResize);\n            return;\n        }\n        var finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n            eResizeBar: this.eHeaderCellResize,\n            onResizeStart: this.onResizeStart.bind(this),\n            onResizing: this.onResizing.bind(this, false),\n            onResizeEnd: this.onResizing.bind(this, true)\n        });\n        this.addDestroyFunc(finishedWithResizeFunc);\n        if (!this.gridOptionsWrapper.isSuppressAutoSize()) {\n            this.eHeaderCellResize.addEventListener('dblclick', function (event) {\n                // get list of all the column keys we are responsible for\n                var keys = [];\n                _this.columnGroup.getDisplayedLeafColumns().forEach(function (column) {\n                    // not all cols in the group may be participating with auto-resize\n                    if (!column.getColDef().suppressAutoSize) {\n                        keys.push(column.getColId());\n                    }\n                });\n                if (keys.length > 0) {\n                    _this.columnController.autoSizeColumns(keys, \"uiColumnResized\");\n                }\n            });\n        }\n    };\n    HeaderGroupWrapperComp.prototype.onResizeStart = function (shiftKey) {\n        var _this = this;\n        var leafCols = this.columnGroup.getDisplayedLeafColumns();\n        this.resizeCols = utils_1._.filter(leafCols, function (col) { return col.isResizable(); });\n        this.resizeStartWidth = 0;\n        this.resizeCols.forEach(function (col) { return _this.resizeStartWidth += col.getActualWidth(); });\n        this.resizeRatios = [];\n        this.resizeCols.forEach(function (col) { return _this.resizeRatios.push(col.getActualWidth() / _this.resizeStartWidth); });\n        var takeFromGroup = null;\n        if (shiftKey) {\n            takeFromGroup = this.columnController.getDisplayedGroupAfter(this.columnGroup);\n        }\n        if (takeFromGroup) {\n            var takeFromLeafCols = takeFromGroup.getDisplayedLeafColumns();\n            this.resizeTakeFromCols = utils_1._.filter(takeFromLeafCols, function (col) { return col.isResizable(); });\n            this.resizeTakeFromStartWidth = 0;\n            this.resizeTakeFromCols.forEach(function (col) { return _this.resizeTakeFromStartWidth += col.getActualWidth(); });\n            this.resizeTakeFromRatios = [];\n            this.resizeTakeFromCols.forEach(function (col) { return _this.resizeTakeFromRatios.push(col.getActualWidth() / _this.resizeTakeFromStartWidth); });\n        }\n        else {\n            this.resizeTakeFromCols = null;\n            this.resizeTakeFromStartWidth = null;\n            this.resizeTakeFromRatios = null;\n        }\n        utils_1._.addCssClass(this.getGui(), 'ag-column-resizing');\n    };\n    HeaderGroupWrapperComp.prototype.onResizing = function (finished, resizeAmount) {\n        var resizeSets = [];\n        var resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n        resizeSets.push({\n            columns: this.resizeCols,\n            ratios: this.resizeRatios,\n            width: this.resizeStartWidth + resizeAmountNormalised\n        });\n        if (this.resizeTakeFromCols) {\n            resizeSets.push({\n                columns: this.resizeTakeFromCols,\n                ratios: this.resizeTakeFromRatios,\n                width: this.resizeTakeFromStartWidth - resizeAmountNormalised\n            });\n        }\n        this.columnController.resizeColumnSets(resizeSets, finished, 'uiColumnDragged');\n        if (finished) {\n            utils_1._.removeCssClass(this.getGui(), 'ag-column-resizing');\n        }\n    };\n    // optionally inverts the drag, depending on pinned and RTL\n    // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n    HeaderGroupWrapperComp.prototype.normaliseDragChange = function (dragChange) {\n        var result = dragChange;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // for RTL, dragging left makes the col bigger, except when pinning left\n            if (this.pinned !== column_1.Column.PINNED_LEFT) {\n                result *= -1;\n            }\n        }\n        else {\n            // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n            if (this.pinned === column_1.Column.PINNED_RIGHT) {\n                result *= -1;\n            }\n        }\n        return result;\n    };\n    HeaderGroupWrapperComp.TEMPLATE = '<div class=\"ag-header-group-cell\">' +\n        '<div ref=\"agResize\" class=\"ag-header-cell-resize\"></div>' +\n        '</div>';\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], HeaderGroupWrapperComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('columnController'),\n        __metadata(\"design:type\", columnController_1.ColumnController)\n    ], HeaderGroupWrapperComp.prototype, \"columnController\", void 0);\n    __decorate([\n        context_1.Autowired('horizontalResizeService'),\n        __metadata(\"design:type\", horizontalResizeService_1.HorizontalResizeService)\n    ], HeaderGroupWrapperComp.prototype, \"horizontalResizeService\", void 0);\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], HeaderGroupWrapperComp.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('userComponentFactory'),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], HeaderGroupWrapperComp.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], HeaderGroupWrapperComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], HeaderGroupWrapperComp.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('beans'),\n        __metadata(\"design:type\", beans_1.Beans)\n    ], HeaderGroupWrapperComp.prototype, \"beans\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HeaderGroupWrapperComp.prototype, \"postConstruct\", null);\n    return HeaderGroupWrapperComp;\n}(component_1.Component));\nexports.HeaderGroupWrapperComp = HeaderGroupWrapperComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar column_1 = require(\"../../entities/column\");\nvar setLeftFeature_1 = require(\"../../rendering/features/setLeftFeature\");\nvar component_1 = require(\"../../widgets/component\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar beans_1 = require(\"../../rendering/beans\");\nvar hoverFeature_1 = require(\"../../headerRendering/hoverFeature\");\nvar events_1 = require(\"../../events\");\nvar eventService_1 = require(\"../../eventService\");\nvar columnHoverService_1 = require(\"../../rendering/columnHoverService\");\nvar utils_1 = require(\"../../utils\");\nvar userComponentFactory_1 = require(\"../../components/framework/userComponentFactory\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar filterManager_1 = require(\"./../filterManager\");\nvar readOnlyFloatingFilter_1 = require(\"./provided/readOnlyFloatingFilter\");\nvar FloatingFilterWrapper = /** @class */ (function (_super) {\n    __extends(FloatingFilterWrapper, _super);\n    function FloatingFilterWrapper(column) {\n        var _this = _super.call(this, FloatingFilterWrapper.TEMPLATE) || this;\n        _this.column = column;\n        return _this;\n    }\n    FloatingFilterWrapper.prototype.postConstruct = function () {\n        this.setupFloatingFilter();\n        this.setupWidth();\n        this.setupLeftPositioning();\n        this.setupColumnHover();\n        this.addFeature(this.getContext(), new hoverFeature_1.HoverFeature([this.column], this.getGui()));\n        this.addDestroyableEventListener(this.eButtonShowMainFilter, 'click', this.showParentFilter.bind(this));\n    };\n    FloatingFilterWrapper.prototype.setupFloatingFilter = function () {\n        var _this = this;\n        var colDef = this.column.getColDef();\n        if (colDef.filter) {\n            this.floatingFilterCompPromise = this.getFloatingFilterInstance();\n            if (this.floatingFilterCompPromise) {\n                this.floatingFilterCompPromise.then(function (compInstance) {\n                    if (compInstance) {\n                        _this.setupWithFloatingFilter(compInstance);\n                        _this.setupSyncWithFilter();\n                    }\n                    else {\n                        _this.setupEmpty();\n                    }\n                });\n            }\n            else {\n                this.setupEmpty();\n            }\n        }\n        else {\n            this.setupEmpty();\n        }\n    };\n    FloatingFilterWrapper.prototype.setupLeftPositioning = function () {\n        var setLeftFeature = new setLeftFeature_1.SetLeftFeature(this.column, this.getGui(), this.beans);\n        setLeftFeature.init();\n        this.addDestroyFunc(setLeftFeature.destroy.bind(setLeftFeature));\n    };\n    FloatingFilterWrapper.prototype.setupSyncWithFilter = function () {\n        var _this = this;\n        var syncWithFilter = function (filterChangedEvent) {\n            var filterComponentPromise = _this.filterManager.getFilterComponent(_this.column, 'NO_UI');\n            var parentModel = filterComponentPromise.resolveNow(null, function (filter) { return filter.getModel(); });\n            _this.onParentModelChanged(parentModel, filterChangedEvent);\n        };\n        this.addDestroyableEventListener(this.column, column_1.Column.EVENT_FILTER_CHANGED, syncWithFilter);\n        if (this.filterManager.isFilterActive(this.column)) {\n            syncWithFilter(null);\n        }\n    };\n    // linked to event listener in template\n    FloatingFilterWrapper.prototype.showParentFilter = function () {\n        this.menuFactory.showMenuAfterButtonClick(this.column, this.eButtonShowMainFilter, 'filterMenuTab', ['filterMenuTab']);\n    };\n    FloatingFilterWrapper.prototype.setupColumnHover = function () {\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_COLUMN_HOVER_CHANGED, this.onColumnHover.bind(this));\n        this.onColumnHover();\n    };\n    FloatingFilterWrapper.prototype.onColumnHover = function () {\n        var isHovered = this.columnHoverService.isHovered(this.column);\n        utils_1._.addOrRemoveCssClass(this.getGui(), 'ag-column-hover', isHovered);\n    };\n    FloatingFilterWrapper.prototype.setupWidth = function () {\n        this.addDestroyableEventListener(this.column, column_1.Column.EVENT_WIDTH_CHANGED, this.onColumnWidthChanged.bind(this));\n        this.onColumnWidthChanged();\n    };\n    FloatingFilterWrapper.prototype.onColumnWidthChanged = function () {\n        this.getGui().style.width = this.column.getActualWidth() + 'px';\n    };\n    FloatingFilterWrapper.prototype.setupWithFloatingFilter = function (floatingFilterComp) {\n        var disposeFunc = function () {\n            if (floatingFilterComp.destroy) {\n                floatingFilterComp.destroy();\n            }\n        };\n        if (!this.isAlive()) {\n            disposeFunc();\n            return;\n        }\n        this.addDestroyFunc(disposeFunc);\n        var floatingFilterCompUi = floatingFilterComp.getGui();\n        utils_1._.addOrRemoveCssClass(this.eFloatingFilterBody, 'ag-floating-filter-body', !this.suppressFilterButton);\n        utils_1._.addOrRemoveCssClass(this.eFloatingFilterBody, 'ag-floating-filter-full-body', this.suppressFilterButton);\n        utils_1._.setVisible(this.eButtonWrapper, !this.suppressFilterButton);\n        var eIcon = utils_1._.createIconNoSpan('filter', this.gridOptionsWrapper, this.column);\n        this.eButtonShowMainFilter.appendChild(eIcon);\n        this.eFloatingFilterBody.appendChild(floatingFilterCompUi);\n        if (floatingFilterComp.afterGuiAttached) {\n            floatingFilterComp.afterGuiAttached();\n        }\n    };\n    FloatingFilterWrapper.prototype.parentFilterInstance = function (callback) {\n        var promise = this.filterManager.getFilterComponent(this.column, 'NO_UI');\n        promise.then(callback);\n    };\n    FloatingFilterWrapper.prototype.getFloatingFilterInstance = function () {\n        var colDef = this.column.getColDef();\n        var defaultFloatingFilterType;\n        if (typeof colDef.filter === 'string') {\n            // will be undefined if not in the map\n            defaultFloatingFilterType = FloatingFilterWrapper.filterToFloatingFilterNames[colDef.filter];\n        }\n        else if (colDef.filter === true) {\n            defaultFloatingFilterType = this.gridOptionsWrapper.isEnterprise() ? 'agSetColumnFloatingFilter' : 'agTextColumnFloatingFilter';\n        }\n        var filterParams = this.filterManager.createFilterParams(this.column, this.column.getColDef());\n        var finalFilterParams = this.userComponentFactory.createFinalParams(colDef, 'filter', filterParams);\n        var params = {\n            api: this.gridApi,\n            column: this.column,\n            filterParams: finalFilterParams,\n            currentParentModel: this.currentParentModel.bind(this),\n            parentFilterInstance: this.parentFilterInstance.bind(this),\n            onFloatingFilterChanged: this.onFloatingFilterChanged.bind(this),\n            suppressFilterButton: false // This one might be overridden from the colDef\n        };\n        // this is unusual - we need a params value OUTSIDE the component the params are for.\n        // the params are for the floating filter component, but this property is actually for the wrapper.\n        this.suppressFilterButton = colDef.floatingFilterComponentParams ? !!colDef.floatingFilterComponentParams.suppressFilterButton : false;\n        var promise = this.userComponentFactory.newFloatingFilterComponent(colDef, params, defaultFloatingFilterType);\n        if (!promise) {\n            var filterComponent = this.getFilterComponentPrototype(colDef);\n            var getModelAsStringExists = filterComponent && filterComponent.prototype && filterComponent.prototype.getModelAsString;\n            if (getModelAsStringExists) {\n                var compInstance = this.userComponentFactory.createUserComponentFromConcreteClass(readOnlyFloatingFilter_1.ReadOnlyFloatingFilter, params);\n                promise = utils_1.Promise.resolve(compInstance);\n            }\n        }\n        return promise;\n    };\n    FloatingFilterWrapper.prototype.createDynamicParams = function () {\n        return {\n            column: this.column,\n            colDef: this.column.getColDef(),\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n    };\n    FloatingFilterWrapper.prototype.getFilterComponentPrototype = function (colDef) {\n        var resolvedComponent = this.userComponentFactory.lookupComponentClassDef(colDef, \"filter\", this.createDynamicParams());\n        return resolvedComponent ? resolvedComponent.component : null;\n    };\n    FloatingFilterWrapper.prototype.setupEmpty = function () {\n        utils_1._.setVisible(this.eButtonWrapper, false);\n    };\n    FloatingFilterWrapper.prototype.currentParentModel = function () {\n        var filterPromise = this.filterManager.getFilterComponent(this.column, 'NO_UI');\n        return filterPromise.resolveNow(null, function (filter) { return filter.getModel(); });\n    };\n    FloatingFilterWrapper.prototype.onParentModelChanged = function (model, filterChangedEvent) {\n        if (!this.floatingFilterCompPromise) {\n            return;\n        }\n        this.floatingFilterCompPromise.then(function (floatingFilterComp) {\n            floatingFilterComp.onParentModelChanged(model, filterChangedEvent);\n        });\n    };\n    FloatingFilterWrapper.prototype.onFloatingFilterChanged = function () {\n        console.warn('ag-Grid: since version 21.x, how floating filters are implemented has changed. ' +\n            'Instead of calling params.onFloatingFilterChanged(), get a reference to the main filter via ' +\n            'params.parentFilterInstance() and then set a value on the parent filter directly.');\n    };\n    FloatingFilterWrapper.filterToFloatingFilterNames = {\n        set: 'agSetColumnFloatingFilter',\n        agSetColumnFilter: 'agSetColumnFloatingFilter',\n        number: 'agNumberColumnFloatingFilter',\n        agNumberColumnFilter: 'agNumberColumnFloatingFilter',\n        date: 'agDateColumnFloatingFilter',\n        agDateColumnFilter: 'agDateColumnFloatingFilter',\n        text: 'agTextColumnFloatingFilter',\n        agTextColumnFilter: 'agTextColumnFloatingFilter'\n    };\n    FloatingFilterWrapper.TEMPLATE = \"<div class=\\\"ag-header-cell\\\" aria-hidden=\\\"true\\\">\\n            <div ref=\\\"eFloatingFilterBody\\\" aria-hidden=\\\"true\\\"></div>\\n            <div class=\\\"ag-floating-filter-button\\\" ref=\\\"eButtonWrapper\\\" aria-hidden=\\\"true\\\">\\n                    <button type=\\\"button\\\" ref=\\\"eButtonShowMainFilter\\\"></button>\\n            </div>\\n        </div>\";\n    __decorate([\n        context_1.Autowired('columnHoverService'),\n        __metadata(\"design:type\", columnHoverService_1.ColumnHoverService)\n    ], FloatingFilterWrapper.prototype, \"columnHoverService\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], FloatingFilterWrapper.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('beans'),\n        __metadata(\"design:type\", beans_1.Beans)\n    ], FloatingFilterWrapper.prototype, \"beans\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], FloatingFilterWrapper.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired(\"userComponentFactory\"),\n        __metadata(\"design:type\", userComponentFactory_1.UserComponentFactory)\n    ], FloatingFilterWrapper.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        context_1.Autowired(\"gridApi\"),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], FloatingFilterWrapper.prototype, \"gridApi\", void 0);\n    __decorate([\n        context_1.Autowired(\"columnApi\"),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], FloatingFilterWrapper.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired(\"filterManager\"),\n        __metadata(\"design:type\", filterManager_1.FilterManager)\n    ], FloatingFilterWrapper.prototype, \"filterManager\", void 0);\n    __decorate([\n        context_1.Autowired('menuFactory'),\n        __metadata(\"design:type\", Object)\n    ], FloatingFilterWrapper.prototype, \"menuFactory\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eFloatingFilterBody'),\n        __metadata(\"design:type\", HTMLElement)\n    ], FloatingFilterWrapper.prototype, \"eFloatingFilterBody\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eButtonWrapper'),\n        __metadata(\"design:type\", HTMLElement)\n    ], FloatingFilterWrapper.prototype, \"eButtonWrapper\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eButtonShowMainFilter'),\n        __metadata(\"design:type\", HTMLElement)\n    ], FloatingFilterWrapper.prototype, \"eButtonShowMainFilter\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], FloatingFilterWrapper.prototype, \"postConstruct\", null);\n    return FloatingFilterWrapper;\n}(component_1.Component));\nexports.FloatingFilterWrapper = FloatingFilterWrapper;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../../widgets/component\");\nvar componentAnnotations_1 = require(\"../../../widgets/componentAnnotations\");\n// optional floating filter for user provided filters - instead of providing a floating filter,\n// they can provide a getModelAsString() method on the filter instead. this class just displays\n// the string returned from getModelAsString()\nvar ReadOnlyFloatingFilter = /** @class */ (function (_super) {\n    __extends(ReadOnlyFloatingFilter, _super);\n    function ReadOnlyFloatingFilter() {\n        return _super.call(this, \"<div class=\\\"ag-input-text-wrapper\\\"><input ref=\\\"eFloatingFilterText\\\" class=\\\"ag-floating-filter-input\\\"></div>\") || this;\n    }\n    ReadOnlyFloatingFilter.prototype.init = function (params) {\n        this.params = params;\n        this.eFloatingFilterText.disabled = true;\n    };\n    ReadOnlyFloatingFilter.prototype.onParentModelChanged = function (parentModel) {\n        var _this = this;\n        if (!parentModel) {\n            this.eFloatingFilterText.value = '';\n            return;\n        }\n        this.params.parentFilterInstance(function (filterInstance) {\n            // getModelAsString should be present, as we check this\n            // in floatingFilterWrapper\n            if (filterInstance.getModelAsString) {\n                var modelAsString = filterInstance.getModelAsString(parentModel);\n                _this.eFloatingFilterText.value = modelAsString;\n            }\n        });\n    };\n    __decorate([\n        componentAnnotations_1.RefSelector('eFloatingFilterText'),\n        __metadata(\"design:type\", HTMLInputElement)\n    ], ReadOnlyFloatingFilter.prototype, \"eFloatingFilterText\", void 0);\n    return ReadOnlyFloatingFilter;\n}(component_1.Component));\nexports.ReadOnlyFloatingFilter = ReadOnlyFloatingFilter;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar utils_1 = require(\"../utils\");\n/**\n * There are many instances of this component covering each of the areas a row can be entered\n * eg body, pinned left, fullWidth. The component differs from others in that it's given the\n * elements, there is no template. All of the elements are part of the GridPanel.\n */\nvar RowContainerComponent = /** @class */ (function () {\n    function RowContainerComponent(params) {\n        this.childCount = 0;\n        this.rowTemplatesToAdd = [];\n        this.afterGuiAttachedCallbacks = [];\n        // this is to cater for a 'strange behaviour' where when a panel is made visible, it is firing a scroll\n        // event which we want to ignore. see gridPanel.onAnyBodyScroll()\n        this.lastMadeVisibleTime = 0;\n        this.eContainer = params.eContainer;\n        this.eViewport = params.eViewport;\n        if (params.eWrapper) {\n            this.eWrapper = params.eWrapper;\n        }\n        this.hideWhenNoChildren = params.hideWhenNoChildren;\n    }\n    RowContainerComponent.prototype.setVerticalScrollPosition = function (verticalScrollPosition) {\n        this.scrollTop = verticalScrollPosition;\n    };\n    RowContainerComponent.prototype.postConstruct = function () {\n        this.checkDomOrder();\n        this.checkVisibility();\n        this.gridOptionsWrapper.addEventListener(gridOptionsWrapper_1.GridOptionsWrapper.PROP_DOM_LAYOUT, this.checkDomOrder.bind(this));\n    };\n    RowContainerComponent.prototype.checkDomOrder = function () {\n        this.domOrder = this.gridOptionsWrapper.isEnsureDomOrder();\n    };\n    RowContainerComponent.prototype.getRowElement = function (compId) {\n        return this.eContainer.querySelector(\"[comp-id=\\\"\" + compId + \"\\\"]\");\n    };\n    RowContainerComponent.prototype.setHeight = function (height) {\n        if (height == null) {\n            this.eContainer.style.height = '';\n            return;\n        }\n        this.eContainer.style.height = height + \"px\";\n        if (this.eWrapper) {\n            this.eWrapper.style.height = height + \"px\";\n        }\n    };\n    RowContainerComponent.prototype.flushRowTemplates = function () {\n        // if doing dom order, then rowTemplates will be empty,\n        // or if no rows added since last time also empty.\n        if (this.rowTemplatesToAdd.length !== 0) {\n            var htmlToAdd = this.rowTemplatesToAdd.join('');\n            utils_1._.appendHtml(this.eContainer, htmlToAdd);\n            this.rowTemplatesToAdd.length = 0;\n        }\n        // this only empty if no rows since last time, as when\n        // doing dom order, we still have callbacks to process\n        this.afterGuiAttachedCallbacks.forEach(function (func) { return func(); });\n        this.afterGuiAttachedCallbacks.length = 0;\n        this.lastPlacedElement = null;\n    };\n    RowContainerComponent.prototype.appendRowTemplate = function (rowTemplate, callback) {\n        if (this.domOrder) {\n            this.lastPlacedElement = utils_1._.insertTemplateWithDomOrder(this.eContainer, rowTemplate, this.lastPlacedElement);\n        }\n        else {\n            this.rowTemplatesToAdd.push(rowTemplate);\n        }\n        this.afterGuiAttachedCallbacks.push(callback);\n        // it is important we put items in in order, so that when we open a row group,\n        // the new rows are inserted after the opened group, but before the rows below.\n        // that way, the rows below are over the new rows (as dom renders last in dom over\n        // items previous in dom), otherwise the child rows would cover the row below and\n        // that meant the user doesn't see the rows below slide away.\n        this.childCount++;\n        this.checkVisibility();\n    };\n    RowContainerComponent.prototype.ensureDomOrder = function (eRow) {\n        if (this.domOrder) {\n            utils_1._.ensureDomOrder(this.eContainer, eRow, this.lastPlacedElement);\n            this.lastPlacedElement = eRow;\n        }\n    };\n    RowContainerComponent.prototype.removeRowElement = function (eRow) {\n        this.eContainer.removeChild(eRow);\n        this.childCount--;\n        this.checkVisibility();\n    };\n    RowContainerComponent.prototype.checkVisibility = function () {\n        if (!this.hideWhenNoChildren) {\n            return;\n        }\n        var eGui = this.eViewport ? this.eViewport : this.eContainer;\n        var visible = this.childCount > 0;\n        if (this.visible !== visible) {\n            this.visible = visible;\n            this.lastMadeVisibleTime = new Date().getTime();\n            utils_1._.setVisible(eGui, visible);\n            // if we are showing the viewport, then the scroll is always zero,\n            // so we need to align with the other sections (ie if this is full\n            // width container, and first time showing a full width row, we need to\n            // scroll it so full width rows are show in right place alongside the\n            // body rows). without this, there was an issue with 'loading rows' for\n            // server side row model, as loading rows are full width, and they were\n            // not getting displayed in the right location when rows were expanded.\n            if (visible && this.eViewport) {\n                this.eViewport.scrollTop = this.scrollTop;\n            }\n        }\n    };\n    RowContainerComponent.prototype.isMadeVisibleRecently = function () {\n        var now = new Date().getTime();\n        var millisSinceVisible = now - this.lastMadeVisibleTime;\n        return millisSinceVisible < 500;\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], RowContainerComponent.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], RowContainerComponent.prototype, \"postConstruct\", null);\n    return RowContainerComponent;\n}());\nexports.RowContainerComponent = RowContainerComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dragAndDropService_1 = require(\"../dragAndDrop/dragAndDropService\");\nvar context_1 = require(\"../context/context\");\nvar focusedCellController_1 = require(\"../focusedCellController\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar eventService_1 = require(\"../eventService\");\nvar eventKeys_1 = require(\"../eventKeys\");\nvar constants_1 = require(\"../constants\");\nvar RowDragFeature = /** @class */ (function () {\n    function RowDragFeature(eContainer, gridPanel) {\n        this.eContainer = eContainer;\n        this.gridPanel = gridPanel;\n    }\n    RowDragFeature.prototype.postConstruct = function () {\n        if (this.gridOptionsWrapper.isRowModelDefault()) {\n            this.clientSideRowModel = this.rowModel;\n        }\n    };\n    RowDragFeature.prototype.getContainer = function () {\n        return this.eContainer;\n    };\n    RowDragFeature.prototype.isInterestedIn = function (type) {\n        return type === dragAndDropService_1.DragSourceType.RowDrag;\n    };\n    RowDragFeature.prototype.getIconName = function () {\n        return dragAndDropService_1.DragAndDropService.ICON_MOVE;\n    };\n    RowDragFeature.prototype.onDragEnter = function (draggingEvent) {\n        // when entering, we fire the enter event, then in onEnterOrDragging,\n        // we also fire the move event. so we get both events when entering.\n        this.dispatchEvent(eventKeys_1.Events.EVENT_ROW_DRAG_ENTER, draggingEvent);\n        this.dragAndDropService.setGhostIcon(dragAndDropService_1.DragAndDropService.ICON_MOVE);\n        draggingEvent.dragItem.rowNode.setDragging(true);\n        this.onEnterOrDragging(draggingEvent);\n    };\n    RowDragFeature.prototype.onDragging = function (draggingEvent) {\n        this.onEnterOrDragging(draggingEvent);\n    };\n    RowDragFeature.prototype.onEnterOrDragging = function (draggingEvent) {\n        // this event is fired for enter and move\n        this.dispatchEvent(eventKeys_1.Events.EVENT_ROW_DRAG_MOVE, draggingEvent);\n        this.lastDraggingEvent = draggingEvent;\n        var pixel = this.normaliseForScroll(draggingEvent.y);\n        var managedDrag = this.gridOptionsWrapper.isRowDragManaged();\n        if (managedDrag) {\n            this.doManagedDrag(draggingEvent, pixel);\n        }\n        this.checkCenterForScrolling(pixel);\n    };\n    RowDragFeature.prototype.doManagedDrag = function (draggingEvent, pixel) {\n        var rowNode = draggingEvent.dragItem.rowNode;\n        var rowWasMoved = this.clientSideRowModel.ensureRowAtPixel(rowNode, pixel);\n        if (rowWasMoved) {\n            this.focusedCellController.clearFocusedCell();\n            if (this.rangeController) {\n                this.rangeController.removeAllCellRanges();\n            }\n        }\n    };\n    RowDragFeature.prototype.normaliseForScroll = function (pixel) {\n        var gridPanelHasScrolls = this.gridOptionsWrapper.getDomLayout() === constants_1.Constants.DOM_LAYOUT_NORMAL;\n        if (gridPanelHasScrolls) {\n            var pixelRange = this.gridPanel.getVScrollPosition();\n            return pixel + pixelRange.top;\n        }\n        else {\n            return pixel;\n        }\n    };\n    RowDragFeature.prototype.checkCenterForScrolling = function (pixel) {\n        // scroll if the mouse is within 50px of the grid edge\n        var pixelRange = this.gridPanel.getVScrollPosition();\n        // console.log(`pixelRange = (${pixelRange.top}, ${pixelRange.bottom})`);\n        this.needToMoveUp = pixel < (pixelRange.top + 50);\n        this.needToMoveDown = pixel > (pixelRange.bottom - 50);\n        // console.log(`needToMoveUp = ${this.needToMoveUp} = pixel < (pixelRange.top + 50) = ${pixel} < (${pixelRange.top} + 50)`);\n        // console.log(`needToMoveDown = ${this.needToMoveDown} = pixel < (pixelRange.top + 50) = ${pixel} < (${pixelRange.top} + 50)`);\n        if (this.needToMoveUp || this.needToMoveDown) {\n            this.ensureIntervalStarted();\n        }\n        else {\n            this.ensureIntervalCleared();\n        }\n    };\n    RowDragFeature.prototype.ensureIntervalStarted = function () {\n        if (!this.movingIntervalId) {\n            this.intervalCount = 0;\n            this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100);\n        }\n    };\n    RowDragFeature.prototype.ensureIntervalCleared = function () {\n        if (this.moveInterval) {\n            window.clearInterval(this.movingIntervalId);\n            this.movingIntervalId = null;\n        }\n    };\n    RowDragFeature.prototype.moveInterval = function () {\n        // the amounts we move get bigger at each interval, so the speed accelerates, starting a bit slow\n        // and getting faster. this is to give smoother user experience. we max at 100px to limit the speed.\n        var pixelsToMove;\n        this.intervalCount++;\n        pixelsToMove = 10 + (this.intervalCount * 5);\n        if (pixelsToMove > 100) {\n            pixelsToMove = 100;\n        }\n        var pixelsMoved;\n        if (this.needToMoveDown) {\n            pixelsMoved = this.gridPanel.scrollVertically(pixelsToMove);\n        }\n        else if (this.needToMoveUp) {\n            pixelsMoved = this.gridPanel.scrollVertically(-pixelsToMove);\n        }\n        if (pixelsMoved !== 0) {\n            this.onDragging(this.lastDraggingEvent);\n        }\n    };\n    // i tried using generics here with this:\n    //     public createEvent<T extends RowDragEvent>(type: string, clazz: {new(): T; }, draggingEvent: DraggingEvent) {\n    // but it didn't work - i think it's because it only works with classes, and not interfaces, (the events are interfaces)\n    RowDragFeature.prototype.dispatchEvent = function (type, draggingEvent) {\n        var yNormalised = this.normaliseForScroll(draggingEvent.y);\n        var overIndex = -1;\n        var overNode = null;\n        var mouseIsPastLastRow = yNormalised > this.rowModel.getCurrentPageHeight();\n        if (!mouseIsPastLastRow) {\n            overIndex = this.rowModel.getRowIndexAtPixel(yNormalised);\n            overNode = this.rowModel.getRow(overIndex);\n        }\n        var vDirectionString;\n        switch (draggingEvent.vDirection) {\n            case dragAndDropService_1.VDirection.Down:\n                vDirectionString = 'down';\n                break;\n            case dragAndDropService_1.VDirection.Up:\n                vDirectionString = 'up';\n                break;\n            default:\n                vDirectionString = null;\n                break;\n        }\n        var event = {\n            type: type,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            event: draggingEvent.event,\n            node: draggingEvent.dragItem.rowNode,\n            overIndex: overIndex,\n            overNode: overNode,\n            y: yNormalised,\n            vDirection: vDirectionString\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    RowDragFeature.prototype.onDragLeave = function (draggingEvent) {\n        this.dispatchEvent(eventKeys_1.Events.EVENT_ROW_DRAG_LEAVE, draggingEvent);\n        this.stopDragging(draggingEvent);\n    };\n    RowDragFeature.prototype.onDragStop = function (draggingEvent) {\n        this.dispatchEvent(eventKeys_1.Events.EVENT_ROW_DRAG_END, draggingEvent);\n        this.stopDragging(draggingEvent);\n    };\n    RowDragFeature.prototype.stopDragging = function (draggingEvent) {\n        this.ensureIntervalCleared();\n        draggingEvent.dragItem.rowNode.setDragging(false);\n    };\n    __decorate([\n        context_1.Autowired('dragAndDropService'),\n        __metadata(\"design:type\", dragAndDropService_1.DragAndDropService)\n    ], RowDragFeature.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], RowDragFeature.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('focusedCellController'),\n        __metadata(\"design:type\", focusedCellController_1.FocusedCellController)\n    ], RowDragFeature.prototype, \"focusedCellController\", void 0);\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], RowDragFeature.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Optional('rangeController'),\n        __metadata(\"design:type\", Object)\n    ], RowDragFeature.prototype, \"rangeController\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], RowDragFeature.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], RowDragFeature.prototype, \"postConstruct\", null);\n    return RowDragFeature;\n}());\nexports.RowDragFeature = RowDragFeature;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../../context/context\");\nvar eventService_1 = require(\"../../eventService\");\nvar events_1 = require(\"../../events\");\nvar logger_1 = require(\"../../logger\");\nvar infiniteBlock_1 = require(\"./infiniteBlock\");\nvar rowNodeCache_1 = require(\"../cache/rowNodeCache\");\nvar gridApi_1 = require(\"../../gridApi\");\nvar columnApi_1 = require(\"../../columnController/columnApi\");\nvar InfiniteCache = /** @class */ (function (_super) {\n    __extends(InfiniteCache, _super);\n    function InfiniteCache(params) {\n        return _super.call(this, params) || this;\n    }\n    InfiniteCache.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('InfiniteCache');\n    };\n    InfiniteCache.prototype.init = function () {\n        _super.prototype.init.call(this);\n        // start load of data, as the virtualRowCount will remain at 0 otherwise,\n        // so we need this to kick things off, otherwise grid would never call getRow()\n        this.getRow(0);\n    };\n    InfiniteCache.prototype.moveItemsDown = function (block, moveFromIndex, moveCount) {\n        var startRow = block.getStartRow();\n        var endRow = block.getEndRow();\n        var indexOfLastRowToMove = moveFromIndex + moveCount;\n        // all rows need to be moved down below the insertion index\n        for (var currentRowIndex = endRow - 1; currentRowIndex >= startRow; currentRowIndex--) {\n            // don't move rows at or before the insertion index\n            if (currentRowIndex < indexOfLastRowToMove) {\n                continue;\n            }\n            var indexOfNodeWeWant = currentRowIndex - moveCount;\n            var nodeForThisIndex = this.getRow(indexOfNodeWeWant, true);\n            if (nodeForThisIndex) {\n                block.setRowNode(currentRowIndex, nodeForThisIndex);\n            }\n            else {\n                block.setBlankRowNode(currentRowIndex);\n                block.setDirty();\n            }\n        }\n    };\n    InfiniteCache.prototype.insertItems = function (block, indexToInsert, items) {\n        var pageStartRow = block.getStartRow();\n        var pageEndRow = block.getEndRow();\n        var newRowNodes = [];\n        // next stage is insert the rows into this page, if applicable\n        for (var index = 0; index < items.length; index++) {\n            var rowIndex = indexToInsert + index;\n            var currentRowInThisPage = rowIndex >= pageStartRow && rowIndex < pageEndRow;\n            if (currentRowInThisPage) {\n                var dataItem = items[index];\n                var newRowNode = block.setNewData(rowIndex, dataItem);\n                newRowNodes.push(newRowNode);\n            }\n        }\n        return newRowNodes;\n    };\n    InfiniteCache.prototype.insertItemsAtIndex = function (indexToInsert, items) {\n        // get all page id's as NUMBERS (not strings, as we need to sort as numbers) and in descending order\n        var _this = this;\n        var newNodes = [];\n        this.forEachBlockInReverseOrder(function (block) {\n            var pageEndRow = block.getEndRow();\n            // if the insertion is after this page, then this page is not impacted\n            if (pageEndRow <= indexToInsert) {\n                return;\n            }\n            _this.moveItemsDown(block, indexToInsert, items.length);\n            var newNodesThisPage = _this.insertItems(block, indexToInsert, items);\n            newNodesThisPage.forEach(function (rowNode) { return newNodes.push(rowNode); });\n        });\n        if (this.isMaxRowFound()) {\n            this.hack_setVirtualRowCount(this.getVirtualRowCount() + items.length);\n        }\n        this.onCacheUpdated();\n        var event = {\n            type: events_1.Events.EVENT_ROW_DATA_UPDATED,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        this.eventService.dispatchEvent(event);\n    };\n    // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\n    // it will want new pages in the cache as it asks for rows. only when we are inserting /\n    // removing rows via the api is dontCreatePage set, where we move rows between the pages.\n    InfiniteCache.prototype.getRow = function (rowIndex, dontCreatePage) {\n        if (dontCreatePage === void 0) { dontCreatePage = false; }\n        var blockId = Math.floor(rowIndex / this.cacheParams.blockSize);\n        var block = this.getBlock(blockId);\n        if (!block) {\n            if (dontCreatePage) {\n                return null;\n            }\n            else {\n                block = this.createBlock(blockId);\n            }\n        }\n        return block.getRow(rowIndex);\n    };\n    InfiniteCache.prototype.createBlock = function (blockNumber) {\n        var newBlock = new infiniteBlock_1.InfiniteBlock(blockNumber, this.cacheParams);\n        this.getContext().wireBean(newBlock);\n        this.postCreateBlock(newBlock);\n        return newBlock;\n    };\n    // we have this on infinite row model only, not server side row model,\n    // because for server side, it would leave the children in inconsistent\n    // state - eg if a node had children, but after the refresh it had data\n    // for a different row, then the children would be with the wrong row node.\n    InfiniteCache.prototype.refreshCache = function () {\n        this.forEachBlockInOrder(function (block) { return block.setDirty(); });\n        this.checkBlockToLoad();\n    };\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], InfiniteCache.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('columnApi'),\n        __metadata(\"design:type\", columnApi_1.ColumnApi)\n    ], InfiniteCache.prototype, \"columnApi\", void 0);\n    __decorate([\n        context_1.Autowired('gridApi'),\n        __metadata(\"design:type\", gridApi_1.GridApi)\n    ], InfiniteCache.prototype, \"gridApi\", void 0);\n    __decorate([\n        __param(0, context_1.Qualifier('loggerFactory')),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [logger_1.LoggerFactory]),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteCache.prototype, \"setBeans\", null);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteCache.prototype, \"init\", null);\n    return InfiniteCache;\n}(rowNodeCache_1.RowNodeCache));\nexports.InfiniteCache = InfiniteCache;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar context_1 = require(\"../../context/context\");\nvar rowNodeBlock_1 = require(\"../cache/rowNodeBlock\");\nvar rowRenderer_1 = require(\"../../rendering/rowRenderer\");\nvar utils_1 = require(\"../../utils\");\nvar InfiniteBlock = /** @class */ (function (_super) {\n    __extends(InfiniteBlock, _super);\n    function InfiniteBlock(pageNumber, params) {\n        var _this = _super.call(this, pageNumber, params) || this;\n        _this.cacheParams = params;\n        return _this;\n    }\n    InfiniteBlock.prototype.createBlankRowNode = function (rowIndex) {\n        var rowNode = _super.prototype.createBlankRowNode.call(this, rowIndex);\n        rowNode.uiLevel = 0;\n        this.setIndexAndTopOnRowNode(rowNode, rowIndex);\n        return rowNode;\n    };\n    InfiniteBlock.prototype.setDataAndId = function (rowNode, data, index) {\n        if (utils_1._.exists(data)) {\n            // this means if the user is not providing id's we just use the\n            // index for the row. this will allow selection to work (that is based\n            // on index) as long user is not inserting or deleting rows,\n            // or wanting to keep selection between server side sorting or filtering\n            rowNode.setDataAndId(data, index.toString());\n        }\n        else {\n            rowNode.setDataAndId(undefined, undefined);\n        }\n    };\n    InfiniteBlock.prototype.setRowNode = function (rowIndex, rowNode) {\n        _super.prototype.setRowNode.call(this, rowIndex, rowNode);\n        this.setIndexAndTopOnRowNode(rowNode, rowIndex);\n    };\n    InfiniteBlock.prototype.init = function () {\n        _super.prototype.init.call(this, {\n            context: this.getContext(),\n            rowRenderer: this.rowRenderer\n        });\n    };\n    InfiniteBlock.prototype.getNodeIdPrefix = function () {\n        return null;\n    };\n    InfiniteBlock.prototype.getRow = function (displayIndex) {\n        return this.getRowUsingLocalIndex(displayIndex);\n    };\n    InfiniteBlock.prototype.setIndexAndTopOnRowNode = function (rowNode, rowIndex) {\n        rowNode.setRowIndex(rowIndex);\n        rowNode.rowTop = this.cacheParams.rowHeight * rowIndex;\n    };\n    InfiniteBlock.prototype.loadFromDatasource = function () {\n        var _this = this;\n        // PROBLEM . . . . when the user sets sort via colDef.sort, then this code\n        // is executing before the sort is set up, so server is not getting the sort\n        // model. need to change with regards order - so the server side request is\n        // AFTER thus it gets the right sort model.\n        var params = {\n            startRow: this.getStartRow(),\n            endRow: this.getEndRow(),\n            successCallback: this.pageLoaded.bind(this, this.getVersion()),\n            failCallback: this.pageLoadFailed.bind(this),\n            sortModel: this.cacheParams.sortModel,\n            filterModel: this.cacheParams.filterModel,\n            context: this.gridOptionsWrapper.getContext()\n        };\n        if (utils_1._.missing(this.cacheParams.datasource.getRows)) {\n            console.warn(\"ag-Grid: datasource is missing getRows method\");\n            return;\n        }\n        // check if old version of datasource used\n        var getRowsParams = utils_1._.getFunctionParameters(this.cacheParams.datasource.getRows);\n        if (getRowsParams.length > 1) {\n            console.warn('ag-grid: It looks like your paging datasource is of the old type, taking more than one parameter.');\n            console.warn('ag-grid: From ag-grid 1.9.0, now the getRows takes one parameter. See the documentation for details.');\n        }\n        // put in timeout, to force result to be async\n        window.setTimeout(function () {\n            _this.cacheParams.datasource.getRows(params);\n        }, 0);\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], InfiniteBlock.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], InfiniteBlock.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], InfiniteBlock.prototype, \"init\", null);\n    return InfiniteBlock;\n}(rowNodeBlock_1.RowNodeBlock));\nexports.InfiniteBlock = InfiniteBlock;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar context_1 = require(\"../context/context\");\nvar gridOptionsWrapper_1 = require(\"../gridOptionsWrapper\");\nvar changedPath_1 = require(\"../rowModels/clientSide/changedPath\");\nvar rowRenderer_1 = require(\"../rendering/rowRenderer\");\nvar eventService_1 = require(\"../eventService\");\nvar constants_1 = require(\"../constants\");\nvar beanStub_1 = require(\"../context/beanStub\");\nvar events_1 = require(\"../events\");\nvar ChangeDetectionService = /** @class */ (function (_super) {\n    __extends(ChangeDetectionService, _super);\n    function ChangeDetectionService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ChangeDetectionService.prototype.init = function () {\n        if (this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_CLIENT_SIDE) {\n            this.clientSideRowModel = this.rowModel;\n        }\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged.bind(this));\n    };\n    ChangeDetectionService.prototype.onCellValueChanged = function (event) {\n        this.doChangeDetection(event.node, event.column);\n    };\n    ChangeDetectionService.prototype.doChangeDetection = function (rowNode, column) {\n        if (this.gridOptionsWrapper.isSuppressChangeDetection()) {\n            return;\n        }\n        // step 1 of change detection is to update the aggregated values\n        if (this.clientSideRowModel && !rowNode.isRowPinned()) {\n            var onlyChangedColumns = this.gridOptionsWrapper.isAggregateOnlyChangedColumns();\n            var changedPath = new changedPath_1.ChangedPath(onlyChangedColumns, this.clientSideRowModel.getRootNode());\n            changedPath.addParentNode(rowNode.parent, [column]);\n            this.clientSideRowModel.doAggregate(changedPath);\n        }\n        // step 2 of change detection is to refresh the cells\n        this.rowRenderer.refreshCells();\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], ChangeDetectionService.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], ChangeDetectionService.prototype, \"rowModel\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], ChangeDetectionService.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], ChangeDetectionService.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ChangeDetectionService.prototype, \"init\", null);\n    ChangeDetectionService = __decorate([\n        context_1.Bean('changeDetectionService')\n    ], ChangeDetectionService);\n    return ChangeDetectionService;\n}(beanStub_1.BeanStub));\nexports.ChangeDetectionService = ChangeDetectionService;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"../../widgets/component\");\nvar context_1 = require(\"../../context/context\");\nvar gridOptionsWrapper_1 = require(\"../../gridOptionsWrapper\");\nvar componentAnnotations_1 = require(\"../../widgets/componentAnnotations\");\nvar eventService_1 = require(\"../../eventService\");\nvar events_1 = require(\"../../events\");\nvar rowRenderer_1 = require(\"../../rendering/rowRenderer\");\nvar paginationProxy_1 = require(\"../paginationProxy\");\nvar utils_1 = require(\"../../utils\");\nvar constants_1 = require(\"../../constants\");\nvar PaginationComp = /** @class */ (function (_super) {\n    __extends(PaginationComp, _super);\n    function PaginationComp() {\n        return _super.call(this) || this;\n    }\n    PaginationComp.prototype.postConstruct = function () {\n        this.setTemplate(this.getTemplate());\n        if (this.rowModel.getType() === constants_1.Constants.ROW_MODEL_TYPE_SERVER_SIDE) {\n            this.serverSideRowModel = this.rowModel;\n        }\n        var isPaging = this.gridOptionsWrapper.isPagination();\n        var paginationPanelEnabled = isPaging && !this.gridOptionsWrapper.isSuppressPaginationPanel();\n        if (!paginationPanelEnabled) {\n            this.setVisible(false);\n            return;\n        }\n        this.addDestroyableEventListener(this.eventService, events_1.Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n        this.addDestroyableEventListener(this.btFirst, 'click', this.onBtFirst.bind(this));\n        this.addDestroyableEventListener(this.btLast, 'click', this.onBtLast.bind(this));\n        this.addDestroyableEventListener(this.btNext, 'click', this.onBtNext.bind(this));\n        this.addDestroyableEventListener(this.btPrevious, 'click', this.onBtPrevious.bind(this));\n        this.onPaginationChanged();\n    };\n    PaginationComp.prototype.onPaginationChanged = function () {\n        this.enableOrDisableButtons();\n        this.updateRowLabels();\n        this.setCurrentPageLabel();\n        this.setTotalLabels();\n    };\n    PaginationComp.prototype.setCurrentPageLabel = function () {\n        var pagesExist = this.paginationProxy.getTotalPages() > 0;\n        var currentPage = this.paginationProxy.getCurrentPage();\n        var toDisplay = pagesExist ? currentPage + 1 : 0;\n        this.lbCurrent.innerHTML = this.formatNumber(toDisplay);\n    };\n    PaginationComp.prototype.formatNumber = function (value) {\n        var userFunc = this.gridOptionsWrapper.getPaginationNumberFormatterFunc();\n        if (userFunc) {\n            return userFunc({ value: value });\n        }\n        else {\n            return utils_1._.formatNumberCommas(value);\n        }\n    };\n    PaginationComp.prototype.getTemplate = function () {\n        var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n        var strPage = localeTextFunc('page', 'Page');\n        var strTo = localeTextFunc('to', 'to');\n        var strOf = localeTextFunc('of', 'of');\n        var strFirst = localeTextFunc('first', 'First');\n        var strPrevious = localeTextFunc('previous', 'Previous');\n        var strNext = localeTextFunc('next', 'Next');\n        var strLast = localeTextFunc('last', 'Last');\n        return \"<div class=\\\"ag-paging-panel ag-unselectable\\\">\\n                <span ref=\\\"eSummaryPanel\\\" class=\\\"ag-paging-row-summary-panel\\\">\\n                    <span ref=\\\"lbFirstRowOnPage\\\"></span> \" + strTo + \" <span ref=\\\"lbLastRowOnPage\\\"></span> \" + strOf + \" <span ref=\\\"lbRecordCount\\\"></span>\\n                </span>\\n                <span class=\\\"ag-paging-page-summary-panel\\\">\\n                    <div class=\\\"ag-icon ag-icon-first\\\" ref=\\\"btFirst\\\">\\n                        <button type=\\\"button\\\" class=\\\"ag-paging-button\\\">\" + strFirst + \"</button>\\n                    </div>\\n                    <div class=\\\"ag-icon ag-icon-previous\\\" ref=\\\"btPrevious\\\">\\n                        <button type=\\\"button\\\" class=\\\"ag-paging-button\\\">\" + strPrevious + \"</button>\\n                    </div>\\n                    \" + strPage + \" <span ref=\\\"lbCurrent\\\"></span> \" + strOf + \" <span ref=\\\"lbTotal\\\"></span>\\n                    <div class=\\\"ag-icon ag-icon-next\\\" ref=\\\"btNext\\\">\\n                        <button type=\\\"button\\\" class=\\\"ag-paging-button\\\">\" + strNext + \"</button>\\n                    </div>\\n                    <div class=\\\"ag-icon ag-icon-last\\\" ref=\\\"btLast\\\">\\n                        <button type=\\\"button\\\" class=\\\"ag-paging-button\\\">\" + strLast + \"</button>\\n                    </div>\\n                </span>\\n            </div>\";\n    };\n    PaginationComp.prototype.onBtNext = function () {\n        this.paginationProxy.goToNextPage();\n    };\n    PaginationComp.prototype.onBtPrevious = function () {\n        this.paginationProxy.goToPreviousPage();\n    };\n    PaginationComp.prototype.onBtFirst = function () {\n        this.paginationProxy.goToFirstPage();\n    };\n    PaginationComp.prototype.onBtLast = function () {\n        this.paginationProxy.goToLastPage();\n    };\n    PaginationComp.prototype.enableOrDisableButtons = function () {\n        var currentPage = this.paginationProxy.getCurrentPage();\n        var maxRowFound = this.paginationProxy.isLastPageFound();\n        var totalPages = this.paginationProxy.getTotalPages();\n        var disablePreviousAndFirst = currentPage === 0;\n        utils_1._.addOrRemoveCssClass(this.btPrevious, 'ag-disabled', disablePreviousAndFirst);\n        utils_1._.addOrRemoveCssClass(this.btFirst, 'ag-disabled', disablePreviousAndFirst);\n        var zeroPagesToDisplay = this.isZeroPagesToDisplay();\n        var onLastPage = maxRowFound && currentPage === (totalPages - 1);\n        var disableNext = onLastPage || zeroPagesToDisplay;\n        utils_1._.addOrRemoveCssClass(this.btNext, 'ag-disabled', disableNext);\n        var disableLast = !maxRowFound || zeroPagesToDisplay || currentPage === (totalPages - 1);\n        utils_1._.addOrRemoveCssClass(this.btLast, 'ag-disabled', disableLast);\n    };\n    PaginationComp.prototype.updateRowLabels = function () {\n        var currentPage = this.paginationProxy.getCurrentPage();\n        var pageSize = this.paginationProxy.getPageSize();\n        var maxRowFound = this.paginationProxy.isLastPageFound();\n        var rowCount = this.paginationProxy.isLastPageFound() ?\n            this.paginationProxy.getTotalRowCount() : null;\n        var startRow;\n        var endRow;\n        if (this.isZeroPagesToDisplay()) {\n            startRow = 0;\n            endRow = 0;\n        }\n        else {\n            startRow = (pageSize * currentPage) + 1;\n            endRow = startRow + pageSize - 1;\n            if (maxRowFound && endRow > rowCount) {\n                endRow = rowCount;\n            }\n        }\n        this.lbFirstRowOnPage.innerHTML = this.formatNumber(startRow);\n        if (this.serverSideRowModel && this.serverSideRowModel.isLoading()) {\n            this.lbLastRowOnPage.innerHTML = '?';\n        }\n        else {\n            this.lbLastRowOnPage.innerHTML = this.formatNumber(endRow);\n        }\n    };\n    PaginationComp.prototype.isZeroPagesToDisplay = function () {\n        var maxRowFound = this.paginationProxy.isLastPageFound();\n        var totalPages = this.paginationProxy.getTotalPages();\n        return maxRowFound && totalPages === 0;\n    };\n    PaginationComp.prototype.setTotalLabels = function () {\n        var lastPageFound = this.paginationProxy.isLastPageFound();\n        var totalPages = this.paginationProxy.getTotalPages();\n        var rowCount = this.paginationProxy.isLastPageFound() ?\n            this.paginationProxy.getTotalRowCount() : null;\n        if (lastPageFound) {\n            this.lbTotal.innerHTML = this.formatNumber(totalPages);\n            this.lbRecordCount.innerHTML = this.formatNumber(rowCount);\n        }\n        else {\n            var moreText = this.gridOptionsWrapper.getLocaleTextFunc()('more', 'more');\n            this.lbTotal.innerHTML = moreText;\n            this.lbRecordCount.innerHTML = moreText;\n        }\n    };\n    __decorate([\n        context_1.Autowired('gridOptionsWrapper'),\n        __metadata(\"design:type\", gridOptionsWrapper_1.GridOptionsWrapper)\n    ], PaginationComp.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        context_1.Autowired('eventService'),\n        __metadata(\"design:type\", eventService_1.EventService)\n    ], PaginationComp.prototype, \"eventService\", void 0);\n    __decorate([\n        context_1.Autowired('paginationProxy'),\n        __metadata(\"design:type\", paginationProxy_1.PaginationProxy)\n    ], PaginationComp.prototype, \"paginationProxy\", void 0);\n    __decorate([\n        context_1.Autowired('rowRenderer'),\n        __metadata(\"design:type\", rowRenderer_1.RowRenderer)\n    ], PaginationComp.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        context_1.Autowired('rowModel'),\n        __metadata(\"design:type\", Object)\n    ], PaginationComp.prototype, \"rowModel\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('btFirst'),\n        __metadata(\"design:type\", HTMLButtonElement)\n    ], PaginationComp.prototype, \"btFirst\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('btPrevious'),\n        __metadata(\"design:type\", HTMLButtonElement)\n    ], PaginationComp.prototype, \"btPrevious\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('btNext'),\n        __metadata(\"design:type\", HTMLButtonElement)\n    ], PaginationComp.prototype, \"btNext\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('btLast'),\n        __metadata(\"design:type\", HTMLButtonElement)\n    ], PaginationComp.prototype, \"btLast\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('lbRecordCount'),\n        __metadata(\"design:type\", Object)\n    ], PaginationComp.prototype, \"lbRecordCount\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('lbFirstRowOnPage'),\n        __metadata(\"design:type\", Object)\n    ], PaginationComp.prototype, \"lbFirstRowOnPage\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('lbLastRowOnPage'),\n        __metadata(\"design:type\", Object)\n    ], PaginationComp.prototype, \"lbLastRowOnPage\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eSummaryPanel'),\n        __metadata(\"design:type\", Object)\n    ], PaginationComp.prototype, \"eSummaryPanel\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('lbCurrent'),\n        __metadata(\"design:type\", Object)\n    ], PaginationComp.prototype, \"lbCurrent\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('lbTotal'),\n        __metadata(\"design:type\", Object)\n    ], PaginationComp.prototype, \"lbTotal\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], PaginationComp.prototype, \"postConstruct\", null);\n    return PaginationComp;\n}(component_1.Component));\nexports.PaginationComp = PaginationComp;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar componentUtil_1 = require(\"./componentUtil\");\nvar grid_1 = require(\"../grid\");\nvar registered = false;\nfunction initialiseAgGridWithWebComponents() {\n    console.warn('ag-grid: initialiseAgGridWithWebComponents is deprecated. Please use the ag-grid-webcomponent dependency instead. ');\n    // only register to WebComponents once\n    if (registered) {\n        return;\n    }\n    registered = true;\n    if (typeof document === 'undefined' || !document.registerElement) {\n        console.error('ag-Grid: unable to find document.registerElement() function, unable to initialise ag-Grid as a Web Component');\n    }\n    // i don't think this type of extension is possible in TypeScript, so back to\n    // plain Javascript to create this object\n    var AgileGridProto = Object.create(HTMLElement.prototype);\n    // wrap each property with a get and set method, so we can track when changes are done\n    componentUtil_1.ComponentUtil.ALL_PROPERTIES.forEach(function (key) {\n        Object.defineProperty(AgileGridProto, key, {\n            set: function (v) {\n                this.__agGridSetProperty(key, v);\n            },\n            get: function () {\n                return this.__agGridGetProperty(key);\n            },\n            enumerable: true,\n            configurable: true\n        });\n    });\n    var agGridProtoNoType = AgileGridProto;\n    agGridProtoNoType.__agGridSetProperty = function (key, value) {\n        if (!this.__attributes) {\n            this.__attributes = {};\n        }\n        this.__attributes[key] = value;\n        // keeping this consistent with the ng2 onChange, so I can reuse the handling code\n        var changeObject = {};\n        changeObject[key] = { currentValue: value };\n        this.onChange(changeObject);\n    };\n    agGridProtoNoType.onChange = function (changes) {\n        if (this._initialised) {\n            componentUtil_1.ComponentUtil.processOnChange(changes, this._gridOptions, this.api, this.columnApi);\n        }\n    };\n    agGridProtoNoType.__agGridGetProperty = function (key) {\n        if (!this.__attributes) {\n            this.__attributes = {};\n        }\n        return this.__attributes[key];\n    };\n    agGridProtoNoType.setGridOptions = function (options) {\n        var globalEventListener = this.globalEventListener.bind(this);\n        this._gridOptions = componentUtil_1.ComponentUtil.copyAttributesToGridOptions(options, this);\n        var gridParams = {\n            globalEventListener: globalEventListener\n        };\n        this._agGrid = new grid_1.Grid(this, this._gridOptions, gridParams);\n        this.api = options.api;\n        this.columnApi = options.columnApi;\n        this._initialised = true;\n    };\n    // copies all the attributes into this object\n    agGridProtoNoType.createdCallback = function () {\n        for (var i = 0; i < this.attributes.length; i++) {\n            var attribute = this.attributes[i];\n            this.setPropertyFromAttribute(attribute);\n        }\n    };\n    agGridProtoNoType.setPropertyFromAttribute = function (attribute) {\n        var name = toCamelCase(attribute.nodeName);\n        var value = attribute.nodeValue;\n        if (componentUtil_1.ComponentUtil.ALL_PROPERTIES.indexOf(name) >= 0) {\n            this[name] = value;\n        }\n    };\n    agGridProtoNoType.attachedCallback = function (params) { };\n    agGridProtoNoType.detachedCallback = function (params) { };\n    agGridProtoNoType.attributeChangedCallback = function (attributeName) {\n        var attribute = this.attributes[attributeName];\n        this.setPropertyFromAttribute(attribute);\n    };\n    agGridProtoNoType.globalEventListener = function (eventType, event) {\n        var eventLowerCase = eventType.toLowerCase();\n        var browserEvent = new Event(eventLowerCase);\n        var browserEventNoType = browserEvent;\n        browserEventNoType.agGridDetails = event;\n        this.dispatchEvent(browserEvent);\n        var callbackMethod = 'on' + eventLowerCase;\n        if (typeof this[callbackMethod] === 'function') {\n            this[callbackMethod](browserEvent);\n        }\n    };\n    // finally, register\n    document.registerElement('ag-grid', { prototype: AgileGridProto });\n}\nexports.initialiseAgGridWithWebComponents = initialiseAgGridWithWebComponents;\nfunction toCamelCase(myString) {\n    if (typeof myString === 'string') {\n        var result = myString.replace(/-([a-z])/g, function (g) {\n            return g[1].toUpperCase();\n        });\n        return result;\n    }\n    else {\n        return myString;\n    }\n}\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nvar TabbedLayout = /** @class */ (function () {\n    function TabbedLayout(params) {\n        var _this = this;\n        this.items = [];\n        this.params = params;\n        this.eGui = document.createElement('div');\n        this.eGui.innerHTML = TabbedLayout.TEMPLATE;\n        this.eHeader = this.eGui.querySelector('[ref=\"tabHeader\"]');\n        this.eBody = this.eGui.querySelector('[ref=\"tabBody\"]');\n        utils_1._.addCssClass(this.eGui, params.cssClass);\n        if (params.items) {\n            params.items.forEach(function (item) { return _this.addItem(item); });\n        }\n    }\n    TabbedLayout.prototype.setAfterAttachedParams = function (params) {\n        this.afterAttachedParams = params;\n    };\n    TabbedLayout.prototype.getMinDimensions = function () {\n        var eDummyContainer = this.eGui.cloneNode(true);\n        var eDummyBody = eDummyContainer.querySelector('[ref=\"tabBody\"]');\n        // position fixed, so it isn't restricted to the boundaries of the parent\n        eDummyContainer.style.position = 'fixed';\n        // we put the dummy into the body container, so it will inherit all the\n        // css styles that the real cells are inheriting\n        this.eGui.appendChild(eDummyContainer);\n        var minWidth = 0;\n        var minHeight = 0;\n        this.items.forEach(function (itemWrapper) {\n            utils_1._.clearElement(eDummyBody);\n            var eClone = itemWrapper.tabbedItem.bodyPromise.resolveNow(null, function (body) { return body.cloneNode(true); });\n            if (eClone == null) {\n                return;\n            }\n            eDummyBody.appendChild(eClone);\n            if (minWidth < eDummyContainer.offsetWidth) {\n                minWidth = eDummyContainer.offsetWidth;\n            }\n            if (minHeight < eDummyContainer.offsetHeight) {\n                minHeight = eDummyContainer.offsetHeight;\n            }\n        });\n        // finally check the parent tabs are no wider, as if they\n        // are, then these are the min width and not the child tabs\n        // if (minWidth<this.eGui.offsetWidth) {\n        //     minWidth = this.eGui.offsetWidth;\n        // }\n        this.eGui.removeChild(eDummyContainer);\n        return { height: minHeight, width: minWidth };\n    };\n    TabbedLayout.prototype.showFirstItem = function () {\n        if (this.items.length > 0) {\n            this.showItemWrapper(this.items[0]);\n        }\n    };\n    TabbedLayout.prototype.addItem = function (item) {\n        var eHeaderButton = document.createElement('span');\n        eHeaderButton.appendChild(item.title);\n        utils_1._.addCssClass(eHeaderButton, 'ag-tab');\n        this.eHeader.appendChild(eHeaderButton);\n        var wrapper = {\n            tabbedItem: item,\n            eHeaderButton: eHeaderButton\n        };\n        this.items.push(wrapper);\n        eHeaderButton.addEventListener('click', this.showItemWrapper.bind(this, wrapper));\n    };\n    TabbedLayout.prototype.showItem = function (tabbedItem) {\n        var itemWrapper = utils_1._.find(this.items, function (wrapper) {\n            return wrapper.tabbedItem === tabbedItem;\n        });\n        if (itemWrapper) {\n            this.showItemWrapper(itemWrapper);\n        }\n    };\n    TabbedLayout.prototype.showItemWrapper = function (wrapper) {\n        var _this = this;\n        if (this.params.onItemClicked) {\n            this.params.onItemClicked({ item: wrapper.tabbedItem });\n        }\n        if (this.activeItem === wrapper) {\n            utils_1._.callIfPresent(this.params.onActiveItemClicked);\n            return;\n        }\n        utils_1._.clearElement(this.eBody);\n        wrapper.tabbedItem.bodyPromise.then(function (body) {\n            _this.eBody.appendChild(body);\n        });\n        if (this.activeItem) {\n            utils_1._.removeCssClass(this.activeItem.eHeaderButton, 'ag-tab-selected');\n        }\n        utils_1._.addCssClass(wrapper.eHeaderButton, 'ag-tab-selected');\n        this.activeItem = wrapper;\n        if (wrapper.tabbedItem.afterAttachedCallback) {\n            wrapper.tabbedItem.afterAttachedCallback(this.afterAttachedParams);\n        }\n    };\n    TabbedLayout.prototype.getGui = function () {\n        return this.eGui;\n    };\n    TabbedLayout.TEMPLATE = '<div>' +\n        '<div ref=\"tabHeader\" class=\"ag-tab-header\"></div>' +\n        '<div ref=\"tabBody\" class=\"ag-tab-body\"></div>' +\n        '</div>';\n    return TabbedLayout;\n}());\nexports.TabbedLayout = TabbedLayout;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar VerticalStack = /** @class */ (function () {\n    function VerticalStack() {\n        this.isLayoutPanel = true;\n        this.childPanels = [];\n        this.eGui = document.createElement('div');\n        this.eGui.style.height = '100%';\n    }\n    VerticalStack.prototype.addPanel = function (panel, height) {\n        var component;\n        if (panel.isLayoutPanel) {\n            this.childPanels.push(panel);\n            component = panel.getGui();\n        }\n        else {\n            component = panel;\n        }\n        if (height) {\n            component.style.height = height;\n        }\n        this.eGui.appendChild(component);\n    };\n    VerticalStack.prototype.getGui = function () {\n        return this.eGui;\n    };\n    VerticalStack.prototype.doLayout = function () {\n        for (var i = 0; i < this.childPanels.length; i++) {\n            this.childPanels[i].doLayout();\n        }\n    };\n    return VerticalStack;\n}());\nexports.VerticalStack = VerticalStack;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils\");\nfunction simpleHttpRequest(params) {\n    return new utils_1.Promise(function (resolve) {\n        var httpRequest = new XMLHttpRequest();\n        httpRequest.open('GET', params.url);\n        httpRequest.send();\n        httpRequest.onreadystatechange = function () {\n            if (httpRequest.readyState == 4 && httpRequest.status == 200) {\n                var httpResponse = JSON.parse(httpRequest.responseText);\n                resolve(httpResponse);\n            }\n        };\n    });\n}\nexports.simpleHttpRequest = simpleHttpRequest;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar component_1 = require(\"./component\");\nvar componentAnnotations_1 = require(\"./componentAnnotations\");\nvar context_1 = require(\"../context/context\");\nvar utils_1 = require(\"../utils\");\nvar AgGroupComponent = /** @class */ (function (_super) {\n    __extends(AgGroupComponent, _super);\n    function AgGroupComponent(params) {\n        var _this = _super.call(this, AgGroupComponent.TEMPLATE) || this;\n        _this.label = params.label;\n        _this.items = params.items || [];\n        return _this;\n    }\n    AgGroupComponent.prototype.init = function () {\n        if (this.items.length) {\n            var initialItems = this.items;\n            this.items = [];\n            this.addItems(initialItems);\n        }\n        this.eLabel.innerHTML = this.label;\n    };\n    AgGroupComponent.prototype.addItems = function (items) {\n        items.forEach(this.addItem);\n    };\n    AgGroupComponent.prototype.addItem = function (item) {\n        var eGui = this.getGui();\n        var el = item instanceof component_1.Component ? item.getGui() : item;\n        utils_1._.addCssClass(el, 'ag-group-item');\n        eGui.appendChild(el);\n        this.items.push(el);\n    };\n    AgGroupComponent.TEMPLATE = \"<div class=\\\"ag-group-component\\\">\\n            <div ref=\\\"eLabel\\\" class=\\\"ag-group-component-label\\\">\\n        </div>\\n        \";\n    __decorate([\n        componentAnnotations_1.RefSelector(\"eLabel\"),\n        __metadata(\"design:type\", HTMLElement)\n    ], AgGroupComponent.prototype, \"eLabel\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], AgGroupComponent.prototype, \"init\", null);\n    return AgGroupComponent;\n}(component_1.Component));\nexports.AgGroupComponent = AgGroupComponent;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar dialog_1 = require(\"./dialog\");\nvar context_1 = require(\"../context/context\");\nvar component_1 = require(\"./component\");\nvar componentAnnotations_1 = require(\"./componentAnnotations\");\nvar MessageBox = /** @class */ (function (_super) {\n    __extends(MessageBox, _super);\n    function MessageBox(config) {\n        var _this = _super.call(this, config) || this;\n        _this.message = config.message;\n        return _this;\n    }\n    MessageBox.prototype.postConstruct = function () {\n        var _this = this;\n        var messageBodyComp = new MessageBody();\n        this.addFeature(this.getContext(), messageBodyComp);\n        messageBodyComp.setMessage(this.message);\n        this.setBodyComponent(messageBodyComp);\n        _super.prototype.postConstruct.call(this);\n        this.addDestroyableEventListener(messageBodyComp, 'onBtOk', function () { return _this.close(); });\n    };\n    return MessageBox;\n}(dialog_1.Dialog));\nexports.MessageBox = MessageBox;\nvar MessageBody = /** @class */ (function (_super) {\n    __extends(MessageBody, _super);\n    function MessageBody() {\n        return _super.call(this, MessageBody.TEMPLATE) || this;\n    }\n    MessageBody.prototype.setMessage = function (message) {\n        this.eCenter.innerText = message;\n    };\n    MessageBody.prototype.postConstruct = function () {\n        this.addDestroyableEventListener(this.eOk, 'click', this.onBtOk.bind(this));\n    };\n    MessageBody.prototype.onBtOk = function () {\n        this.dispatchEvent({ type: 'onBtOk' });\n    };\n    MessageBody.TEMPLATE = \"<div class=\\\"ag-message-box\\\">\\n            <div ref=\\\"eCenter\\\" class=\\\"ag-message-box-content\\\"></div>\\n            <div ref=\\\"eButtons\\\" class=\\\"ag-message-box-button-bar\\\">\\n                <button ref=\\\"eOk\\\">OK</button>\\n            </div>\\n        </div>\";\n    __decorate([\n        componentAnnotations_1.RefSelector('eCenter'),\n        __metadata(\"design:type\", HTMLElement)\n    ], MessageBody.prototype, \"eCenter\", void 0);\n    __decorate([\n        componentAnnotations_1.RefSelector('eOk'),\n        __metadata(\"design:type\", HTMLElement)\n    ], MessageBody.prototype, \"eOk\", void 0);\n    __decorate([\n        context_1.PostConstruct,\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MessageBody.prototype, \"postConstruct\", null);\n    return MessageBody;\n}(component_1.Component));\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction defaultGroupComparator(valueA, valueB, nodeA, nodeB, accentedCompare) {\n    if (accentedCompare === void 0) { accentedCompare = false; }\n    console.warn('ag-Grid: Since ag-grid 11.0.0 defaultGroupComparator is not necessary. You can remove this from your colDef');\n    var nodeAIsGroup = utils_1._.exists(nodeA) && nodeA.group;\n    var nodeBIsGroup = utils_1._.exists(nodeB) && nodeB.group;\n    var bothAreGroups = nodeAIsGroup && nodeBIsGroup;\n    var bothAreNormal = !nodeAIsGroup && !nodeBIsGroup;\n    if (bothAreGroups) {\n        return utils_1._.defaultComparator(nodeA.key, nodeB.key, accentedCompare);\n    }\n    else if (bothAreNormal) {\n        return utils_1._.defaultComparator(valueA, valueB, accentedCompare);\n    }\n    else if (nodeAIsGroup) {\n        return 1;\n    }\n    else {\n        return -1;\n    }\n}\nexports.defaultGroupComparator = defaultGroupComparator;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseComponentWrapper = /** @class */ (function () {\n    function BaseComponentWrapper() {\n    }\n    BaseComponentWrapper.prototype.wrap = function (OriginalConstructor, mandatoryMethodList, optionalMethodList, componentName) {\n        var _this = this;\n        if (optionalMethodList === void 0) { optionalMethodList = []; }\n        var wrapper = this.createWrapper(OriginalConstructor, componentName);\n        mandatoryMethodList.forEach((function (methodName) {\n            _this.createMethod(wrapper, methodName, true);\n        }));\n        optionalMethodList.forEach((function (methodName) {\n            _this.createMethod(wrapper, methodName, false);\n        }));\n        return wrapper;\n    };\n    BaseComponentWrapper.prototype.createMethod = function (wrapper, methodName, mandatory) {\n        wrapper.addMethod(methodName, this.createMethodProxy(wrapper, methodName, mandatory));\n    };\n    BaseComponentWrapper.prototype.createMethodProxy = function (wrapper, methodName, mandatory) {\n        return function () {\n            if (wrapper.hasMethod(methodName)) {\n                return wrapper.callMethod(methodName, arguments);\n            }\n            if (mandatory) {\n                console.warn('ag-Grid: Framework component is missing the method ' + methodName + '()');\n            }\n            return null;\n        };\n    };\n    return BaseComponentWrapper;\n}());\nexports.BaseComponentWrapper = BaseComponentWrapper;\n","/**\n * ag-grid-community - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v21.0.1\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChartType;\n(function (ChartType) {\n    ChartType[ChartType[\"GroupedBar\"] = 0] = \"GroupedBar\";\n    ChartType[ChartType[\"StackedBar\"] = 1] = \"StackedBar\";\n    ChartType[ChartType[\"Line\"] = 2] = \"Line\";\n    ChartType[ChartType[\"Pie\"] = 3] = \"Pie\";\n    ChartType[ChartType[\"Doughnut\"] = 4] = \"Doughnut\";\n})(ChartType = exports.ChartType || (exports.ChartType = {}));\n","/** @license React v16.7.0\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && parent.nodeName === 'HTML') {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // Avoid blurry text by using full pixel integers.\n  // For pixel-perfect positioning, top/bottom prefers rounded\n  // values, while left/right prefers floored values.\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.round(popper.top),\n    bottom: Math.round(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nimport isObject from 'isobject';\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nexport default function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nexport default function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n"],"mappings":"AAGA;;;;;;ACIA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACSA;;;;;;ACTA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;ACCA;;;;;;ACCA;;;;;;ACFA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;ACMA;;;;;ACAA;;;;;;;;;ACGA;;;;;;;;ACPA;;;;;;;;ACAA;;;;;;;;ACGA;;;;;;;;;ACHA;;;;;;;;;;;;ACEA;;;;;;;ACIA;;;;;;ACNA;;;;;;;;ACAA;;;;;;;;ACwBA;;;;;;;;ACxBA;;;;;;;;ACDA;;;;;;;;ACCA;;;;;;ACFA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;;ACEA;;;;;;;;;;;;;;;;;;;;;;;;;ACeA;;;;;;;ACfA;;;;;;;ACFA","sourceRoot":""}